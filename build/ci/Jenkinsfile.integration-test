@Library('nalej-helpers@feature/read-pod-logs')

def nsHelper = new org.daisho.k8s.Namespace()
def utils = new org.daisho.Utils()

def packageName = "user-manager"
def packagePath = "src/github.com/nalej/${packageName}"

pipeline {
    agent none
    options {
        checkoutToSubdirectory("${packagePath}")
        buildDiscarder(logRotator(numToKeepStr: '10'))
        parallelsAlwaysFailFast()
    }

    stages {
        stage("Component deployment") {
            agent { label 'k8s' }
            stages {
                stage("Create namespace") {
                    steps { container("kubectl") { 
                        script {
                            env.namespaceName = nsHelper.createRandomNamespace()
                            env.authxSecret = utils.randomString(32)
                        }
                    } }
                }
                stage("Launch ScyllaDB deploy pipeline") {
                    steps { 
                        build job: 'deploy/components/scylladb', parameters: [[$class: 'StringParameterValue', name: 'namespace', value: env.namespaceName]]
                    }
                }
                stage("Dependant services deployment") {
                    parallel {
                        stage("Launch system-model deploy pipeline") {
                            steps { 
                                build job: 'deploy/components/system-model', parameters: [[$class: 'StringParameterValue', name: 'namespace', value: env.namespaceName]]
                            }
                        }
                        stage("Launch authx deploy pipeline") {
                            steps { 
                                build job: 'deploy/components/authx', parameters: [
                                    [$class: 'StringParameterValue', name: 'namespace', value: env.namespaceName],
                                    [$class: 'StringParameterValue', name: 'sharedSecret', value: env.authxSecret]
                                ]
                            }
                        }
                    }
                }
            }
        }
        stage("Run integration tests") {
            agent { label 'golang' }
            stages {
                stage("Variable initialization") {
                    steps { stepVariableInitialization packagePath }
                }
                stage("Git setup") {
                    steps { container("golang") { stepGitSetup() } }
                }
                stage("Dependency download") {
                    steps { container("golang") { stepGolangDependencyDownload packagePath } }
                }
                stage("Integration tests") {
                    steps { container("golang") {
                        script {
                            env.RUN_INTEGRATION_TEST = "true"
                            env.IT_SM_ADDRESS = "system-model.${env.namespaceName}:8800"
                            env.IT_AUTHX_ADDRESS = "authx.${env.namespaceName}:8810"
                            env.testResult = stepGolangIntegrationTests packagePath, env.namespaceName
                        }
                    } }
                }
            }
        }
        stage("Evaluate test results") {
            agent { label 'k8s' }
            steps {
                script {
                    if (env.testResult != 0) {
                        k8sLogs = new org.daisho.k8s.Logs()
                        k8sLogs.archiveAllPodLogs(namespace)
                        error("Tests failed.")
                    }
                }
            }
        }
    }
    post {
        always {
            node("k8s") {
                container("kubectl") {
                    script {
                        nsHelper.deleteNamespace(env.namespaceName)
                    }
                }
            }
        }
    }
}
