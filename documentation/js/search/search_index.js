var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/pipes/AbbreviatePipe.html",[0,1.346,1,2.01]],["body/pipes/AbbreviatePipe.html",[0,2.434,1,3.37,2,0.258,3,0.302,4,0.215,5,3.88,6,0.979,7,0.582,8,5.605,9,0.657,10,2.767,11,4.147,12,1.139,13,0.493,14,4.602,15,5.53,16,2.836,17,1.48,18,2.621,19,2.257,20,5.605,21,1.283,22,5.304,23,5.605,24,3.37,25,3.782,26,6.291,27,6.291,28,5.605,29,4.147,30,0.715,31,0.028,32,0.443,33,0.546,34,1.053,35,1.702,36,1.957,37,0.6,38,0.443,39,3.715,40,0.394,41,0.302,42,0.443,43,0.715,44,1.132,45,0.871,46,4.602,47,2.767,48,5.605,49,4.602,50,1.853,51,4.602,52,4.726,53,0.022,54,0.022]],["title/components/AddDevicesGroupComponent.html",[55,0.068,56,0.66]],["body/components/AddDevicesGroupComponent.html",[2,0.168,3,0.125,4,0.089,6,0.405,7,0.561,9,0.429,12,1.108,13,0.683,16,2.6,17,1.406,18,2.294,19,1.212,21,0.97,25,1.144,29,1.409,30,0.799,31,0.028,32,0.583,33,0.65,34,1.123,35,0.914,37,0.771,38,0.528,40,0.163,41,0.125,42,0.183,43,0.468,44,1.207,45,0.659,47,1.144,50,1.212,53,0.012,54,0.012,55,0.104,56,0.837,57,0.503,58,0.503,59,0.503,60,4.734,61,1.576,62,4.734,63,1.605,64,0.917,65,1.566,66,1.206,67,1.065,68,1.273,69,0.74,70,3.008,71,0.74,72,3.008,73,0.183,74,0.429,75,1.622,76,4.238,77,1.214,78,1.695,79,4.137,80,2.809,81,2.491,82,2.809,83,2.001,84,2.483,85,3.573,86,2.331,87,2.331,88,1.809,89,1.994,90,2.226,91,1.994,92,4.238,93,1.809,94,2.95,95,1.994,96,1.042,97,0.429,98,0.825,99,1.887,100,2.144,101,1.406,102,1.618,103,1.264,104,3.008,105,2.537,106,1.904,107,1.212,108,0.979,109,2.799,110,1.809,111,2.127,112,0.939,113,1.994,114,1.904,115,1.994,116,1.994,117,2.226,118,1.904,119,1.044,120,2.6,121,2.76,122,1.994,123,2.809,124,1.904,125,2.242,126,1.904,127,1.654,128,2.127,129,2.548,130,2.76,131,1.809,132,1.904,133,0.985,134,1.522,135,1.809,136,2.698,137,1.38,138,1.598,139,1.904,140,1.994,141,1.904,142,1.654,143,2.411,144,1.612,145,1.295,146,1.994,147,1.522,148,1.809,149,2.051,150,3.634,151,1.904,152,1.904,153,3.008,154,1.904,155,1.042,156,1.056,157,1.904,158,1.744,159,0.985,160,1.744,161,1.904,162,1.48,163,1.809,164,1.994,165,1.133,166,1.809,167,1.994,168,1.654,169,1.994,170,1.904,171,1.904,172,1.904,173,1.128,174,0.914,175,0.979,176,1.904,177,1.904,178,1.904,179,1.904,180,0.62,181,0.405,182,0.539,183,0.62,184,0.665,185,0.62,186,0.62,187,0.468,188,0.503,189,0.468,190,0.503,191,1.047,192,0.594,193,1.262,194,1.605,195,0.775,196,3.136,197,0.852,198,1.056,199,1.047,200,0.665,201,0.578,202,0.979,203,3.059,204,3.059,205,1.73,206,1.605,207,1.605,208,1.409,209,1.409,210,1.605,211,0.767,212,1.887,213,1.409,214,1.262,215,1.982,216,1.409,217,1.409,218,1.522,219,1.605,220,1.605,221,1.304,222,1.522,223,1.144,224,1.144,225,1.047,226,1.409,227,1.409,228,2.226,229,1.605,230,1.262,231,1.262,232,1.262,233,2.472,234,1.262,235,1.144,236,1.262,237,1.605,238,1.605,239,1.605,240,1.144,241,1.605,242,1.994,243,1.262,244,1.262,245,1.262,246,1.262,247,2.537,248,1.809,249,0.963,250,1.904,251,1.904,252,0.963,253,1.904,254,0.825,255,1.407,256,3.573,257,3.573,258,1.994,259,0.436,260,0.794,261,0.74,262,1.119,263,0.503,264,0.503,265,0.376,266,0.794,267,0.376,268,0.503,269,0.405,270,0.503,271,0.376,272,0.503,273,0.376,274,0.503,275,0.405,276,0.794,277,0.348,278,0.436,279,0.503,280,0.503,281,0.405,282,0.503,283,0.376,284,0.594,285,0.376,286,0.376,287,0.503,288,0.376,289,0.503,290,0.376,291,0.64,292,0.503,293,0.376,294,0.503,295,0.376,296,0.503,297,0.405,298,0.503,299,0.376,300,0.503,301,0.376,302,0.503]],["title/components/AddUserComponent.html",[55,0.068,265,0.66]],["body/components/AddUserComponent.html",[2,0.185,3,0.141,4,0.1,6,0.457,7,0.578,9,0.472,12,1.123,13,0.68,16,1.088,17,1.362,18,2.413,19,1.332,21,1.036,25,1.292,29,1.59,30,0.836,31,0.028,32,0.591,33,0.637,34,1.181,35,0.653,37,0.771,38,0.534,40,0.184,41,0.141,42,0.207,43,0.514,44,1.269,45,0.627,47,1.292,50,1.332,53,0.013,54,0.013,55,0.099,56,0.424,57,0.568,58,0.568,59,0.568,60,4.723,61,0.757,64,0.991,65,1.594,66,1.235,67,1.097,68,0.704,69,0.813,71,0.813,73,0.207,74,0.472,75,1.675,77,1.312,78,1.675,80,3,81,2.595,82,3,83,1.962,84,2.611,85,3.816,86,2.489,87,2.489,88,1.988,89,2.192,90,2.447,91,2.192,93,1.988,95,2.192,96,1.113,97,0.472,98,0.932,101,1.465,102,1.685,103,1.322,105,2.789,107,1.332,108,1.016,109,2.873,110,1.988,111,2.237,112,0.893,113,2.192,115,2.192,116,2.192,117,2.447,119,1.098,120,2.88,121,2.983,122,2.192,123,3,125,2.423,128,1.434,130,1.59,131,1.988,133,1.064,134,1.674,135,1.988,136,2.838,137,1.474,138,1.474,140,2.192,142,1.819,143,2.474,144,1.706,145,1.362,146,2.192,147,1.674,148,1.988,149,2.217,150,3.772,155,0.529,156,0.923,158,1.546,159,0.873,160,1.546,162,1.581,163,1.988,164,2.192,165,1.004,166,1.988,167,2.192,168,1.819,169,2.192,173,1.24,174,1.004,175,1.077,180,0.7,181,0.457,182,0.609,183,0.7,184,0.751,185,0.7,186,0.7,187,0.529,188,0.568,189,0.529,190,0.568,191,1.182,192,0.424,195,0.737,196,3.349,197,0.937,198,1.142,199,1.182,200,0.751,201,0.653,202,1.077,203,3.239,204,3.239,205,1.831,206,1.812,207,1.812,208,1.59,209,1.59,210,1.812,211,0.866,212,2.04,213,1.59,214,1.425,215,1.885,216,1.59,217,1.59,218,1.674,219,1.812,220,1.812,221,1.434,222,1.674,223,1.292,224,1.292,225,1.182,226,1.59,227,1.59,228,2.447,229,1.812,230,1.425,231,1.425,232,1.425,233,2.672,234,1.425,235,1.292,236,1.425,237,1.812,238,1.812,239,1.812,240,1.292,241,1.812,242,2.192,243,1.425,244,1.425,245,1.425,246,1.425,254,0.932,258,2.192,259,0.492,260,0.873,261,0.813,262,1.195,263,0.568,264,0.568,265,0.893,266,0.873,267,0.424,268,0.568,269,0.457,270,0.568,271,0.424,272,0.568,273,0.424,274,0.568,275,0.457,276,0.873,277,0.393,278,0.492,279,0.568,280,0.568,281,0.457,282,0.568,283,0.424,284,0.653,285,0.424,286,0.424,287,0.568,288,0.424,289,0.568,290,0.424,291,0.704,292,0.568,293,0.424,294,0.568,295,0.424,296,0.568,297,0.457,298,0.568,299,0.424,300,0.568,301,0.424,302,0.568,303,4.231,304,1.59,305,2.789,306,2.789,307,2.149,308,2.149,309,2.149,310,1.812,311,2.149,312,2.149,313,2.149,314,2.149,315,2.149,316,1.812,317,1.812,318,2.149,319,1.812,320,2.149,321,2.149,322,2.149,323,2.149,324,1.812,325,1.988,326,1.988,327,1.819,328,1.988]],["title/components/AppComponent.html",[55,0.068,267,0.66]],["body/components/AppComponent.html",[2,0.284,3,0.257,4,0.183,6,0.835,7,0.541,9,0.724,12,0.857,13,0.66,21,1.161,30,0.61,31,0.028,32,0.572,33,0.466,35,1.192,37,0.512,38,0.572,40,0.435,41,0.257,42,0.378,43,0.789,53,0.02,54,0.02,55,0.125,56,0.775,57,1.037,58,1.037,59,1.037,61,1.161,64,1.382,65,1.699,66,1.345,67,0.927,68,1.079,69,1.248,71,1.248,73,0.378,74,0.724,77,1.83,78,1.683,96,1.461,97,0.724,99,2.567,100,3.006,103,1.649,108,0.61,112,0.927,119,0.835,155,0.966,181,0.835,186,1.278,192,0.775,195,0.718,259,0.899,260,1.339,261,1.248,262,1.569,263,1.037,264,1.037,265,0.775,266,1.339,267,1.173,268,1.037,269,0.835,270,1.037,271,0.775,272,1.037,273,0.775,274,1.037,275,0.835,276,1.339,277,0.718,278,0.899,279,1.037,280,1.037,281,0.835,282,1.037,283,0.775,284,1.001,285,0.775,286,0.775,287,1.037,288,0.775,289,1.037,290,0.775,291,1.264,292,1.037,293,0.775,294,1.037,295,0.775,296,1.037,297,0.835,298,1.037,299,0.775,300,1.037,301,0.775,302,1.037,329,3.311,330,3.05,331,5.073,332,5.073,333,3.938,334,3.267,335,2.905,336,5.073,337,3.926,338,3.926,339,3.926,340,2.36]],["title/modules/AppModule.html",[341,2.01,342,2.215]],["body/modules/AppModule.html",[1,3.439,2,0.159,3,0.187,4,0.133,31,0.028,38,0.667,40,0.244,41,0.341,42,0.274,53,0.016,54,0.016,56,1.189,61,1.089,62,2.106,66,0.562,67,0.745,68,1.012,101,1.51,108,0.443,119,0.606,181,1.217,182,1.557,183,0.927,191,1.565,192,1.189,193,1.887,194,2.4,259,0.652,265,1.189,267,1.256,269,1.217,271,1.189,273,1.189,275,1.217,277,1.101,278,0.652,281,1.217,283,1.189,284,0.804,285,1.189,286,1.189,288,1.256,290,1.129,293,1.129,295,1.129,297,1.217,299,1.129,301,1.189,303,1.887,340,1.711,341,2.45,342,4.634,343,1.711,344,4.013,345,4.381,346,2.4,347,2.4,348,2.4,349,2.4,350,2.4,351,3.439,352,3.439,353,3.439,354,2.895,355,2.895,356,3.436,357,2.106,358,1.711,359,2.846,360,4.075,361,4.075,362,3.436,363,2.106,364,4.075,365,2.846,366,4.075,367,3.436,368,1.887,369,4.075,370,1.711,371,4.075,372,3.436,373,2.701,374,2.846,375,2.846,376,4.013,377,2.846,378,2.846,379,1.565,380,2.106,381,2.846,382,2.846,383,2.846,384,2.846,385,2.846,386,2.846,387,2.846,388,2.846,389,2.846,390,2.846,391,4.075,392,4.075,393,2.846,394,2.106,395,4.075,396,2.4,397,2.846,398,2.846,399,4.075,400,2.4,401,4.075,402,1.331,403,1.887,404,3.436,405,2.846,406,2.106,407,2.846,408,2.846,409,3.015,410,1.711,411,2.106,412,2.846,413,2.846,414,2.106,415,2.106,416,1.711,417,2.106,418,2.846,419,2.846,420,2.846,421,2.846,422,2.846,423,2.846,424,2.846,425,2.106,426,2.846,427,2.846,428,2.846,429,2.846,430,2.846,431,2.846,432,2.846,433,2.846]],["title/interfaces/ApplicationInstance.html",[434,1.167,435,2.473]],["body/interfaces/ApplicationInstance.html",[2,0.26,3,0.304,4,0.217,7,0.608,12,1.175,13,0.498,31,0.027,32,0.66,34,1.48,41,0.304,53,0.022,54,0.022,68,1.343,73,0.447,74,0.804,111,2.013,162,1.622,434,2.119,435,4.171,436,3.916,437,3.916,438,2.172,439,2.792,440,6.311,441,6.311,442,6.311,443,6.311,444,4.67,445,6.311,446,5.321,447,3.471,448,5.321]],["title/components/AppsInfoComponent.html",[55,0.068,271,0.66]],["body/components/AppsInfoComponent.html",[2,0.279,3,0.224,4,0.105,6,0.477,7,0.59,9,0.487,10,2.781,12,1.046,13,0.704,16,1.728,18,1.597,19,1.375,21,0.782,24,3.154,30,0.643,31,0.028,32,0.627,33,0.647,34,0.782,35,1.037,36,1.192,37,0.649,38,0.541,40,0.192,41,0.147,42,0.216,43,0.531,44,0.84,45,0.643,53,0.014,54,0.014,55,0.101,56,0.442,57,0.592,58,0.592,59,0.592,61,0.782,64,1.017,65,1.603,66,1.301,67,0.624,68,0.984,69,0.84,71,0.84,73,0.216,74,0.487,75,1.692,77,1.347,78,1.692,83,2.005,96,1.138,97,0.487,98,0.971,101,1.484,102,1.707,108,0.348,111,2.005,112,0.624,119,0.477,133,0.592,137,1.996,138,1.506,145,1.092,155,0.551,156,1.059,159,1.221,162,1.615,165,1.037,173,1.734,174,1.405,175,1.996,180,0.73,181,0.88,182,0.635,183,0.73,184,0.783,185,0.73,187,0.551,188,0.592,189,0.551,190,1.092,192,0.442,195,0.624,197,1.171,198,1.171,200,0.783,201,0.681,202,1.112,205,1.28,249,1.134,255,1.597,259,0.513,260,0.901,261,0.84,262,1.221,263,0.592,264,0.592,265,0.442,266,0.901,267,0.442,268,0.592,269,0.477,270,0.592,271,0.913,272,0.592,273,0.442,274,0.592,275,0.477,276,0.901,277,0.41,278,0.513,279,0.592,280,0.592,281,0.477,282,0.592,283,0.442,284,0.674,285,0.442,286,0.442,287,0.592,288,0.442,289,0.592,290,0.442,291,0.726,292,0.592,293,0.442,294,0.592,295,0.442,296,0.592,297,0.477,298,0.592,299,0.442,300,0.592,301,0.442,302,0.592,334,3.092,370,2.487,411,4.875,439,3.686,444,1.658,446,2.879,447,3.092,449,5.555,450,1.658,451,2.879,452,2.879,453,4.625,454,4.625,455,4.625,456,4.625,457,4.625,458,4.625,459,4.625,460,4.625,461,4.625,462,3.9,463,4.625,464,4.625,465,4.625,466,2.551,467,4.625,468,3.414,469,3.414,470,3.414,471,2.241,472,3.414,473,2.241,474,2.879,475,3.414,476,2.879,477,3.414,478,2.241,479,2.263,480,3.414,481,2.987,482,2.241,483,2.241,484,2.241,485,2.241,486,2.241,487,2.241,488,2.241,489,1.89,490,2.241,491,2.241,492,2.241,493,2.241,494,1.597,495,2.885,496,2.241,497,3.414,498,3.414,499,3.414,500,2.241,501,2.241,502,2.241,503,1.89,504,2.526,505,2.241,506,2.241,507,3.414,508,1.89,509,2.879,510,1.658,511,1.658,512,2.275,513,3.488,514,1.89,515,2.241,516,2.241,517,2.241,518,2.241,519,2.241,520,2.241,521,2.241,522,2.241,523,2.241,524,2.241,525,2.241,526,2.241,527,2.241,528,2.241,529,2.241,530,2.241,531,2.526,532,3.414,533,3.414,534,2.241,535,2.241,536,2.241,537,2.241,538,2.241,539,2.241,540,4.136,541,4.136,542,2.241,543,2.241,544,2.241,545,2.241,546,2.241,547,2.241,548,2.241,549,2.241,550,2.241,551,2.241,552,3.414,553,3.414,554,3.414,555,3.414,556,3.414,557,3.414,558,2.879,559,3.414,560,3.414,561,2.879,562,3.414,563,3.414,564,2.879,565,2.526,566,3.414,567,3.414,568,3.414,569,3.414,570,3.414,571,4.625,572,3.414,573,4.625]],["title/guards/AuthGuard.html",[574,2.473,575,2.818]],["body/guards/AuthGuard.html",[2,0.229,3,0.269,4,0.191,7,0.502,9,0.744,13,0.559,17,1.082,30,0.811,31,0.028,32,0.502,33,0.618,37,0.813,38,0.613,40,0.351,41,0.269,42,0.394,43,0.637,45,0.811,53,0.021,54,0.021,73,0.394,74,0.585,97,0.744,108,0.811,120,3.316,133,1.514,156,0.938,159,1.514,187,1.008,188,1.082,189,1.008,190,1.082,195,0.749,197,1.624,326,2.463,327,2.253,330,2.463,402,1.916,438,1.916,481,2.438,510,3.032,574,3.032,575,4.397,576,4.097,577,3.858,578,6.234,579,4.097,580,3.504,581,4.097,582,4.097,583,6.037,584,4.244,585,6.037,586,4.097,587,1.821,588,4.836,589,5.214,590,1.477,591,2.716,592,4.244,593,2.716,594,2.716,595,4.397,596,2.716,597,3.455,598,4.836,599,3.455,600,3.858,601,4.097,602,3.032,603,4.097,604,4.097,605,4.097,606,4.097,607,3.455,608,4.397,609,6.037,610,5.214,611,1.776]],["title/injectables/AuthService.html",[354,1.691,590,0.947]],["body/injectables/AuthService.html",[2,0.196,3,0.23,4,0.164,7,0.454,9,0.672,12,1.096,13,0.655,17,0.927,19,1.898,30,0.733,31,0.028,32,0.547,33,0.559,34,1.079,37,0.827,38,0.618,40,0.301,41,0.23,42,0.338,44,1.159,45,0.827,53,0.019,54,0.019,73,0.338,74,0.672,75,1.854,81,2.774,84,3.09,94,2.833,97,0.672,101,1.674,102,1.727,107,2.29,108,0.97,112,0.642,125,2.833,133,1.405,138,1.852,145,0.927,156,0.803,159,0.927,163,2.11,173,1.766,180,1.143,185,1.534,187,0.863,188,0.927,189,1.159,190,0.927,195,0.972,197,1.507,198,1.335,200,1.226,201,1.066,202,1.534,211,1.414,354,2.385,358,2.11,402,1.641,447,3.127,476,2.96,481,2.204,577,4.208,580,3.431,588,4.486,590,1.507,591,2.326,592,4.389,593,2.326,594,4.048,597,2.96,598,3.974,599,2.96,607,2.96,612,2.96,613,4.795,614,6.107,615,5.686,616,3.566,617,4.048,618,3.51,619,4.712,620,5.32,621,3.51,622,5.686,623,2.204,624,4.712,625,4.486,626,3.51,627,3.51,628,3.51,629,3.51,630,3.51,631,3.51,632,2.597,633,3.51,634,3.51,635,4.712,636,2.96,637,2.96,638,3.974,639,2.96,640,3.51,641,3.51,642,3.51,643,3.51,644,3.51,645,3.51,646,3.51,647,3.51,648,2.597,649,2.597,650,3.51,651,3.51,652,3.51,653,3.51]],["title/components/ChangePasswordComponent.html",[55,0.068,273,0.66]],["body/components/ChangePasswordComponent.html",[2,0.199,3,0.155,4,0.11,6,0.503,7,0.55,9,0.507,12,1.125,13,0.677,17,0.938,18,2.503,19,1.914,21,1.088,25,2.137,30,0.832,31,0.028,32,0.597,33,0.635,34,1.166,37,0.777,38,0.55,40,0.202,41,0.155,42,0.227,43,0.553,44,1.253,45,0.664,47,1.421,50,1.431,53,0.014,54,0.017,55,0.104,56,0.466,57,0.624,58,0.624,59,0.624,61,0.814,64,1.051,65,1.614,66,1.255,67,0.65,68,0.756,69,0.874,71,0.874,73,0.227,74,0.507,75,1.713,77,1.391,78,1.713,81,1.105,82,3.15,83,2.06,84,3.24,89,2.356,91,2.356,93,2.137,95,2.356,96,1.169,97,0.507,98,1.024,101,1.509,102,1.736,103,1.366,107,1.431,108,0.941,109,2.927,110,2.137,111,2.06,112,0.869,113,2.356,115,2.356,116,2.356,119,1.343,122,2.356,123,3.681,125,2.137,131,2.137,133,1.128,134,1.798,135,2.137,136,2.944,137,1.157,138,1.547,140,2.356,142,1.954,143,2.542,144,1.659,145,1.345,146,2.356,147,1.798,148,2.137,149,1.954,150,3.875,156,0.541,162,1.241,173,1.781,174,1.079,175,1.547,180,0.769,181,0.503,182,0.669,183,0.769,184,0.825,185,0.769,186,0.769,187,0.581,188,0.624,189,0.581,190,0.624,191,1.299,192,0.466,195,0.781,197,0.669,198,1.21,200,0.825,201,0.718,202,1.157,203,3.377,204,3.15,205,1.781,208,1.748,211,0.952,214,1.566,215,1.998,218,1.196,223,1.421,224,1.421,225,1.299,231,1.566,232,1.566,233,2.356,234,1.566,235,2.137,236,2.356,242,2.356,243,1.566,244,1.566,245,1.566,246,1.566,254,1.024,258,2.356,259,0.541,260,0.938,261,0.874,262,1.255,263,0.624,264,0.624,265,0.466,266,0.938,267,0.466,268,0.624,269,0.503,270,0.624,271,0.466,272,0.624,273,0.938,274,0.624,275,0.503,276,0.938,277,0.432,278,0.541,279,0.624,280,0.624,281,0.503,282,0.624,283,0.466,284,0.702,285,0.466,286,0.466,287,0.624,288,0.466,289,0.624,290,0.466,291,0.756,292,0.624,293,0.466,294,0.624,295,0.466,296,0.624,297,0.503,298,0.624,299,0.466,300,0.624,301,0.466,302,0.624,328,2.857,416,3.823,654,5.362,655,1.992,656,3.554,657,3.554,658,4.752,659,4.752,660,2.857,661,3.554,662,3.554,663,2.363,664,2.363,665,2.363,666,2.363,667,2.363,668,3.554,669,2.363,670,2.363,671,2.363,672,2.363,673,2.363,674,2.363,675,2.363,676,2.363,677,2.363,678,3.554,679,1.748,680,2.363,681,2.363,682,2.363,683,2.363,684,1.992,685,2.363,686,2.363,687,2.363,688,2.363,689,2.363,690,2.363,691,2.363,692,2.363,693,2.363,694,2.363]],["title/interfaces/Cluster.html",[434,1.167,695,1.563]],["body/interfaces/Cluster.html",[2,0.313,3,0.3,4,0.214,7,0.605,12,1.178,13,0.491,16,2.316,24,3.938,31,0.027,32,0.649,33,0.824,34,1.474,41,0.3,53,0.022,54,0.022,73,0.441,74,0.797,137,1.49,434,2.106,439,2.752,444,4.646,448,5.295,479,3.034,695,2.936,696,3.86,697,6.279,698,6.279,699,6.279,700,6.279,701,6.279]],["title/interfaces/ComponentMockOption.html",[434,1.167,702,2.215]],["body/interfaces/ComponentMockOption.html",[2,0.277,3,0.201,4,0.143,7,0.64,12,1.016,17,1.133,19,1.233,31,0.028,32,0.477,33,0.587,34,0.701,35,1.716,36,1.974,38,0.517,40,0.262,41,0.325,42,0.295,43,0.476,44,1.055,45,0.476,53,0.017,54,0.017,55,0.119,64,1.055,65,1.055,66,0.847,67,0.784,69,0.753,71,0.753,73,0.295,74,0.612,77,0.997,78,1.403,88,1.841,96,0.753,97,0.437,103,1.32,108,0.77,112,0.56,134,1.549,137,1.613,144,1.069,155,0.753,156,1.497,159,1.796,174,1.303,175,0.997,181,0.651,186,0.997,187,0.753,188,0.808,189,1.055,190,0.808,195,0.56,198,1.902,199,1.684,212,1.549,221,1.327,222,1.549,240,1.841,255,2.006,277,0.56,278,1.294,284,0.604,340,1.841,379,1.684,434,1.875,494,1.432,511,2.266,587,1.069,611,1.86,616,2.58,632,2.266,648,2.266,695,2.006,702,3.558,703,2.266,704,2.266,705,3.283,706,2.266,707,2.36,708,2.716,709,2.58,710,2.582,711,2.582,712,3.618,713,1.148,714,1.549,715,2.582,716,2.582,717,2.029,718,2.266,719,2.266,720,2.582,721,3.175,722,4.177,723,2.582,724,3.665,725,2.582,726,5.436,727,3.618,728,3.618,729,2.266,730,3.618,731,2.582,732,3.618,733,2.582,734,3.618,735,3.618,736,2.582,737,3.618,738,3.618,739,2.266,740,3.618,741,2.266,742,3.618,743,2.266,744,3.618,745,2.266,746,3.618,747,5.516,748,2.582,749,2.582,750,2.582,751,4.177,752,3.618,753,3.618,754,3.618,755,3.618,756,3.618,757,3.618,758,3.618,759,3.618,760,3.618,761,3.618,762,3.618,763,3.618,764,2.844,765,2.582,766,2.029,767,2.582,768,3.876,769,5.436,770,4.273,771,2.582,772,2.266,773,2.582,774,2.582,775,2.582,776,2.582,777,2.266,778,2.582,779,2.582,780,2.582]],["title/components/DebugPanelComponent.html",[55,0.068,277,0.611]],["body/components/DebugPanelComponent.html",[2,0.268,3,0.158,4,0.112,6,0.512,7,0.631,9,0.514,12,0.867,13,0.642,17,1.266,19,1.451,21,0.825,30,0.746,31,0.028,32,0.519,33,0.682,34,0.825,35,1.785,36,1.883,37,0.67,38,0.462,40,0.206,41,0.283,42,0.232,43,0.56,44,0.886,45,0.374,53,0.014,54,0.014,55,0.128,56,0.475,57,0.635,58,0.635,59,0.635,61,0.825,64,1.062,65,1.623,66,1.259,67,0.939,68,0.767,69,0.886,71,0.886,73,0.232,74,0.514,75,1.358,77,1.407,78,1.721,88,1.447,96,1.18,97,0.514,98,1.043,103,1.445,108,0.746,112,0.985,119,0.512,134,1.824,137,1.407,144,0.841,155,0.886,156,1.438,159,1.754,165,1.094,174,1.094,175,0.784,181,0.512,186,0.784,187,0.592,188,0.635,189,1.062,190,0.635,192,0.475,195,0.44,198,1.881,199,1.324,201,1.456,212,1.218,221,1.043,222,1.218,240,2.167,254,1.043,255,2.02,259,0.551,260,0.951,261,0.886,262,1.266,263,0.635,264,0.635,265,0.475,266,0.951,267,0.475,268,0.635,269,0.512,270,0.635,271,0.475,272,0.635,273,0.475,274,0.635,275,0.512,276,0.951,277,0.877,278,1.37,279,0.635,280,0.635,281,0.512,282,0.635,283,0.475,284,0.853,285,0.475,286,0.475,287,0.635,288,0.475,289,0.635,290,0.475,291,0.767,292,0.635,293,0.475,294,0.635,295,0.475,296,0.635,297,0.512,298,0.635,299,0.475,300,0.635,301,0.475,302,0.635,340,1.447,379,3.341,434,1.259,494,1.125,511,1.781,587,0.841,611,1.562,616,2.167,632,1.781,648,2.667,695,1.685,702,3.573,703,4.495,704,1.781,705,3.404,706,1.781,707,1.982,708,2.974,709,2.167,710,2.03,711,2.03,712,3.039,713,0.902,714,1.218,715,3.039,716,3.039,717,2.389,718,3.549,719,3.989,720,2.03,721,2.667,722,3.642,723,2.03,724,3.196,725,2.03,726,5.189,727,3.039,728,3.039,729,1.781,730,3.039,731,2.03,732,3.039,733,2.03,734,3.039,735,3.039,736,2.03,737,3.039,738,3.039,739,1.781,740,3.039,741,1.781,742,3.039,743,1.781,744,3.039,745,1.781,746,3.039,747,5.34,748,3.039,749,2.03,750,2.03,751,4.044,752,3.039,753,3.039,754,3.039,755,3.039,756,3.039,757,3.039,758,3.039,759,3.039,760,3.039,761,3.039,762,3.039,763,3.039,764,2.863,765,3.039,766,1.595,767,2.03,768,3.7,769,5.189,770,4.079,771,2.03,772,1.781,773,3.039,774,3.039,775,4.044,776,2.03,777,3.196,778,3.039,779,3.039,780,2.03,781,3.604,782,3.604,783,3.604,784,3.604,785,2.407,786,2.407,787,2.407,788,2.407,789,2.407,790,2.407,791,2.407,792,2.407,793,3.604,794,3.604,795,3.604]],["title/components/DeviceGroupCreatedComponent.html",[55,0.068,192,0.66]],["body/components/DeviceGroupCreatedComponent.html",[2,0.248,3,0.211,4,0.15,6,0.684,7,0.489,9,0.633,13,0.638,16,2.774,17,1.172,21,1.016,30,0.5,31,0.028,32,0.528,33,0.381,35,0.976,37,0.579,38,0.587,40,0.275,41,0.211,42,0.309,43,0.69,45,0.5,53,0.018,54,0.018,55,0.117,56,0.635,57,0.849,58,0.849,59,0.849,61,1.488,64,1.25,65,1.67,66,1.314,67,0.811,68,1.456,69,1.092,71,1.092,73,0.309,74,0.633,75,1.826,77,1.655,78,1.826,80,3.634,96,1.348,97,0.633,98,1.393,101,1.64,102,1.887,103,1.5,108,0.79,112,0.811,119,0.684,128,2.376,129,2.669,133,0.849,137,1.445,138,1.445,145,0.849,155,0.791,156,1.164,158,2.076,159,1.172,160,2.076,162,1.55,163,2.669,164,2.942,165,1.806,166,2.669,167,2.942,168,2.441,169,2.942,180,1.047,181,0.684,182,0.91,183,1.047,184,1.123,185,1.047,186,1.047,187,0.791,188,0.849,189,0.791,190,1.342,192,1.082,193,4.041,195,0.929,197,0.91,198,1.44,199,1.768,200,1.123,201,0.976,202,1.445,214,2.942,215,1.503,259,0.736,260,1.172,261,1.092,262,1.447,263,0.849,264,0.849,265,0.635,266,1.172,267,0.635,268,0.849,269,0.684,270,0.849,271,0.635,272,0.849,273,0.635,274,0.849,275,0.684,276,1.172,277,0.588,278,0.736,279,0.849,280,0.849,281,0.684,282,0.849,283,0.635,284,0.876,285,0.635,286,0.635,287,0.849,288,0.635,289,0.849,290,0.635,291,0.944,292,0.849,293,0.635,294,0.849,295,0.635,296,0.849,297,0.684,298,0.849,299,0.635,300,0.849,301,0.635,302,0.849,796,5.141,797,2.711,798,4.439,799,4.439,800,4.623,801,3.215,802,3.215,803,3.215,804,3.215,805,3.215,806,3.215,807,4.439,808,4.439,809,4.439,810,4.439,811,4.439,812,4.439,813,4.439,814,4.439,815,4.439]],["title/components/EditClusterComponent.html",[55,0.068,283,0.66]],["body/components/EditClusterComponent.html",[2,0.227,3,0.186,4,0.132,6,0.604,7,0.579,9,0.58,12,1.098,13,0.675,21,0.93,30,0.739,31,0.028,32,0.579,33,0.563,34,1.257,37,0.62,38,0.567,40,0.243,41,0.186,42,0.273,43,0.632,44,1,45,0.632,53,0.016,54,0.016,55,0.112,56,0.56,57,0.749,58,0.749,59,0.749,61,0.93,64,1.168,65,1.653,66,1.276,67,0.743,68,0.865,69,1,71,1,73,0.273,74,0.58,75,1.783,77,1.547,78,1.783,83,2.249,93,2.444,96,1.276,97,0.58,98,1.23,101,1.589,102,1.828,103,1.447,107,1.637,108,0.441,109,2.908,111,1.762,112,0.868,119,1.104,131,2.444,133,1.254,134,2.057,135,2.444,136,3.142,137,1.689,138,1.861,143,1.143,144,1.42,145,0.749,155,1.276,156,0.649,162,1.42,173,1.524,174,1.234,175,1.689,180,0.924,181,0.604,182,0.803,183,0.924,184,0.991,185,0.924,186,0.924,187,0.698,188,0.749,189,0.698,190,0.749,192,0.56,195,0.868,197,1.345,198,1.345,200,0.991,201,0.862,202,1.324,211,1.143,212,2.057,215,2.426,218,1.436,221,1.762,222,2.057,223,1.706,224,1.706,225,1.56,249,1.436,254,1.23,259,0.649,260,1.073,261,1,262,1.37,263,0.749,264,0.749,265,0.56,266,1.073,267,0.56,268,0.749,269,0.604,270,0.749,271,0.56,272,0.749,273,0.56,274,0.749,275,0.604,276,1.073,277,0.519,278,0.649,279,0.749,280,0.749,281,0.604,282,0.749,283,1.024,284,1.242,285,0.56,286,0.56,287,0.749,288,0.56,289,0.749,290,0.56,291,0.865,292,0.749,293,0.56,294,0.749,295,0.56,296,0.749,297,0.604,298,0.749,299,0.56,300,0.749,301,0.56,302,0.749,328,3.119,406,4.705,494,2.426,512,2.853,558,3.428,587,0.991,695,2.752,713,1.063,714,1.436,745,2.099,764,2.694,816,4.705,817,2.392,818,4.065,819,4.065,820,5.188,821,5.188,822,5.714,823,5.188,824,4.065,825,4.065,826,2.837,827,2.837,828,4.065,829,2.837,830,2.837,831,2.837,832,2.837,833,2.837,834,2.837,835,2.837,836,4.75,837,4.065,838,2.837,839,4.75,840,2.837]],["title/components/EditUserComponent.html",[55,0.068,285,0.66]],["body/components/EditUserComponent.html",[2,0.179,3,0.135,4,0.096,6,0.437,7,0.579,9,0.456,12,1.117,13,0.687,17,1.167,21,0.731,30,0.788,31,0.028,32,0.592,33,0.601,34,1.012,36,1.369,37,0.785,38,0.541,40,0.176,41,0.135,42,0.198,43,0.497,44,1.177,45,0.609,53,0.013,54,0.013,55,0.108,56,0.406,57,0.543,58,0.543,59,0.543,61,0.731,64,0.964,65,1.584,66,1.225,67,0.584,68,0.68,69,0.786,71,0.786,73,0.198,74,0.456,75,1.656,77,1.276,78,1.741,81,2.473,83,2.075,84,2.767,86,2.431,87,2.787,90,2.364,93,1.921,96,1.087,97,0.456,99,1.617,100,2.236,101,1.444,102,1.66,103,1.301,107,1.287,108,0.965,109,2.557,111,1.385,112,0.875,117,2.364,119,1.28,120,3.259,121,2.9,127,1.757,128,1.916,129,1.921,131,1.921,133,1.338,134,2.236,135,1.921,136,2.787,137,1.439,138,1.78,143,1.78,144,1.543,145,1.035,156,1.012,158,0.961,159,1.167,160,0.961,162,1.116,165,0.624,173,1.899,174,0.97,175,1.439,180,0.669,181,0.437,182,0.582,183,0.669,184,0.718,185,0.669,186,0.669,187,0.506,188,0.543,189,0.506,190,0.543,192,0.406,195,0.875,196,3.913,197,0.905,198,1.11,200,0.718,201,0.624,202,1.04,209,1.521,211,1.287,212,2.236,215,2.473,218,1.617,221,1.916,222,2.236,223,1.236,224,1.236,225,1.13,248,1.921,249,1.04,252,1.04,254,0.891,259,0.47,260,0.843,261,0.786,262,1.167,263,0.543,264,0.543,265,0.406,266,0.843,267,0.406,268,0.543,269,0.437,270,0.543,271,0.406,272,0.543,273,0.631,274,0.543,275,0.437,276,0.843,277,0.376,278,0.47,279,0.543,280,0.543,281,0.437,282,0.543,283,0.406,284,1.188,285,0.872,286,0.406,287,0.543,288,0.406,289,0.543,290,0.406,291,0.68,292,0.543,293,0.406,294,0.543,295,0.406,296,0.543,297,0.437,298,0.543,299,0.406,300,0.543,301,0.406,302,0.543,304,1.521,305,2.694,306,2.694,310,1.733,316,1.733,317,1.733,319,1.733,324,1.733,325,3.287,326,2.356,327,2.155,328,2.657,334,3.007,335,1.521,402,0.961,410,3.872,416,1.236,417,1.521,438,0.961,466,1.494,481,2.238,495,1.757,504,2.364,512,1.757,580,2.908,584,1.521,611,0.891,660,2.878,679,3.27,707,1.13,743,1.521,764,2.118,816,4.765,841,3.727,842,4.42,843,4.42,844,4.42,845,3.727,846,2.694,847,3.195,848,3.727,849,3.195,850,3.195,851,2.694,852,2.055,853,1.921,854,2.694,855,2.055,856,3.195,857,2.055,858,2.364,859,2.694,860,2.055,861,2.055,862,3.195,863,2.055,864,3.195,865,2.055,866,2.055,867,2.055,868,2.055,869,2.055,870,2.055,871,2.055,872,2.055,873,3.195,874,4.787,875,5.289,876,2.055,877,2.055,878,2.055,879,2.055,880,2.055,881,3.304,882,2.055,883,2.055,884,2.055,885,2.055,886,2.694,887,1.733,888,1.733,889,1.733,890,4.42,891,2.055,892,2.055,893,2.055,894,2.055]],["title/injectables/ErrorHandlerService.html",[373,2.215,590,0.947]],["body/injectables/ErrorHandlerService.html",[2,0.219,3,0.256,4,0.183,7,0.377,9,0.801,13,0.543,30,0.608,31,0.028,32,0.377,33,0.464,34,0.896,37,0.51,38,0.487,40,0.335,41,0.256,42,0.377,43,0.787,44,0.962,53,0.02,54,0.02,73,0.377,97,0.801,107,2.643,108,0.873,112,0.925,143,2.58,145,1.033,155,0.962,168,2.152,216,2.895,217,2.895,230,2.593,254,1.696,255,1.83,261,0.962,358,2.352,372,4.269,373,3.355,396,3.299,479,2.593,584,2.895,587,1.366,590,1.589,602,2.895,608,4.269,611,2.194,613,4.269,636,3.299,637,3.299,638,3.299,713,1.467,717,2.593,719,2.895,766,2.593,768,4.083,770,4.516,853,3.044,895,4.732,896,3.299,897,5.062,898,3.913,899,5.062,900,5.934,901,3.913,902,4.269,903,5.612,904,5.681,905,3.913,906,3.913,907,3.913,908,3.913,909,3.913,910,5.062,911,3.913,912,3.913,913,3.913,914,3.913,915,3.913,916,5.062,917,3.913,918,5.062,919,5.062,920,3.913,921,3.913,922,3.913,923,3.913,924,2.895,925,3.913,926,3.913,927,2.593,928,5.062,929,3.913,930,3.913,931,3.913,932,3.913,933,3.299,934,3.913,935,3.913,936,3.299,937,3.913,938,3.913,939,3.913,940,3.299,941,3.299,942,3.913,943,3.913,944,3.913,945,3.299,946,3.913,947,3.913,948,3.299,949,3.913,950,3.913,951,3.913,952,3.913,953,3.913,954,3.913,955,3.913,956,3.913,957,5.062,958,3.913,959,3.913,960,3.913,961,3.913,962,3.913,963,3.913,964,3.913,965,3.913,966,3.913]],["title/injectables/FilterPipe.html",[351,2.01,590,0.947]],["body/injectables/FilterPipe.html",[0,2.177,2,0.243,3,0.284,4,0.202,7,0.567,9,0.771,10,3.249,12,1.119,13,0.58,18,3.066,30,0.84,31,0.028,32,0.52,33,0.641,34,1.237,36,2.152,37,0.855,38,0.418,39,3.582,40,0.372,41,0.284,42,0.418,43,0.674,44,1.516,45,0.84,53,0.021,54,0.021,73,0.418,74,0.84,97,0.619,137,1.917,156,0.993,159,1.145,197,1.228,252,2.979,351,3.249,590,1.667,858,3.999,967,3.657,968,4.692,969,5.405,970,5.732,971,4.338,972,5.674,973,4.557,974,5.405,975,4.338,976,5.405,977,4.338,978,4.338,979,4.338,980,5.405,981,3.657,982,4.338,983,4.338,984,4.338]],["title/components/GroupConfigurationComponent.html",[55,0.068,286,0.66]],["body/components/GroupConfigurationComponent.html",[2,0.247,3,0.209,4,0.148,6,0.677,7,0.487,9,0.629,13,0.665,21,1.009,30,0.495,31,0.028,32,0.526,33,0.377,35,1.339,37,0.659,38,0.585,40,0.273,41,0.209,42,0.306,43,0.685,45,0.495,50,1.775,53,0.017,54,0.017,55,0.117,56,0.628,57,0.84,58,0.84,59,0.84,61,1.357,64,1.244,65,1.668,66,1.312,67,0.806,68,1.381,69,1.084,71,1.084,73,0.306,74,0.629,75,1.822,77,1.647,78,1.822,79,5,80,3.618,94,3.565,96,1.343,97,0.629,98,1.379,101,1.636,102,1.882,103,1.495,108,0.786,112,0.924,119,0.677,128,2.366,129,2.65,133,0.84,136,2.424,137,1.435,138,1.435,145,0.84,155,1.343,156,1.312,158,2.061,159,1.164,160,2.061,162,1.539,163,2.65,164,2.921,165,1.658,166,2.65,167,2.921,168,2.424,169,2.921,180,1.036,181,0.677,182,0.901,183,1.036,184,1.111,185,1.036,186,1.036,187,0.783,188,0.84,189,0.783,190,0.84,192,0.628,195,0.924,197,0.901,198,1.432,199,1.75,200,1.111,201,0.966,202,1.435,215,1.488,247,3.717,254,1.379,255,2.061,256,4.603,257,4.603,259,0.728,260,1.164,261,1.084,262,1.441,263,0.84,264,0.84,265,0.628,266,1.164,267,0.628,268,0.84,269,0.677,270,0.84,271,0.628,272,0.84,273,0.628,274,0.84,275,0.677,276,1.164,277,0.582,278,0.728,279,0.84,280,0.84,281,0.677,282,0.84,283,0.628,284,0.87,285,0.628,286,1.078,287,0.84,288,0.628,289,0.84,290,0.628,291,0.938,292,0.84,293,0.628,294,0.84,295,0.628,296,0.84,297,0.677,298,0.84,299,0.628,300,0.84,301,0.628,302,0.84,328,2.65,425,4.656,561,4.603,800,4.603,985,5.306,986,2.683,987,4.408,988,4.408,989,3.182,990,3.182,991,3.182,992,3.182,993,3.182,994,3.182,995,3.182,996,3.182]],["title/components/LoginComponent.html",[55,0.068,288,0.66]],["body/components/LoginComponent.html",[2,0.207,3,0.164,4,0.117,6,0.532,7,0.526,9,0.529,12,1.058,13,0.657,17,0.66,18,2.556,19,1.492,21,1.118,25,1.502,30,0.76,31,0.028,32,0.559,33,0.579,34,1.011,37,0.788,38,0.545,40,0.214,41,0.164,42,0.241,43,0.576,44,1.086,45,0.576,47,1.502,50,1.492,53,0.015,54,0.015,55,0.106,56,0.493,57,0.66,58,0.66,59,0.66,61,0.848,64,1.086,65,1.625,66,1.267,67,0.677,68,1.039,69,0.911,71,0.911,73,0.241,74,0.529,78,1.384,81,1.733,82,3.238,84,1.264,89,2.456,91,2.456,95,2.456,96,1.202,97,0.529,99,2.235,100,2.472,107,1.492,108,0.811,109,2.556,110,2.228,111,2.369,112,0.893,113,2.456,115,2.456,116,2.456,119,0.532,122,2.456,123,3.75,125,2.937,127,2.687,128,1.606,133,0.978,138,1.207,140,2.456,142,2.038,143,2.567,144,1.706,145,1.29,146,2.456,147,1.875,148,2.655,149,2.038,150,4.003,155,0.615,156,0.572,159,0.978,165,0.759,166,2.228,173,2.049,174,0.759,181,0.532,182,0.708,191,1.374,192,0.493,195,0.893,203,3.623,204,2.927,205,1.655,211,1.006,218,1.264,226,1.849,227,1.849,228,2.742,230,1.656,231,1.656,232,1.656,233,2.456,234,1.656,235,1.502,236,1.656,242,2.456,243,1.656,244,1.656,245,1.656,246,1.656,258,2.456,259,0.572,260,0.978,261,0.911,262,1.29,263,0.66,264,0.66,265,0.493,266,0.978,267,0.493,268,0.66,269,0.532,270,0.66,271,0.493,272,0.66,273,0.493,274,0.66,275,0.532,276,0.978,277,0.677,278,1.251,279,0.66,280,0.66,281,0.532,282,0.66,283,0.493,284,0.731,285,0.493,286,0.493,287,0.66,288,0.964,289,0.66,290,0.493,291,1.039,292,0.66,293,0.493,294,0.66,295,0.493,296,0.66,297,0.532,298,0.66,299,0.493,300,0.66,301,0.493,302,0.66,325,1.502,326,1.502,327,1.374,333,3.238,354,2.863,379,1.374,380,1.849,394,1.849,402,1.168,438,1.733,447,2.687,466,1.733,481,2.065,494,1.733,495,2.038,577,1.849,580,3.111,592,3.268,593,1.656,594,2.927,611,1.083,616,3.631,623,1.733,625,3.124,639,2.107,649,3.615,684,2.107,705,3.238,724,2.742,766,1.656,768,2.655,770,2.927,886,4.119,924,3.615,997,2.107,998,3.705,999,3.705,1000,4.885,1001,4.885,1002,4.885,1003,4.119,1004,2.499,1005,5.466,1006,3.705,1007,2.499,1008,2.499,1009,2.499,1010,2.499,1011,2.499,1012,3.705,1013,1.733,1014,3.705,1015,3.124,1016,3.705,1017,2.742,1018,2.499,1019,2.499,1020,2.499,1021,2.499,1022,2.742,1023,2.499,1024,2.499,1025,2.499,1026,3.705,1027,2.499,1028,2.499,1029,4.417,1030,2.499,1031,2.499,1032,2.499,1033,2.499,1034,2.499,1035,2.499,1036,2.499,1037,2.499,1038,2.499,1039,2.499,1040,1.849,1041,2.107,1042,1.849,1043,1.849,1044,2.107,1045,2.499]],["title/components/MainComponent.html",[55,0.068,290,0.66]],["body/components/MainComponent.html",[2,0.299,3,0.279,4,0.198,6,0.905,7,0.514,9,0.762,13,0.572,21,1.222,31,0.028,37,0.555,38,0.409,40,0.364,41,0.279,42,0.409,43,0.83,53,0.021,54,0.021,55,0.128,56,0.839,57,1.123,58,1.123,59,1.123,61,1.222,64,1.435,65,1.712,66,1.349,67,0.976,68,1.136,69,1.313,71,1.313,73,0.409,96,1.505,97,0.833,108,0.661,112,0.777,119,0.905,192,0.839,259,0.973,260,1.409,261,1.313,262,1.616,263,1.123,264,1.123,265,0.839,266,1.409,267,0.839,268,1.123,269,0.905,270,1.123,271,0.839,272,1.123,273,0.839,274,1.123,275,0.905,276,1.409,277,0.777,278,0.973,279,1.123,280,1.123,281,0.905,282,1.123,283,0.839,284,1.054,285,0.839,286,0.839,287,1.123,288,0.839,289,1.123,290,1.208,291,1.302,292,1.123,293,0.839,294,1.123,295,0.839,296,1.123,297,0.905,298,1.123,299,0.839,300,1.123,301,0.839,302,1.123,587,1.485,713,1.594,714,2.152,1046,3.586,1047,5.338,1048,5.338,1049,5.338,1050,4.253,1051,4.253]],["title/interfaces/Notification.html",[434,1.167,708,1.691]],["body/interfaces/Notification.html",[2,0.239,3,0.28,4,0.2,12,1.126,24,3.518,31,0.028,32,0.636,33,0.775,36,1.494,37,0.763,38,0.412,40,0.367,41,0.351,42,0.412,45,0.833,50,2.158,53,0.021,54,0.021,67,0.782,73,0.563,74,0.765,97,0.611,103,1.052,144,2.142,147,2.165,165,1.299,175,1.997,195,0.782,205,1.604,221,2.658,330,2.572,434,1.871,587,1.494,590,1.518,596,2.836,623,2.001,708,3.196,713,1.604,927,2.836,1013,2.001,1052,3.166,1053,3.608,1054,4.519,1055,3.608,1056,3.608,1057,3.166,1058,3.166,1059,3.166,1060,3.166,1061,3.608,1062,3.608,1063,3.608,1064,3.166,1065,4.519,1066,3.608,1067,3.608,1068,3.608,1069,3.608,1070,3.608,1071,3.608,1072,3.608,1073,3.608,1074,3.608,1075,3.608,1076,4.519,1077,3.166,1078,3.608,1079,4.934,1080,3.608,1081,3.608,1082,3.608,1083,3.166,1084,3.608,1085,3.608,1086,3.608]],["title/components/NotificationsComponent.html",[55,0.068,293,0.66]],["body/components/NotificationsComponent.html",[2,0.315,3,0.225,4,0.16,6,0.73,7,0.542,9,0.662,13,0.651,19,1.869,21,1.062,30,0.721,31,0.028,32,0.542,33,0.719,35,1.042,37,0.605,38,0.584,40,0.294,41,0.225,42,0.33,43,0.721,45,0.533,53,0.018,54,0.018,55,0.12,56,0.677,57,0.906,58,0.906,59,0.906,61,1.062,64,1.293,65,1.68,66,1.325,67,0.848,68,0.987,69,1.141,71,1.141,73,0.33,74,0.662,75,1.861,77,1.712,94,2.79,96,1.386,97,0.662,101,1.666,102,1.884,103,1.526,108,0.533,110,3.387,112,0.961,119,0.73,142,1.886,147,2.348,155,0.844,156,1.204,165,1.409,180,1.117,183,1.117,184,1.198,185,1.117,186,1.117,187,0.844,188,0.906,189,0.844,190,0.906,192,0.677,195,0.961,198,1.314,201,1.409,202,1.511,205,1.739,259,0.785,260,1.225,261,1.141,262,1.487,263,0.906,264,0.906,265,0.677,266,1.225,267,0.677,268,0.906,269,0.73,270,0.906,271,0.677,272,0.906,273,0.677,274,0.906,275,0.73,276,1.225,277,0.627,278,0.785,279,0.906,280,0.906,281,0.73,282,0.906,283,0.677,284,0.916,285,0.677,286,0.677,287,0.906,288,0.677,289,0.906,290,0.677,291,0.987,292,0.906,293,1.112,294,0.906,295,0.677,296,0.906,297,0.73,298,0.906,299,0.677,300,0.906,301,0.677,302,0.906,587,1.198,708,3.192,713,1.286,717,3.075,718,3.433,721,2.538,902,3.913,927,3.734,1013,2.17,1057,3.433,1058,4.355,1059,4.668,1060,3.433,1077,2.538,1087,2.892,1088,4.64,1089,4.64,1090,3.43,1091,4.64,1092,3.43,1093,3.43,1094,3.43,1095,2.892,1096,3.43,1097,2.892,1098,3.43,1099,3.43,1100,3.43,1101,3.43,1102,4.64,1103,3.433,1104,4.64,1105,4.64]],["title/injectables/NotificationsService.html",[103,0.822,590,0.947]],["body/injectables/NotificationsService.html",[2,0.227,3,0.266,4,0.19,7,0.499,9,0.74,12,0.965,13,0.682,24,2.443,30,0.806,31,0.028,32,0.55,33,0.714,36,1.811,37,0.829,38,0.391,40,0.348,41,0.34,42,0.391,45,0.806,50,2.089,53,0.021,54,0.021,67,1.1,73,0.55,74,0.74,97,0.815,103,1.276,112,0.948,144,1.419,147,2.625,165,1.575,175,1.323,195,1.044,205,1.523,221,1.762,330,2.443,434,1.419,587,1.419,590,1.618,596,2.693,623,1.9,708,3.343,713,1.523,927,3.438,1013,2.425,1052,3.007,1053,5.075,1054,4.374,1055,4.374,1056,3.427,1057,4.453,1058,3.838,1059,3.838,1060,3.838,1061,3.427,1062,3.427,1063,3.427,1064,3.838,1065,5.075,1066,4.374,1067,4.374,1068,4.374,1069,4.374,1070,5.075,1071,3.427,1072,3.427,1073,3.427,1074,3.427,1075,3.427,1076,4.374,1077,3.007,1078,3.427,1079,4.817,1080,3.427,1081,3.427,1082,3.427,1083,3.007,1084,3.427,1085,3.427,1086,3.427,1095,3.427,1106,5.187,1107,5.187,1108,4.064,1109,4.064,1110,4.064,1111,4.064,1112,4.064,1113,4.064]],["title/components/OrganizationComponent.html",[55,0.068,295,0.66]],["body/components/OrganizationComponent.html",[0,1.957,2,0.312,3,0.122,4,0.087,6,0.396,7,0.548,9,0.422,12,1.094,13,0.68,17,0.78,21,0.676,30,0.71,31,0.028,32,0.596,33,0.541,34,0.426,35,0.897,36,1.594,37,0.742,38,0.558,40,0.159,41,0.122,42,0.439,43,0.459,44,0.458,45,0.755,53,0.015,54,0.012,55,0.122,56,0.367,57,0.491,58,0.491,59,0.491,61,0.676,64,0.904,65,1.568,66,1.175,67,1.04,68,0.629,69,0.727,71,0.727,73,0.179,74,0.422,75,1.612,78,1.185,81,1.382,83,2.208,86,1.625,87,1.023,88,2.516,94,1.776,96,1.029,97,0.422,99,1.495,100,2.117,101,1.395,102,1.605,103,1.253,107,1.838,108,1.023,111,1.281,112,0.931,119,0.782,120,2.458,127,2.672,128,2.106,133,1.205,138,1.362,143,1.19,144,1.032,145,0.491,149,1.625,155,0.904,156,0.958,158,1.718,159,1.395,160,1.718,162,1.697,165,1.386,173,2.232,174,1.547,175,0.962,180,0.606,181,0.396,182,0.527,183,0.606,184,0.65,185,0.606,186,0.606,187,0.458,188,0.491,189,0.458,190,0.491,192,0.367,195,0.888,197,1.376,198,1.041,200,0.65,201,0.565,202,0.962,205,1.107,211,1.48,213,3.096,248,2.921,249,2.31,252,1.859,255,1.382,259,0.426,260,0.78,261,0.727,262,1.105,263,0.491,264,0.491,265,0.583,266,0.78,267,0.367,268,0.491,269,0.396,270,0.491,271,0.367,272,0.491,273,0.367,274,0.491,275,0.396,276,0.78,277,0.34,278,0.426,279,0.491,280,0.491,281,0.396,282,0.491,283,0.367,284,1.043,285,0.583,286,0.367,287,0.491,288,0.367,289,0.491,290,0.367,291,0.629,292,0.491,293,0.367,294,0.491,295,0.826,296,0.491,297,0.396,298,0.491,299,0.367,300,0.491,301,0.583,302,0.491,303,1.233,325,1.119,333,2.773,334,1.023,335,1.377,355,2.117,357,3.91,402,0.87,403,1.233,404,1.569,409,2.186,410,1.119,414,1.377,415,1.377,447,1.625,462,3.528,466,2.272,479,1.958,481,2.545,494,1.718,495,1.625,512,1.023,513,3.528,565,2.186,580,2.801,587,0.65,600,3.096,660,1.776,713,0.697,714,0.942,729,1.377,772,2.186,845,1.569,853,1.776,858,3.91,968,4.027,970,4.097,981,2.491,1013,1.382,1017,2.186,1022,2.186,1040,2.719,1042,2.719,1043,2.719,1114,1.569,1115,2.955,1116,2.955,1117,4.184,1118,4.184,1119,4.456,1120,5.284,1121,3.528,1122,5.284,1123,5.284,1124,4.858,1125,2.955,1126,2.491,1127,2.955,1128,4.184,1129,2.955,1130,4.184,1131,3.098,1132,2.955,1133,1.861,1134,2.955,1135,1.861,1136,1.958,1137,4.184,1138,4.184,1139,5.093,1140,2.955,1141,1.861,1142,2.955,1143,1.861,1144,2.955,1145,1.861,1146,1.861,1147,3.098,1148,2.955,1149,1.861,1150,4.294,1151,1.861,1152,3.377,1153,1.861,1154,2.186,1155,1.861,1156,1.861,1157,1.861,1158,1.861,1159,4.027,1160,1.861,1161,1.861,1162,1.861,1163,1.861,1164,2.955,1165,1.861,1166,3.595,1167,1.861,1168,1.861,1169,4.184,1170,1.861,1171,3.674,1172,4.184,1173,2.955,1174,5.093,1175,3.674,1176,2.955,1177,4.184,1178,2.491,1179,1.569,1180,1.861,1181,1.569,1182,4.184,1183,1.861,1184,2.955,1185,2.955,1186,4.184,1187,4.184,1188,1.861,1189,1.861,1190,1.861,1191,1.569,1192,1.569,1193,1.861,1194,1.861,1195,1.861,1196,1.861,1197,2.955,1198,2.186,1199,4.184,1200,4.184,1201,5.284,1202,5.284,1203,1.958,1204,2.955,1205,1.958,1206,2.491,1207,2.955,1208,2.955]],["title/components/SidebarComponent.html",[55,0.068,299,0.66]],["body/components/SidebarComponent.html",[2,0.276,3,0.168,4,0.119,6,0.544,7,0.6,9,0.538,12,1.094,13,0.675,21,0.862,30,0.586,31,0.028,32,0.563,33,0.447,37,0.687,38,0.593,40,0.219,41,0.168,42,0.246,43,0.586,45,0.768,53,0.015,54,0.015,55,0.116,56,0.504,57,0.675,58,0.675,59,0.675,61,1.131,64,1.101,65,1.635,66,1.271,67,0.689,68,0.802,69,0.927,71,0.927,73,0.246,74,0.538,75,1.744,78,1.399,81,2.735,83,2.535,86,1.405,87,1.405,96,1.215,97,0.538,99,2.265,100,2.499,101,1.505,102,1.776,107,1.517,108,0.928,112,0.963,119,0.544,120,2.959,127,3.03,128,2.389,133,0.675,138,1.608,142,1.405,145,0.675,149,2.072,155,1.101,156,0.585,158,1.195,159,0.675,160,1.195,162,1.725,165,1.144,173,2.192,174,1.359,175,1.227,180,0.832,181,0.544,182,0.724,183,0.832,184,0.892,185,0.832,187,0.629,188,0.675,189,0.629,190,0.675,192,0.504,195,0.903,197,1.492,198,1.267,200,0.892,201,0.776,202,1.227,211,1.029,248,2.265,249,2.265,252,1.293,259,0.585,260,0.995,261,0.927,262,1.304,263,0.675,264,0.675,265,0.504,266,0.995,267,0.504,268,0.675,269,0.544,270,0.675,271,0.504,272,0.675,273,0.504,274,0.675,275,0.544,276,0.995,277,0.689,278,1.261,279,0.675,280,0.675,281,0.544,282,0.675,283,0.504,284,1.088,285,0.744,286,0.504,287,0.675,288,0.504,289,0.675,290,0.504,291,1.172,292,0.675,293,0.504,294,0.675,295,0.504,296,0.675,297,0.544,298,0.675,299,0.975,300,0.675,301,0.504,302,0.675,333,3.274,334,1.405,354,2.499,355,2.499,379,1.405,380,1.891,394,1.891,402,1.195,409,1.891,410,1.536,414,1.891,415,1.891,438,1.762,447,2.072,466,2.577,494,2.093,512,2.461,580,3.134,587,0.892,600,2.788,611,1.633,616,2.265,617,3.652,660,3.746,705,3.274,707,2.896,709,2.969,713,0.958,714,1.293,739,1.891,853,2.265,924,2.788,936,3.177,1003,4.165,1015,3.774,1022,2.788,1040,2.788,1041,2.155,1042,2.788,1043,2.788,1044,2.155,1097,2.155,1126,4.165,1131,3.774,1152,3.655,1178,2.155,1179,2.155,1181,2.155,1191,2.155,1192,2.155,1209,2.155,1210,3.768,1211,3.768,1212,3.768,1213,2.555,1214,3.768,1215,2.555,1216,3.768,1217,3.768,1218,2.555,1219,2.555,1220,2.555,1221,3.768,1222,2.555,1223,2.555,1224,2.555,1225,2.555,1226,2.555,1227,2.555,1228,2.555,1229,4.475,1230,3.774,1231,4.475,1232,2.555,1233,3.768,1234,2.555,1235,2.555,1236,2.555,1237,2.555,1238,2.555,1239,2.555,1240,3.177,1241,3.768,1242,3.768,1243,3.768]],["title/pipes/SortByPipe.html",[0,1.346,352,2.01]],["body/pipes/SortByPipe.html",[0,1.79,2,0.141,3,0.166,4,0.118,6,0.537,7,0.598,9,0.634,10,3.299,11,1.869,12,1.113,13,0.649,18,1.747,21,1.017,30,0.941,31,0.028,32,0.583,33,0.718,34,1.363,35,2.062,37,0.877,38,0.243,39,2.476,40,0.216,41,0.166,42,0.243,43,0.393,44,1.642,45,0.393,50,2.286,53,0.015,54,0.015,112,0.462,119,1.115,133,1.449,137,1.898,148,2.953,155,1.208,159,1.174,195,0.958,197,1.259,205,1.666,252,3.108,352,2.246,474,4.141,481,3.082,602,3.634,623,2.986,768,3.692,972,3.15,973,5.614,1121,5.578,1147,4.42,1150,3.15,1166,4.313,1244,5.179,1245,2.13,1246,2.526,1247,3.735,1248,6.385,1249,2.526,1250,5.487,1251,4.911,1252,2.526,1253,3.735,1254,2.526,1255,2.526,1256,3.735,1257,5.791,1258,2.526,1259,6.504,1260,4.445,1261,2.526,1262,3.735,1263,2.526,1264,3.735,1265,2.526,1266,6.336,1267,2.526,1268,3.735,1269,5.677,1270,5.241,1271,5.241,1272,5.241,1273,6.216,1274,5.241,1275,2.526,1276,3.735,1277,2.526,1278,3.735,1279,2.526,1280,2.526,1281,2.526,1282,2.526,1283,2.526,1284,2.526,1285,2.526,1286,3.735,1287,2.526,1288,2.526,1289,2.526,1290,2.526,1291,2.526,1292,2.526,1293,2.526,1294,2.526,1295,2.526,1296,2.526,1297,2.526,1298,2.526,1299,2.526,1300,3.735,1301,2.526,1302,2.526,1303,2.526,1304,2.526,1305,2.526,1306,2.526,1307,4.911,1308,2.526,1309,4.445,1310,2.526,1311,4.445,1312,3.735,1313,2.526,1314,2.526,1315,2.526,1316,2.526,1317,2.526,1318,2.526]],["title/pipes/TruncatePipe.html",[0,1.346,353,2.01]],["body/pipes/TruncatePipe.html",[0,2.451,2,0.262,3,0.307,4,0.218,6,0.995,7,0.586,9,0.667,10,2.811,11,4.188,12,1.124,13,0.501,15,4.772,22,5.462,30,0.727,31,0.028,32,0.45,33,0.555,34,1.07,35,1.921,36,1.977,37,0.794,38,0.45,39,3.751,40,0.401,41,0.307,42,0.45,43,0.727,44,1.15,45,0.727,52,3.943,53,0.022,54,0.022,67,1.034,168,3.112,353,3.803,941,4.772,1154,4.188,1319,3.943,1320,5.66,1321,4.676,1322,5.66,1323,5.66,1324,5.66,1325,5.66,1326,5.66,1327,5.66,1328,5.66,1329,4.676,1330,4.676]],["title/injectables/UpdateEventsService.html",[355,1.691,590,0.947]],["body/injectables/UpdateEventsService.html",[2,0.283,3,0.331,4,0.236,13,0.635,17,1.564,31,0.027,35,1.533,38,0.57,40,0.433,41,0.331,42,0.486,53,0.023,54,0.023,73,0.486,74,0.845,97,0.897,155,1.242,330,3.036,355,2.998,590,1.781,591,3.347,596,3.347,1331,5.302,1332,4.258,1333,6.487,1334,5.925,1335,6.288]],["title/components/UserInfoComponent.html",[55,0.068,301,0.66]],["body/components/UserInfoComponent.html",[2,0.293,3,0.165,4,0.117,6,0.535,7,0.56,9,0.531,12,1.123,13,0.689,21,0.852,30,0.579,31,0.028,32,0.598,33,0.442,37,0.714,38,0.572,40,0.215,41,0.165,42,0.242,43,0.579,44,0.619,45,0.689,53,0.015,54,0.015,55,0.115,56,0.496,57,0.664,58,0.664,59,0.664,61,0.852,64,1.09,65,1.632,66,1.25,67,0.681,68,0.792,69,0.916,71,0.916,73,0.242,74,0.531,75,1.738,77,1.444,78,1.793,83,2.268,84,2.869,86,2.695,96,1.205,97,0.531,98,1.09,99,2.243,100,2.48,101,1.537,102,1.768,103,1.394,108,1.028,112,0.81,119,1.265,120,3.061,127,2.048,128,2.124,129,2.239,130,2.755,133,1.171,138,1.596,143,1.013,144,1.3,145,0.664,155,0.916,156,0.852,158,1.176,159,0.983,160,1.176,162,1.3,165,0.764,173,1.837,174,1.131,175,1.212,180,0.819,181,0.535,183,0.819,184,0.878,185,0.819,186,0.819,187,0.619,188,0.664,189,0.619,190,0.664,192,0.496,195,0.896,197,1.256,198,1.256,200,0.878,201,0.764,202,1.212,211,1.013,212,1.884,215,1.741,218,1.273,221,1.614,222,1.884,225,1.383,240,2.239,248,2.239,249,1.884,252,1.273,254,1.09,259,0.576,260,0.983,261,0.916,262,1.294,263,0.664,264,0.664,265,0.496,266,0.983,267,0.496,268,0.664,269,0.535,270,0.664,271,0.496,272,0.664,273,0.735,274,0.664,275,0.535,276,0.983,277,0.46,278,0.576,279,0.664,280,0.664,281,0.535,282,0.664,283,0.496,284,1.081,285,0.496,286,0.496,287,0.664,288,0.496,289,0.664,290,0.496,291,0.792,292,0.664,293,0.496,294,0.664,295,0.496,296,0.664,297,0.535,298,0.664,299,0.496,300,0.664,301,0.967,302,0.664,325,2.239,326,2.239,327,2.048,334,3.201,340,1.512,403,4.285,416,1.512,417,1.861,450,1.861,451,3.14,452,3.14,466,1.741,481,1.176,489,2.121,494,1.741,503,2.121,504,2.755,510,1.861,512,2.048,514,2.121,587,0.878,660,3.294,679,3.871,713,0.943,714,1.273,741,1.861,841,4.132,846,3.14,848,4.132,851,3.14,853,2.239,854,3.14,881,2.121,887,2.121,888,2.121,889,2.121,1013,2.292,1119,4.132,1154,3.626,1203,3.248,1230,2.121,1240,3.14,1336,5.451,1337,5.478,1338,5.478,1339,4.901,1340,3.723,1341,2.515,1342,2.515,1343,3.723,1344,5.669,1345,2.515,1346,2.515,1347,2.515,1348,2.515,1349,2.515,1350,2.515,1351,2.515,1352,2.515,1353,2.515,1354,2.515,1355,3.723,1356,2.121,1357,2.121,1358,2.515,1359,2.515,1360,3.723,1361,2.515,1362,2.515]],["title/changelog.html",[1136,1.851,1205,1.851,1363,2.793]],["body/changelog.html",[2,0.382,16,2.402,17,1.508,31,0.023,36,2.22,53,0.023,54,0.023,66,1.284,108,0.738,109,2.219,174,1.86,181,1.01,284,0.937,291,1.01,368,3.785,370,3.433,438,2.219,439,2.853,466,3.041,495,3.369,531,4.226,611,2.475,617,3.146,695,3.041,707,2.61,709,2.853,968,3.512,1013,2.864,1103,4.704,1159,3.512,1166,3.512,1198,3.512,1203,3.785,1206,4.002,1364,4.746,1365,4.002,1366,4.746,1367,4.746,1368,4.002,1369,4.002,1370,4.002,1371,4.002,1372,5.36,1373,4.002,1374,5.165,1375,4.002,1376,4.002,1377,4.815,1378,4.002,1379,4.002,1380,4.002,1381,4.815,1382,4.002]],["title/coverage.html",[1383,3.844]],["body/coverage.html",[0,2.249,1,2.019,4,0.157,5,2.831,17,0.886,31,0.028,32,0.323,53,0.018,54,0.018,55,0.138,56,0.663,60,3.384,61,1.047,62,2.484,63,2.831,68,0.973,75,0.951,87,1.846,101,0.886,102,1.02,103,0.826,187,0.826,189,0.826,192,0.663,193,2.225,205,2.527,265,0.663,267,0.663,269,0.714,271,0.663,273,0.663,275,0.714,277,0.614,281,0.714,283,0.663,285,0.663,286,0.663,288,0.663,290,0.663,293,0.663,295,0.663,297,0.714,299,0.663,301,0.663,303,2.225,304,3.384,329,2.831,351,2.749,352,2.019,353,2.019,354,1.699,355,1.699,373,2.225,376,2.831,379,2.86,403,2.225,406,2.484,410,2.019,411,2.484,416,2.019,425,2.484,434,2.04,435,2.484,436,2.831,437,2.831,449,2.831,450,3.384,509,2.831,564,3.856,565,5.032,590,1.747,595,2.831,612,2.831,623,2.138,654,2.831,655,2.831,695,1.57,696,2.831,702,2.225,703,3.848,704,3.848,706,2.484,708,1.699,796,2.831,797,2.831,816,3.384,817,2.831,895,2.831,896,2.831,967,3.856,985,2.831,986,2.831,997,2.831,1046,2.831,1052,3.384,1087,2.831,1114,2.831,1209,2.831,1244,2.831,1245,2.831,1319,2.831,1331,2.831,1332,2.831,1336,2.831,1356,2.831,1357,2.831,1383,2.831,1384,2.831,1385,3.357,1386,3.357,1387,4.573,1388,3.357,1389,3.357,1390,3.357,1391,3.357,1392,3.357,1393,6.548,1394,3.357,1395,3.357,1396,3.357,1397,3.357,1398,3.357,1399,5.2,1400,3.357,1401,3.357,1402,3.357,1403,3.357,1404,3.357,1405,3.357,1406,5.2,1407,4.573,1408,3.357,1409,3.357,1410,3.357,1411,3.357,1412,6.664,1413,6.664,1414,2.831,1415,3.357,1416,3.357,1417,3.357,1418,3.357,1419,3.357,1420,4.573,1421,4.573,1422,3.357,1423,3.357,1424,3.357,1425,3.357,1426,3.357,1427,3.357,1428,3.357,1429,3.357,1430,3.357,1431,4.573,1432,3.357,1433,3.357,1434,3.357,1435,3.357,1436,3.357,1437,3.357,1438,3.357,1439,3.357,1440,4.573,1441,3.357,1442,3.357,1443,3.357,1444,3.357,1445,3.357,1446,3.357,1447,3.357,1448,3.357,1449,3.357,1450,3.357,1451,3.357,1452,3.357,1453,6.63,1454,3.357,1455,3.357,1456,3.357,1457,3.357,1458,3.357,1459,3.357,1460,3.357,1461,3.357,1462,3.357,1463,3.357,1464,3.856,1465,3.856,1466,3.856,1467,3.357,1468,3.357]],["title/dependencies.html",[343,2.416,1469,2.355]],["body/dependencies.html",[31,0.028,40,0.415,53,0.023,54,0.023,181,1.029,182,1.636,191,2.661,343,2.909,362,4.871,363,4.275,367,4.871,368,3.207,370,2.909,400,4.08,402,2.262,508,4.08,591,3.207,593,3.207,594,3.829,1470,4.839,1471,6.804,1472,4.839,1473,4.839,1474,4.839,1475,4.839,1476,4.839,1477,4.839,1478,4.839,1479,4.839,1480,4.839,1481,5.777,1482,4.839,1483,4.839,1484,4.839,1485,4.839,1486,4.839,1487,4.839,1488,4.839,1489,4.839,1490,4.839,1491,4.839,1492,4.839,1493,4.839,1494,5.777,1495,4.839,1496,4.839,1497,4.839]],["title/miscellaneous/functions.html",[623,1.879,1498,2.355]],["body/miscellaneous/functions.html",[31,0.024,53,0.024,54,0.024,73,0.515,623,2.503,1464,4.513,1465,5.721,1466,4.513,1498,4.513,1499,5.352,1500,5.352]],["title/index.html",[73,0.269,1136,1.851,1205,1.851]],["body/index.html",[2,0.37,3,0.254,4,0.234,7,0.372,17,1.474,31,0.02,36,2.063,53,0.02,54,0.02,55,0.113,66,1.239,108,0.602,109,1.809,119,1.069,133,1.327,143,1.558,145,1.022,174,1.695,181,1.187,182,1.096,235,2.326,255,1.809,284,0.764,291,1.187,327,2.128,343,2.326,358,2.326,368,3.331,370,3.356,438,1.809,439,2.326,466,2.863,495,3.07,531,4.13,590,1.096,611,2.178,617,2.565,649,2.863,695,2.863,707,2.128,709,2.326,777,4.372,859,3.263,904,4.707,933,3.263,940,3.263,1013,2.61,1017,2.863,1064,4.531,1083,4.922,1103,4.372,1152,3.719,1159,2.863,1198,2.863,1203,3.331,1365,3.263,1368,3.263,1369,4.238,1370,3.263,1371,4.238,1372,4.982,1373,3.263,1374,4.707,1375,3.263,1376,3.263,1377,4.238,1378,3.263,1379,3.263,1380,3.263,1381,4.238,1382,3.263,1384,4.982,1469,3.263,1501,3.869,1502,3.263,1503,3.869,1504,3.869,1505,3.869,1506,3.869,1507,3.869,1508,5.026,1509,3.869,1510,3.869,1511,3.869,1512,3.869,1513,5.026,1514,3.869,1515,5.026,1516,3.869,1517,5.026,1518,3.869,1519,5.026,1520,3.869,1521,3.869,1522,5.026,1523,3.869,1524,3.869,1525,5.582,1526,3.869,1527,5.909,1528,3.869,1529,5.582,1530,3.869,1531,5.026,1532,3.869,1533,3.869,1534,5.026,1535,5.026,1536,6.39,1537,6.276,1538,5.026,1539,3.869,1540,3.869,1541,3.869,1542,3.869,1543,3.869,1544,3.869,1545,4.982,1546,3.869,1547,5.909,1548,3.869,1549,3.869,1550,3.869,1551,3.869,1552,3.869,1553,3.869,1554,5.026,1555,5.026,1556,3.869,1557,3.869,1558,3.869,1559,5.026,1560,3.869,1561,3.869,1562,3.263,1563,3.869,1564,3.869,1565,3.869,1566,3.869,1567,5.582,1568,3.869,1569,3.869]],["title/license.html",[1136,1.851,1205,1.851,1570,2.355]],["body/license.html",[4,0.238,31,0.024,53,0.024,54,0.024,145,1.345,291,1.084,438,2.382,945,4.295,1257,4.295,1502,4.295,1545,4.295,1562,4.295,1570,5.751,1571,5.094,1572,5.094,1573,6.311,1574,5.094,1575,5.094,1576,5.094,1577,5.094,1578,5.094,1579,5.094,1580,5.094,1581,5.094,1582,5.094,1583,5.094,1584,5.094,1585,5.094,1586,5.955,1587,5.094,1588,5.094,1589,5.094,1590,5.094,1591,5.094,1592,5.094,1593,5.094,1594,5.094,1595,5.094,1596,5.094]],["title/modules.html",[341,2.741]],["body/modules.html",[31,0.024,53,0.024,54,0.024,341,3.253,342,3.586,363,4.004,948,4.562,1597,5.411,1598,5.411]],["title/overview.html",[1599,3.844]],["body/overview.html",[0,1.664,1,3.461,31,0.028,41,0.271,50,2.111,53,0.021,54,0.021,55,0.084,56,1.136,101,1.52,182,1.17,192,1.136,259,0.946,265,1.136,267,1.28,269,1.225,271,1.136,273,1.136,275,1.225,277,1.052,281,1.225,283,1.136,285,1.136,286,1.136,288,1.28,290,1.136,293,1.136,295,1.136,297,1.225,299,1.136,301,1.136,341,3.151,342,4.691,343,2.484,344,3.484,345,3.484,346,3.484,347,3.484,348,3.484,349,3.484,350,3.484,351,3.461,352,3.461,353,3.461,354,2.913,355,2.913,356,4.42,357,3.057,358,2.484,434,1.443,574,3.057,590,1.17,1414,3.484,1599,3.484,1600,4.131,1601,4.131,1602,4.131]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":205,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":1084,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":1085,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":50,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"pipes/SortByPipe.html":{},"overview.html":{}}}],["1/1",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":222,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["1008",{"_index":812,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["1027",{"_index":1517,"title":{},"body":{"index.html":{}}}],["1080",{"_index":1520,"title":{},"body":{"index.html":{}}}],["11/22",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["12/23",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["1200",{"_index":1521,"title":{},"body":{"index.html":{}}}],["1280",{"_index":1508,"title":{},"body":{"index.html":{}}}],["13",{"_index":1329,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["1366",{"_index":1511,"title":{},"body":{"index.html":{}}}],["1440",{"_index":1513,"title":{},"body":{"index.html":{}}}],["15/23",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1081,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1613",{"_index":1515,"title":{},"body":{"index.html":{}}}],["1680",{"_index":1518,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["1800",{"_index":1523,"title":{},"body":{"index.html":{}}}],["1920",{"_index":1519,"title":{},"body":{"index.html":{}}}],["2",{"_index":47,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["2.0",{"_index":1575,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1581,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1600,"title":{},"body":{"overview.html":{}}}],["200",{"_index":905,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["201",{"_index":908,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1572,"title":{},"body":{"license.html":{}}}],["22/25",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["24/35",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":526,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["2560",{"_index":1522,"title":{},"body":{"index.html":{}}}],["3.0.1",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["30/48",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["30/51",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":911,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["33",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["34/56",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":525,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["36",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["398a",{"_index":814,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["3c11ac797c77",{"_index":815,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["4",{"_index":1601,"title":{},"body":{"overview.html":{}}}],["4.1.3",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":915,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":921,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":925,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":217,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":934,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["4xxx",{"_index":1073,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1602,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":947,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":950,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":955,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":958,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":962,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["52",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":236,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["6.1.10",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["6c86f7",{"_index":529,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["7",{"_index":1414,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["720",{"_index":1509,"title":{},"body":{"index.html":{}}}],["75",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":1512,"title":{},"body":{"index.html":{}}}],["7bd7d59cfe90e4d32b1d2f20d39c86df",{"_index":810,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["8",{"_index":46,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["8/14",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1510,"title":{},"body":{"index.html":{}}}],["81",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["9/19",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1514,"title":{},"body":{"index.html":{}}}],["917",{"_index":1516,"title":{},"body":{"index.html":{}}}],["_notif",{"_index":1053,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["a.localecompare(b",{"_index":1293,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["abbrevi",{"_index":8,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["abbreviatepip",{"_index":1,"title":{"pipes/AbbreviatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["abbstr",{"_index":48,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["ac7a",{"_index":813,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["access",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":1106,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":952,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1203,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":583,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":302,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":1206,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{}}}],["add",{"_index":67,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["add(notificationinst",{"_index":1055,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["adddevicesgroupcompon",{"_index":56,"title":{"components/AddDevicesGroupComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["address",{"_index":230,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":88,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["adduser(form",{"_index":105,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["addusercompon",{"_index":265,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["agre",{"_index":1583,"title":{},"body":{"license.html":{}}}],["alert",{"_index":1058,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert('unauthor",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["alert.messag",{"_index":1105,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":219,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["angular",{"_index":1527,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":191,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":115,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["apach",{"_index":1574,"title":{},"body":{"license.html":{}}}],["api",{"_index":808,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["api_url",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.compon",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["app_descriptor_id",{"_index":440,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["app_instance_id",{"_index":441,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["appcompon",{"_index":267,"title":{"components/AppComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":1380,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":1268,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["applic",{"_index":438,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["applicationinst",{"_index":435,"title":{"interfaces/ApplicationInstance.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["applications'},{'nam",{"_index":270,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications/applications.compon",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":269,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":342,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appsinfocompon",{"_index":271,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":18,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"pipes/SortByPipe.html":{}}}],["array.foreach(el",{"_index":243,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["array.isarray(oldvalu",{"_index":1313,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["array.revers",{"_index":1306,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["arraytostr",{"_index":89,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostring(array",{"_index":113,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["artifact",{"_index":1548,"title":{},"body":{"index.html":{}}}],["ascend",{"_index":1199,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["assest",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["assign",{"_index":498,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["associ",{"_index":809,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["auth",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":593,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":575,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":354,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autocent",{"_index":453,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["autom",{"_index":1561,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1541,"title":{},"body":{"index.html":{}}}],["autozoom",{"_index":454,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["avail",{"_index":255,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":706,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["availablecomponents.addus",{"_index":746,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":734,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":732,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":744,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":727,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":737,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":728,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":735,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":730,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":738,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":742,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":740,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["avoid",{"_index":534,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["b",{"_index":1248,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["b[express",{"_index":1303,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["backdrop",{"_index":158,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend",{"_index":75,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":185,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["backendservic",{"_index":101,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["base",{"_index":1382,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["basi",{"_index":1587,"title":{},"body":{"license.html":{}}}],["befor",{"_index":135,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["between",{"_index":859,"title":{},"body":{"components/EditUserComponent.html":{},"index.html":{}}}],["bitwis",{"_index":1078,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["boolean",{"_index":481,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":182,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["box",{"_index":1164,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["brand",{"_index":1368,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["breadcrumb",{"_index":1379,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["break",{"_index":770,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1598,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdevicegroupmodalref",{"_index":76,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["bsdropdownmodul",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":78,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":100,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bspasswordmodalref",{"_index":841,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["build",{"_index":1547,"title":{},"body":{"index.html":{}}}],["button",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["buttonchangepassword",{"_index":1337,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1338,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":854,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["by.pip",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["by.pipe.t",{"_index":1245,"title":{},"body":{"pipes/SortByPipe.html":{},"coverage.html":{}}}],["by.pipe.ts:115",{"_index":1284,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:12",{"_index":1263,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:151",{"_index":1288,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:181",{"_index":1267,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:21",{"_index":1249,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:34",{"_index":1254,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:51",{"_index":1277,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:62",{"_index":1258,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:83",{"_index":1281,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:92",{"_index":1285,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["c",{"_index":1076,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":578,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":582,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabl",{"_index":1366,"title":{},"body":{"changelog.html":{}}}],["capit",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["card",{"_index":169,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["carousel",{"_index":1375,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["carouselmodul",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":768,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/SortByPipe.html":{}}}],["caseinsensitivesort",{"_index":1246,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["caseinsensitivesort(a",{"_index":1247,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["categori",{"_index":1137,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["categorynam",{"_index":1139,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["certain",{"_index":1325,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["chang",{"_index":119,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["changeal",{"_index":781,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["changeall(newvalu",{"_index":748,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["changelog",{"_index":1363,"title":{"changelog.html":{}},"body":{}}],["changelog.md",{"_index":1504,"title":{},"body":{"index.html":{}}}],["changepasswordcompon",{"_index":273,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changerol",{"_index":90,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":117,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changesonuserlist",{"_index":1333,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":25,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["chart",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["check",{"_index":133,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["check_box",{"_index":257,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["check_box_outline_blank",{"_index":256,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["checkbox",{"_index":79,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["checkformfield",{"_index":91,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkformfields(form",{"_index":122,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkuserrol",{"_index":846,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":851,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":42,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":1102,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clean",{"_index":1216,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1529,"title":{},"body":{"index.html":{}}}],["click",{"_index":166,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{}}}],["clone",{"_index":1532,"title":{},"body":{"index.html":{}}}],["close",{"_index":165,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["closemod",{"_index":800,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["cluster",{"_index":695,"title":{"interfaces/Cluster.html":{}},"body":{"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cluster'},{'nam",{"_index":276,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":819,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":818,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":817,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":830,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":835,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":833,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":834,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":832,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":825,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":831,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":827,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":829,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:82",{"_index":826,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster_appmodul",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_id",{"_index":697,"title":{},"body":{"interfaces/Cluster.html":{}}}],["cluster_type_nam",{"_index":698,"title":{},"body":{"interfaces/Cluster.html":{}}}],["clustercompon",{"_index":275,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdescript",{"_index":820,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterid",{"_index":821,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusternam",{"_index":822,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":823,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1543,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":455,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["command",{"_index":1528,"title":{},"body":{"index.html":{}}}],["commun",{"_index":960,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["compar",{"_index":973,"title":{},"body":{"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{}}}],["comparefn(a",{"_index":1300,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["comparefn(a[express",{"_index":1302,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["comparefn(sortbypipe.getvalue(a",{"_index":1304,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["complet",{"_index":932,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1577,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1559,"title":{},"body":{"index.html":{}}}],["compon",{"_index":55,"title":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.mock",{"_index":750,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["component_templ",{"_index":263,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":702,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":769,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":767,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":945,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":80,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["configur",{"_index":561,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["configuration'},{'nam",{"_index":287,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["configuration.compon",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration.component.html",{"_index":988,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.scss",{"_index":987,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.t",{"_index":986,"title":{},"body":{"components/GroupConfigurationComponent.html":{},"coverage.html":{}}}],["configuration.component.ts:15",{"_index":995,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:19",{"_index":993,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:24",{"_index":996,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:27",{"_index":989,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:30",{"_index":994,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:44",{"_index":992,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:50",{"_index":990,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration.component.ts:57",{"_index":991,"title":{},"body":{"components/GroupConfigurationComponent.html":{}}}],["configuration/group",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"components/GroupConfigurationComponent.html":{},"coverage.html":{}}}],["configuration_opt",{"_index":442,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["confirm",{"_index":130,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["confirm('delet",{"_index":1361,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":224,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["confirmnewpassword",{"_index":658,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["conflict",{"_index":933,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["console.log('bad",{"_index":916,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":931,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":909,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":926,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":959,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":935,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":942,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":912,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":963,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":928,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":906,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":771,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":956,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":922,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":966,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":45,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":1213,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":98,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":1090,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":579,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":19,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["content",{"_index":168,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"pipes/TruncatePipe.html":{}}}],["continu",{"_index":982,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["control",{"_index":793,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1579,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1571,"title":{},"body":{"license.html":{}}}],["core",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":1383,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":16,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"components/DeviceGroupCreatedComponent.html":{},"changelog.html":{}}}],["created'},{'nam",{"_index":280,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["created.compon",{"_index":194,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"modules/AppModule.html":{}}}],["created.component.html",{"_index":799,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.scss",{"_index":798,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.t",{"_index":797,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{},"coverage.html":{}}}],["created.component.ts:18",{"_index":804,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.ts:23",{"_index":806,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.ts:26",{"_index":801,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.ts:28",{"_index":805,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.ts:42",{"_index":803,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created.component.ts:48",{"_index":802,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["created/devic",{"_index":193,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"modules/AppModule.html":{},"components/DeviceGroupCreatedComponent.html":{},"coverage.html":{}}}],["createdevicegroup",{"_index":92,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["credenti",{"_index":924,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":853,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["curv",{"_index":456,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["custom",{"_index":1274,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["d3",{"_index":508,"title":{},"body":{"components/AppsInfoComponent.html":{},"dependencies.html":{}}}],["data",{"_index":111,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["debug",{"_index":278,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":277,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["defaultcompar",{"_index":1252,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["defaultcompare(a",{"_index":1253,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["defin",{"_index":13,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definit",{"_index":116,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["definitions/const/loc",{"_index":188,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":180,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":1344,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteconfirm",{"_index":1360,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":1339,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["depend",{"_index":343,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["descend",{"_index":1200,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["descript",{"_index":34,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["descriptor",{"_index":556,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["design",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":1539,"title":{},"body":{"index.html":{}}}],["develop",{"_index":327,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["devic",{"_index":61,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["device_hub",{"_index":1243,"title":{},"body":{"components/SidebarComponent.html":{}}}],["devicegroupcreatedcompon",{"_index":192,"title":{"components/DeviceGroupCreatedComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devices'},{'nam",{"_index":282,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["devices/devices.compon",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["devicescompon",{"_index":281,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialog",{"_index":504,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":261,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1546,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1535,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1140,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["discard",{"_index":136,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["discardchang",{"_index":93,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":131,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":1059,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":1095,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":773,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1549,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1586,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1242,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1384,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":528,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["draggingen",{"_index":457,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["due",{"_index":918,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":284,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["editclust",{"_index":712,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["editclustercompon",{"_index":283,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":285,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":21,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["element.tolowercas",{"_index":244,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ellipsi",{"_index":1326,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["email",{"_index":81,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["email/id",{"_index":1355,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":94,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"injectables/AuthService.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["enablezoom",{"_index":458,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["encount",{"_index":943,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["end",{"_index":1327,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["endpoint",{"_index":573,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["entrycompon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":564,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["environment_vari",{"_index":443,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["error",{"_index":143,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["error.error",{"_index":684,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error.error.messag",{"_index":218,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["error.error.message.charat(0).touppercas",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.message.slice(1",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statu",{"_index":216,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":373,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":82,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errorrespons",{"_index":1195,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["errorresponse.error.messag",{"_index":1196,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event",{"_index":779,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["eventemitt",{"_index":1097,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1332,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1334,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1576,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1556,"title":{},"body":{"index.html":{}}}],["exist",{"_index":220,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["expand_less",{"_index":1202,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["expand_mor",{"_index":1201,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["expiraci",{"_index":604,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":41,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1257,"title":{},"body":{"pipes/SortByPipe.html":{},"license.html":{}}}],["expression.length",{"_index":1299,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.replac",{"_index":1296,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.replace(/\\[(\\w+)\\]/g",{"_index":1295,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.split",{"_index":1297,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expressions.reverse().reduce((result",{"_index":1317,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["f",{"_index":864,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":200,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":159,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["fbaa8670",{"_index":811,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["featur",{"_index":1501,"title":{},"body":{"index.html":{}}}],["field",{"_index":1147,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["file",{"_index":4,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":968,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"changelog.html":{}}}],["filter(item",{"_index":969,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filterfield",{"_index":1117,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["filterpip",{"_index":351,"title":{"injectables/FilterPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["filterpipe.filter(item",{"_index":984,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["find",{"_index":930,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["first",{"_index":148,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"pipes/SortByPipe.html":{}}}],["flag",{"_index":1551,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1563,"title":{},"body":{"index.html":{}}}],["form",{"_index":109,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{}}}],["form.controls.confirmnewpassword.valu",{"_index":692,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.email.errors.email",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.controls.email.errors.pattern",{"_index":229,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["form.controls.email.errors.requir",{"_index":227,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.email.invalid",{"_index":226,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.newpassword.errors.minlength",{"_index":689,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.errors.requir",{"_index":687,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.invalid",{"_index":686,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.valu",{"_index":691,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.password.errors.minlength",{"_index":234,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.errors.requir",{"_index":232,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.invalid",{"_index":231,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.valu",{"_index":237,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["form.controls.passwordconfirm.valu",{"_index":238,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["form.dirti",{"_index":223,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.value.email",{"_index":207,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":206,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["form.value.newpassword",{"_index":681,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.value.password",{"_index":208,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["format",{"_index":146,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput",{"_index":95,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(error",{"_index":140,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(errormessages).msg",{"_index":258,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formbuild",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":123,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formgroupdirect",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":938,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":929,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1171,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["frontend",{"_index":1370,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfil",{"_index":910,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":623,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"pipes/SortByPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1566,"title":{},"body":{"index.html":{}}}],["gain",{"_index":964,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":951,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":953,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":1064,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":1136,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["getbaseurl",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcategorycssclass",{"_index":1125,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getcategorycssclass(categorynam",{"_index":1134,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getnotif",{"_index":1112,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getroleid",{"_index":847,"title":{},"body":{"components/EditUserComponent.html":{}}}],["getroleid(rol",{"_index":856,"title":{},"body":{"components/EditUserComponent.html":{}}}],["getvalu",{"_index":1255,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["getvalue(object",{"_index":1256,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["given",{"_index":914,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1568,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1594,"title":{},"body":{"license.html":{}}}],["graph",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphdata",{"_index":459,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["grapho",{"_index":480,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group",{"_index":68,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["group'},{'nam",{"_index":264,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["group.compon",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["group.component.html",{"_index":72,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.scss",{"_index":70,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.t",{"_index":63,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:109",{"_index":132,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:126",{"_index":118,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:134",{"_index":124,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:168",{"_index":141,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:17",{"_index":157,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:191",{"_index":114,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:203",{"_index":139,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:21",{"_index":152,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:210",{"_index":126,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:26",{"_index":172,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:27",{"_index":179,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:28",{"_index":178,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:29",{"_index":170,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:30",{"_index":176,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:31",{"_index":177,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:33",{"_index":171,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:39",{"_index":161,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:47",{"_index":104,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:50",{"_index":154,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:68",{"_index":151,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.component.ts:75",{"_index":106,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["group.nam",{"_index":572,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group/add",{"_index":62,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["group_work",{"_index":1241,"title":{},"body":{"components/SidebarComponent.html":{}}}],["groupconfigurationcompon",{"_index":286,"title":{"components/GroupConfigurationComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["grpah",{"_index":497,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["grup",{"_index":153,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["guard",{"_index":574,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":1068,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":949,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":897,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":899,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":902,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":896,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":901,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":898,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["header",{"_index":1138,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["height",{"_index":460,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["help",{"_index":1567,"title":{},"body":{"index.html":{}}}],["helper",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":807,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{}}}],["hold",{"_index":173,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":260,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1564,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1540,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1580,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":900,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1530,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":1067,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1526,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":175,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["id=\"alert",{"_index":1104,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identifi",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":1250,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["ignorebackdropclick",{"_index":160,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["implement",{"_index":43,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1591,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["indic",{"_index":1372,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["info'},{'nam",{"_index":272,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":452,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":451,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":450,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:106",{"_index":471,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:118",{"_index":1346,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:123",{"_index":478,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:150",{"_index":473,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:19",{"_index":484,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1347,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":493,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1353,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:29",{"_index":500,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1348,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:34",{"_index":492,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1349,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":491,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1354,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1350,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1351,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":503,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:45",{"_index":1352,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:49",{"_index":496,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:50",{"_index":1340,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:54",{"_index":502,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:55",{"_index":489,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":501,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:57",{"_index":487,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:58",{"_index":483,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:59",{"_index":482,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:60",{"_index":488,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:61",{"_index":486,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:62",{"_index":505,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:63",{"_index":506,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:64",{"_index":490,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:65",{"_index":470,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:68",{"_index":485,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1345,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1341,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1342,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info/app",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":512,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":248,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialstate.userid",{"_index":1234,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":590,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["input",{"_index":110,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":1099,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["insensit",{"_index":1272,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["instal",{"_index":1531,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":439,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"changelog.html":{},"index.html":{}}}],["instance.app_descriptor_id",{"_index":557,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.app_instance_id",{"_index":555,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.nam",{"_index":553,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rul",{"_index":543,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rules.foreach(rul",{"_index":544,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.services.foreach(servic",{"_index":539,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.status_nam",{"_index":554,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.t",{"_index":437,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["instanceid",{"_index":461,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instanceof",{"_index":1290,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["integr",{"_index":1560,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":434,"title":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":919,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["iscaseinsensit",{"_index":1266,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isdeeplink",{"_index":1301,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isowner(userrol",{"_index":894,"title":{},"body":{"components/EditUserComponent.html":{}}}],["isstr",{"_index":1261,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isstring(valu",{"_index":1262,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["item",{"_index":972,"title":{},"body":{"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{}}}],["item.nam",{"_index":794,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["item[properti",{"_index":980,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":983,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["items.filter(funct",{"_index":979,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["javascript",{"_index":1069,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["js",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":1179,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).rol",{"_index":1190,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1232,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":599,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwtdata",{"_index":601,"title":{},"body":{"guards/AuthGuard.html":{}}}],["json.stringify(jwttokendata",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(respons",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":594,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["jwtdata",{"_index":600,"title":{},"body":{"guards/AuthGuard.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["jwtdata.rol",{"_index":603,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwthelper",{"_index":577,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":592,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":598,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken.token",{"_index":605,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendata",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1558,"title":{},"body":{"index.html":{}}}],["key",{"_index":190,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["kind",{"_index":1590,"title":{},"body":{"license.html":{}}}],["label",{"_index":444,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["label[0",{"_index":559,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["label[1",{"_index":560,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["languag",{"_index":1593,"title":{},"body":{"license.html":{}}}],["last",{"_index":28,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["last_chunk_length",{"_index":27,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["lastpred",{"_index":1309,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["law",{"_index":1582,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1217,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":259,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":941,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["letter",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["librari",{"_index":1554,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1570,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1596,"title":{},"body":{"license.html":{}}}],["line",{"_index":940,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["line:compon",{"_index":714,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":939,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["line:no",{"_index":1077,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["link",{"_index":532,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linkedservic",{"_index":549,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linst",{"_index":1378,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":36,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"index.html":{}}}],["load",{"_index":494,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":462,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":724,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":199,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":511,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":745,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":733,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":1178,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":721,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":729,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.passwordmock",{"_index":677,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":736,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":731,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":739,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.url",{"_index":723,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":743,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":741,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":763,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":756,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":762,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":755,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":752,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":758,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":753,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":757,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":754,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":759,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.url",{"_index":780,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":761,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":760,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":187,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["location.reload",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["login'},{'nam",{"_index":289,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":288,"title":{"components/LoginComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequest",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["long",{"_index":1328,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["longer",{"_index":937,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":1047,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":292,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":1049,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":1048,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":290,"title":{"components/MainComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1322,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["manag",{"_index":1524,"title":{},"body":{"index.html":{}}}],["map",{"_index":476,"title":{},"body":{"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{}}}],["match",{"_index":54,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":1080,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["member",{"_index":1198,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["messag",{"_index":144,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":6,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":9,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["miscellan",{"_index":1498,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":198,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mockappchart",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["mockapppiechart",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["mockappsinstanceslist",{"_index":509,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["mockclusterchart",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["mockclusterdetail",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["mockclusterlist",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["mockjwttoken",{"_index":595,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["mocknodelist",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["mocknodeschart",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["mockorganizationinfo",{"_index":1356,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockregisteredappslist",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["mockresetpasword",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["mockresourcessummari",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["mockservicesgraph",{"_index":463,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["mockup",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":102,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":1357,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["modal",{"_index":128,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modalmodul",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalrefonhid",{"_index":1118,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["modalservic",{"_index":99,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mode",{"_index":1207,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":162,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":764,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":134,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":341,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":235,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["msg",{"_index":150,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.slice(0",{"_index":245,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["multiexpressiontransform",{"_index":1264,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multiexpressiontransform(valu",{"_index":1265,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multipl",{"_index":1269,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multitenant_support",{"_index":699,"title":{},"body":{"interfaces/Cluster.html":{}}}],["n",{"_index":1298,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["nalej",{"_index":291,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":7,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["navig",{"_index":1371,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["necessari",{"_index":923,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":479,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{}}}],["nest",{"_index":1260,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["network",{"_index":965,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":17,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["new_password",{"_index":680,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newpassword",{"_index":659,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newrol",{"_index":121,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["newvalu",{"_index":747,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["next",{"_index":587,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["next.routeconfig.path",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":1537,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":96,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":181,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngxchartsmodul",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxgraphmodul",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":531,"title":{},"body":{"components/AppsInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["node.label",{"_index":552,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["noth",{"_index":225,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["notif",{"_index":708,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notificationinst",{"_index":1109,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":294,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":1089,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":1088,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscompon",{"_index":293,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":718,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["notificationsservic",{"_index":103,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["npm",{"_index":1525,"title":{},"body":{"index.html":{}}}],["null",{"_index":197,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["num_total_char",{"_index":22,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["number",{"_index":24,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["object",{"_index":137,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"pipes/SortByPipe.html":{}}}],["object.entries(object",{"_index":551,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostr",{"_index":468,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostring(object",{"_index":472,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["observ",{"_index":588,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1578,"title":{},"body":{"license.html":{}}}],["older",{"_index":1503,"title":{},"body":{"index.html":{}}}],["oldvalu",{"_index":1311,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["on",{"_index":149,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":1057,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":1060,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":64,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":127,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["openchangepassword",{"_index":848,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["opendebugpanel",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":1126,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":1142,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":1127,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1144,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":326,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["option[0",{"_index":562,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["option[1",{"_index":563,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["optionchang",{"_index":782,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":765,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["order",{"_index":1259,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["organ",{"_index":174,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["organization'},{'nam",{"_index":296,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":1116,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":1115,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":445,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["organizationclick",{"_index":1204,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":295,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":83,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationnam",{"_index":1119,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["orient",{"_index":464,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["out",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":142,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":167,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["overal",{"_index":1365,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["overview",{"_index":1599,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":325,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["packag",{"_index":1469,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":936,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":705,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":279,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":715,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":716,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":704,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:106",{"_index":785,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":787,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:177",{"_index":788,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:185",{"_index":789,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":791,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":792,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:41",{"_index":784,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:44",{"_index":790,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":786,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["param",{"_index":44,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["pars",{"_index":474,"title":{},"body":{"components/AppsInfoComponent.html":{},"pipes/SortByPipe.html":{}}}],["parsedexpress",{"_index":1307,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parsedexpression.pop",{"_index":1310,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parsedexpression.push(lastpred",{"_index":1314,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parseexpress",{"_index":1275,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parseexpression(express",{"_index":1276,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["password",{"_index":84,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["password'},{'nam",{"_index":274,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password).pipe(map(respons",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.compon",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["password.component.html",{"_index":657,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.scss",{"_index":656,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.t",{"_index":655,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:128",{"_index":666,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:151",{"_index":663,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:19",{"_index":670,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:24",{"_index":676,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:25",{"_index":675,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:26",{"_index":673,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":672,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:28",{"_index":674,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:33",{"_index":662,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:36",{"_index":671,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:50",{"_index":667,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:58",{"_index":669,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:79",{"_index":665,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:96",{"_index":664,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password/chang",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["passwordchang",{"_index":678,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["passwordconfirm",{"_index":85,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["past",{"_index":1324,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["payment",{"_index":1208,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perform",{"_index":475,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["perman",{"_index":913,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1595,"title":{},"body":{"license.html":{}}}],["persist",{"_index":751,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1240,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pie",{"_index":1376,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pipe",{"_index":0,"title":{"pipes/AbbreviatePipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/abbreviate.pip",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter.pip",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/sort",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/truncate.pip",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":39,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["pixel",{"_index":1507,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1373,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["platform",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":725,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":164,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["preserv",{"_index":1270,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["prevent",{"_index":946,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prioriti",{"_index":1271,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["privat",{"_index":195,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":961,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1550,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1552,"title":{},"body":{"index.html":{}}}],["profil",{"_index":707,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["project",{"_index":1534,"title":{},"body":{"index.html":{}}}],["promis",{"_index":589,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":74,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":596,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":954,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":77,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":1565,"title":{},"body":{"index.html":{}}}],["queri",{"_index":876,"title":{},"body":{"components/EditUserComponent.html":{}}}],["r",{"_index":1079,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1569,"title":{},"body":{"index.html":{}}}],["real",{"_index":201,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":903,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["redirect",{"_index":885,"title":{},"body":{"components/EditUserComponent.html":{}}}],["refer",{"_index":138,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":772,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["relat",{"_index":571,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["reload",{"_index":1542,"title":{},"body":{"index.html":{}}}],["remov",{"_index":163,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["renam",{"_index":1098,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":499,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["repositori",{"_index":1533,"title":{},"body":{"index.html":{}}}],["request",{"_index":107,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requesterror",{"_index":1120,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["requir",{"_index":145,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"overview.html":{}}}],["resetfilt",{"_index":1128,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["resolut",{"_index":1506,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["resources'},{'nam",{"_index":298,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcescompon",{"_index":297,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["response.email",{"_index":1237,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.nam",{"_index":1181,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.rol",{"_index":879,"title":{},"body":{"components/EditUserComponent.html":{}}}],["response.role_nam",{"_index":1238,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1185,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":1194,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["revers",{"_index":1121,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["right",{"_index":927,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":120,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["role_nam",{"_index":209,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["roledirti",{"_index":842,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleid",{"_index":890,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.nam",{"_index":892,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.role_id",{"_index":893,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["roleslist",{"_index":843,"title":{},"body":{"components/EditUserComponent.html":{}}}],["root",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":268,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["router",{"_index":580,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":585,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rule",{"_index":446,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{}}}],["rule.auth_servic",{"_index":545,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.auth_services.foreach(linkedservic",{"_index":546,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.nam",{"_index":569,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.rule_id",{"_index":570,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.source_service_id",{"_index":547,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["run",{"_index":1536,"title":{},"body":{"index.html":{}}}],["running_nod",{"_index":700,"title":{},"body":{"interfaces/Cluster.html":{}}}],["rxj",{"_index":591,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":29,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["save",{"_index":328,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["saveclusterchang",{"_index":824,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(form",{"_index":828,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["savenewpassword",{"_index":661,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["savenewpassword(form",{"_index":668,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["saveuserchang",{"_index":849,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(f",{"_index":862,"title":{},"body":{"components/EditUserComponent.html":{}}}],["scaffold",{"_index":1544,"title":{},"body":{"index.html":{}}}],["screen",{"_index":774,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["search",{"_index":858,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["searchterm",{"_index":1122,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["second",{"_index":1251,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["see",{"_index":1502,"title":{},"body":{"index.html":{},"license.html":{}}}],["select",{"_index":240,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["serv",{"_index":1538,"title":{},"body":{"index.html":{}}}],["server",{"_index":904,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":447,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["service.nam",{"_index":541,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.service_id",{"_index":540,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.status_nam",{"_index":568,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["services/auth.servic",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":183,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":184,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":186,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":602,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"pipes/SortByPipe.html":{}}}],["setord",{"_index":1129,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["setorder(categorynam",{"_index":1148,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["setvalu",{"_index":1279,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["setvalue(object",{"_index":1280,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["shape",{"_index":507,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shape.curvebundl",{"_index":519,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shorten",{"_index":1323,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["show",{"_index":147,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showlegend",{"_index":465,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["sidebar",{"_index":709,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":300,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1211,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1210,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcompon",{"_index":299,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slice",{"_index":15,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["softwar",{"_index":1585,"title":{},"body":{"license.html":{}}}],["sort",{"_index":1166,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"changelog.html":{}}}],["sortarray",{"_index":1282,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortarray(valu",{"_index":1283,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbi",{"_index":1150,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["sortbypip",{"_index":352,"title":{"pipes/SortByPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SortByPipe.html":{},"coverage.html":{},"overview.html":{}}}],["sortbypipe.defaultcompare(a",{"_index":1294,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.getvalue(b",{"_index":1305,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.getvalue(valu",{"_index":1312,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.isstring(a",{"_index":1291,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.isstring(b",{"_index":1292,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.parseexpression(express",{"_index":1308,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.setvalue(valu",{"_index":1315,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortedbi",{"_index":1123,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":795,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":775,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1592,"title":{},"body":{"license.html":{}}}],["split",{"_index":1278,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["src/.../environment.prod.t",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.t",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":60,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":449,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["src/app/applications/applications.component.t",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["src/app/chang",{"_index":654,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["src/app/debug",{"_index":703,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/const/us",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/appl",{"_index":436,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/cluster.t",{"_index":696,"title":{},"body":{"interfaces/Cluster.html":{},"coverage.html":{}}}],["src/app/devic",{"_index":796,"title":{},"body":{"components/DeviceGroupCreatedComponent.html":{},"coverage.html":{}}}],["src/app/devices/devices.component.t",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["src/app/edit",{"_index":816,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/group",{"_index":985,"title":{},"body":{"components/GroupConfigurationComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":576,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:12",{"_index":581,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:16",{"_index":586,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:107",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:131",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:154",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":1046,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":1051,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":1050,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":1087,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":1092,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":1096,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":1091,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":1093,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":1094,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":1114,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:122",{"_index":1145,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:139",{"_index":1143,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:167",{"_index":1133,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:180",{"_index":1151,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:200",{"_index":1149,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:212",{"_index":1146,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:222",{"_index":1135,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:24",{"_index":1153,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1158,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1160,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":1167,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:32",{"_index":1168,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:37",{"_index":1155,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:42",{"_index":1156,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:43",{"_index":1157,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:48",{"_index":1161,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:53",{"_index":1165,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:54",{"_index":1162,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:59",{"_index":1163,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:64",{"_index":1132,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:97",{"_index":1141,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pipes/abbreviate.pipe.t",{"_index":5,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/abbreviate.pipe.ts:13",{"_index":14,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["src/app/pipes/filter.pipe.t",{"_index":967,"title":{},"body":{"injectables/FilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts:13",{"_index":971,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/app/pipes/filter.pipe.ts:34",{"_index":975,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/app/pipes/sort",{"_index":1244,"title":{},"body":{"pipes/SortByPipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.t",{"_index":1319,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.ts:12",{"_index":1321,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/resources/resources.component.t",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["src/app/services/error",{"_index":895,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":1052,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":1107,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":1108,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":1113,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":1110,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":1111,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1331,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1209,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:109",{"_index":1222,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:121",{"_index":1215,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":1223,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1225,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1227,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:31",{"_index":1224,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1228,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:37",{"_index":1226,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:42",{"_index":1214,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:64",{"_index":1218,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":1219,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":1220,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1336,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.t",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1205,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":584,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":252,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["statu",{"_index":495,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["status_nam",{"_index":448,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{}}}],["storag",{"_index":189,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["store",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["styleurl",{"_index":69,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1335,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(inst",{"_index":537,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["subscribe(respons",{"_index":211,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(responserol",{"_index":884,"title":{},"body":{"components/EditUserComponent.html":{}}}],["subscript",{"_index":1159,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["subscriptiontyp",{"_index":1124,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subset",{"_index":20,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["succeed",{"_index":907,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":214,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{}}}],["summari",{"_index":1374,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["suport",{"_index":1505,"title":{},"body":{"index.html":{}}}],["support",{"_index":948,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1597,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":766,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":920,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":558,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{}}}],["target",{"_index":548,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tb",{"_index":517,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["templat",{"_index":57,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":71,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["temporalrol",{"_index":844,"title":{},"body":{"components/EditUserComponent.html":{}}}],["term",{"_index":970,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["term'",{"_index":976,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["term.tolowercas",{"_index":978,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["test",{"_index":777,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1154,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":1054,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":1061,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":1056,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":1063,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.adduser(form",{"_index":241,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["this.alert",{"_index":1100,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":1239,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.autocent",{"_index":521,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.autozoom",{"_index":520,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend",{"_index":202,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":210,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["this.backend.changerole(this.organizationid",{"_index":882,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1362,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getappinstance(this.organizationid",{"_index":535,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1180,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1184,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1236,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.listroles(this.organizationid",{"_index":877,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.login(email",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":682,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":840,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":880,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsdevicegroupmodalref",{"_index":250,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["this.bsdevicegroupmodalref.content.closebtnnam",{"_index":253,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["this.bsmodalref.hid",{"_index":215,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref",{"_index":887,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref.content.closebtnnam",{"_index":889,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttonchangepassword",{"_index":1359,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1358,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.checkbox",{"_index":247,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/GroupConfigurationComponent.html":{}}}],["this.clusterdescript",{"_index":837,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":839,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":836,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":838,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.colorschem",{"_index":527,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.components.foreach(compon",{"_index":749,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.components.push",{"_index":726,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.curv",{"_index":518,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.draggingen",{"_index":523,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":1231,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.enablezoom",{"_index":522,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.errormessag",{"_index":203,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.length",{"_index":204,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessages.push('a",{"_index":688,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('email",{"_index":228,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('password",{"_index":233,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('set",{"_index":693,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('th",{"_index":690,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('us",{"_index":239,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{}}}],["this.errormessages.push(error.error.messag",{"_index":685,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages[0",{"_index":242,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.filterfield",{"_index":1177,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.formbuilder.group",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getroleid(this.temporalrol",{"_index":883,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.graphdata",{"_index":530,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.links.push(link",{"_index":550,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.nodes.push(nod",{"_index":542,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.inst",{"_index":533,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.instanceid",{"_index":536,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":597,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken.token",{"_index":606,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loadeddata",{"_index":513,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalrefonhid",{"_index":1189,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1193,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(changepasswordcompon",{"_index":888,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(devicegroupcreatedcompon",{"_index":251,"title":{},"body":{"components/AddDevicesGroupComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1191,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1188,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1229,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":720,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":212,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":683,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":1101,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":776,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":249,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1169,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.orient",{"_index":516,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.requesterror",{"_index":1173,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.revers",{"_index":1175,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1230,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":873,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist",{"_index":878,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist.foreach(roleobject",{"_index":891,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":886,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":607,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.url",{"_index":1192,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.savenewpassword(form",{"_index":694,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.searchterm",{"_index":1176,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.showlegend",{"_index":515,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.sortedbi",{"_index":1174,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.subscriptiontyp",{"_index":1170,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.temporalrol",{"_index":875,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.titl",{"_index":514,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.tographdata(inst",{"_index":538,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.transform(oldvalu",{"_index":1316,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["this.transform(result",{"_index":1318,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1233,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1235,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1183,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1182,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.url",{"_index":722,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.us",{"_index":1172,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":679,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":881,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":196,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.userroletoedit",{"_index":874,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.view",{"_index":524,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["time",{"_index":254,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":1377,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["timeout",{"_index":221,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["tocompar",{"_index":977,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["tographdata",{"_index":469,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tographdata(inst",{"_index":477,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["token",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tooltipmodul",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":1103,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"index.html":{}}}],["total",{"_index":23,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["total_nod",{"_index":701,"title":{},"body":{"interfaces/Cluster.html":{}}}],["transform",{"_index":10,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transform(item",{"_index":974,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["transform(valu",{"_index":11,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformobject",{"_index":1286,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["transformobject(valu",{"_index":1287,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":156,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["truncat",{"_index":1320,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepip",{"_index":353,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslint:dis",{"_index":713,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["two",{"_index":1553,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":1289,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["types/jwt",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1369,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unavail",{"_index":957,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["undefin",{"_index":981,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["under",{"_index":1573,"title":{},"body":{"license.html":{}}}],["understand",{"_index":917,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":944,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1555,"title":{},"body":{"index.html":{}}}],["up",{"_index":717,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":1152,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":355,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileus",{"_index":1212,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1221,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":1131,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":1130,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1343,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":719,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["urlchang",{"_index":783,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["urlchange($ev",{"_index":778,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["us",{"_index":1545,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":108,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["user'},{'nam",{"_index":266,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":306,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":305,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":304,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:100",{"_index":312,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:106",{"_index":852,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:117",{"_index":310,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:125",{"_index":311,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:126",{"_index":863,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:159",{"_index":313,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:180",{"_index":861,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:182",{"_index":309,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:19",{"_index":315,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:195",{"_index":857,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:20",{"_index":865,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:24",{"_index":320,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":324,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:26",{"_index":323,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":318,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:28",{"_index":321,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:29",{"_index":322,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":868,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":319,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:32",{"_index":872,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":871,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":870,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:35",{"_index":867,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:36",{"_index":869,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":317,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:40",{"_index":307,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:42",{"_index":316,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":850,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:51",{"_index":866,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:59",{"_index":314,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:66",{"_index":308,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:67",{"_index":860,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:90",{"_index":855,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.email",{"_index":213,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":1186,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":1187,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":303,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["useredit",{"_index":711,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userid",{"_index":660,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userinfo",{"_index":710,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userinfocompon",{"_index":301,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":86,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":87,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["userroletoedit",{"_index":845,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["users.length",{"_index":1197,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":510,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":1065,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":1070,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":1082,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":1086,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v0.1.0",{"_index":1367,"title":{},"body":{"changelog.html":{}}}],["v0.2.0",{"_index":1364,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":1066,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":125,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":35,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{}}}],["value.length",{"_index":52,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["value.slice(0",{"_index":49,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.slice(value.length",{"_index":51,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.substring(0",{"_index":1330,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":262,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":565,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["variable[0",{"_index":566,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["variable[1",{"_index":567,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["version",{"_index":1562,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1557,"title":{},"body":{"index.html":{}}}],["view",{"_index":466,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["void",{"_index":112,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/GroupConfigurationComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1589,"title":{},"body":{"license.html":{}}}],["width",{"_index":467,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["window",{"_index":129,"title":{},"body":{"components/AddDevicesGroupComponent.html":{},"components/DeviceGroupCreatedComponent.html":{},"components/EditUserComponent.html":{},"components/GroupConfigurationComponent.html":{},"components/UserInfoComponent.html":{}}}],["without",{"_index":1588,"title":{},"body":{"license.html":{}}}],["word",{"_index":26,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["write",{"_index":1584,"title":{},"body":{"license.html":{}}}],["x",{"_index":1083,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":1062,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":1072,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":1071,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":1075,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ye",{"_index":1273,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["yxxx",{"_index":1074,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/AbbreviatePipe.html":{"url":"pipes/AbbreviatePipe.html","title":"pipe - AbbreviatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AbbreviatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/abbreviate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        abbreviate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/abbreviate.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n                            Slice creates a new Array or String containing a subset (slice) of the elements.\nNUM_TOTAL_CHARS is the total number of characters of a word\nLAST_CHUNK_LENGTH is the last characters of the same word\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'abbreviate'\n})\nexport class AbbreviatePipe implements PipeTransform {\n/**\n  * Slice creates a new Array or String containing a subset (slice) of the elements.\n  * NUM_TOTAL_CHARS is the total number of characters of a word\n  * LAST_CHUNK_LENGTH is the last characters of the same word\n  * @param value is a list or a string to be sliced.\n*/\n  transform(value: string): string {\n    const NUM_TOTAL_CHARS = 8;\n    const LAST_CHUNK_LENGTH = NUM_TOTAL_CHARS - 2;\n    let abbstring;\n\n    abbstring = value.slice(0, 1) + '...' + value.slice(value.length - LAST_CHUNK_LENGTH, value.length);\n\n    if (value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddDevicesGroupComponent.html":{"url":"components/AddDevicesGroupComponent.html","title":"component - AddDevicesGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddDevicesGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-devices-group/add-devices-group.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-devices-group\n            \n\n            \n                styleUrls\n                add-devices-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-devices-group.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                bsDeviceGroupModalRef\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                checkBox\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                arrayToString\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                createDeviceGroup\n                            \n                            \n                                discardChanges\n                            \n                            \n                                enabled\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-devices-group/add-devices-group.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:191\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDeviceGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateDeviceGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Create device group opens the device group created component modal window confirmation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nenabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:203\n                            \n                        \n\n\n                \n                    \n                            Checkbox\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDeviceGroupModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsDeviceGroupModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:47\n                            \n                        \n\n                \n                    \n                        Device grup modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkBox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkBox:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:39\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-devices-group/add-devices-group.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { FormGroup } from '@angular/forms';\nimport { DeviceGroupCreatedComponent } from '../device-group-created/device-group-created.component';\n\n@Component({\n  selector: 'app-add-devices-group',\n  templateUrl: './add-devices-group.component.html',\n  styleUrls: ['./add-devices-group.component.scss']\n})\nexport class AddDevicesGroupComponent implements OnInit {\n  checkBox = true;\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  errorMessages: string[];\n\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n\n  /**\n   * Device grup modal window reference\n   */\n  bsDeviceGroupModalRef: BsModalRef;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.errorMessages = [];\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    if (this.errorMessages.length === 0) {\n      const user = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        role_name: this.userRole\n      };\n      this.backend.addUser(this.organizationId, user)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + user.email + ' has been created successfully'\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          if (error.status === 409) {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message + ' already exists',\n              timeout: 10000\n            });\n          } else {\n              this.notificationsService.add({\n                message: 'ERROR: ' + error.error.message,\n                timeout: 10000\n              });\n            }\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.pattern) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.password.value !== form.controls.passwordConfirm.value) {\n      this.errorMessages.push('Password and confirm password are not the same one');\n    }\n    if (!this.userRole) {\n      this.errorMessages.push('User role selection is required');\n    }\n\n    if (this.errorMessages.length === 0) {\n      this.addUser(form);\n    }\n  }\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n  /**\n   * Checkbox\n   */\n  enabled() {\n    this.checkBox = !this.checkBox;\n  }\n\n  /**\n   * Create device group opens the device group created component modal window confirmation\n   */\n  createDeviceGroup() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n    this.bsDeviceGroupModalRef =\n      this.modalService.show(DeviceGroupCreatedComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsDeviceGroupModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add new devices group\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n        \n      \n    \n    \n      Options\n      \n        Group device availability\n        \n          \n            check_box_outline_blank\n          \n          \n            check_box\n          \n        \n        \n        Devices enabled by default\n        \n          \n            check_box_outline_blank\n          \n          \n            check_box\n          \n           \n      \n    \n    \n    \n       0\">\n        {{formatValidationOutput(errorMessages).msg}}\n      \n    \n    \n    \n       -->\n        \n        Create\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add new devices group              ×                                                                    Options              Group device availability                              check_box_outline_blank                                check_box                                  Devices enabled by default                              check_box_outline_blank                                check_box                                              0\">        {{formatValidationOutput(errorMessages).msg}}                         -->                Create                    Discard                '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddDevicesGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                arrayToString\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:182\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:159\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  errorMessages: string[];\n\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.errorMessages = [];\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    if (this.errorMessages.length === 0) {\n      const user = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        role_name: this.userRole\n      };\n      this.backend.addUser(this.organizationId, user)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + user.email + ' has been created successfully'\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          if (error.status === 409) {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message + ' already exists',\n              timeout: 10000\n            });\n          } else {\n              this.notificationsService.add({\n                message: 'ERROR: ' + error.error.message,\n                timeout: 10000\n              });\n            }\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.pattern) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.password.value !== form.controls.passwordConfirm.value) {\n      this.errorMessages.push('Password and confirm password are not the same one');\n    }\n    if (!this.userRole) {\n      this.errorMessages.push('User role selection is required');\n    }\n\n    if (this.errorMessages.length === 0) {\n      this.addUser(form);\n    }\n  }\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n\n    \n    \n         0\">\n        {{formatValidationOutput(errorMessages).msg}}\n      \n    \n    \n\n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                   0\">        {{formatValidationOutput(errorMessages).msg}}                                    Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddDevicesGroupComponent\n\nAddDevicesGroupComponent\n\nAppModule -->\n\nAddDevicesGroupComponent->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nDeviceGroupCreatedComponent\n\nDeviceGroupCreatedComponent\n\nAppModule -->\n\nDeviceGroupCreatedComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nGroupConfigurationComponent\n\nGroupConfigurationComponent\n\nAppModule -->\n\nGroupConfigurationComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nAppModule -->\n\nSortByPipe->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbbreviatePipe\n                            \n                            \n                                AddDevicesGroupComponent\n                            \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                DeviceGroupCreatedComponent\n                            \n                            \n                                DevicesComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                FilterPipe\n                            \n                            \n                                GroupConfigurationComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SortByPipe\n                            \n                            \n                                TruncatePipe\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddDevicesGroupComponent\n                            \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                DeviceGroupCreatedComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                GroupConfigurationComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AbbreviatePipe } from './pipes/abbreviate.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { DevicesComponent } from './devices/devices.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { SortByPipe } from './pipes/sort-by.pipe';\nimport { AddDevicesGroupComponent } from './add-devices-group/add-devices-group.component';\nimport { GroupConfigurationComponent } from './group-configuration/group-configuration.component';\nimport { DeviceGroupCreatedComponent } from './device-group-created/device-group-created.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n    ChangePasswordComponent,\n    AbbreviatePipe,\n    TruncatePipe,\n    DevicesComponent,\n    FilterPipe,\n    SortByPipe,\n    AddDevicesGroupComponent,\n    GroupConfigurationComponent,\n    DeviceGroupCreatedComponent\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ChangePasswordComponent,\n    AddDevicesGroupComponent,\n    GroupConfigurationComponent,\n    DeviceGroupCreatedComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    NgxGraphModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationInstance.html":{"url":"interfaces/ApplicationInstance.html","title":"interface - ApplicationInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/application-instance.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Application instance Data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app_descriptor_id\n                                \n                                \n                                        app_instance_id\n                                \n                                \n                                        configuration_options\n                                \n                                \n                                        description\n                                \n                                \n                                        environment_variables\n                                \n                                \n                                        groups\n                                \n                                \n                                        labels\n                                \n                                \n                                        name\n                                \n                                \n                                        organization_id\n                                \n                                \n                                        rules\n                                \n                                \n                                        services\n                                \n                                \n                                        status_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_descriptor_id\n                                    \n                                \n                                \n                                    \n                                        app_descriptor_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app_instance_id\n                                    \n                                \n                                \n                                    \n                                        app_instance_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configuration_options\n                                    \n                                \n                                \n                                    \n                                        configuration_options:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_variables\n                                    \n                                \n                                \n                                    \n                                        environment_variables:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization_id\n                                    \n                                \n                                \n                                    \n                                        organization_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                    \n                                \n                                \n                                    \n                                        services:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApplicationInstance {\n  organization_id: string;\n  app_descriptor_id: string;\n  app_instance_id: string;\n  name: string;\n  description: string;\n  configuration_options: any;\n  environment_variables: any;\n  labels: any;\n  rules: any[];\n  groups: any[];\n  services: any[];\n  status_name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCenter\n                            \n                            \n                                autoZoom\n                            \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                colorScheme\n                            \n                            \n                                curve\n                            \n                            \n                                draggingEnabled\n                            \n                            \n                                enableZoom\n                            \n                            \n                                graphData\n                            \n                            \n                                height\n                            \n                            \n                                instance\n                            \n                            \n                                instanceId\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockServicesGraph\n                            \n                            \n                                organizationId\n                            \n                            \n                                orientation\n                            \n                            \n                                showlegend\n                            \n                            \n                                title\n                            \n                            \n                                view\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                objectToString\n                            \n                            \n                                toGraphData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectToString(object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Transforms objects to arrays to be parsed to string and performed in the view\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key-value map that contains the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraphData\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraphData(instance: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Transforms the data needed to create the grapho\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                instance object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoCenter:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curve:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            draggingEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        draggingEnabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available apps instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instanceId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instanceId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockServicesGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockServicesGraph:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:49\n                            \n                        \n\n                \n                    \n                        NGX-Grpahs object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orientation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showlegend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showlegend:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:54\n                            \n                        \n\n                \n                    \n                        Graph options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:44\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport * as shape from 'd3-shape';\nimport { mockAppsInstancesList } from '../utils/mocks';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold organization ID\n   */\n  instanceId: string;\n\n  /**\n   * List of available apps instances\n   */\n  instance: any;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * NGX-Grpahs object-assign required object references (for rendering)\n   */\n  mockServicesGraph: any;\n\n  /**\n   * Graph options\n   */\n  showlegend: boolean;\n  graphData: any;\n  orientation: string;\n  curve: any;\n  autoZoom: boolean;\n  autoCenter: boolean;\n  enableZoom: boolean;\n  colorScheme: any;\n  view: any[];\n  width: number;\n  height: number;\n  draggingEnabled: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.title = 'App info';\n\n    // Graph initialization\n    this.showlegend = false;\n    this.orientation = 'TB';\n    this.curve = shape.curveBundle;\n    this.autoZoom = true;\n    this.autoCenter = true;\n    this.enableZoom = false;\n    this.draggingEnabled = false;\n    this.view = [350, 250];\n    this.colorScheme = {\n      domain: ['#6C86F7']\n    };\n\n    this.graphData = {\n      nodes: [],\n      links: []\n    };\n    this.instance = mockAppsInstancesList\n    ; // Initialization to avoid null in view\n\n  }\n\n  ngOnInit() {\n     if (this.organizationId !== null) {\n      this.backend.getAppInstance(this.organizationId,  this.instanceId)\n      .subscribe(instance => {\n          this.instance = instance;\n          this.toGraphData(instance);\n          if (!this.loadedData) {\n            this.loadedData = true;\n          }\n      });\n    }\n  }\n\n/**\n * Transforms the data needed to create the grapho\n * @param instance instance object\n */\n  toGraphData(instance) {\n    instance.services.forEach(service => {\n      const node = {\n        id: service.service_id,\n        label: service.name\n      };\n      this.graphData.nodes.push(node);\n    });\n    if (instance.rules) {\n      instance.rules.forEach(rule => {\n        if (rule.auth_services) {\n          rule.auth_services.forEach(linkedService => {\n            const link = {\n              source: rule.source_service_id,\n              target: linkedService\n            };\n            this.graphData.links.push(link);\n          });\n        }\n      });\n    }\n  }\n\n/**\n * Transforms objects to arrays to be parsed to string and performed in the view\n * @param object Key-value map that contains the object\n */\n  objectToString(object: any) {\n    if (!object) {\n      return ['--'];\n    }\n    return Object.entries(object);\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n        \n          {{title}}\n        \n        \n        \n          \n            \n            Services\n            \n              \n              \n                \n                  \n                    \n                    \n                      {{node.label}}\n                  \n                  \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n            \n            \n            \n              \n                Name\n                {{instance.name}}\n              \n              \n              \n                Status\n                \n                  {{instance.status_name}}\n                \n              \n              \n              \n                Instance id\n                {{instance.app_instance_id}}\n              \n              \n              \n                Descriptor id\n                {{instance.app_descriptor_id}}\n              \n              \n              \n                Tags\n              \n              \n                {{label[0]}}\n                {{label[1]}}\n              \n              \n              \n                Configuration options\n              \n              \n                {{option[0]}}\n                {{option[1]}}\n              \n              \n              \n                Environment variables\n              \n              \n                \n                  {{variable[0]}}\n                \n                \n                  {{variable[1]}}\n                \n              \n              \n              \n                Services\n              \n              \n                \n                  Name\n                  {{service.name}}\n                \n                \n                  Id\n                  {{service.service_id}}\n                \n                \n                  Status\n                   \n                    {{service.status_name}}\n                  \n                \n                \n              \n              \n                Rules\n              \n              \n                \n                  Name\n                  {{rule.name}}\n                \n                \n                  Id\n                  {{rule.rule_id}}\n                \n                \n                  Relations\n                  \n                  {{relation}}\n                \n                \n              \n              \n                Groups\n              \n              \n                -\n                -\n              \n              \n                \n                  Name\n                  {{group.name}}\n                \n                \n                  Services\n                  \n                  {{service}}\n                  \n                \n                \n              \n                Endpoints\n              \n              \n                 0\">\n                  \n                    \n                      {{endpoint}}\n                    \n                    \n                       \n                \n              \n              \n               \n           \n                     \n          \n            \n              \n                \n              \n            \n          \n          \n          \n            \n              Close\n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{title}}                                                          Services                                                                                                                                        {{node.label}}                                                                                                                                                                                                                                                Name                {{instance.name}}                                                          Status                                  {{instance.status_name}}                                                                          Instance id                {{instance.app_instance_id}}                                                          Descriptor id                {{instance.app_descriptor_id}}                                                          Tags                                            {{label[0]}}                {{label[1]}}                                                          Configuration options                                            {{option[0]}}                {{option[1]}}                                                          Environment variables                                                              {{variable[0]}}                                                  {{variable[1]}}                                                                          Services                                                              Name                  {{service.name}}                                                  Id                  {{service.service_id}}                                                  Status                                       {{service.status_name}}                                                                                              Rules                                                              Name                  {{rule.name}}                                                  Id                  {{rule.rule_id}}                                                  Relations                                    {{relation}}                                                                            Groups                                            -                -                                                              Name                  {{group.name}}                                                  Services                                    {{service}}                                                                                Endpoints                                             0\">                                                            {{endpoint}}                                                                                                                                                                                                                                                                                                Close                                            '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { mockJwtToken } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    const jwtData = JSON.parse(localStorage.getItem(LocalStorageKeys.jwtData)) || null;\n    let role;\n    // Set role\n    if (jwtData) {\n      role = jwtData.role;\n    }\n    // Check jwtToken expiracy\n    if (jwtToken === null\n      || (jwtToken.token !== mockJwtToken\n          && this.jwtHelper.isTokenExpired(jwtToken.token)\n          )\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    // Check user role access\n    if (\n      role &&\n      role === 'Developer' && !(\n      next.routeConfig.path === 'applications' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n    // Check user role access\n    if (\n      role === 'Operator' && !(\n      next.routeConfig.path === 'resources' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/change-password/change-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                change-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                confirmNewPassword\n                            \n                            \n                                errorMessages\n                            \n                            \n                                newPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveNewPassword(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Request to save changes in the user password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form containing the user input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmNewPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user id, and passwords\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { FormGroup } from '@angular/forms';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user id, and passwords\n   */\n  userId: string;\n  password: string;\n  newPassword: string;\n  confirmNewPassword: string;\n  organizationId: string;\n\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.passwordMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n\n  /**\n   * Request to save changes in the user password\n   * @param form Form containing the user input\n   */\n  saveNewPassword(form: FormGroup) {\n    const passwordChange = {\n      email: this.userId,\n      password: form.value.password,\n      new_password: form.value.newPassword\n    };\n    this.backend.resetPassword(this.organizationId, passwordChange)\n      .subscribe(response => {\n        this.notificationsService.add({message: 'Password changed successfully'});\n        this.bsModalRef.hide();\n      }, error => {\n        if (error && error.error && error.error.message) {\n          this.errorMessages.push(error.error.message);\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.invalid) {\n      if (form.controls.newPassword.errors.required) {\n        this.errorMessages.push('A new password is required');\n      }\n      if (form.controls.newPassword.errors.minlength) {\n        this.errorMessages.push('The new password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.value !== form.controls.confirmNewPassword.value) {\n      this.errorMessages.push('Set passwords do not match');\n    }\n    if (this.errorMessages.length === 0) {\n      this.saveNewPassword(form);\n    }\n  }\n\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n    \n      Change password\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n        \n        \n           0\">\n            {{formatValidationOutput(errorMessages).msg}}\n          \n        \n        \n        \n            \n            Save\n          \n          \n            Discard\n          \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Change password              ×                                                                                                       0\">            {{formatValidationOutput(errorMessages).msg}}                                                          Save                                Discard                      '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cluster.html":{"url":"interfaces/Cluster.html","title":"interface - Cluster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cluster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type_name\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant_support\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status_name\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type_name\n                                    \n                                \n                                \n                                    \n                                        cluster_type_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant_support\n                                    \n                                \n                                \n                                    \n                                        multitenant_support:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cluster {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: number;\n  running_nodes?: number;\n  description?: string;\n  status_name?: string;\n  cluster_type_name?: string;\n  labels?: string;\n  multitenant_support?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                            \n                                urlChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAll(newValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Modifies all components mocks values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlChange($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n      Backend URL\n      \n    \n    Backend control\n    \n      \n          All real\n          \n          All mock\n          \n      \n      \n      \n        \n        \n          {{item.name}}\n        \n        \n          \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n    \n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                      Backend URL              Backend control                    All real                    All mock                                                      {{item.name}}                                                Real                                Mock                                    Notifications    Spam test notification                    Close      '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceGroupCreatedComponent.html":{"url":"components/DeviceGroupCreatedComponent.html","title":"component - DeviceGroupCreatedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DeviceGroupCreatedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/device-group-created/device-group-created.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-device-group-created\n            \n\n            \n                styleUrls\n                device-group-created.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./device-group-created.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/device-group-created/device-group-created.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/device-group-created/device-group-created.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Close the modal window\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/device-group-created/device-group-created.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/device-group-created/device-group-created.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/device-group-created/device-group-created.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/device-group-created/device-group-created.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-device-group-created',\n  templateUrl: './device-group-created.component.html',\n  styleUrls: ['./device-group-created.component.scss']\n})\nexport class DeviceGroupCreatedComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Close the modal window\n   */\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Device group successfully created\n    \n    \n    \n       \n        \n          Here it is the API Key associated to the new devices group:\n        \n        \n          7bd7d59cfe90e4d32b1d2f20d39c86df-fbaa8670-1008-ac7a-398a-3c11ac797c77\n        \n      \n      \n      \n        \n          Close\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Device group successfully created                                     Here it is the API Key associated to the new devices group:                          7bd7d59cfe90e4d32b1d2f20d39c86df-fbaa8670-1008-ac7a-398a-3c11ac797c77                                            Close                    '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceGroupCreatedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        name: this.clusterName,\n        description: this.clusterDescription,\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          this.notificationsService.add({\n            message: error.error.message,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n\n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                        Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                rolesList\n                            \n                            \n                                temporalRole\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                            \n                                userRoleToEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                getRoleId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, bsModalRef: BsModalRef, backendService: BackendService, router: Router, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoleId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRoleId(role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Search between roles list to get the required id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Role name\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rolesList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporalRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temporalRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRoleToEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRoleToEdit:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userRoleToEdit: string;\n  userName: string;\n  userId: string;\n  email: string;\n  rolesList: any[];\n  temporalRole: string;\n\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private router: Router,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n// edit\n    if (this.userRoleToEdit) {\n        // this.userRole should be initialized by initial state\n      this.temporalRole = this.userRoleToEdit;\n    } else {\n          // profile\n      this.temporalRole = this.userRole;\n    }\n\n    if (this.userRole && this.userRole === 'Owner') {\n      // Query role list\n      this.backend.listRoles(this.organizationId)\n        .subscribe(response => {\n          this.rolesList = response.roles;\n        });\n      }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.temporalRole) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.temporalRole = newRole;\n  }\n\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n      .subscribe(response => {\n        if (this.userRole && this.userRole === 'Owner') {\n          this.backend.changeRole(this.organizationId, this.userId, this.getRoleId(this.temporalRole)).\n          subscribe(responseRole => {\n            this.notificationsService.add({\n              message: 'The user ' + this.userName + ' has been edited',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n            if (!this.userRoleToEdit && this.temporalRole === 'Owner') {\n              // no redirection for the owner\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Developer') {\n              this.router.navigate([\n                '/applications'\n              ]);\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Operator') {\n              this.router.navigate([\n                '/resources'\n              ]);\n            }\n          }, error => {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message,\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          });\n        } else {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }\n      }, error => {\n        this.notificationsService.add({\n          message: 'ERROR: ' + error.error.message,\n          timeout: 10000\n        });\n        this.bsModalRef.hide();\n      });\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n\n  /**\n   * Search between roles list to get the required id\n   * @param role Role name\n   */\n  getRoleId(role: string): string {\n    let roleId = '';\n    this.rolesList.forEach(roleObject => {\n      if (roleObject.name === role) {\n        roleId = roleObject.role_id;\n        return roleId;\n      }\n    });\n    return roleId;\n  }\n\n /**\n  * Checks it the role is Owner\n  * @param userRole user Role\n  */\n//  isOwner(userRole: string): boolean {\n//    if (userRole === 'Owner') {\n//     return true;\n//    }\n//    return false;\n//  }\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n    \n    \n      Change password\n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                           Change password            Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterPipe.html":{"url":"injectables/FilterPipe.html","title":"injectable - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pipes/filter.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/filter.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/filter.pipe.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter(function (item: any) {\n      for (const property in item) {\n        if (item[property] === null || item[property] === undefined) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) { return items; }\n\n    return FilterPipe.filter(items, term);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupConfigurationComponent.html":{"url":"components/GroupConfigurationComponent.html","title":"component - GroupConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group-configuration/group-configuration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-configuration\n            \n\n            \n                styleUrls\n                group-configuration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-configuration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                checkBox\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                enabled\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group-configuration/group-configuration.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Close the modal window\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nenabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Checkbox\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkBox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkBox:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group-configuration/group-configuration.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-group-configuration',\n  templateUrl: './group-configuration.component.html',\n  styleUrls: ['./group-configuration.component.scss']\n})\nexport class GroupConfigurationComponent implements OnInit {\n  checkBox = true;\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Close the modal window\n   */\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n  /**\n   * Checkbox\n   */\n  enabled() {\n    this.checkBox = !this.checkBox;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      GROUP 1 configuration\n      \n        &times;\n      \n    \n    \n    \n      \n      \n        \n          Group device availability\n          \n            \n              check_box_outline_blank\n            \n            \n              check_box\n            \n          \n          \n          Devices enabled by default\n          \n            \n              check_box_outline_blank\n            \n            \n              check_box\n            \n             \n        \n      \n      \n      \n        \n          Save\n        \n        \n          Discard\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                GROUP 1 configuration              ×                                                Group device availability                                    check_box_outline_blank                                      check_box                                          Devices enabled by default                                    check_box_outline_blank                                      check_box                                                                     Save                          Discard                    '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessages = [];\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessages = [];\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        if (error.error && error.error.message) {\n          this.errorMessages.push(\n            error.error.message.charAt(0).toUpperCase() +\n            error.error.message.slice(1)); // Capitalize first letter of error msg\n        }\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.email) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n  }\n\n  /**\n  * Outputs the error messages in the required format, showing the first one\n  * @param errors String containing the errors\n  */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        NALEJ\n        \n\n            \n                    Log in\n                \n                \n\n                \n\n                \n                \n                     0\">\n                        {{formatValidationOutput(errorMessages).msg}}\n                    \n                \n\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NALEJ                                        Log in                                                                                                     0\">                        {{formatValidationOutput(errorMessages).msg}}                                                                                        Log in                                                                                                                                                                                                               '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n            ?\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              ?                              '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                filterField\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                modalRefOnHide\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                requestError\n                            \n                            \n                                reverse\n                            \n                            \n                                searchTerm\n                            \n                            \n                                sortedBy\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                getCategoryCSSClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setOrder\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, router: Router, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategoryCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategoryCSSClass(categoryName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Gets the category headers to add a class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                class for the header category\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"default\" | \"enabled\" | \"disabled\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetFilters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:212\n                            \n                        \n\n\n                \n                    \n                            Reset all the filters fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetOrder(categoryName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:200\n                            \n                        \n\n\n                \n                    \n                            Sortby pipe in the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterField:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:64\n                            \n                        \n\n                \n                    \n                        Variable to store the value of the filter search text and sortBy pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:37\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRefOnHide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRefOnHide:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:48\n                            \n                        \n\n                \n                    \n                        Hold request error message or undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reverse:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTerm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:59\n                            \n                        \n\n                \n                    \n                        Model that hold the search term in search box\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:53\n                            \n                        \n\n                \n                    \n                        Models that hold the sort info needed to sortBy pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n  modalRefOnHide: any;\n\n  /**\n   * Hold request error message or undefined\n   */\n  requestError: string;\n\n  /**\n   * Models that hold the sort info needed to sortBy pipe\n   */\n  sortedBy: string;\n  reverse: boolean;\n\n  /**\n   * Model that hold the search term in search box\n   */\n  searchTerm: string;\n\n  /**\n   * Variable to store the value of the filter search text and sortBy pipe\n   */\n  filterField: boolean;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private router: Router,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n    this.requestError = '';\n\n    // SortBy\n    this.sortedBy = '';\n    this.reverse = false;\n    this.searchTerm = '';\n\n    // Filter field\n    this.filterField = false;\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalRefOnHide = this.modalService.onHide.subscribe((reason: string) => {this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    let role = 'Owner';\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      role = JSON.parse(jwtData).role;\n    }\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: role,\n      userRoleToEdit: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n        if (this.router.url === '/organization') {\n        this.updateUserList();\n      }\n    });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    }, errorResponse => {\n        this.loadedData = true;\n        this.requestError = errorResponse.error.message;\n      });\n  }\n  /**\n   * Sortby pipe in the component\n   */\n  setOrder(categoryName: string) {\n    if (this.sortedBy === categoryName) {\n      this.reverse = !this.reverse;\n      this.filterField = false;\n    }\n    this.sortedBy = categoryName;\n    this.filterField = true;\n  }\n\n  /**\n   * Reset all the filters fields\n   */\n  resetFilters() {\n    this.filterField = false;\n    this.searchTerm = '';\n    this.sortedBy = '';\n  }\n\n  /**\n   * Gets the category headers to add a class\n   * @param categoryName class for the header category\n   */\n    getCategoryCSSClass(categoryName: string) {\n      if (this.sortedBy === '') {\n        return 'default';\n      } else {\n        if (this.sortedBy === categoryName) {\n          return 'enabled';\n        } else if (this.sortedBy !== categoryName) {\n          return 'disabled';\n        }\n      }\n    }\n  }\n\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n        \n            \n            \n              Filtered by term \"{{ searchTerm }}\".\n              Reset\n            \n            \n              Sorted by {{ sortedBy }},\n              ascendant. \n              descendant. \n              Reset\n            \n            \n              Sorted by {{ sortedBy }}\n              ascendant \n              descendant \n              and filtered by term \"{{ searchTerm }}\".\n              Reset\n             \n          \n          \n          \n            \n              \n                 \n                  \n                    search\n                       \n                  \n                    close\n                  \n              \n            \n                \n      \n       0 && !requestError\">\n        \n          \n            \n              \n                Name \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Role \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Email\n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Actions \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n               -->\n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n      \n      \n      \n        There are not registered users in this organizationClick on \"add user\" button to start adding new users \n      \n      \n      \n        {{requestError}}\n      \n      \n      \n        \n          \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                                                          Filtered by term \"{{ searchTerm }}\".              Reset                                      Sorted by {{ sortedBy }},              ascendant.               descendant.               Reset                                      Sorted by {{ sortedBy }}              ascendant               descendant               and filtered by term \"{{ searchTerm }}\".              Reset                                                                                                                            search                                                             close                                                                         0 && !requestError\">                                                            Name                                   expand_more                                                  expand_less                                                            Role                                   expand_more                                                  expand_less                                                            Email                                  expand_more                                                  expand_less                                                            Actions                                   expand_more                                                  expand_less                                                                                        {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                             -->                                                      edit                                                                                                        There are not registered users in this organizationClick on \"add user\" button to start adding new users                           {{requestError}}                                                                                      Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, router: Router, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private router: Router,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile',\n      organizationId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      if (this.router.url === '/organization') {\n        this.updateService.changesOnUserList.next();\n      }\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      NALEJ\n    \n    \n      \n        \n          \n            person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        device_hub\n        Devices\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            NALEJ                                            person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            device_hub        Devices        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByPipe.html":{"url":"pipes/SortByPipe.html","title":"pipe - SortByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/sort-by.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortBy\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            caseInsensitiveSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        caseInsensitiveSort(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Sorts values ignoring the case\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                first param to ignore the case\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                second param to ignore the case\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            defaultCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defaultCompare(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:34\n                            \n                        \n\n\n                \n                    \n                            Default compare method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                first param to compare\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                second param to compare\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     0 | 1 | -1\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValue(object: any, expression: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:62\n                            \n                        \n\n\n                \n                    \n                            Get value by expression\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                get ordered nested object elements\n\n                                                        \n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                expression to get value by\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isString(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Check if a value is a string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                value to be checked as a string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            multiExpressionTransform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        multiExpressionTransform(value: any, expressions: any[], reverse: boolean, isCaseInsensitive: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:181\n                            \n                        \n\n\n                \n                    \n                            Apply multiple expressions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                value to be checked\n\n                                                        \n                                                \n                                                \n                                                        expressions\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                expression to be transformed\n\n                                                        \n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                sort by multiple fields and preserve priority (reversed)\n\n                                                        \n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                order case-insensitively strings\n\n                                                        \n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                order with and change to order with custom comparator function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            parseExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:51\n                            \n                        \n\n\n                \n                    \n                            Parse expression, split into items\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                expression to be parsed\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(object: any, value: any, expression: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:83\n                            \n                        \n\n\n                \n                    \n                            Setted value by expression\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                set ordered nested object elements\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                value to be setted\n\n                                                        \n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                expression to set value by\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortArray(value: any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:115\n                            \n                        \n\n\n                \n                    \n                            Sort array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                sort by multiple fields and preserve priority (reversed)\n\n                                                        \n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                order case-insensitively strings\n\n                                                        \n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                order with and change to order with custom comparator function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any | any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transformObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transformObject(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:151\n                            \n                        \n\n\n                \n                    \n                            Transform Object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any | any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                reverse sort by multiple fields and preserve priority (reversed)\n\n                                                        \n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                order case-insensitively strings\n\n                                                        \n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                order with and change to order with custom comparator function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  /**\n   * Check if a value is a string\n   *  @param value value to be checked as a string\n   */\n  static isString(value: any) {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  /**\n   * Sorts values ignoring the case\n   * @param a first param to ignore the case\n   * @param b second param to ignore the case\n   */\n  static caseInsensitiveSort(a: any, b: any) {\n    if (SortByPipe.isString(a) && SortByPipe.isString(b)) {\n      return a.localeCompare(b);\n    }\n    return SortByPipe.defaultCompare(a, b);\n  }\n\n  /**\n   * Default compare method\n   * @param a first param to compare\n   * @param b second param to compare\n   */\n\n   static defaultCompare(a: any, b: any) {\n    if (a === b) {\n      return 0;\n    }\n    if (a == null) {\n      return 1;\n    }\n    if (b == null) {\n      return -1;\n    }\n    return a > b ? 1 : -1;\n  }\n\n  /**\n   * Parse expression, split into items\n   * @param expression expression to be parsed\n   */\n   static parseExpression(expression: string): string[] {\n    expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n    expression = expression.replace(/^\\./, '');\n    return expression.split('.');\n  }\n\n  /**\n   * Get value by expression\n   * @param object get ordered nested object elements\n   * @param expression expression to get value by\n   */\n  static getValue(object: any, expression: string[]) {\n    for (let i = 0, n = expression.length; i  {\n      if (!expression) {\n        return compareFn(a, b);\n      }\n      if (!isDeepLink) {\n        if (a && b) {\n          return compareFn(a[expression], b[expression]);\n        }\n        return compareFn(a, b);\n      }\n      return compareFn(SortByPipe.getValue(a, expression), SortByPipe.getValue(b, expression));\n    });\n    if (reverse) {\n      return array.reverse();\n    }\n    return array;\n  }\n\n  /**\n   * Transform Object\n   * @param expressions expression to be transformed\n   * @param reverse reverse sort by multiple fields and preserve priority (reversed)\n   * @param isCaseInsensitive order case-insensitively strings\n   * @param comparator order with and change to order with custom comparator function\n   */\n  private transformObject(\n    value: any | any[],\n    expression?: any,\n    reverse?: boolean,\n    isCaseInsensitive?: boolean,\n    comparator?: Function\n  ): any {\n    const parsedExpression = SortByPipe.parseExpression(expression);\n    let lastPredicate = parsedExpression.pop();\n    let oldValue = SortByPipe.getValue(value, parsedExpression);\n    if (!Array.isArray(oldValue)) {\n      parsedExpression.push(lastPredicate);\n      lastPredicate = null;\n      oldValue = SortByPipe.getValue(value, parsedExpression);\n    }\n    if (!oldValue) {\n      return value;\n    }\n    SortByPipe.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n    return value;\n  }\n\n  /**\n   * Apply multiple expressions\n   * @param value value to be checked\n   * @param expressions expression to be transformed\n   * @param reverse sort by multiple fields and preserve priority (reversed)\n   * @param isCaseInsensitive order case-insensitively strings\n   * @param comparator order with and change to order with custom comparator function\n   */\n  private multiExpressionTransform\n  (value: any,\n    expressions: any[],\n    reverse: boolean,\n    isCaseInsensitive: boolean = false,\n    comparator?: Function): any {\n    return expressions.reverse().reduce((result: any, expression: any) => {\n      return this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n    }, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/truncate.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\nNUM_TOTAL_CHARS how long we would like the text to be\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\n   * NUM_TOTAL_CHARS how long we would like the text to be\n   * @param value is a list or a string to be sliced.\n   */\n    transform(value: string): string {\n    const NUM_TOTAL_CHARS = 13;\n    if (value && value.length > NUM_TOTAL_CHARS) {\n      return value.substring(0, NUM_TOTAL_CHARS) + '...';\n    } else {\n      return value;\n    }\n   }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                buttonChangePassword\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonChangePassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:31\n                            \n                        \n\n                \n                    \n                        Text for the change password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:26\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the change password action button\n   */\n  buttonChangePassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonChangePassword = 'Change Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    const deleteConfirm = confirm('Delete user?');\n    if (deleteConfirm) {\n      if (this.organizationId !== null && this.userId !== null) {\n        this.backend.deleteUser(this.organizationId, this.userId)\n          .subscribe(response => {\n            this.notificationsService.add({\n              message: 'User ' + this.userId + ' has been deleted',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          }, error => {\n            this.notificationsService.add({\n              message: error.error.message,\n              timeout: 10000\n            });\n          });\n      }\n    } else {\n      // Do nothing\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonChangePassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonChangePassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddDevicesGroupComponent', 'selector': 'app-add-devices-group'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'DeviceGroupCreatedComponent', 'selector': 'app-device-group-created'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'GroupConfigurationComponent', 'selector': 'app-group-configuration'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nv0.2.0\nOverall:\n\nAdded sorting and filtering capabilities \n\nv0.1.0\nCreated the brand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-devices-group/add-devices-group.component.ts\n            \n            \n                component\n            \n            \n                AddDevicesGroupComponent\n            \n            \n                52 %\n                (12/23)\n            \n        \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                47 %\n                (9/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                58 %\n                (30/51)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                src/app/change-password/change-password.component.ts\n            \n            \n                component\n            \n            \n                ChangePasswordComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                68 %\n                (24/35)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/application-instance.ts\n            \n            \n                interface\n            \n            \n                ApplicationInstance\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster.ts\n            \n            \n                interface\n            \n            \n                Cluster\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/device-group-created/device-group-created.component.ts\n            \n            \n                component\n            \n            \n                DeviceGroupCreatedComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/devices/devices.component.ts\n            \n            \n                component\n            \n            \n                DevicesComponent\n            \n            \n                60 %\n                (34/56)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (11/22)\n            \n        \n        \n            \n                \n                src/app/group-configuration/group-configuration.component.ts\n            \n            \n                component\n            \n            \n                GroupConfigurationComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/pipes/abbreviate.pipe.ts\n            \n            \n                pipe\n            \n            \n                AbbreviatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            \n                injectable\n            \n            \n                FilterPipe\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/sort-by.pipe.ts\n            \n            \n                pipe\n            \n            \n                SortByPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/truncate.pipe.ts\n            \n            \n                pipe\n            \n            \n                TruncatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                62 %\n                (30/48)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                88 %\n                (22/25)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsInstancesList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockRegisteredAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-graph : ^5.1.1\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nOverall features\nBrand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\nTo see older logs check CHANGELOG.md file\nTested and suported resolutions in pixels:\n\n1280 x 720\n1280 x 800\n1366 x 768\n1440 x 900 \n1613 x 917\n1613 x 1027\n1680 x 1027\n1920 x 1080\n1920 x 1200\n2560 x 1440\n2560 x 1800\n\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Using --prod flag will produce a dependency injection error (generated conflict between two libraries: ngx-bootstrap and ngx-graph).\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddDevicesGroupComponent\n\nAddDevicesGroupComponent\n\nAppModule -->\n\nAddDevicesGroupComponent->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nDeviceGroupCreatedComponent\n\nDeviceGroupCreatedComponent\n\nAppModule -->\n\nDeviceGroupCreatedComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nGroupConfigurationComponent\n\nGroupConfigurationComponent\n\nAppModule -->\n\nGroupConfigurationComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nAppModule -->\n\nSortByPipe->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
