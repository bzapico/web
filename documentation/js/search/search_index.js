var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.081,1,0.654]],["body/components/AddUserComponent.html",[0,0.127,1,0.957,2,0.296,3,0.2,4,0.694,5,0.694,6,0.694,7,0.142,8,5.093,9,3.933,10,1.742,11,0.728,12,1.123,13,0.694,14,1.623,15,1.159,16,1.091,17,0.97,18,0.944,19,2.962,20,0.944,21,2.962,22,0.17,23,0.604,24,1.425,25,1.7,26,1.988,27,3.893,28,2.171,29,1.728,30,2.184,31,4.663,32,2.703,33,2.451,34,0.604,35,1.701,36,2.962,37,2.576,38,3.548,39,1.241,40,0.492,41,1.391,42,1.6,43,1.6,44,1.317,45,0.84,46,2.004,47,0.932,48,0.033,49,0.631,50,0.631,51,0.69,52,3.548,53,2.4,54,1.21,55,1.386,56,1.59,57,3.876,58,2.576,59,2.286,60,0.87,61,0.957,62,2.962,63,2.4,64,2.385,65,2.908,66,3.523,67,2.576,68,2.4,69,1.44,70,2.576,71,2.576,72,3.781,73,1.728,74,1.728,75,3.548,76,2.4,77,2.576,78,0.967,79,2.4,80,2.004,81,2.4,82,0.587,83,0.889,84,2.576,85,1.439,86,2.576,87,1.14,88,2.004,89,2.046,90,2.576,91,2.962,92,1.557,93,2.287,94,2.576,95,2.962,96,2.576,97,2.287,98,1.05,99,2.004,100,2.4,101,1.21,102,0.944,103,1.026,104,2.004,105,2.004,106,2.4,107,2.4,108,0.592,109,0.264,110,0.819,111,0.639,112,0.889,113,0.889,114,0.967,115,0.889,116,0.819,117,0.587,118,0.694,119,0.587,120,0.694,121,0.2,122,0.297,123,0.79,124,3.893,125,1.564,126,0.866,127,1.221,128,1.742,129,0.694,130,0.967,131,0.819,132,1.314,133,1.728,134,2.4,135,2.4,136,3.548,137,1.742,138,2.4,139,0.967,140,2.4,141,1.742,142,2.004,143,2.4,144,2.721,145,1.742,146,1.742,147,1.742,148,2.4,149,2.4,150,1.262,151,2.057,152,2.057,153,1.865,154,2.287,155,0.587,156,1.026,157,1.026,158,0.944,159,1.348,160,0.694,161,1.026,162,0.493,163,0.694,164,0.493,165,0.694,166,0.493,167,1.026,168,0.449,169,0.587,170,0.694,171,0.493,172,0.796,173,0.493,174,0.493,175,0.694,176,0.493,177,0.867,178,0.694,179,0.493,180,0.694,181,0.493,182,0.694,183,0.538,184,0.694,185,0.493,186,0.694,187,0.493,188,0.694,189,0.018,190,0.018]],["title/components/AppComponent.html",[0,0.081,162,0.654]],["body/components/AppComponent.html",[0,0.15,1,0.777,2,0.406,3,0.316,4,1.095,5,1.095,6,1.095,7,0.223,11,0.998,12,1.43,13,1.095,14,1.723,15,1.282,16,0.709,17,0.583,18,1.294,20,1.294,22,0.269,23,0.828,25,2.165,26,1.934,34,0.828,39,1.509,40,0.674,44,1.559,45,0.813,47,0.709,48,0.033,49,0.59,50,0.623,51,0.525,60,0.583,61,0.998,82,0.926,83,1.403,98,0.828,108,0.623,109,0.534,111,1.007,116,1.291,121,0.316,122,0.469,123,0.709,155,0.926,156,1.406,157,1.406,158,1.294,159,1.64,160,1.095,161,1.406,162,1.164,163,1.095,164,0.777,165,1.095,166,0.777,167,1.406,168,0.709,169,0.926,170,1.095,171,0.777,172,1.091,173,0.777,174,0.777,175,1.095,176,0.777,177,1.386,178,1.095,179,0.777,180,1.095,181,0.777,182,1.095,183,0.849,184,1.095,185,0.777,186,1.095,187,0.777,188,1.095,189,0.024,190,0.024,191,3.16,192,2.557,193,4.864,194,4.864,195,3.287,196,3.287,197,3.16,198,3.656,199,4.864,200,3.135,201,3.786,202,3.786,203,3.786,204,2.194]],["title/modules/AppModule.html",[205,1.846,206,2.053]],["body/modules/AppModule.html",[1,1.207,2,0.252,3,0.252,7,0.178,9,1.95,16,0.566,17,0.466,42,1.628,48,0.033,108,0.72,109,0.332,111,1.498,112,2.016,113,1.121,121,0.432,122,0.375,155,0.739,162,1.264,164,1.155,166,1.155,168,1.101,169,0.739,171,1.207,172,0.939,173,1.207,174,1.264,176,1.155,179,1.155,181,1.155,183,1.262,185,1.155,187,1.207,189,0.021,190,0.021,204,1.753,205,2.427,206,4.251,207,1.95,208,4.009,209,4.326,210,2.525,211,2.525,212,2.525,213,2.525,214,2.525,215,2.698,216,2.698,217,3.495,218,2.196,219,1.753,220,3.025,221,4.187,222,4.187,223,3.495,224,2.196,225,4.187,226,3.025,227,4.187,228,2.525,229,1.753,230,4.187,231,3.495,232,2.699,233,3.025,234,3.025,235,3.095,236,3.025,237,3.025,238,1.45,239,2.196,240,3.025,241,3.025,242,3.025,243,3.025,244,3.025,245,3.025,246,3.025,247,3.025,248,3.025,249,3.025,250,4.187,251,4.187,252,2.196,253,3.025,254,2.196,255,4.187,256,2.525,257,3.025,258,3.025,259,4.187,260,2.196,261,4.187,262,1.59,263,1.95,264,2.525,265,3.025,266,2.196,267,3.025,268,3.025,269,3.039,270,1.753,271,3.025,272,3.025,273,2.196,274,2.196,275,3.025,276,3.025,277,3.025,278,3.025,279,3.025,280,3.025,281,3.025]],["title/components/ApplicationsComponent.html",[0,0.081,164,0.654]],["body/components/ApplicationsComponent.html",[0,0.125,1,0.472,2,0.381,3,0.192,4,0.665,5,0.665,6,0.665,7,0.136,11,0.705,12,1.095,13,0.665,14,1.622,15,1.265,16,0.431,17,0.529,18,0.914,20,0.914,22,0.163,23,0.585,24,1.411,29,1.692,34,0.585,39,1.215,40,0.476,42,1.537,43,1.58,44,1.299,45,0.869,47,0.431,48,0.033,49,0.634,50,0.649,51,0.677,54,0.784,56,1.172,59,2.25,60,0.354,61,0.472,69,0.784,73,1.9,74,1.692,78,1.658,82,1.471,83,2.295,85,1.615,87,1.411,89,1.508,97,1.482,98,0.832,101,1.172,102,0.914,103,1.32,108,0.584,109,0.253,110,0.784,111,0.914,113,0.852,114,0.926,115,0.852,116,0.784,117,0.562,118,0.665,119,0.562,120,0.665,121,0.192,122,0.285,123,0.771,125,1.692,126,0.845,127,1.32,129,1.19,130,0.926,131,0.784,132,1.273,139,0.926,155,0.562,156,0.994,157,0.994,158,0.914,159,1.32,160,0.665,161,0.994,162,0.472,163,0.665,164,0.937,165,0.665,166,0.472,167,0.994,168,0.431,169,0.562,170,0.665,171,0.472,172,0.771,173,0.472,174,0.472,175,0.665,176,0.472,177,0.84,178,0.665,179,0.472,180,0.665,181,0.472,182,0.665,183,0.516,184,0.665,185,0.472,186,0.665,187,0.472,188,0.665,189,0.017,190,0.017,229,3.081,282,1.92,283,2.695,284,3.437,285,3.437,286,3.811,287,3.811,288,3.811,289,3.811,290,3.811,291,3.314,292,3.722,293,3.722,294,4.566,295,4.566,296,4.566,297,4.566,298,4.566,299,4.566,300,4.566,301,4.566,302,4.566,303,4.566,304,1.669,305,3.437,306,2.3,307,2.3,308,1.839,309,2.189,310,2.3,311,2.869,312,2.869,313,2.869,314,2.3,315,2.943,316,2.869,317,1.992,318,2.869,319,2.3,320,2.3,321,2.3,322,2.495,323,2.3,324,1.385,325,2.004,326,2.3,327,2.869,328,2.869,329,2.3,330,2.3,331,2.215,332,3.437,333,2.3,334,3.437,335,2.458,336,2.3,337,3.437,338,2.3,339,2.3,340,2.3,341,2.3,342,2.3,343,1.992,344,2.3,345,2.3,346,2.3,347,1.482,348,0.612,349,0.562,350,1.009,351,1.669,352,1.209,353,1.669,354,3.437,355,1.92,356,1.333,357,1.992,358,1.482,359,1.806,360,1.482,361,1.669,362,2.987,363,2.3,364,1.482,365,1.92,366,2.3,367,3.437,368,4.566,369,3.437,370,1.992,371,2.869,372,2.495,373,2.495,374,2.215,375,2.869,376,1.647,377,2.869,378,3.437,379,3.437,380,3.437,381,3.437,382,3.437,383,3.437,384,3.437]],["title/guards/AuthGuard.html",[385,2.312,386,2.659]],["body/guards/AuthGuard.html",[2,0.349,3,0.349,7,0.247,11,0.86,22,0.297,23,0.713,34,0.882,40,0.719,45,0.719,47,0.971,48,0.033,49,0.569,50,0.569,51,0.719,55,1.114,60,0.867,78,2.088,85,1.211,87,1.024,108,0.664,109,0.46,117,1.024,118,1.211,119,1.024,120,1.211,121,0.349,122,0.519,123,0.784,125,1.921,126,0.86,189,0.026,190,0.026,192,2.202,262,2.202,349,1.267,385,3.041,386,4.327,387,4.189,388,3.763,389,6.046,390,4.189,391,4.472,392,4.189,393,4.189,394,5.883,395,4.7,396,5.883,397,4.189,398,3.629,399,5.184,400,1.379,401,2.202,402,4.087,403,2.7,404,3.005,405,2.428,406,3.497,407,4.327,408,3.497,409,3.497,410,4.189,411,2.428,412,3.497,413,2.428,414,4.189,415,4.189,416,3.497]],["title/injectables/AuthService.html",[215,1.527,400,0.847]],["body/injectables/AuthService.html",[2,0.27,3,0.27,7,0.191,17,0.905,22,0.23,23,0.747,24,1.512,28,2.246,30,2.523,34,0.747,40,0.609,42,1.729,43,1.543,45,0.797,47,0.822,48,0.033,49,0.482,50,0.586,51,0.609,54,1.82,55,0.863,56,1.497,60,0.921,61,0.665,69,1.698,74,1.977,77,3.187,78,1.769,85,0.937,87,0.793,90,2.353,98,1.043,101,1.497,108,0.666,109,0.356,110,1.106,115,1.627,117,0.793,118,0.937,119,1.073,120,0.937,121,0.27,122,0.402,123,0.932,125,1.844,126,1.022,127,1.27,129,0.937,130,1.306,131,1.106,132,1.627,133,1.627,139,1.306,189,0.022,190,0.022,215,2.105,219,1.879,262,1.704,364,2.83,376,2.558,388,3.873,391,4.267,398,3.209,400,1.325,401,1.704,402,4.048,403,2.09,404,3.332,406,2.706,407,3.665,408,2.706,409,2.706,412,2.706,416,2.706,417,2.706,418,3.665,419,4.454,420,5.749,421,5.336,422,2.447,423,3.705,424,3.242,425,4.391,426,4.979,427,3.242,428,5.336,429,2.105,430,4.391,431,3.614,432,2.353,433,3.242,434,2.308,435,3.242,436,3.242,437,2.706,438,2.706,439,2.353,440,3.242,441,3.242,442,4.391,443,2.706,444,2.706,445,2.706,446,3.242,447,3.242,448,3.242,449,3.242,450,3.242,451,3.242,452,3.242,453,3.242,454,2.09,455,2.706,456,3.242,457,3.242,458,3.242]],["title/interfaces/Backend.html",[24,0.779,459,1]],["body/interfaces/Backend.html",[2,0.279,3,0.279,7,0.197,17,0.779,22,0.237,24,1.095,28,1.346,29,2.333,30,2.218,34,0.763,35,2.148,45,0.882,47,1.186,48,0.033,49,0.695,50,0.695,51,0.878,60,0.98,64,2.78,98,1.139,102,0.889,108,0.367,121,0.279,189,0.022,190,0.022,283,1.756,398,3.259,401,1.756,422,2.218,423,3.482,432,3.252,459,1.407,460,2.789,461,3.252,462,3.74,463,3.74,464,3.74,465,3.74,466,3.74,467,3.74,468,3.74,469,3.74,470,3.252,471,3.252,472,3.252,473,3.74,474,3.341,475,3.74,476,2.923,477,3.341,478,3.74,479,3.341,480,3.74,481,3.931,482,3.341,483,3.74,484,3.341,485,3.74,486,3.341,487,3.74,488,3.341,489,3.74,490,3.341,491,3.74,492,3.341,493,3.74,494,3.341,495,3.341,496,3.341,497,3.74,498,3.341,499,3.74,500,3.341,501,3.74,502,3.341,503,1.346]],["title/components/ClusterComponent.html",[0,0.081,166,0.654]],["body/components/ClusterComponent.html",[0,0.13,1,0.414,2,0.385,3,0.168,4,0.584,5,0.584,6,0.584,7,0.119,11,0.639,12,1.011,13,0.584,14,1.576,15,1.105,16,0.378,17,0.658,18,0.829,20,0.829,22,0.143,23,0.53,24,1.368,26,1.457,29,1.583,34,0.53,39,1.137,40,0.432,42,1.469,43,1.517,44,1.242,45,0.847,47,0.583,48,0.033,49,0.604,50,0.664,51,0.592,54,1.457,56,0.689,59,2.14,60,0.711,61,0.639,69,0.689,73,2.037,74,1.807,78,1.531,82,1.128,83,2.037,85,0.584,87,1.192,89,2.14,97,1.302,98,0.865,101,1.663,102,0.829,103,1.557,108,0.604,109,0.222,110,0.689,111,1.228,112,0.748,113,0.748,114,0.814,115,0.748,116,0.689,117,0.494,118,0.584,119,0.494,120,0.584,121,0.168,122,0.25,123,0.8,125,1.583,126,0.639,127,1.235,129,1.469,130,0.814,131,0.689,132,1.154,133,1.154,155,0.494,156,0.901,157,0.901,158,0.829,159,1.235,160,0.584,161,0.901,162,0.414,163,0.584,164,0.414,165,0.584,166,0.877,167,0.901,168,0.378,169,0.494,170,0.584,171,0.414,172,0.698,173,0.414,174,0.414,175,0.584,176,0.414,177,0.761,178,0.584,179,0.414,180,0.584,181,0.414,182,0.584,183,0.453,184,0.584,185,0.414,186,0.584,187,0.414,188,0.584,189,0.015,190,0.015,195,2.476,229,3.244,235,2.45,262,1.062,286,3.566,287,3.566,288,3.566,289,3.566,290,3.566,291,3.101,304,1.466,308,2.047,309,2.337,311,2.6,312,2.6,313,2.6,315,3.607,316,2.6,317,1.805,318,2.6,322,3.54,324,1.255,325,2.14,327,2.6,328,4.071,331,3.848,335,2.048,347,1.302,352,1.062,353,2.759,355,1.686,356,1.171,357,1.805,358,1.302,359,1.637,360,1.302,361,1.466,362,2.759,370,1.805,373,2.261,374,2.754,376,1.493,411,1.805,481,2.754,503,1.255,504,1.686,505,2.978,506,2.6,507,2.6,508,4.272,509,4.272,510,3.54,511,3.54,512,3.958,513,4.272,514,3.114,515,4.272,516,4.272,517,3.114,518,3.114,519,4.671,520,2.02,521,3.114,522,3.114,523,3.114,524,3.114,525,2.02,526,2.02,527,2.975,528,1.637,529,2.261,530,2.02,531,2.02,532,2.754,533,2.02,534,2.02,535,2.02,536,2.02,537,4.272,538,2.02,539,2.02,540,2.02,541,2.02,542,2.02,543,2.02,544,2.02,545,2.007,546,2.02,547,2.02,548,2.02,549,2.02,550,1.466,551,2.02,552,3.114,553,3.114,554,3.114,555,3.114,556,2.02,557,3.173,558,2.02,559,2.02,560,2.02,561,2.02,562,2.02,563,2.02,564,2.02,565,2.02,566,2.02,567,2.02,568,2.02,569,2.02,570,2.02,571,4.272,572,3.114,573,1.637,574,4.272,575,3.114,576,3.114,577,3.114,578,3.114,579,2.261,580,3.114,581,2.6,582,1.805,583,3.114,584,3.114,585,3.114,586,3.114,587,3.114]],["title/interfaces/ClusterInfo.html",[459,1,532,2.053]],["body/interfaces/ClusterInfo.html",[2,0.438,3,0.357,7,0.253,22,0.304,23,0.894,45,0.594,48,0.032,49,0.651,50,0.701,51,0.913,56,2.075,73,1.586,98,1.133,121,0.357,142,3.575,189,0.026,190,0.026,325,2.602,459,1.786,505,2.519,532,3.387,579,4.304,588,3.575,589,3.575,590,3.575,591,3.575,592,4.949,593,4.949,594,4.949,595,4.949,596,4.949]],["title/interfaces/ComponentMockOption.html",[459,1,597,2.053]],["body/interfaces/ComponentMockOption.html",[0,0.138,2,0.398,3,0.25,7,0.176,11,0.614,12,1.106,14,1.106,15,0.853,16,0.778,17,0.735,18,0.796,20,0.796,22,0.212,23,0.707,25,1.205,26,1.628,35,1.434,39,0.796,40,0.415,44,1.261,48,0.033,49,0.695,50,0.524,51,0.662,55,0.796,56,1.02,61,0.614,73,1.769,82,0.732,83,1.54,85,1.871,87,1.524,98,0.955,102,1.106,103,0.865,108,0.567,109,0.329,111,0.796,116,1.02,117,0.732,118,0.865,119,1.016,120,0.865,121,0.398,122,0.371,123,0.56,126,0.614,127,1.837,128,2.172,133,1.109,168,0.56,169,1.325,172,0.671,189,0.021,190,0.021,204,1.734,238,1.434,308,2.184,309,1.992,324,1.205,348,0.796,349,0.732,350,1.313,351,2.172,356,2.409,370,1.734,422,1.824,434,1.573,439,2.172,454,1.929,459,1.62,503,1.674,505,1.992,550,2.172,597,3.325,598,1.929,599,1.929,600,3.078,601,1.929,602,2.409,603,2.264,604,2.679,605,2.172,606,2.172,607,3.017,608,2.498,609,2.498,610,1.929,611,1.929,612,2.498,613,3.017,614,2.498,615,5.132,616,3.469,617,3.469,618,2.172,619,3.469,620,2.498,621,3.469,622,3.469,623,3.469,624,2.498,625,3.469,626,3.469,627,2.172,628,3.469,629,2.172,630,3.469,631,2.172,632,3.469,633,2.172,634,3.469,635,3.469,636,2.679,637,2.172,638,2.498,639,1.929,640,2.498,641,3.963,642,2.498,643,5.132,644,3.963,645,2.498,646,2.498,647,2.498,648,2.498,649,2.498,650,2.498,651,2.498,652,2.498,653,2.498,654,2.498,655,2.498,656,2.498,657,2.498,658,2.498,659,2.498,660,1.734,661,2.498,662,1.313,663,2.172,664,1.434,665,1.734]],["title/components/DebugPanelComponent.html",[0,0.081,168,0.596]],["body/components/DebugPanelComponent.html",[0,0.151,1,0.506,2,0.394,3,0.206,4,0.713,5,0.713,6,0.713,7,0.145,11,0.743,12,1.141,13,0.713,14,1.64,15,1.167,16,0.885,17,0.728,18,0.963,20,0.963,22,0.175,23,0.616,24,0.885,25,1.727,26,2,34,0.616,35,1.182,39,1.257,40,0.502,41,1.429,44,1.391,45,0.753,47,0.678,48,0.033,49,0.684,50,0.553,51,0.729,55,0.963,56,0.841,60,0.66,61,0.969,73,1.589,82,0.885,83,1.75,85,1.837,87,1.477,92,1.588,98,0.616,102,0.963,103,0.713,108,0.519,109,0.271,111,0.656,116,0.841,117,0.603,118,0.713,119,1.048,120,0.713,121,0.358,122,0.306,123,0.462,126,0.506,127,1.8,128,1.79,131,1.234,133,0.914,150,1.296,155,0.603,156,1.047,157,1.047,158,0.963,159,1.366,160,0.713,161,1.047,162,0.506,163,0.713,164,0.506,165,0.713,166,0.506,167,1.047,168,0.885,169,1.414,170,0.713,171,0.506,172,0.962,173,0.506,174,0.506,175,0.713,176,0.506,177,0.885,178,0.713,179,0.506,180,0.713,181,0.506,182,0.713,183,0.553,184,0.713,185,0.506,186,0.713,187,0.506,188,0.713,189,0.018,190,0.018,204,1.429,238,2.672,308,2.119,309,2.055,324,0.993,348,0.656,349,0.603,350,1.082,351,1.79,356,2.098,370,1.429,422,1.588,434,1.902,439,1.79,454,2.333,459,1.137,503,1.458,505,1.735,550,1.79,597,3.39,598,3.594,599,1.589,600,3.243,601,1.589,602,2.098,603,2.497,604,2.333,605,1.79,606,1.79,607,2.627,608,3.021,609,3.021,610,2.333,611,3.045,612,2.058,613,2.627,614,2.058,615,4.951,616,3.021,617,3.021,618,1.79,619,3.021,620,2.058,621,3.021,622,3.021,623,3.021,624,2.058,625,3.021,626,3.021,627,1.79,628,3.021,629,1.79,630,3.021,631,1.79,632,3.021,633,1.79,634,3.021,635,3.579,636,2.764,637,2.627,638,3.021,639,1.589,640,2.058,641,3.823,642,2.058,643,4.951,644,3.823,645,2.058,646,2.058,647,2.058,648,2.058,649,2.058,650,2.058,651,2.058,652,2.058,653,2.058,654,2.058,655,2.058,656,2.058,657,3.021,658,3.021,659,3.943,660,1.429,661,2.058,662,1.082,663,3.112,664,1.182,665,1.429,666,3.619,667,3.619,668,2.466,669,2.466,670,2.466,671,2.466,672,2.466,673,3.619,674,3.619,675,3.619]],["title/components/EditClusterComponent.html",[0,0.081,171,0.654]],["body/components/EditClusterComponent.html",[0,0.133,1,0.552,2,0.321,3,0.224,4,0.777,5,0.777,6,0.777,7,0.159,11,0.791,12,1.198,13,0.777,14,1.66,15,1.145,16,0.503,17,0.414,18,1.025,20,1.025,22,0.191,23,0.656,24,1.46,25,1.814,26,2.036,29,1.822,34,0.656,37,2.797,39,1.309,40,0.534,41,1.558,42,1.651,43,1.651,44,1.364,45,0.828,47,0.843,48,0.033,49,0.613,50,0.627,51,0.624,54,1.314,56,1.678,57,3.802,59,1.691,60,0.694,61,0.924,64,2.159,67,2.797,69,1.536,70,2.797,71,2.797,72,3.933,73,1.822,74,2.008,82,1.203,87,0.657,89,1.691,98,1.05,101,1.314,102,1.025,103,1.422,108,0.613,109,0.295,110,0.917,111,0.715,112,0.996,113,0.996,114,1.083,115,0.996,116,0.917,117,0.657,118,0.777,119,0.657,120,0.777,121,0.224,122,0.333,123,0.843,125,1.669,126,0.791,127,1.302,129,0.777,130,1.083,131,0.917,132,1.428,133,1.428,139,1.083,144,2.903,145,1.951,146,1.951,147,1.951,150,1.413,154,3.171,155,0.657,156,1.114,157,1.114,158,1.025,159,1.422,160,0.777,161,1.114,162,0.552,163,0.777,164,0.552,165,0.777,166,0.552,167,1.114,168,0.503,169,0.657,170,0.777,171,1.009,172,1.339,173,0.552,174,0.552,175,0.777,176,0.552,177,0.942,178,0.777,179,0.552,180,0.777,181,0.552,182,0.777,183,0.603,184,0.777,185,0.552,186,0.777,187,0.552,188,0.777,189,0.019,190,0.019,266,4.378,324,1.982,348,0.715,349,0.657,350,1.18,352,2.586,359,1.413,374,2.484,471,2.797,481,3.171,505,2.675,506,3.216,507,3.216,557,3.76,633,1.951,636,2.484,660,1.558,662,1.18,664,1.289,665,1.558,676,4.378,677,2.244,678,4.919,679,5.419,680,4.919,681,3.853,682,2.688,683,2.688,684,3.853,685,2.688,686,2.688,687,2.688,688,2.688,689,2.688,690,2.688,691,2.688,692,4.504,693,3.853,694,3.853,695,2.688,696,2.688,697,2.688,698,2.688]],["title/components/EditUserComponent.html",[0,0.081,173,0.654]],["body/components/EditUserComponent.html",[0,0.128,1,0.505,2,0.302,3,0.205,4,0.712,5,0.712,6,0.712,7,0.145,10,1.787,11,0.742,12,1.14,13,0.712,14,1.63,15,1.167,16,0.461,17,0.93,18,0.962,19,3.018,20,0.962,21,3.018,22,0.175,23,0.615,24,1.433,25,1.726,26,1.999,28,2.189,29,1.749,30,1.586,32,2.736,33,2.481,34,0.615,36,3.018,37,2.624,39,1.256,40,0.501,41,1.427,42,1.611,43,1.611,44,1.328,45,0.844,46,2.055,47,0.941,48,0.033,49,0.635,50,0.635,51,0.697,54,1.233,55,1.256,56,1.461,57,3.592,59,1.586,60,0.837,61,0.969,62,3.018,64,2.41,65,3.117,66,3.576,67,2.624,69,1.715,70,3.427,71,2.624,72,3.816,73,1.749,74,1.947,78,1.902,80,2.055,85,1.045,87,1.047,88,3.018,89,1.586,98,1.054,99,2.055,101,1.61,102,0.962,103,1.045,104,2.055,105,2.055,108,0.597,109,0.27,110,0.84,111,0.655,112,0.912,113,0.912,114,0.992,115,0.912,116,0.84,117,0.602,118,0.712,119,0.602,120,0.712,121,0.205,122,0.305,123,0.802,124,3.576,125,1.339,126,0.742,127,1.239,129,0.712,130,0.992,131,0.84,132,1.339,133,1.587,137,1.787,139,0.992,144,2.761,145,1.787,146,1.787,147,1.787,150,1.294,151,2.095,152,2.095,153,1.9,154,3.043,155,0.602,156,1.045,157,1.045,158,0.962,159,1.365,160,0.712,161,1.045,162,0.505,163,0.712,164,0.505,165,0.712,166,0.505,167,1.045,168,0.461,169,0.602,170,0.712,171,0.505,172,1.275,173,0.969,174,0.505,175,0.712,176,0.505,177,0.884,178,0.712,179,0.505,180,0.712,181,0.505,182,0.712,183,0.552,184,0.712,185,0.505,186,0.712,187,0.505,188,0.712,189,0.018,190,0.018,196,3.23,270,3.551,325,1.586,472,2.624,476,2.263,528,1.9,631,1.787,636,2.33,660,1.427,662,1.08,664,1.18,665,1.427,676,4.446,699,4.721,700,3.018,701,2.462,702,3.018,703,2.462,704,3.018,705,2.462,706,2.462,707,3.615,708,2.462,709,3.615,710,2.462,711,2.462,712,3.018,713,2.462,714,3.615,715,3.018,716,2.462,717,3.018]],["title/injectables/ErrorHandlerService.html",[232,2.053,400,0.847]],["body/injectables/ErrorHandlerService.html",[2,0.303,3,0.303,7,0.214,11,0.972,17,0.812,22,0.258,34,0.897,40,0.73,45,0.656,47,0.68,48,0.033,49,0.399,50,0.399,51,0.504,54,2.114,56,1.239,60,0.56,61,0.972,82,0.888,96,2.637,108,0.52,109,0.399,121,0.303,122,0.45,129,1.051,133,1.346,150,1.91,158,0.967,189,0.023,190,0.023,219,2.106,231,3.954,232,3.053,256,3.033,309,1.742,317,3.505,343,2.106,348,0.967,349,0.888,364,2.342,395,3.033,400,1.402,413,2.106,419,3.954,443,3.033,444,3.033,503,1.908,528,2.489,582,2.106,590,3.033,610,2.342,639,2.342,641,4.143,644,4.157,718,4.399,719,3.033,720,4.736,721,3.633,722,4.736,723,5.584,724,3.633,725,3.954,726,5.269,727,5.32,728,3.633,729,3.033,730,3.633,731,3.633,732,3.633,733,3.633,734,4.736,735,3.633,736,3.633,737,3.633,738,3.633,739,3.033,740,3.633,741,4.736,742,3.633,743,4.736,744,4.736,745,3.633,746,3.633,747,3.633,748,3.633,749,3.033,750,3.633,751,4.736,752,4.736,753,3.633,754,3.633,755,3.633,756,3.633,757,3.633,758,3.633,759,3.633,760,3.633,761,3.033,762,3.633,763,3.633,764,2.637,765,3.633,766,2.637,767,2.637,768,3.633,769,3.633,770,3.633,771,3.033,772,3.633,773,3.633,774,3.033,775,3.633,776,3.633,777,3.633,778,3.633,779,3.633,780,3.633,781,3.633,782,3.633,783,4.736,784,3.633,785,3.633,786,3.633,787,3.633,788,3.633,789,3.633,790,3.633,791,3.633,792,3.633]],["title/components/LoginComponent.html",[0,0.081,174,0.654]],["body/components/LoginComponent.html",[0,0.135,1,0.572,2,0.33,3,0.232,4,0.806,5,0.806,6,0.806,7,0.164,11,0.811,12,1.222,13,0.806,14,1.66,15,1.203,16,0.522,17,0.429,18,1.052,20,1.052,22,0.198,23,0.673,26,1.705,28,2.272,30,2.475,34,0.673,39,1.33,40,0.548,45,0.799,47,0.522,48,0.033,49,0.505,50,0.58,51,0.386,54,1.348,55,0.741,57,2.548,58,2.869,59,1.734,60,0.708,61,0.943,69,1.348,74,1.464,77,3.335,78,1.851,82,0.681,85,1.143,87,0.681,92,1.223,93,2.548,94,2.869,98,0.851,101,1.87,102,0.741,108,0.619,109,0.306,111,0.741,112,1.032,121,0.232,122,0.345,123,0.936,126,0.811,129,1.446,139,1.122,151,1.615,152,1.615,153,1.464,155,0.681,156,1.143,157,1.143,158,1.052,159,1.446,160,0.806,161,1.143,162,0.572,163,0.806,164,0.572,165,0.806,166,0.572,167,1.143,168,0.74,169,1.341,170,0.806,171,0.572,172,0.886,173,0.572,174,1.026,175,0.806,176,0.572,177,1.222,178,0.806,179,0.572,180,0.806,181,0.572,182,0.806,183,0.625,184,0.806,185,0.572,186,0.806,187,0.572,188,0.806,189,0.02,190,0.02,195,2.898,198,3.222,200,2.961,215,2.703,238,1.335,239,2.022,252,2.022,254,2.022,262,1.464,283,2.078,317,2.663,324,1.592,325,1.734,356,2.291,376,2.396,377,3.299,388,2.022,391,4.094,402,3.335,403,1.796,404,2.663,422,2.608,429,1.895,431,2.869,445,2.325,455,4.173,503,1.122,545,2.548,582,2.898,600,3.222,639,1.796,641,2.961,644,2.961,662,1.734,764,2.869,793,2.325,794,3.952,795,3.952,796,4.999,797,4.999,798,4.999,799,4.999,800,4.173,801,2.786,802,5.483,803,3.952,804,2.786,805,2.786,806,3.952,807,2.078,808,3.952,809,3.299,810,3.952,811,3.299,812,2.786,813,3.629,814,2.548,815,2.786,816,4.999,817,2.786,818,2.786,819,2.786,820,2.786,821,3.952,822,2.786,823,2.786,824,4.594,825,4.594,826,2.786,827,2.786,828,2.786,829,2.786,830,2.786,831,4.999,832,2.786,833,2.022,834,2.325,835,2.022,836,2.022,837,2.325,838,2.869,839,3.952,840,3.952,841,3.952]],["title/components/MainComponent.html",[0,0.081,176,0.654]],["body/components/MainComponent.html",[0,0.154,1,0.85,2,0.43,3,0.346,4,1.198,5,1.198,6,1.198,7,0.244,11,1.057,12,1.491,13,1.198,14,1.743,15,1.278,16,0.776,17,0.638,18,1.37,20,1.37,22,0.294,34,0.876,39,1.559,40,0.777,45,0.714,48,0.033,49,0.566,60,0.638,61,0.85,108,0.455,109,0.455,121,0.346,122,0.513,155,1.013,156,1.489,157,1.489,158,1.37,159,1.695,160,1.198,161,1.489,162,0.85,163,1.198,164,0.85,165,1.198,166,0.85,167,1.489,168,0.776,169,1.013,170,1.198,171,0.85,172,1.155,173,0.85,174,0.85,175,1.198,176,1.203,177,1.433,178,1.198,179,0.85,180,1.198,181,0.85,182,1.198,183,0.929,184,1.198,185,0.85,186,1.198,187,0.85,188,1.198,189,0.025,190,0.025,348,1.102,349,1.013,350,1.818,842,3.459,843,5.149,844,5.149,845,5.149,846,4.143,847,4.143]],["title/injectables/MockupBackendService.html",[43,0.921,400,0.847]],["body/injectables/MockupBackendService.html",[2,0.269,3,0.176,7,0.124,11,0.433,15,0.433,17,0.926,22,0.407,24,1.151,28,1.573,29,2.151,30,2.265,34,0.548,35,1.544,40,0.541,43,0.931,45,0.828,47,1.099,48,0.033,49,0.645,50,0.645,51,0.813,54,1.332,55,1.561,60,0.977,64,2.378,98,1.121,101,0.72,102,0.857,108,0.545,109,0.232,110,0.72,121,0.176,122,0.261,126,1.018,133,1.744,141,2.338,154,2.518,189,0.016,190,0.016,192,1.109,218,2.338,260,1.532,308,1.573,325,2.62,343,1.223,347,1.36,348,0.561,349,0.516,364,1.36,398,2.518,400,1.039,401,1.109,405,1.223,422,2.066,423,3.198,431,1.532,432,2.338,434,2.297,437,1.761,438,1.761,461,2.338,462,2.688,463,2.688,464,2.688,465,2.688,466,2.688,467,2.688,468,2.688,469,2.688,470,2.338,471,2.338,472,2.338,473,2.688,475,2.688,476,2.712,478,2.688,480,2.688,481,3.586,483,2.688,485,2.688,487,2.688,489,2.688,491,2.688,493,2.688,497,2.688,499,2.688,501,2.688,503,1.297,505,2.095,512,2.076,573,2.608,602,1.223,729,4.944,749,1.761,766,1.532,767,1.532,848,5.02,849,1.761,850,2.11,851,2.11,852,6.053,853,2.688,854,2.11,855,2.688,856,2.11,857,3.221,858,2.11,859,2.688,860,2.11,861,2.11,862,2.11,863,2.11,864,2.11,865,2.11,866,2.11,867,2.11,868,2.11,869,2.11,870,2.11,871,6.014,872,2.338,873,2.076,874,1.36,875,2.338,876,1.532,877,1.532,878,1.532,879,1.532,880,5.971,881,5.657,882,3.221,883,1.761,884,2.11,885,2.11,886,2.11,887,2.11,888,2.11,889,5.657,890,5.657,891,5.657,892,3.906,893,3.173,894,3.906,895,3.906,896,3.906,897,4.371,898,3.221,899,2.11,900,2.11,901,3.221,902,2.11,903,2.11,904,2.11,905,2.11,906,1.761,907,2.11,908,2.11,909,1.761,910,3.221,911,3.221,912,3.221,913,2.11,914,2.11,915,2.11,916,2.11,917,2.11,918,2.11,919,2.11,920,2.11,921,2.11,922,2.11,923,2.11]],["title/interfaces/Notification.html",[459,1,603,1.398]],["body/interfaces/Notification.html",[2,0.333,3,0.333,7,0.235,16,0.748,22,0.391,23,0.856,40,0.553,44,0.976,48,0.033,50,0.687,51,0.857,60,0.848,92,1.752,98,1.074,103,1.672,108,0.439,109,0.439,121,0.42,122,0.495,123,0.748,126,1.032,189,0.025,190,0.025,192,2.099,308,1.608,331,3.551,335,1.914,348,1.062,349,0.976,400,1.339,405,2.314,411,2.314,413,2.314,429,1.914,459,1.58,573,2.645,603,2.616,662,2.538,664,2.772,807,2.099,924,2.898,925,3.333,926,4.2,927,3.333,928,3.333,929,2.898,930,2.898,931,2.898,932,2.898,933,2.898,934,3.333,935,3.333,936,3.333,937,4.2,938,3.333,939,3.333,940,3.333,941,3.333,942,3.333,943,3.333,944,3.333,945,3.333,946,3.333,947,3.333,948,4.2,949,2.898,950,3.333,951,4.599,952,3.333,953,2.898,954,3.333,955,3.333,956,3.333,957,3.333,958,3.333]],["title/components/NotificationsComponent.html",[0,0.081,179,0.654]],["body/components/NotificationsComponent.html",[0,0.143,1,0.671,2,0.447,3,0.273,4,0.945,5,0.945,6,0.945,7,0.193,11,0.906,12,1.33,13,0.945,14,1.695,15,1.246,16,0.612,17,0.504,18,1.175,20,1.175,22,0.232,23,0.752,24,1.525,25,2.014,34,0.752,39,1.425,40,0.612,42,1.733,43,1.704,44,1.44,45,0.799,47,0.827,48,0.033,49,0.588,50,0.588,51,0.799,58,3.887,60,0.68,61,1.026,82,0.799,83,1.211,87,1.222,92,1.938,108,0.633,109,0.359,110,1.115,113,1.211,114,1.317,115,1.211,116,1.115,117,0.799,118,0.945,119,0.799,120,0.945,121,0.273,122,0.405,123,0.936,126,0.671,127,1.277,131,1.506,132,1.636,155,0.799,156,1.277,157,1.277,158,1.175,159,1.548,160,0.945,161,1.277,162,0.671,163,0.945,164,0.671,165,0.945,166,0.671,167,1.277,168,0.612,169,0.799,170,0.945,171,0.671,172,0.99,173,0.671,174,0.671,175,0.945,176,0.671,177,1.08,178,0.945,179,1.099,180,0.945,181,0.671,182,0.945,183,0.733,184,0.945,185,0.671,186,0.945,187,0.671,188,0.945,189,0.022,190,0.022,335,2.117,348,0.87,349,0.799,361,3.205,413,3.104,418,3.686,434,2.321,603,2.629,610,2.846,611,2.846,613,2.373,725,3.686,807,2.321,929,3.205,930,3.205,931,4.059,932,4.349,933,3.205,949,2.373,959,2.729,960,4.416,961,4.416,962,3.27,963,4.416,964,3.27,965,3.27,966,3.27,967,2.729,968,3.27,969,2.729,970,2.729,971,3.27,972,3.27,973,3.27,974,3.27,975,4.416,976,4.416,977,4.416]],["title/injectables/NotificationsService.html",[44,0.779,400,0.847]],["body/injectables/NotificationsService.html",[2,0.315,3,0.315,7,0.223,16,1.061,22,0.381,23,0.827,34,0.827,40,0.744,44,1.188,45,0.832,47,0.91,48,0.033,49,0.534,50,0.59,51,0.786,60,0.924,61,0.997,92,2.133,98,0.914,103,1.093,108,0.415,109,0.415,121,0.405,122,0.468,123,1.006,126,0.997,189,0.024,190,0.024,192,1.987,308,1.958,331,2.437,335,1.812,348,1.006,349,0.924,400,1.429,405,2.192,411,2.817,413,2.817,429,1.812,459,1.187,573,2.554,603,2.741,662,1.659,664,1.812,807,2.554,924,2.745,925,4.732,926,4.057,927,4.057,928,3.156,929,4.115,930,3.528,931,3.528,932,3.528,933,3.528,934,3.156,935,3.156,936,3.156,937,4.732,938,4.057,939,4.057,940,4.057,941,4.057,942,4.732,943,3.156,944,3.156,945,3.156,946,3.156,947,3.156,948,4.057,949,2.745,950,3.156,951,4.483,952,3.156,953,2.745,954,3.156,955,3.156,956,3.156,957,3.156,958,3.156,967,3.156,978,4.86,979,4.86,980,3.781,981,3.781,982,3.781,983,3.781,984,3.781,985,3.781]],["title/components/OrganizationComponent.html",[0,0.081,181,0.654]],["body/components/OrganizationComponent.html",[0,0.149,1,0.671,2,0.447,3,0.18,4,0.623,5,0.623,6,0.623,7,0.127,9,1.388,11,0.671,12,1.052,13,0.623,14,1.605,15,1.067,16,1.003,17,0.985,18,0.87,20,0.87,22,0.153,23,0.557,24,1.39,26,1.506,27,3.687,28,1.317,29,1.853,32,1.896,33,1.132,34,0.557,35,2.117,39,1.175,40,0.453,42,1.549,43,1.549,44,1.271,45,0.817,47,0.74,48,0.033,49,0.602,50,0.624,51,0.548,54,1.349,55,0.87,59,1.435,60,0.732,61,0.975,64,1.568,65,2.079,69,1.62,73,1.212,74,1.636,78,1.593,82,0.799,83,0.798,84,3.448,85,1.446,86,3.448,87,0.799,89,1.938,90,2.374,91,2.73,92,2.084,93,3.452,94,2.374,95,2.73,96,2.374,97,2.108,98,0.981,101,1.826,102,1.33,103,0.946,108,0.624,109,0.236,110,0.734,111,0.573,112,0.798,113,0.798,114,0.867,115,0.798,116,0.734,117,0.526,118,0.623,119,0.526,120,0.623,121,0.18,122,0.267,123,0.889,125,1.636,126,0.975,127,1.144,129,0.623,130,0.867,131,0.734,132,1.212,139,1.593,141,3.206,155,0.526,156,0.946,157,0.946,158,0.87,159,1.277,160,0.623,161,0.946,162,0.442,163,0.623,164,0.442,165,0.623,166,0.442,167,0.946,168,0.403,169,0.526,170,0.623,171,0.442,172,1.201,173,0.671,174,0.442,175,0.623,176,0.442,177,0.799,178,0.623,179,0.442,180,0.623,181,0.906,182,0.623,183,0.483,184,0.623,185,0.442,186,0.623,187,0.671,188,0.623,189,0.02,190,0.016,195,2.56,196,1.248,197,1.797,198,2.847,200,2.108,216,2.117,263,1.388,264,1.797,269,2.374,270,1.248,273,1.563,274,1.563,291,3.206,308,1.913,309,1.568,324,1.593,325,1.435,335,1.568,348,0.573,349,0.526,350,0.945,352,1.132,353,2.871,357,1.896,358,1.388,359,2.496,360,1.388,370,1.896,373,2.374,376,1.568,476,1.568,527,3.061,528,1.719,529,2.374,545,2.108,618,1.563,807,1.719,813,3.63,814,3.224,833,2.871,835,2.871,836,2.871,853,2.73,906,3.687,909,3.687,986,1.797,987,3.27,988,3.27,989,4.47,990,5.001,991,2.73,992,3.27,993,4.417,994,3.301,995,2.153,996,2.153,997,2.153,998,3.27,999,2.153,1000,3.27,1001,2.153,1002,2.153,1003,2.153,1004,3.965,1005,2.153,1006,2.153,1007,2.153,1008,2.153,1009,5.485,1010,2.153,1011,2.153,1012,2.153,1013,4.417,1014,2.153,1015,3.955,1016,4.417,1017,2.153,1018,1.797,1019,4.417,1020,2.153,1021,3.27,1022,3.27,1023,4.174,1024,2.153,1025,2.153,1026,1.797,1027,2.153,1028,2.153,1029,3.27,1030,3.27,1031,3.27,1032,2.374,1033,3.27,1034,3.27]],["title/components/SidebarComponent.html",[0,0.081,185,0.654]],["body/components/SidebarComponent.html",[0,0.138,1,0.5,2,0.392,3,0.203,4,0.704,5,0.704,6,0.704,7,0.144,11,0.736,12,1.132,13,0.704,14,1.637,15,1.164,16,0.456,17,0.873,18,0.954,20,0.954,22,0.173,23,0.61,24,1.429,26,1.601,28,2.238,29,2.006,32,1.411,33,1.28,34,0.61,39,1.249,40,0.497,42,1.565,43,1.606,45,0.828,47,0.671,48,0.033,49,0.65,50,0.61,51,0.497,54,1.223,60,0.771,61,1.027,65,2.92,69,0.83,74,1.739,82,1.04,84,1.767,85,0.704,86,1.767,87,0.595,89,2.06,92,1.573,93,3.375,98,1.047,101,1.894,102,0.954,103,1.037,108,0.633,109,0.267,110,0.83,111,0.648,112,0.902,113,0.902,114,0.981,115,0.902,117,0.595,118,0.704,119,0.595,120,0.704,121,0.203,122,0.302,123,0.797,125,1.854,126,0.964,127,1.231,129,0.704,130,0.981,131,0.83,132,1.328,139,0.981,155,0.595,156,1.037,157,1.037,158,0.954,159,1.358,160,0.704,161,1.037,162,0.5,163,0.704,164,0.5,165,0.704,166,0.5,167,1.037,168,0.671,169,1.28,170,0.704,171,0.5,172,1.174,173,0.736,174,0.5,175,0.704,176,0.5,177,1.28,178,0.704,179,0.5,180,0.704,181,0.5,182,0.704,183,0.546,184,0.704,185,0.964,186,0.704,187,0.5,188,0.704,189,0.018,190,0.018,195,2.722,196,1.411,198,3.027,200,2.743,215,2.251,216,2.251,238,1.167,239,1.767,254,1.767,269,1.767,270,1.411,273,1.767,274,1.767,283,1.885,304,1.767,324,1.715,348,0.648,349,0.595,350,1.068,352,2.237,357,2.078,358,1.569,359,1.885,360,1.569,376,1.719,422,1.573,423,3.375,476,2.836,503,1.444,527,3.027,528,1.885,529,2.603,545,2.311,582,2.078,600,3.027,602,2.901,604,3.027,627,1.767,761,2.993,800,3.919,809,3.553,813,3.8,814,3.375,833,2.603,834,2.032,835,2.603,836,2.603,837,2.032,969,2.032,970,2.032,991,3.919,994,3.553,1004,2.032,1018,2.032,1023,2.993,1026,2.032,1035,2.032,1036,3.585,1037,3.585,1038,3.585,1039,3.585,1040,2.435,1041,3.585,1042,3.585,1043,2.435,1044,2.435,1045,2.435,1046,3.585,1047,2.435,1048,2.435,1049,2.435,1050,2.435,1051,2.435,1052,2.435,1053,2.435,1054,4.256,1055,3.553,1056,4.256,1057,2.435,1058,3.585,1059,2.435,1060,2.435,1061,2.435,1062,2.435,1063,2.435,1064,2.435,1065,2.993,1066,3.585,1067,3.585]],["title/injectables/UpdateEventsService.html",[216,1.527,400,0.847]],["body/injectables/UpdateEventsService.html",[2,0.397,3,0.397,7,0.281,22,0.338,23,0.953,40,0.825,45,0.776,48,0.033,55,1.49,82,1.164,83,1.764,108,0.615,109,0.523,121,0.397,122,0.59,189,0.028,190,0.028,192,2.502,216,2.684,400,1.583,401,2.502,405,2.759,1068,4.967,1069,3.974,1070,6.142,1071,5.6,1072,5.95]],["title/components/UserInfoComponent.html",[0,0.081,187,0.654]],["body/components/UserInfoComponent.html",[0,0.128,1,0.508,2,0.42,3,0.207,4,0.716,5,0.716,6,0.716,7,0.146,11,0.745,12,1.143,13,0.716,14,1.641,15,1.117,16,0.464,17,0.967,18,0.966,20,0.966,22,0.176,23,0.618,24,1.435,25,1.731,26,2.001,29,1.754,30,2.311,32,2.744,34,0.618,39,1.259,40,0.503,41,1.435,42,1.614,43,1.614,44,1.33,45,0.844,47,0.68,48,0.033,49,0.613,50,0.645,51,0.503,55,0.659,60,0.811,61,0.882,65,3.043,69,1.466,74,1.345,78,0.997,82,0.887,85,0.716,87,0.887,89,1.593,98,1.079,101,1.238,102,0.966,103,1.05,108,0.613,109,0.272,110,0.844,111,0.659,113,0.917,114,0.997,115,0.917,116,0.844,117,0.605,118,0.716,119,0.605,120,0.716,121,0.207,122,0.307,123,0.805,125,1.867,126,0.508,127,1.243,129,0.716,130,0.997,131,0.844,132,1.345,133,0.917,139,1.462,144,2.34,150,1.301,151,2.104,152,2.104,153,1.908,155,0.605,156,1.05,157,1.05,158,0.966,159,1.369,160,0.716,161,1.05,162,0.508,163,0.716,164,0.508,165,0.716,166,0.508,167,1.05,168,0.464,169,0.605,170,0.716,171,0.508,172,1.061,173,0.508,174,0.508,175,0.716,176,0.508,177,0.887,178,0.716,179,0.508,180,0.716,181,0.508,182,0.716,183,0.555,184,0.716,185,0.508,186,0.716,187,0.971,188,0.716,189,0.018,190,0.018,196,3.235,204,1.435,263,3.952,324,1.462,347,1.596,348,0.659,349,0.605,350,1.086,352,1.908,359,1.908,365,2.067,461,3.436,470,3.436,476,2.416,528,1.908,629,1.797,637,2.635,660,2.104,662,1.593,664,1.74,665,2.104,700,3.03,702,3.03,704,3.03,712,3.03,715,4.397,717,2.067,807,2.488,855,4.543,873,1.596,874,1.596,989,3.951,1055,2.067,1065,3.03,1073,5.118,1074,2.067,1075,3.63,1076,3.63,1077,5.267,1078,5.267,1079,3.63,1080,2.476,1081,2.476,1082,4.733,1083,4.733,1084,2.476,1085,2.476,1086,5.04,1087,2.476,1088,2.476,1089,2.476,1090,4.733,1091,4.733,1092,2.476,1093,2.476,1094,2.476,1095,2.476,1096,2.476,1097,2.476,1098,3.63,1099,2.476,1100,2.476,1101,2.476,1102,2.476,1103,2.476]],["title/coverage.html",[1104,3.622]],["body/coverage.html",[0,0.162,1,0.701,7,0.201,8,2.851,9,2.201,10,3.3,24,0.835,33,1.795,42,0.988,43,0.988,44,0.835,48,0.033,50,0.375,55,0.909,117,0.835,119,0.835,162,0.701,164,0.701,166,0.701,168,0.639,171,0.701,173,0.701,174,0.701,176,0.701,179,0.701,181,0.701,183,0.766,185,0.701,187,0.701,189,0.022,190,0.022,191,2.851,215,1.637,216,1.637,232,2.201,235,2.201,238,2.45,263,2.201,266,2.479,270,1.98,282,2.851,292,2.479,293,2.479,335,3.029,372,4.61,400,1.553,417,2.851,429,2.179,459,1.712,460,2.851,504,2.851,510,2.479,511,2.479,532,2.201,588,2.851,589,2.851,597,2.201,598,3.295,599,3.295,601,2.201,603,1.499,676,3.3,677,2.851,718,2.851,719,2.851,793,2.851,842,2.851,848,2.851,849,2.851,872,2.479,873,2.201,874,2.201,875,2.479,876,2.479,877,2.479,878,2.479,879,2.479,924,3.3,959,2.851,986,2.851,1035,2.851,1068,2.851,1069,2.851,1073,2.851,1074,2.851,1104,2.851,1105,2.851,1106,3.415,1107,3.415,1108,3.415,1109,3.415,1110,3.415,1111,2.851,1112,4.703,1113,6.051,1114,3.415,1115,3.415,1116,3.415,1117,3.415,1118,3.415,1119,3.415,1120,5.111,1121,4.547,1122,2.851,1123,2.851,1124,2.851,1125,2.851,1126,6.351,1127,3.415,1128,2.851,1129,3.415,1130,3.415,1131,5.45,1132,4.547,1133,2.851,1134,3.415,1135,4.547,1136,3.415,1137,3.415,1138,3.415,1139,3.415,1140,3.415,1141,3.415,1142,3.415,1143,3.415,1144,3.795,1145,3.415,1146,3.415,1147,2.851,1148,3.415,1149,3.415,1150,3.415,1151,3.415,1152,3.415,1153,3.415,1154,5.274,1155,2.851,1156,3.3,1157,3.3,1158,3.795,1159,3.3,1160,3.415,1161,3.415]],["title/dependencies.html",[207,2.468,1162,2.224]],["body/dependencies.html",[48,0.033,109,0.505,111,1.223,112,2.032,189,0.027,190,0.027,207,2.963,223,4.579,224,3.982,228,3.837,229,2.664,252,3.337,260,3.337,262,2.416,401,2.416,403,2.963,404,3.18,1163,4.596,1164,6.456,1165,4.596,1166,4.596,1167,4.596,1168,4.596,1169,4.596,1170,4.596,1171,4.596,1172,4.596,1173,5.485,1174,4.596,1175,4.596,1176,4.596,1177,4.596,1178,4.596,1179,4.596,1180,4.596,1181,4.596,1182,4.596,1183,4.596,1184,4.596,1185,5.485,1186,4.596,1187,4.596,1188,4.596]],["title/miscellaneous/functions.html",[429,1.835,1189,1.717]],["body/miscellaneous/functions.html",[22,0.36,48,0.029,189,0.029,190,0.029,429,2.429,1156,3.678,1157,4.67,1159,3.678,1189,3.266,1190,4.23,1191,4.23]],["title/index.html",[22,0.189,1032,1.934,1192,2.224]],["body/index.html",[0,0.145,3,0.36,7,0.255,15,0.886,48,0.026,49,0.474,55,1.149,64,2.532,69,1.473,129,1.249,153,2.27,177,1.291,189,0.026,190,0.026,219,2.503,309,2.07,315,4.051,343,2.503,411,3.447,512,2.784,527,3.405,663,4.143,727,4.764,811,3.605,893,4.316,1105,4.963,1162,3.605,1193,4.318,1194,4.318,1195,5.707,1196,4.318,1197,5.946,1198,4.318,1199,5.707,1200,4.318,1201,5.282,1202,4.318,1203,4.318,1204,5.282,1205,5.282,1206,6.206,1207,5.282,1208,4.318,1209,4.318,1210,4.318,1211,4.318,1212,4.318,1213,4.318,1214,4.318,1215,4.318,1216,6.099,1217,4.318,1218,4.318,1219,4.318,1220,4.318,1221,3.605,1222,5.282,1223,4.318,1224,4.318,1225,4.318,1226,5.282,1227,4.318,1228,4.318,1229,4.318,1230,3.605,1231,4.318,1232,4.318,1233,4.318,1234,4.318,1235,5.707,1236,4.318,1237,4.318,1238,4.318]],["title/license.html",[1032,1.934,1192,2.224,1239,2.224]],["body/license.html",[7,0.283,48,0.028,129,1.389,177,1.175,189,0.028,190,0.028,283,2.526,771,4.011,893,3.488,1230,4.011,1239,5.396,1240,4.805,1241,4.805,1242,5.974,1243,4.805,1244,4.805,1245,4.805,1246,4.805,1247,4.805,1248,4.805,1249,4.805,1250,4.805,1251,4.805,1252,4.805,1253,4.805,1254,4.805,1255,5.631,1256,4.805,1257,4.805,1258,4.805,1259,4.805,1260,4.805,1261,4.805,1262,4.805,1263,4.805,1264,4.805,1265,4.805,1266,4.805,1267,4.805]],["title/modules.html",[205,2.515]],["body/modules.html",[48,0.029,189,0.029,190,0.029,205,2.971,206,3.304,224,3.721,774,4.279,1268,5.126,1269,5.126]],["title/overview.html",[1270,3.622]],["body/overview.html",[0,0.106,1,1.153,42,1.625,48,0.033,112,1.545,121,0.348,155,1.02,162,1.28,164,1.153,166,1.153,168,1.052,171,1.153,173,1.153,174,1.28,176,1.153,179,1.153,181,1.153,183,1.26,185,1.153,187,1.153,189,0.026,190,0.026,205,2.997,206,4.312,207,2.689,208,3.482,209,3.482,210,3.482,211,3.482,212,3.482,213,3.482,214,3.482,215,2.694,216,2.694,217,4.317,218,3.028,219,2.418,385,3.028,400,1.11,459,1.31,573,2.718,838,3.028,1270,3.482,1271,3.482,1272,3.482]],["title/miscellaneous/variables.html",[1112,2.779,1189,1.717]],["body/miscellaneous/variables.html",[2,0.232,15,1.057,16,0.328,17,0.664,22,0.124,25,1.121,28,1.94,30,0.768,33,1.822,35,0.839,48,0.033,49,0.701,50,0.648,55,0.466,56,1.965,59,0.768,65,0.92,73,2.089,82,1.453,83,2.341,85,0.506,87,0.681,98,0.474,102,0.922,103,1.63,117,0.847,119,0.681,123,0.902,127,1.609,137,3.495,151,2.985,152,1.614,153,1.463,172,0.392,189,0.014,190,0.014,229,1.614,235,2.234,238,0.839,283,1.463,292,2.516,293,2.516,308,1.737,315,3.93,317,2.499,322,1.27,325,2.608,343,1.014,348,0.466,349,0.428,357,1.014,362,1.27,371,1.461,372,3.13,374,3.634,375,3.599,376,2.067,404,1.614,422,1.222,434,0.92,454,1.128,476,0.839,503,1.396,505,2.787,510,2.516,511,2.516,512,2.546,519,1.461,573,1.822,579,3.91,581,4.298,582,2.897,591,3.599,592,4.405,593,4.405,594,4.405,595,4.405,596,4.497,598,1.128,599,1.794,601,2.234,602,1.614,603,1.222,604,1.794,605,1.27,606,1.27,607,2.021,611,1.128,739,1.461,764,1.27,766,1.27,767,1.27,814,1.128,838,1.27,859,1.461,872,2.516,873,2.234,874,2.234,875,2.516,876,2.516,877,2.516,878,2.516,879,2.516,883,1.461,953,2.021,1111,1.461,1112,1.27,1122,1.461,1123,2.324,1124,1.461,1125,2.324,1128,4.645,1133,2.324,1144,1.461,1147,2.893,1154,1.461,1155,2.893,1156,1.27,1157,1.27,1158,4.02,1159,1.27,1189,1.128,1190,1.461,1191,1.461,1221,2.324,1271,2.324,1272,2.324,1273,1.75,1274,1.75,1275,1.75,1276,5.565,1277,1.75,1278,1.75,1279,1.75,1280,1.75,1281,2.784,1282,2.784,1283,1.75,1284,1.75,1285,1.75,1286,1.75,1287,1.75,1288,1.75,1289,1.75,1290,1.75,1291,1.75,1292,1.75,1293,1.75,1294,1.75,1295,1.75,1296,1.75,1297,1.75,1298,1.75,1299,1.75,1300,1.75,1301,1.75,1302,1.75,1303,1.75,1304,1.75,1305,1.75,1306,1.75,1307,1.75,1308,1.75,1309,1.75,1310,1.75,1311,2.784,1312,2.784,1313,2.784,1314,5.638,1315,2.784,1316,5.638,1317,2.784,1318,2.784,1319,2.784,1320,2.784,1321,3.466,1322,2.784,1323,3.95,1324,2.784,1325,2.784,1326,2.784,1327,1.75,1328,2.784,1329,4.312,1330,3.95,1331,2.784,1332,1.75,1333,2.784,1334,3.466,1335,1.75,1336,3.466,1337,4.312,1338,6.282,1339,6.07,1340,5.638,1341,1.75,1342,2.784,1343,2.784,1344,1.75,1345,2.784,1346,2.784,1347,2.784,1348,4.592,1349,2.784,1350,1.75,1351,1.75,1352,5.277,1353,5.277,1354,5.277,1355,5.277,1356,5.277,1357,5.277,1358,1.75,1359,1.75,1360,1.75,1361,1.75,1362,1.75,1363,2.784,1364,1.75,1365,2.784,1366,1.75,1367,1.75,1368,2.784,1369,1.75,1370,1.75,1371,2.784,1372,1.75,1373,1.75,1374,1.75,1375,1.75,1376,1.75,1377,1.75,1378,1.75,1379,1.75,1380,1.75,1381,1.75,1382,1.75,1383,1.75,1384,3.95,1385,1.75,1386,1.75,1387,1.75,1388,2.784,1389,1.75,1390,1.75,1391,1.75,1392,1.75,1393,2.784,1394,1.75,1395,1.75,1396,1.75,1397,1.75,1398,1.75,1399,1.75,1400,1.75,1401,1.75,1402,1.75,1403,1.75,1404,1.75,1405,1.75,1406,1.75,1407,1.75,1408,1.75,1409,2.784,1410,1.75,1411,1.75,1412,1.75]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":335,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0\">email",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0",{"_index":332,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["0.8.26",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":316,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["00ff00",{"_index":318,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["018e42cf",{"_index":884,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["0800200c9a61",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a70",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":312,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0x3",{"_index":956,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":957,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":573,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":372,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["11/17",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1271,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["14/20",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["14/22",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":953,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["17/34",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1244,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1250,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":369,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["200",{"_index":729,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1241,"title":{},"body":{"license.html":{}}}],["23",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["2h",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31404/v1",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1272,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":367,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["40",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":749,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":755,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4798",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b4c",{"_index":886,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["4h",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":945,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":773,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":776,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":781,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":784,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":788,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6c54334d6947",{"_index":888,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["6h",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7/16",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["7/24",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7ad1a7a8",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/14",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["8804",{"_index":887,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["9",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["9/15",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["9071",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":313,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["96",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9acb",{"_index":885,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["_notif",{"_index":925,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":978,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":778,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1091,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedrout",{"_index":516,"title":{},"body":{"components/ClusterComponent.html":{}}}],["activatedroutesnapshot",{"_index":394,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":853,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":927,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":764,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":473,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1252,"title":{},"body":{"license.html":{}}}],["alert",{"_index":931,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":977,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":545,"title":{},"body":{"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":903,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":1197,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":522,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1243,"title":{},"body":{"license.html":{}}}],["api",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_url",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["app.configur",{"_index":382,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.descript",{"_index":380,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.id",{"_index":379,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.nam",{"_index":378,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.rout",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.servic",{"_index":383,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.tag",{"_index":381,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appcompon",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":857,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["applic",{"_index":283,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications.component.html",{"_index":285,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications.component.scss",{"_index":284,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications/applications.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":164,"title":{"components/ApplicationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":206,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":523,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1217,"title":{},"body":{"index.html":{}}}],["assest",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":327,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["auth",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":403,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":386,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":215,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1229,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1211,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":286,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["avail",{"_index":309,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":601,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":634,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":622,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":621,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":632,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":616,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":625,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":617,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":623,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":619,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":626,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":630,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":628,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backdrop",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":849,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:112",{"_index":854,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":850,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:125",{"_index":868,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:136",{"_index":870,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:159",{"_index":869,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:171",{"_index":864,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:181",{"_index":860,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:198",{"_index":856,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:208",{"_index":861,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:221",{"_index":858,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":866,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:41",{"_index":867,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:55",{"_index":865,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:67",{"_index":862,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:77",{"_index":863,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:90",{"_index":851,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":42,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1256,"title":{},"body":{"license.html":{}}}],["befor",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["behavior",{"_index":896,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["bitwis",{"_index":950,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":881,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":644,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1269,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1216,"title":{},"body":{"index.html":{}}}],["button",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1077,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":1078,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":704,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":948,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":393,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["carouselmodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["celia",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":916,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":914,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":918,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changesonuserlist",{"_index":1070,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":700,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":702,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":975,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":373,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":1041,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1199,"title":{},"body":{"index.html":{}}}],["click",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["clone",{"_index":1202,"title":{},"body":{"index.html":{}}}],["close",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":505,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":507,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":506,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":677,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":686,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":691,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":689,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":690,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":688,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":681,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":687,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":683,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":685,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:77",{"_index":682,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster10",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster8",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster9",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_id",{"_index":592,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["cluster_mock",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_typ",{"_index":593,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":166,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":508,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.cluster_id",{"_index":576,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.cluster_typ",{"_index":577,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.label",{"_index":578,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.multiten",{"_index":580,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.nam",{"_index":571,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.running_nod",{"_index":574,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.statu",{"_index":572,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.total_nod",{"_index":575,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":678,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":481,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":532,"title":{"interfaces/ClusterInfo.html":{}},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clustermock",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusternam",{"_index":679,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":509,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":680,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1213,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":287,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["command",{"_index":1198,"title":{},"body":{"index.html":{}}}],["commun",{"_index":786,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1246,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1226,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":597,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":643,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":771,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["configur",{"_index":375,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1083,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":733,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":750,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":785,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":760,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":768,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":789,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":730,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":782,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":747,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":792,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(summari",{"_index":562,"title":{},"body":{"components/ClusterComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":304,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":962,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{}}}],["control",{"_index":673,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["convert",{"_index":559,"title":{},"body":{"components/ClusterComponent.html":{}}}],["copi",{"_index":1248,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1240,"title":{},"body":{"license.html":{}}}],["core",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":537,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":1104,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":582,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":528,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":288,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["darbi",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dave",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davesmith@mail.com",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":168,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/clust",{"_index":549,"title":{},"body":{"components/ClusterComponent.html":{}}}],["delet",{"_index":855,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":461,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":475,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":368,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["descript",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":859,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["detect",{"_index":384,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["dev",{"_index":1208,"title":{},"body":{"index.html":{}}}],["develop",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":712,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1215,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1205,"title":{},"body":{"index.html":{}}}],["discard",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":932,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":967,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1218,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1255,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1105,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":311,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["doughnut",{"_index":289,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["due",{"_index":743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["e456908fad13",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e4b1",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edg",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":607,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":171,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":173,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ellen",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellen.martin@mail.com",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":1098,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["engin",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":317,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error.statu",{"_index":728,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.statustext",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorhandl",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":232,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":970,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1069,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1071,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1245,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1223,"title":{},"body":{"index.html":{}}}],["expect",{"_index":895,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":414,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1260,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhy2nlc3miolsit1jhil0simv4cci6mtu0mji4njg2mywiawf0ijoxntqymjc2mdyzlcjpc3mioijhdxroecisimp0asi6iji1ota5zdnkltjlodmtndlmmc04zmqzltflymzintyxmtnhmsisim5izii6ije1ndiynzywnjmilcjvcmdhbml6yxrpb25jrci6ijdhzdfhn2e4lwu0yjetndc5oc05mdcxlwu0nty5mdhmywqxmyisinjvbguioijpd25lciisinvzzxjjrci6impvag4uzg9lqg1hawwuy29tin0",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":709,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1220,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1231,"title":{},"body":{"index.html":{}}}],["form",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":734,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":429,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1234,"title":{},"body":{"index.html":{}}}],["gain",{"_index":790,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":779,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":514,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":518,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1192,"title":{"index.html":{},"license.html":{}},"body":{}}],["getapp",{"_index":462,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getapps(organizationid",{"_index":478,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getbaseurl",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getclust",{"_index":464,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail",{"_index":463,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail(organizationid",{"_index":480,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":483,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnod",{"_index":465,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnodes(organizationid",{"_index":485,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":984,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":466,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":487,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":467,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":489,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":468,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":491,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":469,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(organizationid",{"_index":493,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":738,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1237,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1265,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":290,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["group",{"_index":377,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{}}}],["group_work",{"_index":1066,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":385,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":940,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":775,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":725,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":719,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":721,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["hardcod",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":1235,"title":{},"body":{"index.html":{}}}],["helper",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1232,"title":{},"body":{"index.html":{}}}],["http://192.168.99.100",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1210,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1249,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":723,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1200,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":939,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1196,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":976,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":892,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["ignorebackdropclick",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["ik63rhhqhztqrk7dgiewcew0vrk",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1261,"title":{},"body":{"license.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["incorrect",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":1076,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":1075,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":1074,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:20",{"_index":1087,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:25",{"_index":1095,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:30",{"_index":1092,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1089,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1097,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1093,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1094,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1096,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":1079,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:47",{"_index":1088,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:66",{"_index":1084,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:72",{"_index":1080,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1081,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:99",{"_index":1085,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":589,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":352,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":1023,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate.userid",{"_index":1059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":400,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":972,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1201,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":591,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1227,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":459,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":744,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":581,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["item.nam",{"_index":674,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":941,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh.peterson@mail.com",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":521,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":360,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":408,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":366,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["json.stringifi",{"_index":882,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttokendata",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockappslist",{"_index":921,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist",{"_index":920,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist[index",{"_index":923,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mocknodelist",{"_index":922,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":900,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":919,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist[index",{"_index":899,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(respons",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":404,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":357,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":402,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":407,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1225,"title":{},"body":{"index.html":{}}}],["key",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1259,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":594,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["languag",{"_index":1264,"title":{},"body":{"license.html":{}}}],["law",{"_index":1251,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1042,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":767,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1228,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1239,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1267,"title":{},"body":{"license.html":{}}}],["line",{"_index":343,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":350,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":766,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":949,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":308,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":324,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":291,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorag",{"_index":356,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":351,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":633,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":550,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":358,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":613,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":618,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":624,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":620,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":627,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":631,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":629,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":648,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":654,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":647,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":642,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":645,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":646,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.reload",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":174,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loginrequest",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":843,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":178,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":845,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":844,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":176,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1194,"title":{},"body":{"index.html":{}}}],["map",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["map(respons",{"_index":890,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["martin",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":952,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecoz_udyimldug",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikeslashis@mail.com",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1189,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":292,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":293,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappslist",{"_index":878,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":510,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":876,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":911,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":915,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].label",{"_index":917,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":913,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":872,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":879,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":511,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":874,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":875,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":877,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":43,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":873,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":897,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":902,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":904,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].email",{"_index":907,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].nam",{"_index":905,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].role_nam",{"_index":908,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":636,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":205,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1236,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":579,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nativedock",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navig",{"_index":1209,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":590,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{}}}],["network",{"_index":791,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":697,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":696,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":698,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["next",{"_index":349,"title":{},"body":{"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1206,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":512,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":585,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":583,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":584,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":587,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":586,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":513,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":603,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":981,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":961,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":960,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":179,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":611,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":44,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1195,"title":{},"body":{"index.html":{}}}],["null",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":331,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":355,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["observ",{"_index":398,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1247,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":910,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["on",{"_index":529,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":929,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":933,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":991,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":998,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":992,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1000,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":666,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":638,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":337,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["organ",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":1024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":988,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":987,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization_mock",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":1031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":181,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":989,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":969,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["overview",{"_index":1270,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1162,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":761,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":600,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":608,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":609,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":599,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:104",{"_index":669,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:152",{"_index":670,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":672,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":667,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:43",{"_index":671,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:49",{"_index":668,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["params['clusterid",{"_index":558,"title":{},"body":{"components/ClusterComponent.html":{}}}],["password",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["password).pipe(map(respons",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirm",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1266,"title":{},"body":{"license.html":{}}}],["persist",{"_index":635,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1065,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["peterson",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pie",{"_index":322,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":889,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["platform",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":614,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["predefin",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":787,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1219,"title":{},"body":{"index.html":{}}}],["product",{"_index":1221,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":602,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1204,"title":{},"body":{"index.html":{}}}],["promis",{"_index":399,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":405,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":780,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1233,"title":{},"body":{"index.html":{}}}],["r",{"_index":951,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":294,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["reactiveformsmodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1238,"title":{},"body":{"index.html":{}}}],["real",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":295,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["refresh_token",{"_index":883,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regist",{"_index":370,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":1212,"title":{},"body":{"index.html":{}}}],["remov",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/OrganizationComponent.html":{}}}],["renam",{"_index":971,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":328,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["replic",{"_index":894,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":1203,"title":{},"body":{"index.html":{}}}],["request",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requir",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"overview.html":{}}}],["resetpassword",{"_index":470,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":497,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":503,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":183,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":364,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["response(new",{"_index":880,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":365,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["response.email",{"_index":1062,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.json",{"_index":891,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response.nam",{"_index":1018,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":1063,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":1028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["responseopt",{"_index":871,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["resset",{"_index":1086,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["role_nam",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":699,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":396,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":315,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["running_nod",{"_index":595,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxj",{"_index":401,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["sara",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saradoe@mail.com",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":471,"title":{},"body":{"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":684,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":499,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchang",{"_index":472,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchanges(f",{"_index":707,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(organizationid",{"_index":501,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":1214,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":296,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["screen",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1262,"title":{},"body":{"license.html":{}}}],["select",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1207,"title":{},"body":{"index.html":{}}}],["server",{"_index":727,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":376,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":930,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":297,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflabel",{"_index":298,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflin",{"_index":299,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxi",{"_index":300,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxislabel",{"_index":301,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxi",{"_index":302,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxislabel",{"_index":303,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["sidebar",{"_index":604,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1037,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1036,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":185,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sig",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":852,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["slashi",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smith",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":1254,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":675,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1263,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../backend.service.t",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1191,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":282,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{}}}],["src/app/applications/applications.component.ts:105",{"_index":306,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:19",{"_index":310,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:24",{"_index":330,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:29",{"_index":323,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:34",{"_index":307,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:39",{"_index":321,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:40",{"_index":320,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:41",{"_index":314,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:44",{"_index":319,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:58",{"_index":342,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:59",{"_index":345,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:60",{"_index":344,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:61",{"_index":346,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:62",{"_index":339,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:63",{"_index":341,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:64",{"_index":340,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:65",{"_index":338,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:66",{"_index":333,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:67",{"_index":336,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:77",{"_index":326,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:78",{"_index":329,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:79",{"_index":305,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":504,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:122",{"_index":525,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:152",{"_index":520,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:167",{"_index":526,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:21",{"_index":531,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:26",{"_index":548,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:31",{"_index":542,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:36",{"_index":534,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:41",{"_index":533,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:46",{"_index":535,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:51",{"_index":546,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:56",{"_index":547,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":536,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:66",{"_index":541,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:67",{"_index":540,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:68",{"_index":538,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:71",{"_index":539,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":543,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:86",{"_index":544,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:87",{"_index":530,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:92",{"_index":517,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":598,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/loc",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":460,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":490,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":474,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":477,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":498,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:14",{"_index":502,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:16",{"_index":500,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":484,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:18",{"_index":486,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:19",{"_index":492,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:21",{"_index":479,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:22",{"_index":482,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":495,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":496,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":494,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":488,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/clust",{"_index":588,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":676,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":387,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":397,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:94",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":842,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":847,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":846,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":959,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":964,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":968,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":963,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":965,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":966,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":986,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:114",{"_index":999,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:132",{"_index":996,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:145",{"_index":1002,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":1003,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:36",{"_index":1006,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:41",{"_index":1007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:46",{"_index":1005,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:49",{"_index":995,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:72",{"_index":997,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:97",{"_index":1001,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/error",{"_index":718,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":848,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":924,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":979,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":980,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":985,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":982,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":983,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1068,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1035,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:104",{"_index":1047,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:116",{"_index":1040,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":1048,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:28",{"_index":1050,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1052,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1049,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:35",{"_index":1053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1051,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:41",{"_index":1039,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:62",{"_index":1043,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:76",{"_index":1044,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:85",{"_index":1045,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1073,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1032,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":395,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1004,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["statu",{"_index":325,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":568,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":524,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1072,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(clust",{"_index":567,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscribe(nod",{"_index":570,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscribe(respons",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(summari",{"_index":561,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscript",{"_index":1009,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":990,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["succeed",{"_index":731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{}}}],["summari",{"_index":362,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["summary['total_clust",{"_index":563,"title":{},"body":{"components/ClusterComponent.html":{}}}],["summary['total_nod",{"_index":564,"title":{},"body":{"components/ClusterComponent.html":{}}}],["support",{"_index":774,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1268,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":374,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1090,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":926,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":934,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":928,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":936,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":973,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.app",{"_index":354,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.auth.logout",{"_index":1064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1102,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getapps(this.organizationid",{"_index":363,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.backend.getclusterdetail(this.organizationid",{"_index":566,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.organizationid",{"_index":569,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":560,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":1103,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":695,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":716,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1100,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":1101,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":551,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":555,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":693,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":557,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":692,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":554,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":694,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":615,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.email",{"_index":1056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.errormessag",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":406,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":409,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loadeddata",{"_index":353,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1027,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1026,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.nod",{"_index":552,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":553,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":612,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":974,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":359,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1055,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":714,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.route.params.subscribe(param",{"_index":556,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.router.navig",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":1014,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":1099,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":565,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1019,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":715,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":717,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["time",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":371,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["token",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{}}}],["tooltipmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":361,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":519,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["total_clust",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total_nod",{"_index":596,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["totalnod",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth.c@mail.com",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":348,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1193,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":783,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1242,"title":{},"body":{"license.html":{}}}],["understand",{"_index":742,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":770,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1222,"title":{},"body":{"index.html":{}}}],["up",{"_index":610,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":527,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":216,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updatenodeslist",{"_index":515,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateprofileus",{"_index":1038,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1046,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":994,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":993,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1082,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":739,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":893,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:105",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:18",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":711,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":713,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":710,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:39",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:52",{"_index":706,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:55",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:60",{"_index":705,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:62",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:75",{"_index":703,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:80",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:85",{"_index":701,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:93",{"_index":708,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:97",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":906,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":909,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":606,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":476,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":605,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":187,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":347,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":937,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":942,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":954,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":958,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":938,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":1112,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1230,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1224,"title":{},"body":{"index.html":{}}}],["view",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1258,"title":{},"body":{"license.html":{}}}],["without",{"_index":1257,"title":{},"body":{"license.html":{}}}],["write",{"_index":1253,"title":{},"body":{"license.html":{}}}],["x",{"_index":955,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.cluster_id).indexof(clusterid",{"_index":912,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(user.email",{"_index":901,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":898,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":935,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":334,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["xxxx",{"_index":944,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":943,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":947,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["yxxx",{"_index":946,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n\n\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role_name: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        this.notificationsService.add({message: user.email + ' created successfully'});\n        this.bsModalRef.hide();\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationsComponent.html":{"url":"components/ApplicationsComponent.html","title":"component - ApplicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/applications/applications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                applications\n            \n\n            \n                styleUrls\n                applications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./applications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apps\n                            \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockAppChart\n                            \n                            \n                                mockAppPieChart\n                            \n                            \n                                organizationId\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/applications/applications.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apps:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:34\n                            \n                        \n\n                \n                    \n                        List of available apps\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:39\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:77\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:58\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { mockAppChart, mockAppPieChart } from '../utils/mocks';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * List of available apps\n   */\n  apps: any[];\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockAppChart: any;\n  mockAppPieChart: any;\n  autoScale: any;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.apps = [];\n\n  /**\n   * Mocked Charts\n   */\n  Object.assign(this, {mockAppPieChart, mockAppChart});\n}\n\n\n  ngOnInit() {\n      // Get User data from localStorage\n      const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n      if (jwtData !== null) {\n        this.organizationId = JSON.parse(jwtData).OrganizationId;\n        if (this.organizationId !== null) {\n          // Requests top card summary data\n          this.backend.getApps(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.apps = data;\n            }\n          });\n        }\n      }\n    }\n}\n\n    \n\n    \n        \n\n    \n      Application\n    \n  \n  \n    \n    \n      \n        \n          SUMMARY\n        \n        \n          \n            \n              \n                \n                \n                4/5\n              \n              Apps running\n              DEPLOYED\n            \n          \n          \n            \n              20\n            \n            REGISTERED\n          \n        \n      \n    \n    \n    \n      \n        \n          APP STATUS TIMELINE\n        \n        \n          \n            \n            \n            \n          \n          \n            100%\n            0%\n            \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          DEPLOYED APP LIST\n        \n        \n           0\"  class=\"table\">\n            \n              \n                \n                  Name\n                \n                \n                  ID\n                \n                \n                  Description\n                \n                \n                  Tags\n                \n                \n                  Configuration\n                \n                \n                  Service Groups\n                \n                \n                  Info\n                \n              \n            \n            \n              \n                {{app.name}}\n                {{app.id}}\n                {{app.description}}  \n                {{app.tags}}\n                {{app.configuration}}\n                \n                {{app.service}}\n                \n                  \n                    \n                      i\n                    \n                  \n              \n            \n          \n          \n            No available applications detected\n        \n        \n        \n          \n            \n              \n            \n          \n        \n\n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Application                                        SUMMARY                                                                                                    4/5                            Apps running              DEPLOYED                                                          20                        REGISTERED                                                            APP STATUS TIMELINE                                                                                              100%            0%                                                                DEPLOYED APP LIST                           0\"  class=\"table\">                                                            Name                                                  ID                                                  Description                                                  Tags                                                  Configuration                                                  Service Groups                                                  Info                                                                                    {{app.name}}                {{app.id}}                {{app.description}}                  {{app.tags}}                {{app.configuration}}                                {{app.service}}                                                                            i                                                                                                No available applications detected                                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getClusterDetail\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getNodes\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                                \n                                    saveUserChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(organizationId: string, clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(organizationId: string, clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(organizationId: string, userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    saveUserChanges(organizationId: string, changes: any);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getNodes(organizationId: string, clusterId: string);\n    getResourcesSummary(organizationId: string);\n    // Applications\n    getApps(organizationId: string);\n    getClusterDetail(organizationId: string, clusterId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     ClusterInfo\n\n                    \n                \n                    \n                        \n                            Type :     ClusterInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:41\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:36\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:46\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:66\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:31\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:92\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:51\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:56\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:26\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClusterInfo } from '../definitions/interfaces/cluster-info';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: ClusterInfo;\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private route: ActivatedRoute\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = {};\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.clusterId = params['clusterId']; // (+) converts string 'id' to a number\n   });\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).organizationID;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n          .subscribe(summary => {\n            console.log(summary);\n            this.clustersCount = summary['total_clusters'];\n            this.nodesCount = summary['total_nodes'];\n          });\n         this.updateNodesList();\n       }\n     }\n     this.backend.getClusterDetail(this.organizationId, this.clusterId)\n      .subscribe(cluster => {\n        this.clusterData = cluster;\n      });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.organizationId, this.clusterId)\n    .subscribe(nodes => {\n      this.nodes = nodes;\n      if (!this.loadedData) {\n        this.loadedData = true;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        {{clusterData.name}}\n        STATUS\n      \n      \n        \n          \n            {{clusterData.status}}\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n              \n                \n                \n                \n                  {{clusterData.running_nodes}}/\n                  {{clusterData.total_nodes}}\n                \n              \n              {{clusterData.running_nodes}} running\n              NODES\n             \n        \n        \n          \n            \n              \n                id\n              \n              {{clusterData.cluster_id}}\n            \n            \n              \n                types\n              \n              {{clusterData.cluster_type}} \n            \n            \n              \n                Tags\n              \n              {{clusterData.labels}}\n            \n            \n              \n                Multitenant\n              \n              {{clusterData.multitenant}}\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > {{clusterData.name}} > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      {{clusterData.name}}        STATUS                                          {{clusterData.status}}                                              SUMMARY CLUSTER 1                                                                                                              {{clusterData.running_nodes}}/                  {{clusterData.total_nodes}}                                            {{clusterData.running_nodes}} running              NODES                                                                                 id                            {{clusterData.cluster_id}}                                                      types                            {{clusterData.cluster_type}}                                                       Tags                            {{clusterData.labels}}                                                      Multitenant                            {{clusterData.multitenant}}                                                                                    CLUSTER                                 > {{clusterData.name}} >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                                                                                                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type\n                                    \n                                \n                                \n                                    \n                                        cluster_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: string;\n  running_nodes?: string;\n  description?: string;\n  status?: string;\n  cluster_type?: string;\n  labels?: string;\n  multitenant?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n    Backend control\n    \n      \n        \n        \n          {{item.name}}\n        \n        \n        \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                    Backend control                                    {{item.name}}                                              Real                                Mock                                    Notifications    Spam test notification                Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error message\n   */\n  errorMessage: string;\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessage = '';\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessage = '';\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        this.errorMessage = error.statusText;\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                0\">Email or password incorrect\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                    0\">Email or password incorrect                                                    Log in                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Simulates adding a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Simulates delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:198\n                            \n                        \n\n\n                \n                    \n                            \nAppications\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(organizationId: string, clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:221\n                            \n                        \n\n\n                \n                    \n                            Simulates get cluster details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(organizationId: string, clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:208\n                            \n                        \n\n\n                \n                    \n                            Simulates get nodes list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Simulates reset password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Simulates save user changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList, mockResourcesSummary, mockAppsList, mockNodeList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        token: mockJwtToken,\n        refresh_token: '018e42cf-9acb-4b4c-8804-6c54334d6947'\n      }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {}\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList[index]),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({ users: mockUserList }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /**\n  * Simulates adding a user\n  */\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      }))).pipe(\n        map(response => response.json())\n      );\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      }))).pipe(\n        map(response => response.json())\n      );\n    }\n  }\n\n  /**\n  * Simulates delete user\n  */\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates reset password\n  */\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates save user changes\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  saveUserChanges(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index !== -1) {\n      mockUserList[index].name = user.name;\n      mockUserList[index].email = user.email;\n      mockUserList[index].role_name = user.role_name;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    }))).pipe(\n      map(response => response.json())\n    );\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.cluster_id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].labels = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /********************\n   * Appications\n   ********************/\n\n  /**\n   * Simulates get apps list\n   */\n  getApps(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockAppsList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get nodes list\n   */\n  getNodes(organizationId: string, clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockNodeList),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /**\n   * Simulates get cluster details\n   */\n  getClusterDetail(organizationId: string, clusterId: string) {\n    const index = mockClusterList.map(x => x.cluster_id).indexOf(clusterId);\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList[index]),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                config\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: 'static',\n    ignoreBackdropClick: false\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:46\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:36\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: 'static',\n    ignoreBackdropClick: false\n  };\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    });\n  }\n}\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                                                                                                               Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      this.updateService.changesOnUserList.next();\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:35\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:30\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                29 %\n                (7/24)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                63 %\n                (14/22)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                50 %\n                (17/34)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../backend.service.ts)\n                        \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/backend.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + ':31404/v1/'\n                        \n                    \n\n                \n                    \n                        URL of the public API\n\n                    \n                \n\n            \n        \n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: getBaseUrl\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // hardcoded local environment API ip address\n  apiUrl: 'http://192.168.99.100'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    clusterMock: 'cluster_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n    refreshToken: 'refresh_token'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Assets Application',\n        id: '0800200c9a61',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'SIG Application',\n        id: '0800200c9a62',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Engine App',\n        id: '0800200c9a63',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a64',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a65',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a61',\n        name: 'Cluster1',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '1',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a62',\n        name: 'Cluster2',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '2',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a63',\n        name: 'Cluster3',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '3',\n        cluster_type: 'Kubernetes',\n        status: 'Error',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a64',\n        name: 'Cluster4',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '4',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a65',\n        name: 'Cluster5',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '5',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a66',\n        name: 'Cluster6',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '6',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a67',\n        name: 'Cluster7',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '7',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a68',\n        name: 'Cluster8',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '8',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a69',\n        name: 'Cluster9',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '9',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a70',\n        name: 'Cluster10',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '10',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJhY2Nlc3MiOlsiT1JHIl0sImV4cCI6MTU0MjI4Njg2MywiaWF0IjoxNTQyMjc2MDYzLCJpc3MiOiJhdXRoeCIsImp0aSI6IjI1OTA5ZDNkLTJlODMtNDlmMC04ZmQzLTFlYmZiNTYxMTNhMSIsIm5iZiI6IjE1NDIyNzYwNjMiLCJvcmdhbml6YXRpb25JRCI6IjdhZDFhN2E4LWU0YjEtNDc5OC05MDcxLWU0NTY5MDhmYWQxMyIsInJvbGUiOiJPd25lciIsInVzZXJJRCI6ImpvaG4uZG9lQG1haWwuY29tIn0' +\n    '.MeCoZ_UdYiMlduG-ik63rHHqHztQrK7dgIEWceW0VRk'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    total_clusters: mockClusterList.length,\n    total_nodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Celia Toth',\n        email: 'toth.c@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Sara Doe',\n        email: 'saradoe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Dave Smith',\n        email: 'davesmith@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'john.doe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Ellen Martin',\n        email: 'ellen.martin@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Josh Peterson',\n        email: 'josh.peterson@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Mike Slashis',\n        email: 'mikeslashis@mail.com',\n        role_name: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
