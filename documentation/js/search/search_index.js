var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.173,1,0.713]],["body/components/AddUserComponent.html",[0,0.265,1,1.018,2,0.28,3,0.187,4,0.748,5,0.748,6,0.748,7,0.124,8,4.761,9,3.619,10,1.804,11,0.691,12,1.224,13,0.748,14,1.765,15,1.31,16,1.291,17,0.903,18,1.02,19,3.267,20,1.02,21,3.267,22,0.187,23,0.691,24,1.403,25,1.789,26,2.079,27,1.912,28,1.987,29,2.102,30,4.352,31,3.107,32,3.107,33,0.557,34,1.834,35,3.267,36,2.703,37,3.267,38,1.359,39,0.496,40,1.371,41,1.442,42,1.79,43,1.442,44,0.866,45,3.267,46,0.888,47,0.038,48,0.549,49,0.539,50,0.625,51,3.267,52,2.18,53,1.834,54,1.39,55,1.803,56,4.073,57,2.332,58,2.747,59,0.81,60,0.92,61,3.267,62,2.18,63,2.128,64,2.694,65,3.918,66,2.703,67,2.18,68,1.231,69,2.703,70,2.703,71,4.05,72,1.649,73,1.987,74,3.267,75,2.18,76,2.332,77,1.371,78,2.18,79,2.18,80,2.18,81,1.117,82,2.18,83,2.18,84,1.834,85,1.354,86,1.02,87,1.12,88,2.18,89,2.18,90,2.18,91,0.573,92,0.255,93,0.821,94,0.681,95,0.903,96,0.995,97,1.101,98,0.995,99,0.903,100,0.187,101,0.292,102,0.917,103,4.352,104,1.492,105,0.995,106,1.987,107,0.843,108,2.18,109,2.18,110,3.267,111,2.18,112,0.995,113,1.834,114,3.267,115,1.556,116,1.804,117,1.804,118,2.797,119,1.224,120,1.804,121,1.804,122,1.804,123,1.789,124,2.18,125,2.18,126,0.681,127,1.224,128,2.332,129,2.332,130,2.055,131,2.332,132,0.619,133,1.12,134,1.12,135,1.02,136,1.493,137,0.748,138,0.748,139,0.51,140,0.748,141,0.461,142,0.619,143,0.748,144,0.51,145,0.563,146,0.748,147,0.51,148,0.748,149,0.51,150,0.928,151,0.748,152,0.51,153,0.748,154,0.51,155,0.748,156,0.563,157,0.748,158,0.51,159,0.748,160,0.51,161,0.748,162,0.019,163,0.019]],["title/components/AppComponent.html",[0,0.173,139,0.713]],["body/components/AppComponent.html",[0,0.315,1,0.808,2,0.387,3,0.296,4,1.184,5,1.184,6,1.184,7,0.196,11,0.954,12,1.57,13,1.184,14,1.905,15,1.493,16,0.808,17,0.524,18,1.409,20,1.409,22,0.296,23,0.954,25,2.296,26,2.009,33,0.77,38,1.665,39,0.685,43,1.724,44,0.84,46,0.657,47,0.037,48,0.508,49,0.539,50,0.462,59,0.524,60,0.954,81,0.859,91,0.624,92,0.528,94,1.078,99,1.43,100,0.296,101,0.462,102,0.808,132,0.981,133,1.548,134,1.548,135,1.409,136,1.829,137,1.184,138,1.184,139,1.248,140,1.184,141,0.73,142,0.981,143,1.184,144,0.808,145,0.891,146,1.184,147,0.808,148,1.184,149,0.808,150,1.515,151,1.184,152,0.808,153,1.184,154,0.808,155,1.184,156,0.891,157,1.184,158,0.808,159,1.184,160,0.808,161,1.184,162,0.026,163,0.026,164,2.856,165,2.278,166,4.512,167,4.512,168,3.354,169,4.413,170,2.856,171,3.354,172,4.512,173,2.839,174,3.451,175,3.451,176,1.3,177,1.937,178,3.451,179,1.937]],["title/modules/AppModule.html",[180,1.709,181,1.915]],["body/modules/AppModule.html",[1,1.31,2,0.241,3,0.241,7,0.16,9,1.773,16,0.659,17,0.428,41,1.519,47,0.038,91,0.729,92,0.33,94,1.612,95,2.139,96,1.287,100,0.42,101,0.378,132,0.801,139,1.375,141,1.184,142,0.801,144,1.31,145,0.727,147,1.375,149,1.251,152,1.251,154,1.251,156,1.38,158,1.251,160,1.31,162,0.023,163,0.023,179,1.582,180,2.208,181,3.938,182,1.773,183,3.751,184,4.06,185,2.332,186,2.332,187,2.332,188,2.332,189,2.332,190,2.441,191,3.256,192,2.012,193,1.582,194,2.818,195,3.934,196,3.934,197,3.256,198,2.012,199,3.934,200,2.818,201,3.934,202,2.332,203,2.012,204,3.934,205,3.256,206,2.475,207,2.818,208,2.818,209,3.236,210,2.818,211,2.818,212,1.287,213,2.012,214,2.818,215,2.818,216,2.818,217,2.818,218,2.818,219,2.818,220,2.818,221,2.818,222,2.818,223,2.818,224,3.934,225,3.934,226,2.012,227,2.818,228,2.012,229,3.934,230,2.332,231,3.934,232,1.773,233,3.934,234,1.582,235,1.773,236,2.332,237,2.818,238,2.012,239,2.818,240,2.818,241,2.332,242,2.818,243,2.818,244,2.818,245,2.818,246,2.818,247,2.818]],["title/guards/AuthGuard.html",[248,2.174,249,2.52]],["body/guards/AuthGuard.html",[2,0.327,3,0.327,7,0.218,11,0.808,22,0.327,23,0.808,33,0.822,39,0.731,44,0.731,46,0.917,47,0.038,48,0.487,49,0.487,50,0.646,54,1.086,59,0.801,77,3.031,91,0.669,92,0.448,100,0.327,101,0.512,102,0.894,104,2.2,107,0.987,123,1.745,126,1.193,162,0.028,163,0.028,165,1.93,234,2.145,248,2.728,249,3.987,250,3.822,251,3.987,252,5.711,253,3.822,254,4.163,255,3.822,256,3.822,257,5.54,258,4.366,259,5.54,260,3.822,261,1.127,262,2.962,263,4.818,264,1.127,265,1.93,266,1.193,267,1.44,268,1.193,269,1.44,270,4.366,271,2.728,272,2.433,273,2.145,274,3.163,275,3.987,276,3.163,277,3.163,278,3.822,279,2.404,280,3.163,281,2.145,282,3.822,283,3.822,284,3.163]],["title/injectables/AuthService.html",[190,1.39,264,0.713]],["body/injectables/AuthService.html",[2,0.238,3,0.238,7,0.158,17,0.829,22,0.238,23,0.823,24,1.498,27,1.836,29,2.264,33,0.664,39,0.591,41,1.584,42,1.671,44,0.807,46,0.741,47,0.038,48,0.393,49,0.492,50,0.521,53,2.735,54,0.788,55,1.613,59,0.807,60,0.587,68,1.694,73,2.225,76,2.778,77,2.448,81,1.093,85,1.613,91,0.664,92,0.325,93,1.045,98,1.777,100,0.238,101,0.372,102,1.052,104,2.053,105,1.777,106,1.777,107,1.16,112,1.777,113,1.557,119,2.523,123,1.267,126,0.866,162,0.023,163,0.023,190,1.777,193,1.557,232,1.745,234,1.557,251,4.033,254,3.901,262,2.523,264,1.052,265,1.401,266,0.866,267,1.045,268,1.215,269,1.045,270,4.247,271,1.981,272,2.686,274,2.296,275,4.033,276,2.296,277,2.296,280,2.296,284,2.296,285,2.296,286,3.228,287,3.221,288,4.033,289,5.32,290,4.873,291,1.836,292,2.986,293,2.774,294,3.892,295,4.495,296,2.774,297,4.873,298,2.448,299,3.892,300,3.72,301,2.448,302,2.774,303,1.965,304,2.774,305,2.774,306,2.296,307,1.466,308,1.981,309,1.045,310,1.557,311,1.267,312,4.033,313,2.774,314,1.557,315,1.981,316,3.892,317,2.774,318,2.774,319,2.774,320,2.774,321,2.774,322,2.774,323,2.774,324,1.981,325,2.296,326,2.774,327,2.774,328,1.981,329,2.774,330,2.774,331,1.045,332,1.15,333,2.774]],["title/interfaces/Backend.html",[24,0.786,334,0.865]],["body/interfaces/Backend.html",[2,0.284,3,0.284,7,0.188,17,0.748,22,0.284,24,1.133,27,1.247,28,2.654,29,2.041,33,0.749,34,2.464,44,0.909,46,1.131,47,0.037,48,0.6,49,0.6,50,0.796,59,0.909,63,2.249,81,1.213,86,1.034,91,0.388,100,0.284,162,0.026,163,0.026,262,2.765,265,1.671,291,1.856,292,2.945,301,2.762,334,1.247,335,2.739,336,2.762,337,3.134,338,3.134,339,3.134,340,3.134,341,3.134,342,2.762,343,2.762,344,3.134,345,3.31,346,3.134,347,2.614,348,3.31,349,3.134,350,3.31,351,3.134,352,3.31,353,3.134,354,3.31,355,3.134,356,3.31,357,3.134,358,3.31,359,3.31,360,3.31,361,3.134,362,3.31,363,3.134,364,3.099,365,3.31,366,1.511]],["title/injectables/BackendService.html",[41,0.865,264,0.713]],["body/injectables/BackendService.html",[2,0.251,3,0.251,7,0.167,11,1.25,17,0.702,22,0.251,24,1.043,27,1.103,28,2.58,29,1.916,33,0.689,34,2.267,39,0.702,41,1.148,44,0.897,46,1.105,47,0.037,48,0.586,49,0.586,50,0.778,54,1.666,59,0.89,60,1.228,63,2.112,81,1.205,91,0.542,92,0.343,93,1.103,100,0.251,101,0.392,162,0.024,163,0.024,165,1.478,262,2.596,264,1.082,265,1.478,273,1.643,291,1.522,292,2.799,301,2.541,336,2.541,337,2.884,338,2.884,339,2.884,340,2.884,341,2.884,342,2.541,343,2.541,344,2.884,346,2.884,347,2.532,349,2.884,351,2.884,353,2.884,355,2.884,357,2.884,361,2.884,363,2.884,364,2.91,367,2.422,368,2.927,369,2.927,370,2.927,371,2.927,372,2.927,373,2.927,374,2.927,375,2.927,376,2.927,377,2.927,378,2.927,379,2.927,380,5.862,381,5.862]],["title/interfaces/ClusterInfo.html",[334,0.865,382,2.174]],["body/interfaces/ClusterInfo.html",[2,0.427,3,0.345,7,0.23,22,0.345,23,1.054,44,0.612,47,0.037,48,0.57,49,0.629,50,0.667,55,2.404,72,2.036,81,1.213,87,1.937,100,0.345,116,3.336,162,0.029,163,0.029,334,1.536,382,3.556,383,3.336,384,3.336,385,2.515,386,2.878,387,4.032,388,4.672,389,4.672,390,4.031,391,4.031,392,4.672]],["title/interfaces/ComponentMockOption.html",[334,0.865,393,1.915]],["body/interfaces/ComponentMockOption.html",[0,0.292,2,0.384,3,0.237,7,0.157,11,0.585,12,1.212,14,1.212,15,1.002,16,0.647,17,0.42,18,0.863,20,0.863,22,0.237,23,0.821,25,1.262,26,1.691,38,0.863,39,0.42,43,1.382,47,0.038,48,0.6,49,0.453,50,0.601,54,0.786,55,1.146,60,0.585,72,2.265,81,1.012,86,1.212,87,0.948,91,0.57,92,0.324,94,0.863,99,1.146,100,0.384,101,0.37,102,0.647,106,1.262,107,0.714,123,2.777,126,1.811,141,0.585,142,1.456,145,0.714,162,0.023,163,0.023,176,1.042,177,2.179,179,1.552,212,1.262,261,0.647,266,0.863,267,1.042,268,1.212,269,1.042,291,1.463,303,1.396,307,2.252,308,1.974,324,1.974,331,1.833,332,1.146,334,1.382,366,1.773,385,1.396,393,3.061,394,1.739,395,1.739,396,2.588,397,2.822,398,1.739,399,2.442,400,2.442,401,1.974,402,1.974,403,0.714,404,1.262,405,2.288,406,2.288,407,2.442,408,1.739,409,1.739,410,2.288,411,2.772,412,1.396,413,2.772,414,2.288,415,4.686,416,3.213,417,3.213,418,1.974,419,3.213,420,2.288,421,3.213,422,2.288,423,3.213,424,2.288,425,3.213,426,3.213,427,1.974,428,3.213,429,1.974,430,3.213,431,1.974,432,3.213,433,2.772,434,1.974,435,2.288,436,1.974,437,2.288,438,4.042,439,2.288,440,4.686,441,4.042,442,2.288,443,2.288,444,2.288,445,2.288,446,2.288,447,2.288,448,2.288,449,2.288,450,2.288,451,1.974,452,2.288,453,2.288,454,2.288,455,1.739,456,2.288,457,1.974,458,1.739,459,2.288]],["title/components/DebugPanelComponent.html",[0,0.173,141,0.644]],["body/components/DebugPanelComponent.html",[0,0.32,1,0.52,2,0.377,3,0.19,4,0.763,5,0.763,6,0.763,7,0.127,11,0.701,12,1.238,13,0.763,14,1.788,15,1.318,16,0.928,17,0.503,18,1.035,20,1.035,22,0.19,23,0.701,24,0.856,25,1.81,26,2.089,33,0.565,38,1.372,39,0.503,40,1.398,43,1.524,44,0.775,46,0.631,47,0.038,48,0.587,49,0.475,50,0.661,54,0.942,55,0.921,59,0.602,60,0.929,72,2.002,81,0.631,86,1.035,87,0.763,91,0.515,92,0.26,94,0.694,99,0.921,100,0.34,101,0.298,102,0.52,106,1.015,107,0.574,123,2.701,126,1.731,127,1.248,132,0.632,133,1.137,134,1.137,135,1.035,136,1.507,137,0.763,138,0.763,139,0.52,140,0.763,141,0.929,142,1.552,143,0.763,144,0.52,145,0.856,146,0.763,147,0.52,148,0.763,149,0.52,150,0.942,151,0.763,152,0.52,153,0.763,154,0.52,155,0.763,156,0.574,157,0.763,158,0.52,159,0.763,160,0.52,161,0.763,162,0.019,163,0.019,176,1.249,177,2.467,179,1.248,212,2.397,261,0.52,266,0.694,267,0.838,268,1.238,269,0.838,291,1.249,303,1.674,307,2.191,308,1.587,311,1.514,324,2.367,331,2.021,332,0.921,334,0.942,366,1.514,385,1.122,393,3.101,394,3.302,395,1.398,396,2.489,397,2.957,398,1.398,399,2.085,400,2.085,401,1.587,402,1.587,403,0.574,404,1.015,405,2.743,406,2.743,407,2.494,408,2.085,409,2.764,410,1.84,411,2.367,412,1.122,413,2.367,414,1.84,415,4.44,416,2.743,417,2.743,418,1.587,419,2.743,420,1.84,421,2.743,422,1.84,423,2.743,424,1.84,425,2.743,426,2.743,427,1.587,428,2.743,429,1.587,430,2.743,431,1.587,432,3.28,433,2.83,434,2.367,435,2.743,436,1.587,437,1.84,438,3.83,439,1.84,440,4.44,441,3.83,442,1.84,443,1.84,444,1.84,445,1.84,446,1.84,447,1.84,448,1.84,449,1.84,450,1.84,451,1.587,452,2.743,453,2.743,454,3.637,455,1.398,456,1.84,457,2.83,458,1.398,459,1.84,460,3.315,461,3.315,462,2.223,463,2.223,464,2.223,465,2.223,466,2.223,467,3.315,468,3.315,469,3.315,470,1.514]],["title/components/EditClusterComponent.html",[0,0.173,144,0.713]],["body/components/EditClusterComponent.html",[0,0.273,1,0.544,2,0.294,3,0.199,4,0.798,5,0.798,6,0.798,7,0.132,11,0.725,12,1.272,13,0.798,14,1.803,15,1.237,16,0.544,17,0.353,18,1.071,20,1.071,22,0.199,23,0.725,24,1.445,25,1.859,26,2.11,28,2.052,33,0.585,36,2.837,38,1.403,39,0.52,40,1.464,41,1.511,42,1.824,43,1.473,44,0.85,46,0.775,47,0.038,48,0.524,49,0.537,50,0.546,53,1.925,55,1.862,56,3.942,58,1.925,59,0.618,60,0.861,63,1.859,66,2.837,68,1.534,69,2.837,70,2.837,71,4.147,72,2.269,73,2.288,81,1.108,84,1.925,85,1.421,86,1.071,87,1.541,91,0.607,92,0.272,93,0.877,94,0.727,95,0.964,96,1.062,97,1.175,98,1.062,99,0.964,100,0.199,101,0.312,102,0.953,104,1.859,105,1.566,106,1.566,107,0.885,112,1.062,118,2.907,120,1.925,121,1.925,122,1.925,126,0.727,127,1.306,131,3.208,132,0.661,133,1.176,134,1.176,135,1.071,136,1.541,137,0.798,138,0.798,139,0.544,140,0.798,141,0.492,142,0.661,143,0.798,144,1.052,145,1.425,146,0.798,147,0.544,148,0.798,149,0.544,150,0.974,151,0.798,152,0.544,153,0.798,154,0.544,155,0.798,156,0.601,157,0.798,158,0.544,159,0.798,160,0.544,161,0.798,162,0.02,163,0.02,176,1.693,238,4.045,261,0.544,266,0.727,267,0.877,268,0.727,269,0.877,307,1.534,309,0.877,310,1.306,311,1.062,332,0.964,343,2.157,364,2.827,385,2.617,391,2.448,403,0.601,404,1.062,412,2.269,431,1.661,433,2.448,455,1.464,471,4.689,472,1.925,473,3.429,474,3.429,475,4.493,476,5.012,477,4.493,478,3.429,479,2.326,480,2.326,481,3.429,482,2.326,483,2.326,484,2.326,485,2.326,486,2.326,487,2.326,488,2.326,489,4.072,490,3.208,491,3.429,492,3.429,493,4.072,494,1.661,495,2.326,496,2.326,497,2.326,498,2.326]],["title/injectables/ErrorHandlerService.html",[206,1.915,264,0.713]],["body/injectables/ErrorHandlerService.html",[2,0.277,3,0.277,7,0.184,11,0.914,17,0.739,22,0.277,33,0.83,39,0.739,44,0.656,46,0.615,47,0.037,48,0.327,49,0.327,50,0.433,53,3.287,55,1.339,59,0.491,60,0.914,91,0.506,92,0.379,100,0.277,101,0.433,106,1.476,119,3.194,127,1.815,135,1.01,162,0.025,163,0.025,176,1.218,193,1.815,205,3.576,206,2.718,230,2.675,258,2.675,261,0.757,264,1.139,281,1.815,288,3.576,309,1.218,312,2.675,314,1.815,328,2.308,366,1.973,386,2.308,403,0.835,407,2.034,408,2.034,436,2.308,438,4.357,441,4.374,499,4.028,500,2.675,501,4.321,502,3.233,503,4.321,504,5.196,505,3.233,506,3.576,507,4.868,508,5.001,509,3.233,510,2.675,511,3.233,512,3.233,513,3.233,514,3.233,515,4.321,516,3.233,517,3.233,518,3.233,519,3.233,520,3.233,521,3.233,522,4.321,523,3.233,524,4.321,525,4.321,526,3.233,527,3.233,528,3.233,529,3.233,530,2.308,531,2.675,532,3.233,533,4.321,534,3.233,535,3.233,536,4.321,537,3.233,538,3.233,539,3.233,540,3.233,541,3.233,542,4.321,543,3.233,544,3.233,545,2.675,546,3.233,547,3.233,548,2.675,549,3.233,550,2.308,551,2.034,552,2.308,553,3.233,554,3.233,555,3.233,556,3.233,557,2.675,558,3.233,559,3.233,560,2.675,561,3.233,562,3.233,563,3.233,564,3.233,565,3.233,566,3.233,567,3.233,568,3.233,569,4.321,570,3.233,571,3.233,572,3.233,573,3.233,574,3.233,575,3.233,576,3.233,577,3.233]],["title/components/LoginComponent.html",[0,0.173,147,0.713]],["body/components/LoginComponent.html",[0,0.291,1,0.643,2,0.331,3,0.235,4,0.943,5,0.943,6,0.943,7,0.156,11,0.818,12,1.397,13,0.943,14,1.841,15,1.407,16,0.643,17,0.417,18,1.207,20,1.207,22,0.235,23,0.818,26,1.829,27,2.053,29,2.119,33,0.659,38,1.516,39,0.587,44,0.805,46,0.523,47,0.037,48,0.452,49,0.452,50,0.368,56,2.76,57,2.76,59,0.679,60,0.946,68,1.457,73,1.765,76,3.193,85,2.011,86,0.858,91,0.621,92,0.322,94,0.858,95,1.139,100,0.235,101,0.368,102,1.136,112,1.255,119,1.543,132,0.781,133,1.326,134,1.326,135,1.207,136,1.665,137,0.943,138,0.943,139,0.643,140,0.943,141,0.818,142,1.507,143,0.943,144,0.643,145,0.71,146,0.943,147,1.136,148,0.943,149,0.643,150,1.379,151,0.943,152,0.643,153,0.943,154,0.643,155,0.943,156,0.71,157,0.943,158,0.643,159,0.943,160,0.643,161,0.943,162,0.023,163,0.023,168,3.053,171,3.053,173,2.813,190,2.488,212,1.255,213,1.962,226,1.962,228,1.962,234,1.543,254,3.89,272,1.952,286,3.053,291,2.096,298,2.432,300,3.199,309,1.829,325,4.016,328,1.962,397,3.053,413,2.76,470,1.255,530,3.465,548,3.199,578,2.274,579,3.866,580,3.866,581,4.853,582,4.853,583,4.016,584,2.748,585,5.304,586,3.866,587,2.748,588,2.748,589,3.866,590,3.866,591,1.952,592,3.866,593,3.199,594,3.866,595,3.199,596,2.748,597,3.465,598,2.76,599,2.432,600,4.853,601,2.748,602,3.866,603,2.76,604,2.748,605,2.748,606,3.866,607,2.748,608,2.748,609,2.748,610,2.748,611,2.748,612,1.962,613,2.274,614,1.962,615,3.199,616,3.866]],["title/components/MainComponent.html",[0,0.173,149,0.713]],["body/components/MainComponent.html",[0,0.326,1,0.9,2,0.415,3,0.33,4,1.319,5,1.319,6,1.319,7,0.219,11,1.023,12,1.653,13,1.319,14,1.939,15,1.477,16,0.9,17,0.584,18,1.511,20,1.511,22,0.33,33,0.825,38,1.734,39,0.803,44,0.734,47,0.037,48,0.489,59,0.584,60,0.814,91,0.451,92,0.451,100,0.33,101,0.515,132,1.093,133,1.659,134,1.659,135,1.511,136,1.905,137,1.319,138,1.319,139,0.9,140,1.319,141,0.814,142,1.093,143,1.319,144,0.9,145,0.993,146,1.319,147,0.9,148,1.319,149,1.299,150,1.578,151,1.319,152,0.9,153,1.319,154,0.9,155,1.319,156,0.993,157,1.319,158,0.9,159,1.319,160,0.9,161,1.319,162,0.028,163,0.028,261,0.9,403,0.993,404,1.756,617,3.183,618,4.838,619,4.838,620,4.838,621,3.847,622,3.847]],["title/injectables/MockupBackendService.html",[42,1.044,264,0.713]],["body/injectables/MockupBackendService.html",[2,0.29,3,0.196,7,0.13,11,0.484,17,0.756,22,0.442,24,1.151,27,1.679,28,2.417,29,1.971,33,0.578,34,1.901,39,0.612,42,1.162,44,0.857,46,1.047,47,0.038,48,0.564,49,0.556,50,0.737,53,2.263,54,1.585,59,0.915,63,2.035,64,1.155,81,1.193,85,0.948,86,1.058,91,0.557,92,0.268,93,0.862,100,0.196,101,0.307,106,2.035,107,1.041,115,1.633,131,1.633,162,0.02,163,0.02,165,1.155,232,1.439,261,0.535,262,2.263,264,0.944,265,1.155,272,1.155,273,1.284,291,1.793,292,2.796,301,2.131,303,2.036,306,4.721,314,1.284,336,2.131,337,2.418,338,2.418,339,2.418,340,2.418,341,2.418,342,2.131,343,2.131,344,2.418,346,2.418,347,2.417,349,2.418,351,2.418,353,2.418,355,2.418,357,2.418,361,2.418,363,2.418,364,2.804,366,1.546,385,1.71,390,4.031,399,1.439,403,0.591,510,4.617,531,1.893,550,1.633,551,1.439,552,1.633,623,4.721,624,1.893,625,2.288,626,2.288,627,2.288,628,2.288,629,2.288,630,2.288,631,2.288,632,2.288,633,2.288,634,2.288,635,4.758,636,2.288,637,2.288,638,2.418,639,1.439,640,1.439,641,1.439,642,2.418,643,1.633,644,1.633,645,1.633,646,5.646,647,5.293,648,3.387,649,3.387,650,2.879,651,3.387,652,3.387,653,3.387,654,2.288,655,2.288,656,2.288,657,2.288,658,2.288,659,3.387,660,2.288,661,2.502,662,2.288,663,2.288,664,2.288,665,2.288,666,2.288,667,2.288,668,2.288,669,2.288,670,2.288,671,2.288,672,2.288,673,2.288,674,2.288,675,2.288,676,2.288]],["title/interfaces/Notification.html",[331,1.147,334,0.865]],["body/interfaces/Notification.html",[2,0.309,3,0.309,7,0.206,16,0.845,22,0.44,23,0.983,39,0.548,43,1.026,47,0.038,49,0.598,50,0.783,59,0.78,81,1.139,87,1.861,91,0.423,92,0.423,100,0.398,101,0.484,102,0.845,107,1.199,162,0.027,163,0.027,165,1.823,261,0.845,264,1.087,273,2.027,279,2.271,281,2.027,298,2.271,331,2.115,332,2.248,334,1.32,396,1.823,403,0.932,458,3.412,470,1.648,591,1.823,661,2.608,677,2.577,678,4.252,679,2.988,680,3.845,681,2.988,682,2.988,683,2.577,684,2.577,685,2.577,686,2.577,687,2.577,688,2.988,689,2.988,690,2.988,691,3.845,692,2.988,693,2.988,694,2.988,695,2.988,696,2.988,697,2.988,698,2.988,699,2.988,700,2.988,701,2.988,702,3.845,703,2.577,704,2.988,705,4.252,706,2.988,707,2.577,708,2.027,709,2.988,710,2.988,711,2.988,712,2.988,713,2.988]],["title/components/NotificationsComponent.html",[0,0.173,152,0.713]],["body/components/NotificationsComponent.html",[0,0.283,1,0.596,2,0.443,3,0.218,4,0.873,5,0.873,6,0.873,7,0.145,11,0.774,12,1.339,13,0.873,14,1.817,15,1.376,16,0.596,17,0.386,18,1.143,20,1.143,22,0.218,23,0.774,24,1.489,25,1.958,33,0.624,38,1.464,39,0.556,41,1.549,42,1.828,43,1.514,44,0.828,46,0.697,47,0.038,48,0.474,49,0.577,50,0.693,57,3.347,59,0.651,60,1.051,68,1.38,91,0.66,92,0.298,93,0.959,96,1.162,97,1.285,98,1.162,99,1.055,100,0.218,101,0.341,102,1.003,105,1.672,107,0.657,117,3.03,126,1.339,132,0.723,133,1.608,134,1.256,135,1.143,136,1.608,137,0.873,138,0.873,139,0.596,140,0.873,141,0.538,142,0.723,143,0.873,144,0.596,145,0.657,146,0.873,147,0.596,148,0.873,149,0.596,150,1.04,151,0.873,152,1.097,153,0.873,154,0.596,155,0.873,156,0.657,157,0.873,158,0.596,159,0.873,160,0.596,161,0.873,162,0.021,163,0.021,176,1.38,177,2.055,192,3.347,261,0.596,266,0.795,267,0.959,268,0.795,269,0.959,281,2.632,287,3.03,303,1.849,307,1.38,311,1.672,331,2.124,332,2.259,386,2.614,403,0.657,408,2.949,409,2.303,411,1.818,470,1.672,506,3.03,591,1.849,683,2.614,684,2.614,685,3.965,686,3.893,687,2.614,703,1.818,708,2.055,714,2.107,715,3.661,716,3.661,717,4.688,718,2.546,719,2.546,720,2.546,721,2.546,722,2.546,723,2.107,724,2.546,725,2.546,726,3.661,727,3.661,728,3.661,729,3.661,730,3.661,731,3.661,732,3.661,733,3.661,734,3.661,735,3.661,736,3.661,737,3.661,738,3.661,739,3.661,740,3.661,741,2.546,742,3.03,743,2.546,744,2.546,745,2.546,746,2.546,747,2.546,748,3.661,749,2.546,750,2.546,751,3.661,752,3.661,753,3.661,754,3.661]],["title/injectables/NotificationsService.html",[43,0.865,264,0.713]],["body/injectables/NotificationsService.html",[2,0.29,3,0.29,7,0.193,16,1.239,22,0.427,23,0.943,33,0.76,39,0.756,43,1.266,44,0.857,46,0.849,47,0.038,48,0.45,49,0.503,50,0.709,59,0.857,60,0.943,81,0.948,87,1.162,91,0.397,92,0.397,100,0.382,101,0.454,102,1.166,107,1.151,162,0.026,163,0.026,165,1.71,261,0.793,264,1.166,273,1.901,279,2.804,281,2.502,298,2.13,331,2.227,332,1.403,334,0.962,396,2.25,403,0.874,458,2.13,470,2.035,591,2.25,661,2.502,677,2.418,678,2.802,679,4.38,680,3.688,681,3.688,682,2.802,683,3.779,684,3.182,685,3.182,686,3.182,687,3.182,688,2.802,689,2.802,690,2.802,691,4.38,692,3.688,693,3.688,694,3.688,695,3.688,696,4.38,697,2.802,698,2.802,699,2.802,700,2.802,701,2.802,702,3.688,703,2.418,704,2.802,705,4.122,706,2.802,707,2.418,708,1.901,709,2.802,710,2.802,711,2.802,712,2.802,713,2.802,723,2.802,755,4.457,756,4.457,757,3.386,758,3.386,759,3.386,760,3.386,761,3.386,762,3.386]],["title/components/OrganizationComponent.html",[0,0.173,154,0.713]],["body/components/OrganizationComponent.html",[0,0.303,1,0.756,2,0.417,3,0.184,4,0.737,5,0.737,6,0.737,7,0.122,9,1.351,11,0.683,12,1.213,13,0.737,14,1.777,15,1.196,16,1.139,17,0.909,18,1.009,20,1.009,22,0.184,23,0.683,24,1.42,26,1.628,27,1.217,28,2.115,31,1.533,33,0.551,34,2.425,38,1.349,39,0.49,41,1.476,42,1.782,43,1.435,44,0.835,46,0.615,47,0.038,48,0.525,49,0.537,50,0.433,54,0.918,58,2.6,59,0.656,60,0.914,63,1.475,64,1.961,68,1.745,73,1.972,81,1.047,84,1.813,85,1.79,86,1.52,87,1.108,91,0.634,92,0.252,93,0.809,94,0.671,95,0.89,96,0.981,97,1.084,98,0.981,99,0.89,100,0.184,101,0.288,102,1.011,104,2.115,105,1.475,107,1.303,112,1.773,113,2.18,115,2.772,126,0.671,132,0.61,133,1.108,134,1.108,135,1.009,136,1.482,137,0.737,138,0.737,139,0.503,140,0.737,141,0.454,142,0.61,143,0.737,144,0.503,145,1.002,146,0.737,147,0.503,148,0.737,149,0.503,150,0.918,151,0.737,152,0.503,153,0.737,154,1.011,155,0.737,156,0.554,157,0.737,158,0.503,159,0.737,160,0.756,161,0.737,162,0.019,163,0.019,168,2.717,170,1.777,171,2.717,173,2.032,235,1.351,236,1.777,241,1.777,261,0.503,266,0.671,267,0.809,268,0.671,269,0.809,286,2.032,307,1.463,309,0.809,310,1.206,311,0.981,314,2.18,315,2.772,347,0.981,396,1.631,403,0.554,404,0.981,412,1.084,418,1.533,451,2.306,470,1.475,494,3.307,591,1.631,597,2.306,598,2.306,599,2.032,603,2.306,612,2.306,614,2.306,639,1.351,645,1.533,708,1.813,763,1.777,764,3.231,765,3.231,766,4.178,767,4.866,768,3.231,769,4.32,770,3.231,771,2.148,772,2.148,773,3.231,774,2.148,775,2.148,776,2.148,777,2.148,778,5.315,779,2.148,780,2.148,781,2.148,782,3.883,783,2.148,784,3.883,785,3.883,786,2.306,787,1.777,788,2.148,789,2.148,790,1.777,791,3.231,792,4.32,793,2.148,794,3.883,795,3.883,796,2.148,797,3.231,798,3.231,799,2.148,800,3.231,801,3.231,802,3.231,803,3.231,804,2.306,805,3.231,806,3.231,807,3.231]],["title/components/SidebarComponent.html",[0,0.173,158,0.713]],["body/components/SidebarComponent.html",[0,0.279,1,0.574,2,0.305,3,0.21,4,0.841,5,0.841,6,0.841,7,0.14,11,0.754,12,1.311,13,0.841,14,1.82,15,1.36,16,0.574,17,0.637,18,1.113,20,1.113,22,0.21,23,0.754,24,1.462,26,1.736,27,2.034,33,0.608,38,1.439,39,0.541,41,1.497,42,1.852,44,0.835,46,0.467,47,0.038,48,0.572,49,0.516,50,0.329,58,1.377,59,0.637,60,0.888,64,2.726,68,0.924,73,2.104,81,1.048,84,2.001,85,1.909,86,1.113,91,0.632,92,0.287,93,0.924,94,0.766,95,1.016,96,1.12,97,1.238,98,1.12,100,0.21,101,0.329,102,0.834,104,2.104,105,1.627,107,1.19,112,1.12,113,1.377,126,0.766,132,0.697,133,1.222,134,1.222,135,1.113,136,1.58,137,0.841,138,0.841,139,0.574,140,0.841,141,0.754,142,1.451,143,0.841,144,0.574,145,0.633,146,0.841,147,0.574,148,0.841,149,0.574,150,1.451,151,0.841,152,0.574,153,0.841,154,0.574,155,0.841,156,0.633,157,0.841,158,1.078,159,0.841,160,0.574,161,0.841,162,0.021,163,0.021,168,2.899,171,2.899,173,2.641,176,1.582,190,2.104,212,1.12,213,1.751,228,1.751,261,0.574,266,0.766,267,0.924,268,0.766,269,0.924,286,2.242,291,1.343,292,2.866,307,1.582,309,0.924,310,1.377,311,1.12,314,1.377,315,1.751,347,1.627,366,1.627,397,2.899,400,2.899,403,0.633,404,1.12,412,2.12,427,1.751,470,1.12,490,2.997,530,2.544,545,2.949,583,3.813,593,3.474,597,3.29,598,2.544,599,2.242,603,2.544,612,1.751,613,2.03,614,1.751,786,2.544,787,2.03,790,2.03,808,2.03,809,3.564,810,3.564,811,2.453,812,3.564,813,2.453,814,3.564,815,3.564,816,2.453,817,2.453,818,2.453,819,2.453,820,2.453,821,2.453,822,3.564,823,2.949,824,3.564,825,2.453,826,2.453,827,2.453,828,2.453,829,2.453,830,2.949,831,3.564,832,3.564,833,2.949]],["title/components/UserInfoComponent.html",[0,0.173,160,0.713]],["body/components/UserInfoComponent.html",[0,0.266,1,0.515,2,0.401,3,0.189,4,0.755,5,0.755,6,0.755,7,0.125,11,0.696,12,1.23,13,0.755,14,1.785,15,1.208,16,0.515,17,0.881,18,1.027,20,1.027,22,0.189,23,0.696,24,1.428,25,1.799,26,2.084,28,1.996,29,1.812,31,3.121,33,0.561,38,1.365,39,0.499,40,1.384,41,1.487,42,1.795,43,1.446,44,0.875,46,0.626,47,0.038,48,0.529,49,0.559,50,0.441,54,0.625,59,0.745,60,0.833,64,2.642,68,0.829,73,1.502,77,1.384,81,1.147,84,1.846,85,1.363,86,1.027,87,1.128,91,0.613,92,0.258,93,0.829,94,0.687,96,1.005,97,1.111,98,1.005,99,0.912,100,0.189,101,0.295,102,0.922,104,2.137,105,1.502,107,0.568,112,1.502,113,1.235,118,2.348,123,1.005,126,1.027,127,1.235,128,2.348,129,2.348,130,2.069,132,0.625,133,1.128,134,1.128,135,1.027,136,1.5,137,0.755,138,0.755,139,0.515,140,0.755,141,0.465,142,0.625,143,0.755,144,0.515,145,1.017,146,0.755,147,0.515,148,0.755,149,0.515,150,0.935,151,0.755,152,0.515,153,0.755,154,0.515,155,0.755,156,0.568,157,0.755,158,0.515,159,0.755,160,1.023,161,0.755,162,0.019,163,0.019,169,4.33,176,1.239,179,1.235,235,3.651,261,0.515,266,0.687,267,0.829,268,0.687,269,0.829,307,1.484,309,0.829,310,1.235,311,1.005,332,1.363,336,2.75,342,2.75,347,1.996,403,0.568,404,1.005,412,1.661,429,1.571,434,2.348,455,2.069,490,2.348,494,2.348,591,2.207,640,1.384,641,1.384,645,1.571,766,3.618,823,1.821,830,2.722,834,4.803,835,1.821,836,3.29,837,3.29,838,4.911,839,4.911,840,3.29,841,3.29,842,3.29,843,2.2,844,3.29,845,2.2,846,2.2,847,2.2,848,2.2,849,2.2,850,2.2,851,4.372,852,4.372,853,4.372,854,2.2,855,3.94,856,2.2,857,2.2,858,2.2,859,3.29,860,2.2,861,2.2,862,3.29,863,2.2,864,2.2,865,4.911,866,2.2,867,2.2,868,2.2,869,2.2]],["title/coverage.html",[870,3.435]],["body/coverage.html",[0,0.341,1,0.772,7,0.188,8,2.731,9,2.076,10,2.731,24,0.852,32,2.356,41,0.938,42,1.132,43,0.938,47,0.037,49,0.333,54,0.938,139,0.772,141,0.698,144,0.772,147,0.772,149,0.772,152,0.772,154,0.772,156,0.852,158,0.772,160,0.772,162,0.026,163,0.026,164,2.731,190,1.507,206,2.076,209,2.356,212,2.246,235,2.076,238,2.356,264,1.276,266,1.031,268,1.031,285,2.731,331,1.244,334,1.489,335,2.731,367,2.731,382,2.356,383,2.731,384,2.731,393,2.076,394,3.094,395,3.094,398,2.076,471,2.731,472,2.731,499,2.731,500,2.731,578,2.731,617,2.731,623,2.731,624,2.731,638,2.356,639,2.076,640,2.076,641,2.076,642,2.356,643,2.356,644,2.356,677,3.128,708,3.42,714,2.731,763,2.731,808,2.731,834,2.731,835,2.731,870,2.731,871,2.731,872,3.301,873,3.301,874,3.301,875,3.301,876,3.301,877,2.731,878,4.368,879,5.88,880,3.301,881,3.301,882,5.24,883,4.382,884,2.731,885,3.301,886,2.731,887,2.731,888,2.731,889,2.731,890,4.639,891,5.606,892,3.301,893,4.382,894,3.301,895,3.301,896,3.301,897,3.301,898,3.301,899,3.301,900,3.301,901,3.301,902,3.301,903,3.301,904,3.301,905,3.301,906,3.301,907,4.382,908,3.301,909,3.301,910,3.301,911,3.301,912,3.301,913,4.866,914,2.731,915,2.731,916,2.731,917,3.626,918,2.731,919,3.301,920,3.301]],["title/dependencies.html",[182,2.303,921,2.106]],["body/dependencies.html",[47,0.037,92,0.501,94,1.335,95,2.139,162,0.03,163,0.03,182,2.688,197,4.272,198,3.685,202,3.537,203,3.051,226,3.051,232,2.688,234,2.399,265,2.158,271,3.051,272,2.606,742,3.537,922,4.274,923,6.157,924,4.274,925,4.274,926,4.274,927,4.274,928,4.274,929,4.274,930,4.274,931,5.162,932,4.274,933,4.274,934,4.274,935,4.274,936,4.274,937,4.274,938,4.274,939,4.274,940,4.274,941,4.274,942,4.274,943,5.162,944,4.274,945,4.274,946,4.274]],["title/index.html",[22,0.218,804,1.817,947,2.106]],["body/index.html",[0,0.305,3,0.34,7,0.226,15,1.023,47,0.029,48,0.4,54,1.126,63,2.251,68,1.493,130,2.493,150,1.4,162,0.029,163,0.029,193,2.225,279,3.531,309,1.493,407,2.493,457,3.83,508,4.439,551,2.493,595,3.28,650,4.007,871,4.644,921,3.28,948,3.964,949,3.28,950,3.964,951,5.364,952,3.964,953,5.612,954,3.964,955,5.364,956,3.964,957,4.929,958,3.964,959,3.964,960,4.929,961,4.929,962,4.938,963,5.884,964,4.929,965,3.964,966,3.964,967,3.964,968,3.964,969,3.964,970,3.964,971,3.964,972,3.964,973,5.773,974,3.964,975,3.964,976,3.964,977,3.964,978,3.28,979,4.929,980,3.964,981,3.964,982,3.964,983,4.929,984,3.964,985,3.964,986,3.964,987,4.929,988,3.28,989,3.964,990,3.964,991,3.964,992,3.964,993,5.364,994,3.964,995,3.964,996,3.964]],["title/license.html",[804,1.817,947,2.106,997,2.106]],["body/license.html",[7,0.257,47,0.031,150,1.282,162,0.031,163,0.031,309,1.7,557,3.734,650,3.221,833,3.734,988,3.734,997,5.109,998,4.512,999,4.512,1000,5.676,1001,4.512,1002,4.512,1003,4.512,1004,4.512,1005,4.512,1006,4.512,1007,4.512,1008,4.512,1009,4.512,1010,4.512,1011,4.512,1012,4.512,1013,5.332,1014,4.512,1015,4.512,1016,4.512,1017,4.512,1018,4.512,1019,4.512,1020,4.512,1021,4.512,1022,4.512,1023,4.512,1024,4.512,1025,4.512]],["title/modules.html",[180,2.33]],["body/modules.html",[47,0.033,162,0.033,163,0.033,180,2.743,181,3.074,198,3.489,560,4.044,1026,4.887,1027,4.887]],["title/overview.html",[1028,3.435]],["body/overview.html",[0,0.225,1,1.254,41,1.523,47,0.037,95,1.64,100,0.339,132,1.124,139,1.396,141,1.134,144,1.254,147,1.396,149,1.254,152,1.254,154,1.254,156,1.384,158,1.254,160,1.254,162,0.029,163,0.029,180,2.764,181,4.013,182,2.489,183,3.274,184,3.274,185,3.274,186,3.274,187,3.274,188,3.274,189,3.274,190,2.448,191,4.075,192,2.825,193,2.221,248,2.825,264,0.926,334,1.124,661,2.764,1028,3.274,1029,3.957,1030,3.274,1031,3.274]],["title/miscellaneous/variables.html",[878,2.613,1032,2.106]],["body/miscellaneous/variables.html",[2,0.185,15,0.837,17,0.492,22,0.185,27,1.905,29,0.894,32,2.78,47,0.038,48,0.609,49,0.601,54,0.613,55,2.095,58,1.211,64,2.627,72,2.921,81,0.617,86,1.012,87,1.735,119,1.82,123,0.985,126,1.012,128,3.799,129,2.314,130,2.039,145,0.557,162,0.019,163,0.019,176,2.164,177,3.374,203,1.54,209,2.78,212,0.985,261,0.505,266,1.216,268,1.012,272,1.637,291,1.222,303,1.089,307,1.837,331,1.222,347,0.985,366,1.778,385,2.78,388,4.185,389,4.185,390,3.61,391,3.61,392,4.305,394,1.357,395,2.039,396,1.637,398,2.45,399,2.039,400,2.039,401,1.54,402,1.54,403,0.557,409,1.357,550,1.54,551,1.357,552,1.54,599,1.357,615,1.786,638,2.78,639,2.45,640,2.45,641,2.45,642,2.78,643,2.78,644,2.78,661,1.82,707,1.54,786,1.54,877,1.786,878,1.54,884,4.305,886,1.786,887,2.683,888,1.786,889,2.683,890,3.222,913,1.786,914,3.222,915,3.222,916,1.786,917,4.034,918,1.786,949,3.222,962,4.305,978,2.683,1030,2.683,1031,1.786,1032,1.786,1033,2.158,1034,2.158,1035,2.158,1036,2.158,1037,5.322,1038,2.158,1039,2.158,1040,2.158,1041,2.158,1042,2.158,1043,2.158,1044,2.158,1045,2.158,1046,2.158,1047,2.158,1048,2.158,1049,2.158,1050,2.158,1051,2.158,1052,2.158,1053,2.158,1054,2.158,1055,2.158,1056,2.158,1057,2.158,1058,2.158,1059,2.158,1060,2.158,1061,5.694,1062,5.057,1063,5.057,1064,2.158,1065,2.158,1066,2.158,1067,2.158,1068,2.158,1069,3.242,1070,2.158,1071,2.158,1072,2.158,1073,2.158,1074,2.158,1075,2.158,1076,2.158,1077,2.158,1078,2.158,1079,2.158,1080,2.158,1081,2.158,1082,2.158,1083,2.158,1084,2.158,1085,5.057,1086,2.158,1087,5.057,1088,2.158,1089,2.158,1090,2.158,1091,2.158,1092,2.158,1093,2.158,1094,2.158,1095,2.158,1096,2.158,1097,2.158,1098,2.158,1099,3.894,1100,2.158,1101,3.894,1102,2.158,1103,2.158,1104,2.158,1105,2.158,1106,2.158,1107,3.242,1108,2.158,1109,2.158,1110,5.057,1111,5.057,1112,4.875,1113,2.158,1114,3.242,1115,2.158,1116,2.158,1117,2.158]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":708,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0800200c9a61",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0x3",{"_index":711,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":712,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":661,"title":{},"body":{"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["10000",{"_index":459,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["11",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":707,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/33",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1002,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1008,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":510,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":513,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":999,"title":{},"body":{"license.html":{}}}],["23",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":516,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1031,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":521,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":527,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":531,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":535,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":539,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":543,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4h",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":699,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1030,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5/10",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":553,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":559,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":562,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":567,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":570,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":574,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["6/15",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6h",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_notif",{"_index":679,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":533,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":755,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":564,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":853,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":805,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["add(notificationinst",{"_index":681,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":548,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["adduser(form",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":344,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["agre",{"_index":1010,"title":{},"body":{"license.html":{}}}],["alert",{"_index":685,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":754,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":663,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":953,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["apach",{"_index":1001,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":139,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":833,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["appmodul",{"_index":181,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":974,"title":{},"body":{"index.html":{}}}],["assest",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["attent",{"_index":731,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authent",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":249,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":190,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":986,"title":{},"body":{"index.html":{}}}],["automat",{"_index":968,"title":{},"body":{"index.html":{}}}],["avail",{"_index":407,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":398,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.app",{"_index":421,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":430,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":416,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":425,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":417,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":423,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":419,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":426,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":428,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":624,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:101",{"_index":636,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:117",{"_index":637,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":625,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:129",{"_index":631,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:136",{"_index":628,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":633,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:37",{"_index":634,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:51",{"_index":632,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:62",{"_index":629,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:69",{"_index":630,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:76",{"_index":626,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:91",{"_index":627,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":41,"title":{"injectables/BackendService.html":{}},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1014,"title":{},"body":{"license.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["behavior",{"_index":653,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":736,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":704,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":647,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":441,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["brows",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":973,"title":{},"body":{"index.html":{}}}],["button",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":838,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":839,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":844,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":702,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["carouselmodul",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":438,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["chang",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{}}}],["changerole(newrol",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":671,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":669,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":673,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["charact",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":840,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":842,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["class",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":751,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":802,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clean",{"_index":814,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":955,"title":{},"body":{"index.html":{}}}],["click",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":958,"title":{},"body":{"index.html":{}}}],["close",{"_index":470,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":385,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":474,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":473,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":472,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":483,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":488,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":486,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":487,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":485,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":478,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":484,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":480,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":482,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:76",{"_index":479,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/edit",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterdescript",{"_index":475,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":364,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":382,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":476,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":477,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":970,"title":{},"body":{"index.html":{}}}],["command",{"_index":954,"title":{},"body":{"index.html":{}}}],["commun",{"_index":572,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1004,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":983,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":393,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":440,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":437,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":557,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["confirm('discard",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["conflict",{"_index":541,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":522,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":540,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":514,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":532,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":571,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":544,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":554,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":517,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":575,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":536,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":511,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":450,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":568,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":528,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":811,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":718,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":534,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":467,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1006,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":998,"title":{},"body":{"license.html":{}}}],["core",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":870,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":530,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":542,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["danger",{"_index":734,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["data.email",{"_index":827,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data.nam",{"_index":790,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["data.rol",{"_index":828,"title":{},"body":{"components/SidebarComponent.html":{}}}],["date",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["debug",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":141,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":717,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":852,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":336,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":346,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":182,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":965,"title":{},"body":{"index.html":{}}}],["develop",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":859,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["direct",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":972,"title":{},"body":{"index.html":{}}}],["directori",{"_index":961,"title":{},"body":{"index.html":{}}}],["discard",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["discardchang",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["discardchanges(form",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["dismiss",{"_index":686,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":723,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":452,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":975,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1013,"title":{},"body":{"license.html":{}}}],["dn",{"_index":832,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":871,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["done",{"_index":728,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["due",{"_index":524,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":742,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["edg",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":402,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":144,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["email",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":862,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":555,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["entrycompon",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":381,"title":{},"body":{"injectables/BackendService.html":{}}}],["error.statu",{"_index":509,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":206,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["eventemitt",{"_index":745,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["except",{"_index":1003,"title":{},"body":{"license.html":{}}}],["execut",{"_index":980,"title":{},"body":{"index.html":{}}}],["expect",{"_index":652,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1018,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjvc2vyswqioijqb2hulmrvzubtywlslmnvbsisik9yz2fuaxphdglvbklkijoimje0mzq2ntqzndm0myisilbyaw1pdgl2zxmiolsimcisijeilciyiiwimyjdlcjsb2xlbmftzsi6ik93bmvyiiwirxhwaxjlc0f0ijoxmjmzodu3mjcxmjc0m30",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":538,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":977,"title":{},"body":{"index.html":{}}}],["folder",{"_index":989,"title":{},"body":{"index.html":{}}}],["form",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["form.valid",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":547,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":537,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":784,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":515,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["further",{"_index":992,"title":{},"body":{"index.html":{}}}],["gain",{"_index":576,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":563,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":565,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":947,"title":{"index.html":{},"license.html":{}},"body":{}}],["getclust",{"_index":337,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":349,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":761,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":338,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":351,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":339,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":353,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":340,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":355,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":341,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(userid",{"_index":357,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":519,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":995,"title":{},"body":{"index.html":{}}}],["good",{"_index":740,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":1023,"title":{},"body":{"license.html":{}}}],["group",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["group_work",{"_index":831,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":248,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":694,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":561,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":501,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":503,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":506,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":500,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":505,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":502,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["head",{"_index":730,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":993,"title":{},"body":{"index.html":{}}}],["helper",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":990,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":967,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1007,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":504,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":956,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":693,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":952,"title":{},"body":{"index.html":{}}}],["icon",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":753,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":649,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1019,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":837,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":836,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":835,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:20",{"_index":848,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":858,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":854,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":850,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":861,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":856,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":857,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":860,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":841,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":849,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:63",{"_index":846,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:66",{"_index":843,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:73",{"_index":845,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:85",{"_index":847,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":384,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":490,"title":{},"body":{"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":792,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inject",{"_index":264,"title":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":747,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":957,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":387,"title":{},"body":{"interfaces/ClusterInfo.html":{}}}],["integr",{"_index":984,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":334,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":525,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{}}}],["it'",{"_index":732,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":468,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":695,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johndoe@mail.com",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":788,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":825,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.stringifi",{"_index":648,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttoken.jwt",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(jwttokendata",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockclusterlist",{"_index":676,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":657,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":675,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist",{"_index":658,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["jwt",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":786,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwthelperservic",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":982,"title":{},"body":{"index.html":{}}}],["key",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kf9ac17v9mwowmyjhhyc9gd8hgw6wrt6wwngduj1v4c",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1017,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":1022,"title":{},"body":{"license.html":{}}}],["law",{"_index":1009,"title":{},"body":{"license.html":{}}}],["lead",{"_index":815,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":552,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":985,"title":{},"body":{"index.html":{}}}],["licens",{"_index":997,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1025,"title":{},"body":{"license.html":{}}}],["line",{"_index":551,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":404,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":550,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":703,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":396,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":412,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":413,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":422,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":431,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":787,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":411,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":418,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":424,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":420,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":427,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":429,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":444,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":449,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":439,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":446,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":442,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":445,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":443,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":447,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":448,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":147,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":546,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":739,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":618,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":620,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":619,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":149,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":950,"title":{},"body":{"index.html":{}}}],["match",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":706,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":801,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["min",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1032,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":643,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":666,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":670,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":668,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].tag",{"_index":672,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":638,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":641,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":642,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":644,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":42,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":640,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":659,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":662,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":665,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo",{"_index":639,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserprofileinfo.email",{"_index":655,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.nam",{"_index":654,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.rol",{"_index":656,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":806,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":433,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["modifi",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["modul",{"_index":180,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":994,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":388,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":966,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":529,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":386,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":577,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":497,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":496,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":498,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{}}}],["next",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":963,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":949,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["noth",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{}}}],["notif",{"_index":331,"title":{"interfaces/Notification.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":758,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":716,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":715,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":152,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":409,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":43,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":951,"title":{},"body":{"index.html":{}}}],["null",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":678,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1005,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":674,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["onclos",{"_index":683,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":687,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openuserinfo",{"_index":768,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":773,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":460,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":435,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":793,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":765,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":764,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_mock",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":803,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":154,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":766,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":744,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["overview",{"_index":1028,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":921,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":545,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":397,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":405,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":406,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":395,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:129",{"_index":464,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":466,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:37",{"_index":461,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":465,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:46",{"_index":462,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:90",{"_index":463,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["paramet",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirm",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":807,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":518,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1024,"title":{},"body":{"license.html":{}}}],["persist",{"_index":432,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":830,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["platform",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":414,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":558,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":573,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":976,"title":{},"body":{"index.html":{}}}],["product",{"_index":978,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":399,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":960,"title":{},"body":{"index.html":{}}}],["promis",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["proxi",{"_index":566,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":991,"title":{},"body":{"index.html":{}}}],["r",{"_index":705,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":729,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":996,"title":{},"body":{"index.html":{}}}],["real",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":507,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":451,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":969,"title":{},"body":{"index.html":{}}}],["remov",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":746,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["replic",{"_index":651,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":959,"title":{},"body":{"index.html":{}}}],["request",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["requir",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":342,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":361,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":366,"title":{},"body":{"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response(new",{"_index":646,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["responseopt",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["resset",{"_index":855,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["roles.t",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["root'},{'nam",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":962,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":389,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["save",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":343,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":481,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":363,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":971,"title":{},"body":{"index.html":{}}}],["screen",{"_index":453,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1020,"title":{},"body":{"license.html":{}}}],["select",{"_index":434,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":964,"title":{},"body":{"index.html":{}}}],["server",{"_index":508,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["services/auth.servic",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["set",{"_index":549,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":684,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["sidebar",{"_index":400,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":810,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":809,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":158,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":635,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["softwar",{"_index":1012,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":469,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":454,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1021,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/debug",{"_index":394,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/clust",{"_index":383,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":335,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":354,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":345,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":348,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":362,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:15",{"_index":365,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:16",{"_index":350,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":356,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":359,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":360,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":358,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":352,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/edit",{"_index":471,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":617,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":622,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":621,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":714,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":720,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":725,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":743,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":741,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":719,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":721,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":724,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":722,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":763,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:103",{"_index":775,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:22",{"_index":776,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:26",{"_index":777,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":779,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":780,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":781,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:34",{"_index":770,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:54",{"_index":772,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:80",{"_index":774,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:93",{"_index":771,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:67",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":367,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:13",{"_index":376,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":377,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:19",{"_index":375,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:22",{"_index":372,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:25",{"_index":373,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:28",{"_index":369,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:31",{"_index":370,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:34",{"_index":378,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:37",{"_index":379,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":374,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:43",{"_index":371,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:9",{"_index":368,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/error",{"_index":499,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":623,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":677,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":756,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":757,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":762,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":759,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":760,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":808,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":818,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":820,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:25",{"_index":821,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":819,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":812,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:49",{"_index":816,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:70",{"_index":817,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":813,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":834,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":804,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":390,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(respons",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":778,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":767,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["substitut",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["succeed",{"_index":512,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":726,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/NotificationsComponent.html":{}}}],["summari",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":733,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":560,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":436,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["syntax",{"_index":526,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["system",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabl",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":391,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":457,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":851,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":680,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":688,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":682,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":690,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":748,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":829,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":868,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":789,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":791,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(userid",{"_index":826,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":869,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":495,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.bsmodalref.hid",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":866,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":867,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clusterdescript",{"_index":491,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":493,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":489,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":492,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":415,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":749,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":824,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.formbuilder.group",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(jwttoken.jwt",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":797,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":799,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":796,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":822,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":410,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":455,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":750,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":456,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":494,"title":{},"body":{"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":782,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":823,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.router.navig",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":783,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":863,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updateuserlist",{"_index":798,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":785,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":865,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":864,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{}}}],["throw",{"_index":380,"title":{},"body":{"injectables/BackendService.html":{}}}],["time",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timeout",{"_index":458,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/UserInfoComponent.html":{}}}],["todo",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["top",{"_index":752,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["total",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalclust",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":392,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":403,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":948,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":569,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1000,"title":{},"body":{"license.html":{}}}],["understand",{"_index":523,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":556,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":979,"title":{},"body":{"index.html":{}}}],["up",{"_index":408,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":987,"title":{},"body":{"index.html":{}}}],["updateuserlist",{"_index":769,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":520,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["us",{"_index":650,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:17",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:23",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:39",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:46",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:69",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:86",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:94",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":794,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.rol",{"_index":795,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user_id",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":347,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":401,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":160,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":800,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":645,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":691,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":696,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":709,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":713,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":692,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":878,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":988,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":981,"title":{},"body":{"index.html":{}}}],["view",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":735,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":1016,"title":{},"body":{"license.html":{}}}],["well",{"_index":727,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":1015,"title":{},"body":{"license.html":{}}}],["write",{"_index":1011,"title":{},"body":{"license.html":{}}}],["x",{"_index":710,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.email).indexof(user.email",{"_index":660,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":664,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(clusterid",{"_index":667,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":689,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":698,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":697,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":701,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":738,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":737,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":700,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:17\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    this.backend = mockupBackendService;\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        if (!response._body) {\n          this.notificationsService.add({message: user.email + ' created successfully'});\n          this.bsModalRef.hide();\n        } else {\n          // Error\n          this.notificationsService.add({message: response._body});\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n     \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add user              ×                                                                                                   Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService }\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable, of } from 'rxjs';\nimport { ResponseOptions } from '@angular/http';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    let complete;\n    let jwtToken;\n    this.backend.login(email, password)\n      .subscribe(response => {\n        if (response && response._body) {\n          jwtToken = JSON.parse(response._body);\n          const jwtTokenData =  this.jwtHelper.decodeToken(jwtToken.jwt);\n          localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(jwtToken.jwt));\n          localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n          complete = jwtTokenData;\n        }\n      }, error => {\n        complete = error;\n      });\n      return of (complete);\n  }\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        this.router.navigate(['login']);\n      }, error => {\n        console.log(error); // TODO: substitute with notification service messaging system\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getResourcesSummary(organizationId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClusters\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BackendService implements Backend {\n\n  constructor() { }\n\n  login(email: string, password: string): Observable {\n    throw new Error('Method not implemented.');\n  }\n  logout() {\n    throw new Error('Method not implemented.');\n  }\n  getUserProfileInfo(userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationInfo(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationUsers(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  addUser(organizationId: string, user: any) {\n    throw new Error('Method not implemented.');\n  }\n  deleteUser(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  resetPassword(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    throw new Error('Method not implemented.');\n  }\n  getResourcesSummary(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getClusters(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/const/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:36\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Debug panel\n  \n  \n    \n      &times;\n    \n  \n\n\n\n  Backend control\n  \n    \n      \n      \n        {{item.name}}\n      \n      \n      \n        \n          Real\n        \n        \n          Mock\n        \n      \n    \n  \n  \n  Notifications\n  Spam test notification\n\n\n\n  \n    Close\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Debug panel              ×        Backend control                          {{item.name}}                                    Real                          Mock                        Notifications  Spam test notification      Close  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.router.navigate([\n          '/organization'\n        ]);\n      }, error => console.log(error));\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n          Nalej\n          \n              Log in\n              \n                  \n                  \n                      \n                        Email is required\n                        Email must be a valid email address\n                      \n                  \n                      \n                        Password is required\n                        Password must be at least 6 characters\n                      \n                  \n                  \n                    Log in\n                  \n                \n           \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Nalej                        Log in                                                                                                Email is required                        Email must be a valid email address                                                                                      Password is required                        Password must be at least 6 characters                                                                              Log in                                                     '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n\n  \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClusters\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserProfileInfo, mockUserList, mockOrganizationInfo,\n         mockResetPasword, mockClusterList, mockResourcesSummary  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        jwt: mockJwtToken\n      }),\n      status: 200\n    })));\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        name: mockUserProfileInfo.name,\n        email: mockUserProfileInfo.email,\n        role: mockUserProfileInfo.role\n      }),\n      status: 200\n    })));\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })));\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList),\n      status: 200\n    })));\n  }\n\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      })));\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      })));\n    }\n  }\n\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].tags = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })));\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:22\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:34\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockUserProfileInfo } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).OrganizationId;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.organizationName = data.name;\n            }\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.users = data;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId\n    };\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState});\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n        if (response && response._body) {\n          const data = JSON.parse(response._body);\n          this.users = data;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        Members\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role}}\n              {{user.email}}\n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      Subscription\n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                Members                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                    {{user.name}}              {{user.role}}              {{user.email}}                                                                    edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                          Subscription              check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userId;\n      if (userId !== null) {\n        this.backend.getUserProfileInfo(userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.name = data.name;\n              this.email = data.email;\n              this.role = data.role;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Nalej\n      \n        \n          \n            \n                person\n            \n            {{name}}\n            {{role}}\n            {{email}}\n          \n        \n      \n      \n        \n          group_work\n          Organization\n          >\n        \n      \n      \n        \n          dns\n          Resources\n          >\n        \n      \n      \n        \n          apps\n          Applications\n          >\n        \n      \n      \n        \n          Logout\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nalej                                                    person                        {{name}}            {{role}}            {{email}}                                                group_work          Organization          >                                      dns          Resources          >                                      apps          Applications          >                                      Logout                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                48 %\n                (16/33)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserProfileInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            mockUserProfileInfo   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    clusterEditMock: 'cluster_edit_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster2',\n        id: '0800200c9a62',\n        totalNodes: '10',\n        runningNodes: '2',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster3',\n        id: '0800200c9a63',\n        totalNodes: '10',\n        runningNodes: '3',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster4',\n        id: '0800200c9a64',\n        totalNodes: '10',\n        runningNodes: '4',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster5',\n        id: '0800200c9a65',\n        totalNodes: '10',\n        runningNodes: '5',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Error',\n        tags: 'ny, edge',\n        multitenant: 'No'\n    },\n    {\n        name: 'Cluster6',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '6',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster7',\n        id: '0800200c9a67',\n        totalNodes: '10',\n        runningNodes: '7',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJVc2VySWQiOiJqb2huLmRvZUBtYWlsLmNvbSIsIk9yZ2FuaXphdGlvbklkIjoiMjE0MzQ2NTQzNDM0MyIsIlByaW1pdGl2ZXMiOlsiMCIsIjEiLCIyIiwiMyJdLCJSb2xlbmFtZSI6Ik93bmVyIiwiRXhwaXJlc0F0IjoxMjMzODU3MjcxMjc0M30' +\n    '.kF9ac17V9mWoWMYjhHyc9GD8hGw6wRT6wwNgdUJ1v4c'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      },\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    totalClusters: mockClusterList.length,\n    totalNodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserProfileInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'John Doe',\n    email: 'john.doe@mail.com',\n    role: 'Owner'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
