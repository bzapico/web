var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.049,1,0.619]],["body/components/AddUserComponent.html",[0,0.078,1,0.926,2,0.267,3,0.183,4,0.694,5,0.694,6,0.694,7,0.122,8,5.027,9,3.868,10,1.78,11,0.645,12,1.103,13,0.694,14,1.571,15,1.113,16,0.941,17,0.808,18,0.932,19,3.003,20,0.932,21,3.003,22,0.183,23,0.645,24,1.259,25,1.693,26,1.945,27,1.965,28,1.71,29,1.983,30,4.695,31,3.01,32,2.702,33,0.525,34,1.562,35,3.003,36,2.607,37,3.605,38,1.215,39,0.468,40,1.416,41,1.31,42,1.56,43,1.278,44,0.778,45,3.605,46,0.809,47,0.034,48,0.501,49,0.493,50,0.575,51,3.605,52,2.461,53,1.43,54,1.473,55,1.442,56,3.84,57,2.607,58,2.262,59,0.733,60,0.841,61,3.003,62,2.461,63,2.165,64,2.676,65,3.553,66,2.607,67,2.461,68,1.31,69,2.607,70,2.607,71,3.776,72,1.43,73,1.71,74,3.605,75,2.461,76,2.607,77,1.416,78,2.05,79,2.05,80,2.461,81,0.994,82,2.05,83,2.05,84,1.562,85,1.205,86,0.932,87,1.017,88,2.461,89,2.05,90,2.05,91,0.544,92,0.248,93,0.756,94,0.637,95,0.896,96,0.896,97,0.977,98,0.896,99,0.823,100,0.583,101,0.694,102,0.583,103,0.694,104,0.183,105,0.283,106,0.764,107,3.912,108,1.553,109,0.923,110,1.203,111,1.78,112,2.461,113,0.694,114,0.977,115,0.823,116,0.932,117,1.313,118,1.71,119,2.461,120,2.461,121,3.605,122,2.461,123,0.896,124,1.709,125,3.605,126,1.78,127,2.05,128,2.05,129,2.734,130,1.167,131,1.78,132,1.78,133,1.78,134,1.693,135,2.461,136,2.461,137,1.282,138,2.311,139,2.311,140,2.074,141,2.311,142,0.583,143,1.017,144,1.017,145,0.932,146,1.324,147,0.694,148,1.017,149,0.485,150,0.694,151,0.485,152,0.694,153,0.485,154,1.017,155,0.441,156,0.583,157,0.694,158,0.485,159,0.78,160,0.485,161,0.485,162,0.694,163,0.485,164,0.854,165,0.694,166,0.485,167,0.694,168,0.485,169,0.694,170,0.533,171,0.694,172,0.485,173,0.694,174,0.485,175,0.694,176,0.019,177,0.019]],["title/components/AppComponent.html",[0,0.049,149,0.619]],["body/components/AppComponent.html",[0,0.091,1,0.74,2,0.358,3,0.278,4,1.058,5,1.058,6,1.058,7,0.186,11,0.863,12,1.377,13,1.058,14,1.659,15,1.22,16,0.607,17,0.488,18,1.247,20,1.247,22,0.278,23,0.863,25,2.113,26,1.879,33,0.701,38,1.453,39,0.626,43,1.496,44,0.755,46,0.607,47,0.034,48,0.465,49,0.49,50,0.432,59,0.488,60,0.863,81,0.78,91,0.567,92,0.486,94,0.971,99,1.255,104,0.278,105,0.432,106,0.672,142,0.889,143,1.359,144,1.359,145,1.247,146,1.584,147,1.058,148,1.359,149,1.108,150,1.058,151,0.74,152,1.058,153,0.74,154,1.359,155,0.672,156,0.889,157,1.058,158,0.74,159,1.043,160,0.74,161,0.74,162,1.058,163,0.74,164,1.331,165,1.058,166,0.74,167,1.058,168,0.74,169,1.058,170,0.812,171,1.058,172,0.74,173,1.058,174,0.74,175,1.058,176,0.025,177,0.025,178,3.127,179,2.51,180,4.819,181,4.819,182,3.233,183,4.68,184,3.127,185,3.601,186,4.819,187,3.089,188,3.753,189,3.753,190,1.255,191,1.779,192,3.753,193,2.16]],["title/modules/AppModule.html",[194,1.806,195,2.012]],["body/modules/AppModule.html",[1,1.155,2,0.227,3,0.227,7,0.152,9,1.962,16,0.495,17,0.398,41,1.329,47,0.034,91,0.654,92,0.309,94,1.405,95,1.977,96,1.115,104,0.384,105,0.352,142,0.725,149,1.207,151,1.107,153,1.107,155,1.048,156,0.725,158,1.155,159,0.911,160,1.155,161,1.207,163,1.107,166,1.107,168,1.107,170,1.214,172,1.107,174,1.155,176,0.022,177,0.022,193,1.761,194,2.422,195,4.184,196,1.962,197,4.007,198,4.315,199,2.55,200,2.55,201,2.55,202,2.55,203,2.55,204,2.66,205,3.506,206,1.962,207,1.761,208,3.061,209,4.208,210,4.208,211,3.506,212,2.213,213,4.208,214,3.061,215,4.208,216,2.55,217,1.761,218,4.208,219,3.506,220,2.698,221,3.061,222,3.061,223,3.478,224,3.061,225,3.061,226,1.451,227,2.213,228,3.061,229,3.061,230,3.061,231,3.061,232,3.061,233,3.061,234,3.061,235,3.061,236,3.061,237,3.061,238,4.208,239,4.208,240,2.213,241,3.061,242,2.213,243,4.208,244,2.55,245,4.208,246,1.962,247,4.208,248,1.761,249,1.962,250,2.55,251,3.061,252,2.213,253,3.061,254,3.061,255,3.506,256,1.962,257,3.061,258,3.061,259,3.061,260,3.061,261,3.061,262,3.061,263,3.061,264,3.061]],["title/components/ApplicationsComponent.html",[0,0.049,151,0.619]],["body/components/ApplicationsComponent.html",[0,0.077,1,0.462,2,0.34,3,0.174,4,0.66,5,0.66,6,0.66,7,0.116,11,0.622,12,1.071,13,0.66,14,1.568,15,1.208,16,0.379,17,0.451,18,0.898,20,0.898,22,0.174,23,0.622,24,1.245,28,1.669,33,0.505,38,1.185,39,0.451,41,1.258,42,1.538,43,1.258,44,0.806,46,0.379,47,0.034,48,0.502,49,0.508,50,0.563,53,0.929,55,1.067,58,1.985,59,0.304,60,0.419,68,0.719,72,2.035,73,1.669,81,0.792,84,1.505,85,1.162,86,0.898,87,1.292,91,0.536,92,0.236,93,0.719,94,0.898,96,0.852,97,0.929,98,0.852,99,0.783,100,0.554,101,0.66,102,0.554,103,0.66,104,0.174,105,0.269,106,0.742,108,1.669,109,0.896,110,1.292,113,1.168,114,0.929,115,0.783,116,1.488,117,1.265,123,0.852,124,1.11,130,1.647,134,2.164,142,0.554,143,0.98,144,0.98,145,0.898,146,1.292,147,0.66,148,0.98,149,0.462,150,0.66,151,0.904,152,0.66,153,0.462,154,0.98,155,0.419,156,0.554,157,0.66,158,0.462,159,0.752,160,0.462,161,0.462,162,0.66,163,0.462,164,0.823,165,0.66,166,0.462,167,0.66,168,0.462,169,0.66,170,0.507,171,0.66,172,0.462,173,0.66,174,0.462,175,0.66,176,0.018,177,0.018,190,2.001,191,2.918,217,3.055,265,1.95,266,2.637,267,3.473,268,3.473,269,3.818,270,3.818,271,3.818,272,3.818,273,3.818,274,3.709,275,3.709,276,4.583,277,4.583,278,4.583,279,4.583,280,4.583,281,4.583,282,4.583,283,4.583,284,4.583,285,4.583,286,1.692,287,3.473,288,2.34,289,2.34,290,1.819,291,1.809,292,2.34,293,2.894,294,2.894,295,2.894,296,2.34,297,2.938,298,2.894,299,2.894,300,2.34,301,2.34,302,2.34,303,2.512,304,2.34,305,2.894,306,2.894,307,2.34,308,2.34,309,2.227,310,3.473,311,2.34,312,3.473,313,2.173,314,2.34,315,3.473,316,2.34,317,2.34,318,2.34,319,2.34,320,2.34,321,1.999,322,2.34,323,2.34,324,2.34,325,1.5,326,0.605,327,0.554,328,1.014,329,1.692,330,1.347,331,3.473,332,1.95,333,1.347,334,1.999,335,1.5,336,1.999,337,1.692,338,1.692,339,1.95,340,2.995,341,2.34,342,1.11,343,1.347,344,2.894,345,4.583,346,3.473,347,1.999,348,1.809,349,2.894,350,2.512,351,1.999,352,2.894,353,1.647,354,2.894,355,3.473,356,3.473,357,3.473,358,3.473,359,3.473,360,3.473]],["title/guards/AuthGuard.html",[361,2.269,362,2.614]],["body/guards/AuthGuard.html",[2,0.308,3,0.308,7,0.206,11,0.743,22,0.308,23,0.743,33,0.747,39,0.667,44,0.667,46,0.831,47,0.034,48,0.448,49,0.448,50,0.591,54,1.171,59,0.725,77,2.955,91,0.604,92,0.419,100,0.983,101,1.171,102,0.983,103,1.171,104,0.308,105,0.478,106,0.743,108,1.87,109,0.898,116,1.074,134,1.647,176,0.026,177,0.026,179,2.162,248,2.389,327,1.216,361,3.002,362,4.278,363,4.151,364,4.278,365,5.988,366,4.151,367,4.411,368,4.151,369,4.151,370,5.827,371,4.646,372,5.827,373,4.151,374,3.209,375,5.136,376,1.328,377,2.162,378,4.646,379,3.002,380,2.675,381,2.389,382,3.458,383,4.278,384,3.458,385,3.458,386,4.151,387,2.389,388,3.458,389,2.389,390,4.151,391,4.151,392,3.458]],["title/injectables/AuthService.html",[204,1.488,376,0.812]],["body/injectables/AuthService.html",[2,0.234,3,0.234,7,0.156,17,0.753,22,0.234,23,0.769,24,1.321,27,1.91,29,2.299,33,0.625,39,0.558,41,1.397,42,1.479,44,0.736,46,0.696,47,0.034,48,0.375,49,0.458,50,0.495,53,2.082,54,0.89,55,1.32,59,0.736,60,0.565,68,1.501,73,1.91,76,3.107,77,2.473,81,0.979,85,1.437,91,0.603,92,0.318,93,0.969,98,1.565,100,0.747,101,0.89,102,1.018,103,0.89,104,0.234,105,0.363,106,0.875,108,1.779,109,1.058,110,1.212,113,0.89,114,1.252,115,1.055,116,0.816,117,1.565,118,1.565,123,1.565,124,1.496,130,2.317,134,1.252,176,0.022,177,0.022,204,2.037,207,1.816,246,2.023,248,1.816,342,1.496,343,1.816,353,2.602,364,4.37,367,4.19,374,2.812,376,1.264,377,1.644,378,4.572,379,2.282,380,2.949,382,2.629,383,4.37,384,2.629,385,2.629,388,2.629,392,2.629,393,2.629,394,3.58,395,4.37,396,5.663,397,5.246,398,2.082,399,3.259,400,3.156,401,4.297,402,4.886,403,3.156,404,5.246,405,2.755,406,4.297,407,4.071,408,2.755,409,3.156,410,2.238,411,3.156,412,3.156,413,2.629,414,2.282,415,4.37,416,3.156,417,4.297,418,3.156,419,3.156,420,3.156,421,3.156,422,3.156,423,3.156,424,3.156,425,2.282,426,2.629,427,3.156,428,3.156,429,2.282,430,3.156,431,3.156,432,1.252,433,1.252,434,3.156]],["title/interfaces/Backend.html",[24,0.679,435,0.964]],["body/interfaces/Backend.html",[2,0.249,3,0.249,7,0.166,17,0.656,22,0.249,24,0.97,27,1.224,28,2.228,29,2.002,33,0.652,34,1.942,44,0.82,46,1.017,47,0.034,48,0.548,49,0.548,50,0.723,59,0.82,63,2.499,81,1.071,86,0.869,91,0.339,104,0.249,176,0.023,177,0.023,266,1.934,374,2.903,377,1.75,398,2.002,399,3.097,408,2.874,435,1.377,436,2.8,437,2.874,438,3.242,439,3.242,440,3.242,441,3.242,442,3.242,443,3.242,444,3.242,445,3.242,446,2.874,447,2.874,448,2.874,449,3.242,450,3.361,451,3.242,452,2.651,453,3.361,454,3.242,455,3.361,456,3.242,457,3.361,458,3.227,459,3.242,460,3.361,461,3.242,462,3.361,463,3.242,464,3.361,465,3.242,466,3.361,467,3.242,468,3.361,469,3.242,470,3.361,471,3.361,472,3.361,473,3.242,474,3.361,475,3.242,476,3.361,477,3.242,478,3.361,479,1.456]],["title/injectables/BackendService.html",[41,0.743,376,0.812]],["body/injectables/BackendService.html",[2,0.22,3,0.22,7,0.147,11,1.117,17,0.615,22,0.22,24,0.892,27,1.081,28,2.176,29,1.878,33,0.6,34,1.785,39,0.615,41,0.976,44,0.811,46,0.999,47,0.034,48,0.539,49,0.539,50,0.711,54,1.751,59,0.807,60,1.105,63,2.408,81,1.066,91,0.477,92,0.299,93,0.912,104,0.22,105,0.342,176,0.021,177,0.021,179,1.546,374,2.723,376,1.224,377,1.546,381,1.708,398,1.635,399,2.942,408,2.641,437,2.641,438,2.98,439,2.98,440,2.98,441,2.98,442,2.98,443,2.98,444,2.98,445,2.98,446,2.641,447,2.641,448,2.641,449,2.98,451,2.98,452,2.588,454,2.98,456,2.98,458,3.09,459,2.98,461,2.98,463,2.98,465,2.98,467,2.98,469,2.98,473,2.98,475,2.98,477,2.98,480,2.473,481,2.969,482,2.969,483,2.969,484,2.969,485,2.969,486,2.969,487,2.969,488,2.969,489,2.969,490,2.969,491,2.969,492,2.969,493,2.969,494,2.969,495,2.969,496,2.969,497,6.208,498,6.208]],["title/components/ClusterComponent.html",[0,0.049,153,0.619]],["body/components/ClusterComponent.html",[0,0.079,1,0.401,2,0.317,3,0.151,4,0.574,5,0.574,6,0.574,7,0.101,11,0.56,12,0.984,13,0.574,14,1.522,15,1.057,16,0.329,17,0.555,18,0.808,20,0.808,22,0.151,23,0.56,24,1.204,26,1.428,28,1.554,33,0.455,38,1.104,39,0.406,41,1.199,42,1.473,43,1.199,44,0.784,46,0.506,47,0.034,48,0.477,49,0.521,50,0.491,53,1.694,55,0.625,58,2.321,59,0.599,60,0.56,68,0.625,72,2.171,73,1.77,81,0.787,84,2.106,85,1.626,86,0.808,87,1.473,91,0.527,92,0.205,93,0.625,94,1.191,95,0.741,96,0.741,97,0.807,98,0.741,99,0.68,100,0.482,101,0.574,102,0.901,103,0.574,104,0.151,105,0.234,106,0.681,108,1.554,109,0.997,110,1.204,113,1.428,114,0.807,115,0.68,116,1.191,117,1.138,118,1.138,123,1.385,124,1.804,130,1.482,142,0.482,143,0.881,144,0.881,145,0.808,146,1.204,147,0.574,148,0.881,149,0.401,150,0.574,151,0.401,152,0.574,153,0.842,154,0.881,155,0.364,156,0.482,157,0.574,158,0.401,159,0.676,160,0.401,161,0.401,162,0.574,163,0.401,164,0.74,165,0.574,166,0.401,167,0.574,168,0.401,169,0.574,170,0.44,171,0.574,172,0.401,173,0.574,174,0.401,175,0.574,176,0.016,177,0.016,182,2.456,190,1.54,191,2.593,217,3.202,269,3.556,270,3.556,271,3.556,272,3.556,273,3.556,286,1.471,290,2.009,291,2.721,293,2.603,294,2.603,295,2.603,297,3.435,298,2.603,299,2.603,303,3.516,305,2.603,306,4.05,309,3.771,313,2.024,325,1.304,330,1.171,332,1.695,333,1.171,334,1.798,335,1.304,336,1.798,337,1.471,338,1.471,339,1.695,340,2.751,342,1.804,343,2.189,344,2.603,347,1.798,348,1.628,351,2.798,353,1.482,387,1.798,458,2.456,479,1.354,499,1.695,500,3.579,501,2.603,502,2.603,503,4.269,504,4.862,505,3.516,506,3.516,507,3.922,508,4.269,509,3.125,510,4.269,511,3.125,512,3.125,513,4.636,514,2.035,515,3.125,516,3.125,517,3.125,518,3.125,519,2.035,520,2.035,521,3.331,522,1.798,523,2.603,524,2.035,525,2.035,526,2.035,527,2.035,528,2.035,529,2.035,530,4.269,531,2.035,532,2.035,533,2.035,534,2.035,535,2.035,536,2.035,537,2.003,538,2.035,539,2.035,540,2.035,541,1.471,542,2.035,543,3.125,544,3.125,545,3.125,546,3.125,547,2.035,548,2.035,549,2.035,550,2.035,551,2.035,552,2.035,553,2.035,554,2.532,555,2.26,556,2.26,557,3.125,558,1.482,559,3.125,560,3.125,561,2.603,562,2.26,563,2.603,564,2.603,565,1.798,566,3.125,567,3.125,568,3.125,569,3.125,570,3.125]],["title/interfaces/ClusterInfo.html",[435,0.964,571,2.269]],["body/interfaces/ClusterInfo.html",[2,0.392,3,0.322,7,0.215,22,0.322,23,0.945,44,0.564,47,0.033,48,0.516,49,0.564,50,0.607,55,1.863,72,1.722,81,1.068,87,1.669,104,0.322,127,3.615,176,0.027,177,0.027,348,3.082,351,3.405,435,1.747,500,3.037,562,4.279,571,3.816,572,3.615,573,3.615,574,3.138,575,3.615,576,4.929,577,4.929]],["title/interfaces/ComponentMockOption.html",[435,0.964,578,2.012]],["body/interfaces/ComponentMockOption.html",[0,0.085,2,0.355,3,0.224,7,0.15,11,0.542,12,1.08,14,1.08,15,0.823,16,0.676,17,0.621,18,0.782,20,0.782,22,0.224,23,0.747,25,1.2,26,1.598,34,1.31,38,0.782,39,0.393,43,1.221,47,0.034,48,0.546,49,0.417,50,0.55,54,0.853,55,0.929,60,0.542,72,1.897,81,0.905,86,1.08,87,0.853,91,0.52,92,0.305,94,0.782,99,1.011,100,0.716,101,0.853,102,0.989,103,0.853,104,0.355,105,0.348,106,0.542,109,0.655,110,1.771,111,2.187,116,1.591,118,1.101,134,2.537,155,0.542,156,1.281,159,0.655,176,0.021,177,0.021,190,1.011,191,1.979,193,1.74,226,1.434,290,2.146,291,2.174,326,0.782,327,0.716,328,1.31,329,2.187,333,2.402,347,1.74,398,1.656,410,1.575,414,2.187,425,2.187,432,2.045,433,1.2,435,1.583,479,1.808,541,2.187,558,1.434,578,3.303,579,1.939,580,1.939,581,3.064,582,1.939,583,2.675,584,2.675,585,2.187,586,2.187,587,3.018,588,2.52,589,2.52,590,1.939,591,1.939,592,2.52,593,3.018,594,2.52,595,5.046,596,3.477,597,3.477,598,2.187,599,3.477,600,3.477,601,3.477,602,2.52,603,3.477,604,3.477,605,2.187,606,3.477,607,1.939,608,3.477,609,2.52,610,3.477,611,2.187,612,3.477,613,3.477,614,2.675,615,2.187,616,2.52,617,2.187,618,2.52,619,4.38,620,2.52,621,5.046,622,4.38,623,2.52,624,2.52,625,2.52,626,2.52,627,2.52,628,2.52,629,2.52,630,2.52,631,2.52,632,2.52,633,2.52,634,2.52,635,2.52,636,2.52,637,1.74,638,2.52,639,2.187,640,1.939,641,2.52]],["title/components/DebugPanelComponent.html",[0,0.049,155,0.562]],["body/components/DebugPanelComponent.html",[0,0.092,1,0.49,2,0.35,3,0.184,4,0.701,5,0.701,6,0.701,7,0.123,11,0.65,12,1.109,13,0.701,14,1.582,15,1.116,16,0.764,17,0.613,18,0.939,20,0.939,22,0.184,23,0.65,24,0.786,25,1.702,26,1.949,33,0.528,34,1.077,38,1.22,39,0.472,40,1.43,43,1.34,44,0.703,46,0.588,47,0.034,48,0.537,49,0.438,50,0.603,54,1.024,55,0.763,59,0.557,60,0.845,72,1.702,81,0.588,86,0.939,87,0.701,91,0.476,92,0.251,94,0.643,99,0.831,100,0.589,101,0.701,102,1.016,103,0.701,104,0.318,105,0.286,106,0.445,109,0.538,110,1.734,111,1.797,115,1.214,116,1.539,118,0.905,134,2.487,137,1.294,142,0.589,143,1.024,144,1.024,145,0.939,146,1.33,147,0.701,148,1.024,149,0.49,150,0.701,151,0.49,152,0.701,153,0.49,154,1.024,155,0.845,156,1.362,157,0.701,158,0.49,159,0.928,160,0.49,161,0.49,162,0.701,163,0.49,164,0.86,165,0.701,166,0.49,167,0.701,168,0.49,169,0.701,170,0.538,171,0.701,172,0.49,173,0.701,174,0.49,175,0.701,176,0.019,177,0.019,190,1.214,191,2.236,193,1.43,226,2.63,290,2.079,291,2.234,326,0.643,327,0.589,328,1.077,329,1.797,333,2.089,347,1.43,398,1.441,410,1.891,414,1.797,425,2.625,432,2.245,433,0.986,435,1.115,479,1.573,541,1.797,558,1.178,578,3.359,579,3.556,580,1.593,581,3.216,582,1.593,583,2.327,584,2.327,585,1.797,586,1.797,587,2.625,588,3.024,589,3.024,590,2.327,591,3.024,592,2.07,593,2.625,594,2.07,595,4.855,596,3.024,597,3.024,598,1.797,599,3.024,600,3.024,601,3.024,602,2.07,603,3.024,604,3.024,605,1.797,606,3.024,607,1.593,608,3.024,609,2.07,610,3.024,611,1.797,612,3.024,613,3.573,614,2.749,615,2.625,616,3.024,617,1.797,618,2.07,619,4.214,620,2.07,621,4.855,622,4.214,623,2.07,624,2.07,625,2.07,626,2.07,627,2.07,628,2.07,629,2.07,630,2.07,631,2.07,632,2.07,633,2.07,634,3.024,635,3.024,636,3.93,637,1.43,638,2.07,639,3.102,640,1.593,641,2.07,642,3.63,643,3.63,644,2.485,645,2.485,646,2.485,647,2.485,648,2.485,649,3.63,650,3.63,651,3.63,652,1.721]],["title/components/EditClusterComponent.html",[0,0.049,158,0.619]],["body/components/EditClusterComponent.html",[0,0.081,1,0.527,2,0.284,3,0.198,4,0.754,5,0.754,6,0.754,7,0.132,11,0.685,12,1.156,13,0.754,14,1.599,15,1.091,16,0.433,17,0.347,18,0.99,20,0.99,22,0.198,23,0.685,24,1.28,25,1.774,26,1.978,28,1.777,33,0.557,36,2.767,38,1.262,39,0.497,40,1.538,41,1.34,42,1.596,43,1.31,44,0.769,46,0.723,47,0.034,48,0.483,49,0.494,50,0.514,53,1.518,55,1.499,56,3.746,58,1.657,59,0.581,60,0.8,63,1.936,66,2.767,68,1.373,69,2.767,70,2.767,71,3.885,72,1.936,73,1.956,81,0.989,84,1.657,85,1.279,86,0.99,87,1.376,91,0.558,92,0.27,93,0.821,94,0.691,95,0.973,96,0.973,97,1.06,98,0.973,99,0.894,100,0.633,101,0.754,102,0.633,103,0.754,104,0.198,105,0.308,106,0.8,108,1.627,109,0.828,110,1.26,113,0.754,114,1.06,115,0.894,116,0.691,117,1.393,118,1.393,123,0.973,129,2.865,131,1.932,132,1.932,133,1.932,137,1.392,141,3.128,142,0.633,143,1.079,144,1.079,145,0.99,146,1.376,147,0.754,148,1.079,149,0.527,150,0.754,151,0.527,152,0.754,153,0.527,154,1.079,155,0.479,156,0.633,157,0.754,158,0.962,159,1.28,160,0.527,161,0.527,162,0.754,163,0.527,164,0.906,165,0.754,166,0.527,167,0.754,168,0.527,169,0.754,170,0.578,171,0.754,172,0.527,173,0.754,174,0.527,175,0.754,176,0.02,177,0.02,190,1.632,252,4.321,326,0.691,327,0.633,328,1.158,330,2.808,336,1.538,351,2.202,433,1.06,447,2.453,458,2.808,500,3.183,501,3.187,502,3.187,558,2.313,611,1.932,614,2.453,637,1.538,653,4.321,654,2.226,655,4.879,656,5.372,657,4.879,658,3.826,659,2.672,660,2.672,661,3.826,662,2.672,663,2.672,664,2.672,665,2.672,666,2.672,667,2.672,668,2.672,669,4.469,670,3.826,671,3.826,672,4.469,673,2.672,674,2.672,675,2.672,676,2.672]],["title/components/EditUserComponent.html",[0,0.049,160,0.619]],["body/components/EditUserComponent.html",[0,0.079,1,0.489,2,0.269,3,0.184,4,0.7,5,0.7,6,0.7,7,0.123,10,1.794,11,0.649,12,1.108,13,0.7,14,1.573,15,1.115,16,0.402,17,0.79,18,0.938,19,3.021,20,0.938,21,3.021,22,0.184,23,0.649,24,1.261,25,1.701,26,1.948,27,1.907,28,1.716,29,1.439,31,3.021,32,2.712,33,0.528,35,3.021,36,2.622,38,1.219,39,0.471,40,1.428,41,1.313,42,1.564,43,1.281,44,0.78,46,0.812,47,0.034,48,0.494,49,0.494,50,0.577,53,1.439,54,1.329,55,1.316,56,3.554,58,1.571,59,0.703,60,0.844,61,3.021,63,2.172,64,2.793,65,3.57,66,2.622,68,1.54,69,3.408,70,2.622,71,3.787,72,1.871,73,1.907,77,2.712,78,2.067,79,2.067,81,0.978,82,2.067,83,2.067,84,1.571,85,1.576,86,0.938,87,1.023,89,2.067,90,2.067,91,0.546,92,0.25,93,0.762,94,0.642,95,0.904,96,0.904,97,0.985,98,0.904,99,0.83,100,0.588,101,0.7,102,0.588,103,0.7,104,0.184,105,0.286,106,0.767,107,3.57,108,1.32,109,0.785,110,1.208,113,0.7,114,0.985,115,0.83,116,1.108,117,1.32,118,1.56,123,0.904,129,2.747,131,1.794,132,1.794,133,1.794,134,1.439,137,1.292,138,2.324,139,2.324,140,2.087,141,3.021,142,0.588,143,1.023,144,1.023,145,0.938,146,1.329,147,0.7,148,1.023,149,0.489,150,0.7,151,0.489,152,0.7,153,0.489,154,1.023,155,0.444,156,0.588,157,0.7,158,0.489,159,1.261,160,0.93,161,0.489,162,0.7,163,0.489,164,0.859,165,0.7,166,0.489,167,0.7,168,0.489,169,0.7,170,0.537,171,0.7,172,0.489,173,0.7,174,0.489,175,0.7,176,0.019,177,0.019,256,3.873,348,1.889,433,0.985,448,2.324,452,2.042,522,2.087,607,1.59,614,2.324,637,1.428,653,4.369,677,4.714,678,3.021,679,3.626,680,2.481,681,3.021,682,2.481,683,3.021,684,2.481,685,3.626,686,2.481,687,3.626,688,2.481,689,2.481,690,3.626,691,3.57,692,2.481,693,2.481,694,3.021,695,2.481,696,2.481]],["title/injectables/ErrorHandlerService.html",[220,2.012,376,0.812]],["body/injectables/ErrorHandlerService.html",[2,0.267,3,0.267,7,0.178,11,0.84,17,0.678,22,0.267,33,0.76,39,0.678,44,0.61,46,0.583,47,0.034,48,0.314,49,0.314,50,0.415,53,2.437,55,1.107,59,0.468,60,0.84,91,0.474,92,0.363,104,0.267,105,0.415,113,1.016,118,1.312,130,2.839,137,1.876,145,0.932,176,0.024,177,0.024,190,1.205,207,2.073,219,3.91,220,3.009,244,3.001,291,1.876,321,2.073,326,0.932,327,0.853,342,1.708,371,3.001,376,1.35,389,2.073,395,3.91,415,3.001,429,2.605,479,2.033,522,2.701,565,2.073,574,2.605,590,2.309,617,2.605,619,4.602,622,4.618,697,4.349,698,3.001,699,4.694,700,3.602,701,4.694,702,5.531,703,3.602,704,3.91,705,5.221,706,5.257,707,3.602,708,3.001,709,3.602,710,3.602,711,3.602,712,3.602,713,4.694,714,3.602,715,3.602,716,3.602,717,3.602,718,3.602,719,3.602,720,4.694,721,3.602,722,4.694,723,4.694,724,3.602,725,3.602,726,3.602,727,3.602,728,3.001,729,3.602,730,4.694,731,3.602,732,3.602,733,4.694,734,3.602,735,3.602,736,3.602,737,3.602,738,3.602,739,3.602,740,3.602,741,3.001,742,3.602,743,3.602,744,3.001,745,3.602,746,2.605,747,2.605,748,3.602,749,3.602,750,3.602,751,3.602,752,3.001,753,3.602,754,3.602,755,3.001,756,3.602,757,3.602,758,3.602,759,3.602,760,3.602,761,3.602,762,3.602,763,3.602,764,4.694,765,3.602,766,3.602,767,3.602,768,3.602,769,3.602,770,3.602,771,3.602,772,3.602]],["title/components/LoginComponent.html",[0,0.049,161,0.619]],["body/components/LoginComponent.html",[0,0.085,1,0.61,2,0.314,3,0.229,4,0.872,5,0.872,6,0.872,7,0.153,11,0.759,12,1.251,13,0.872,14,1.622,15,1.174,16,0.5,17,0.402,18,1.096,20,1.096,22,0.229,23,0.759,26,1.739,27,2.099,29,2.162,33,0.617,38,1.345,39,0.551,44,0.731,46,0.5,47,0.034,48,0.422,49,0.422,50,0.356,56,2.716,57,3.064,59,0.628,60,0.866,68,1.302,73,1.543,76,3.496,85,1.739,86,0.8,91,0.568,92,0.312,94,0.8,95,1.126,104,0.229,105,0.356,106,0.931,113,1.467,123,1.126,130,1.466,142,0.732,143,1.195,144,1.195,145,1.096,146,1.467,147,0.872,148,1.195,149,0.61,150,0.872,151,0.61,152,0.872,153,0.61,154,1.195,155,0.759,156,1.333,157,0.872,158,0.61,159,0.917,160,0.61,161,1.026,162,0.872,163,0.61,164,1.232,165,0.872,166,0.61,167,0.872,168,0.61,169,0.872,170,0.669,171,0.872,172,0.61,173,0.872,174,0.61,175,0.872,176,0.022,177,0.022,182,2.993,185,3.334,187,3.099,204,2.732,226,1.466,227,2.236,240,2.236,242,2.236,248,1.779,333,2.438,353,2.466,354,3.53,367,4.167,380,2.207,398,2.329,405,2.716,407,3.53,426,4.333,429,2.236,537,2.716,565,2.993,581,3.334,652,1.466,744,3.53,773,2.576,774,4.238,775,4.238,776,5.201,777,5.201,778,4.333,779,3.092,780,5.628,781,4.238,782,3.092,783,3.092,784,4.238,785,4.238,786,2.207,787,4.238,788,3.53,789,4.238,790,3.53,791,3.092,792,3.761,793,3.064,794,2.716,795,5.201,796,3.092,797,3.092,798,3.092,799,4.238,800,3.092,801,3.092,802,3.092,803,3.092,804,3.092,805,2.236,806,2.576,807,2.236,808,3.53,809,4.238]],["title/components/MainComponent.html",[0,0.049,163,0.619]],["body/components/MainComponent.html",[0,0.094,1,0.81,2,0.378,3,0.305,4,1.158,5,1.158,6,1.158,7,0.203,11,0.913,12,1.435,13,1.158,14,1.678,15,1.217,16,0.665,17,0.534,18,1.32,20,1.32,22,0.305,33,0.742,38,1.501,39,0.721,44,0.663,47,0.034,48,0.445,59,0.534,60,0.735,91,0.414,92,0.414,104,0.305,105,0.473,142,0.973,143,1.439,144,1.439,145,1.32,146,1.637,147,1.158,148,1.439,149,0.81,150,1.158,151,0.81,152,1.158,153,0.81,154,1.439,155,0.735,156,0.973,157,1.158,158,0.81,159,1.104,160,0.81,161,0.81,162,1.158,163,1.145,164,1.375,165,1.158,166,0.81,167,1.158,168,0.81,169,1.158,170,0.889,171,1.158,172,0.81,173,1.158,174,0.81,175,1.158,176,0.026,177,0.026,326,1.062,327,0.973,328,1.779,810,3.421,811,5.101,812,5.101,813,5.101,814,4.106,815,4.106]],["title/injectables/MockupBackendService.html",[42,0.885,376,0.812]],["body/injectables/MockupBackendService.html",[2,0.247,3,0.164,7,0.109,11,0.396,15,0.436,16,0.539,17,0.763,22,0.407,24,1.087,27,1.622,28,2.035,29,2.067,33,0.484,34,1.442,39,0.52,42,0.938,44,0.776,46,0.951,47,0.034,48,0.517,49,0.513,50,0.676,53,1.588,54,1.657,55,0.679,59,0.821,63,2.376,64,1.048,81,1.055,85,0.739,86,0.861,91,0.482,92,0.223,93,0.679,104,0.164,105,0.254,109,0.964,118,1.74,126,1.598,141,2.566,176,0.017,177,0.017,179,1.151,206,2.133,246,1.417,290,1.588,321,1.272,325,1.417,326,0.572,327,0.523,342,1.048,348,3.109,374,2.303,376,1.035,377,1.151,380,1.151,381,1.272,398,1.896,399,2.889,408,2.133,410,2.488,413,5.006,437,2.133,438,2.406,439,2.406,440,2.406,441,2.406,442,2.406,443,2.406,444,2.406,445,2.406,446,2.133,447,2.133,448,2.133,449,2.406,451,2.406,452,2.492,454,2.406,456,2.406,458,2.889,459,2.406,461,2.406,463,2.406,465,2.406,467,2.406,469,2.406,473,2.406,475,2.406,477,2.406,479,1.442,500,2.563,507,2.133,554,2.488,583,1.417,708,4.935,728,1.841,746,1.598,747,1.598,816,5.006,817,1.841,818,2.21,819,2.21,820,6.045,821,2.21,822,2.772,823,2.21,824,3.328,825,2.21,826,2.772,827,2.21,828,2.21,829,2.21,830,2.21,831,2.21,832,2.21,833,2.21,834,2.21,835,2.21,836,2.21,837,2.21,838,4.454,839,3.455,840,4.454,841,4.454,842,4.454,843,2.406,844,1.598,845,1.417,846,1.417,847,2.406,848,1.598,849,1.598,850,1.598,851,1.598,852,5.969,853,5.677,854,3.328,855,2.21,856,2.21,857,2.21,858,2.21,859,2.21,860,4.002,861,2.21,862,2.21,863,2.21,864,3.328,865,2.21,866,2.21,867,2.21,868,2.21,869,2.21,870,2.21,871,2.21,872,3.328,873,2.21,874,2.21,875,2.21,876,2.21,877,2.21,878,2.21,879,2.21,880,2.21,881,2.21,882,3.328,883,2.21,884,2.21]],["title/interfaces/Notification.html",[432,1.245,435,0.964]],["body/interfaces/Notification.html",[2,0.294,3,0.294,7,0.196,16,0.641,22,0.405,23,0.893,39,0.514,43,0.937,47,0.034,49,0.54,50,0.704,59,0.709,81,1.011,87,1.615,91,0.399,92,0.399,104,0.37,105,0.455,106,0.709,109,1.079,176,0.026,177,0.026,179,2.061,290,1.57,309,3.498,313,1.876,326,1.024,327,0.937,376,1.289,381,2.277,387,2.277,389,2.277,405,2.537,432,2.343,433,2.273,435,1.531,554,2.596,640,3.672,652,1.876,786,2.061,885,2.862,886,3.297,887,4.153,888,3.297,889,3.297,890,2.862,891,2.862,892,2.862,893,2.862,894,2.862,895,3.297,896,3.297,897,3.297,898,4.153,899,3.297,900,3.297,901,3.297,902,3.297,903,3.297,904,3.297,905,3.297,906,3.297,907,3.297,908,3.297,909,4.153,910,2.862,911,3.297,912,4.546,913,3.297,914,2.862,915,3.297,916,3.297,917,3.297,918,3.297,919,3.297]],["title/components/NotificationsComponent.html",[0,0.049,166,0.619]],["body/components/NotificationsComponent.html",[0,0.083,1,0.57,2,0.409,3,0.215,4,0.816,5,0.816,6,0.816,7,0.143,11,0.725,12,1.207,13,0.816,14,1.608,15,1.157,16,0.468,17,0.376,18,1.047,20,1.047,22,0.215,23,0.725,24,1.312,25,1.852,33,0.589,38,1.308,39,0.526,41,1.368,42,1.596,43,1.341,44,0.75,46,0.655,47,0.034,48,0.441,49,0.524,50,0.634,57,3.655,59,0.607,60,0.953,68,1.243,91,0.6,92,0.292,93,0.889,96,1.053,97,1.148,98,1.053,99,0.967,100,0.685,101,0.816,102,0.685,103,0.816,104,0.215,105,0.333,106,0.836,109,0.626,110,1.141,115,1.353,116,1.207,117,1.474,128,3.371,142,0.685,143,1.426,144,1.141,145,1.047,146,1.426,147,0.816,148,1.141,149,0.57,150,0.816,151,0.57,152,0.816,153,0.57,154,1.141,155,0.518,156,0.685,157,0.816,158,0.57,159,0.876,160,0.57,161,0.57,162,0.816,163,0.57,164,0.959,165,0.816,166,0.997,167,0.816,168,0.57,169,0.816,170,0.626,171,0.816,172,0.57,173,0.816,174,0.57,175,0.816,176,0.021,177,0.021,190,1.353,191,1.918,206,3.24,313,1.918,326,0.748,327,0.685,338,2.926,389,2.909,394,3.371,410,2.108,432,2.359,433,2.292,574,2.926,590,3.24,591,2.594,593,2.092,652,1.918,704,3.371,786,2.108,890,2.926,891,2.926,892,4.243,893,4.176,894,2.926,910,2.092,920,2.41,921,4.047,922,4.047,923,5.055,924,2.893,925,2.893,926,2.893,927,2.893,928,2.893,929,2.41,930,2.893,931,2.893,932,4.047,933,4.047,934,4.047,935,4.047,936,4.047,937,4.047,938,4.047,939,4.047,940,4.047,941,4.047,942,4.047,943,4.047,944,4.047,945,4.047,946,4.047,947,2.893,948,3.371,949,2.893,950,2.893,951,2.893,952,2.893,953,2.893,954,4.047,955,2.893,956,2.893,957,4.047,958,4.047,959,4.047]],["title/injectables/NotificationsService.html",[43,0.743,376,0.812]],["body/injectables/NotificationsService.html",[2,0.278,3,0.278,7,0.186,16,0.909,22,0.395,23,0.862,33,0.701,39,0.691,43,1.141,44,0.772,46,0.779,47,0.034,48,0.42,49,0.464,50,0.646,59,0.772,60,0.862,81,0.861,87,1.057,91,0.378,92,0.378,104,0.357,105,0.431,106,0.953,109,1.042,176,0.025,177,0.025,179,1.952,290,1.911,309,2.403,313,1.777,326,0.97,327,0.888,376,1.376,381,2.157,387,2.771,389,2.771,405,2.403,432,2.455,433,1.488,435,1.151,554,2.508,640,2.403,652,2.283,786,2.508,885,2.711,886,4.678,887,4.012,888,4.012,889,3.123,890,4.06,891,3.482,892,3.482,893,3.482,894,3.482,895,3.123,896,3.123,897,3.123,898,4.678,899,4.012,900,4.012,901,4.012,902,4.012,903,4.678,904,3.123,905,3.123,906,3.123,907,3.123,908,3.123,909,4.012,910,2.711,911,3.123,912,4.433,913,3.123,914,2.711,915,3.123,916,3.123,917,3.123,918,3.123,919,3.123,929,3.123,960,4.816,961,4.816,962,3.748,963,3.748,964,3.748,965,3.748,966,3.748,967,3.748]],["title/components/OrganizationComponent.html",[0,0.049,168,0.619]],["body/components/OrganizationComponent.html",[0,0.092,1,0.676,2,0.402,3,0.171,4,0.648,5,0.648,6,0.648,7,0.114,9,1.473,11,0.614,12,1.06,13,0.648,14,1.564,15,1.041,16,0.878,17,0.822,18,0.886,20,0.886,22,0.171,23,0.614,24,1.24,26,1.519,27,1.248,28,1.769,31,2.197,32,1.322,33,0.499,34,1.967,38,1.175,39,0.445,41,1.285,42,1.53,43,1.25,44,0.754,46,0.663,47,0.034,48,0.484,49,0.484,50,0.472,53,1.36,54,0.966,58,2.104,59,0.631,60,0.87,63,1.484,64,1.942,68,1.492,73,1.654,81,0.939,84,1.484,85,1.814,86,1.318,87,0.966,91,0.569,92,0.232,93,0.706,94,0.594,95,0.837,96,0.837,97,0.912,98,0.837,99,0.769,100,0.544,101,0.648,102,0.544,103,0.648,104,0.171,105,0.265,106,0.813,108,1.769,109,1.174,110,1.156,113,0.648,114,0.912,115,0.769,116,0.594,117,1.248,123,1.492,124,1.942,126,3.284,142,0.544,143,0.966,144,0.966,145,0.886,146,1.281,147,0.648,148,0.966,149,0.453,150,0.648,151,0.453,152,0.648,153,0.453,154,0.966,155,0.412,156,0.544,157,0.648,158,0.453,159,1.142,160,0.676,161,0.453,162,0.648,163,0.453,164,0.812,165,0.648,166,0.453,167,0.648,168,0.896,169,0.648,170,0.497,171,0.648,172,0.453,173,0.648,174,0.676,175,0.648,176,0.018,177,0.018,182,2.613,184,1.915,185,2.911,187,2.197,249,1.473,250,1.915,255,2.855,256,1.473,290,1.802,313,1.625,326,0.594,327,0.544,328,0.996,334,1.972,335,1.473,336,2.931,337,1.662,342,1.942,343,2.358,347,1.972,353,1.625,452,1.484,521,3.284,522,1.972,523,2.855,537,2.197,558,1.09,563,2.855,598,1.662,652,1.942,786,1.785,792,3.684,793,3.684,794,3.266,805,2.963,807,2.963,968,1.915,969,3.427,970,3.427,971,4.519,972,5.094,973,3.427,974,3.427,975,4.542,976,3.427,977,2.298,978,2.298,979,3.427,980,2.298,981,3.427,982,2.298,983,2.298,984,2.298,985,2.298,986,5.544,987,2.298,988,2.298,989,2.298,990,4.542,991,2.298,992,4.097,993,4.097,994,2.298,995,1.915,996,3.427,997,5.094,998,3.427,999,4.542,1000,4.542,1001,2.298,1002,4.097,1003,4.097,1004,2.298,1005,2.298,1006,3.427,1007,3.427,1008,3.427,1009,2.478,1010,3.427,1011,3.427,1012,3.427]],["title/components/SidebarComponent.html",[0,0.049,172,0.619]],["body/components/SidebarComponent.html",[0,0.082,1,0.552,2,0.293,3,0.208,4,0.79,5,0.79,6,0.79,7,0.139,11,0.708,12,1.186,13,0.79,14,1.609,15,1.149,16,0.453,17,0.596,18,1.023,20,1.023,22,0.208,23,0.708,24,1.292,26,1.666,27,2.085,33,0.575,38,1.289,39,0.514,41,1.328,42,1.615,44,0.757,46,0.453,47,0.034,48,0.521,49,0.476,50,0.322,58,1.213,59,0.596,60,0.821,64,2.715,68,0.86,73,1.814,81,0.943,84,1.713,85,1.666,86,1.023,91,0.578,92,0.282,93,0.86,94,0.724,95,1.019,96,1.019,97,1.111,98,1.019,100,0.663,101,0.79,102,0.663,103,0.79,104,0.208,105,0.322,106,0.708,108,1.814,109,1.078,110,1.293,113,0.79,114,1.111,115,0.936,116,0.724,117,1.44,123,1.019,124,1.327,142,0.663,143,1.115,144,1.115,145,1.023,146,1.405,147,0.79,148,1.115,149,0.552,150,0.79,151,0.552,152,0.79,153,0.552,154,1.115,155,0.708,156,1.292,157,0.79,158,0.552,159,0.856,160,0.552,161,0.552,162,0.79,163,0.552,164,1.292,165,0.79,166,0.552,167,0.79,168,0.552,169,0.79,170,0.606,171,0.79,172,0.983,173,0.79,174,0.552,175,0.79,176,0.02,177,0.02,182,2.867,185,3.194,187,2.939,190,1.533,204,2.362,226,1.327,227,2.025,242,2.025,266,2.276,286,2.025,326,0.724,327,0.663,328,1.213,330,2.639,334,2.276,335,1.795,342,1.327,343,1.611,353,1.875,398,1.569,399,3.139,452,1.713,479,1.713,537,2.535,558,2.174,565,2.276,581,3.194,584,3.194,605,2.025,652,1.327,741,3.295,778,4.151,788,3.82,792,3.603,793,2.86,794,2.535,805,2.025,806,2.332,807,2.025,995,2.332,1013,2.332,1014,3.955,1015,3.955,1016,3.955,1017,2.8,1018,3.955,1019,3.955,1020,2.8,1021,2.8,1022,2.8,1023,2.8,1024,2.8,1025,2.8,1026,3.955,1027,3.295,1028,3.955,1029,2.8,1030,2.8,1031,2.8,1032,2.8,1033,2.8,1034,3.295,1035,3.955,1036,3.955]],["title/components/UserInfoComponent.html",[0,0.049,174,0.619]],["body/components/UserInfoComponent.html",[0,0.078,1,0.486,2,0.371,3,0.183,4,0.695,5,0.695,6,0.695,7,0.122,11,0.646,12,1.104,13,0.695,14,1.581,15,1.065,16,0.399,17,0.808,18,0.934,20,0.934,22,0.183,23,0.646,24,1.259,25,1.694,26,1.945,28,1.711,29,2.074,31,3.012,33,0.525,38,1.215,39,0.469,40,1.419,41,1.311,42,1.561,43,1.279,44,0.784,46,0.584,47,0.034,48,0.483,49,0.508,50,0.415,54,0.695,59,0.679,60,0.764,64,2.721,68,1.311,73,1.314,77,1.419,81,1.016,84,1.563,85,1.207,86,0.934,87,1.018,91,0.558,92,0.249,93,0.757,94,0.638,96,0.898,97,0.978,98,0.898,99,0.824,100,0.584,101,0.695,102,0.584,103,0.695,104,0.183,105,0.284,106,0.764,108,1.821,109,0.534,110,1.204,113,0.695,114,0.978,115,0.824,116,0.934,117,1.314,118,0.898,123,1.314,124,1.169,129,2.313,134,0.978,137,1.284,138,2.313,139,2.313,140,2.077,142,0.584,143,1.018,144,1.018,145,0.934,146,1.325,147,0.695,148,1.018,149,0.486,150,0.695,151,0.486,152,0.695,153,0.486,154,1.018,155,0.441,156,0.584,157,0.695,158,0.486,159,1.017,160,0.486,161,0.486,162,0.695,163,0.486,164,0.855,165,0.695,166,0.486,167,0.695,168,0.486,169,0.695,170,0.534,171,0.695,172,0.486,173,0.695,174,0.927,175,0.695,176,0.019,177,0.019,183,4.611,190,1.207,193,1.419,249,3.894,325,1.58,326,0.638,327,0.584,328,1.068,330,2.077,336,2.077,433,1.432,437,3.012,446,3.012,452,2.166,522,2.077,558,1.711,607,1.58,615,2.61,637,2.077,678,3.007,681,3.007,683,3.007,691,4.353,694,2.054,786,2.447,822,4.497,845,1.58,846,1.58,971,3.915,1027,2.054,1034,3.007,1037,5.061,1038,2.054,1039,3.609,1040,3.609,1041,5.225,1042,5.225,1043,3.609,1044,2.465,1045,2.465,1046,4.699,1047,4.699,1048,2.465,1049,2.465,1050,5.001,1051,2.465,1052,2.465,1053,2.465,1054,4.699,1055,4.699,1056,2.465,1057,2.465,1058,2.465,1059,2.465,1060,3.609,1061,2.465,1062,2.465,1063,3.609,1064,2.465,1065,2.465,1066,2.465,1067,2.465,1068,2.465]],["title/coverage.html",[1069,3.566]],["body/coverage.html",[0,0.099,1,0.682,7,0.171,8,2.882,9,2.218,10,3.305,24,0.749,32,1.991,41,0.819,42,0.976,43,0.819,47,0.034,49,0.302,54,0.976,100,0.819,102,0.819,149,0.682,151,0.682,153,0.682,155,0.619,158,0.682,160,0.682,161,0.682,163,0.682,166,0.682,168,0.682,170,0.749,172,0.682,174,0.682,176,0.024,177,0.024,178,2.882,204,1.64,220,2.218,223,2.502,226,2.427,249,2.218,252,2.502,256,2.218,265,2.882,274,2.502,275,2.502,313,2.939,350,4.56,376,1.464,393,2.882,432,1.373,435,1.672,436,2.882,480,2.882,499,2.882,505,2.502,506,2.502,571,2.502,572,2.882,573,2.882,578,2.218,579,3.281,580,3.281,582,2.218,653,3.305,654,2.882,697,2.882,698,2.882,773,2.882,810,2.882,816,2.882,817,2.882,843,2.502,844,2.502,845,2.218,846,2.218,847,2.502,848,2.502,849,2.502,850,2.502,851,2.502,885,3.305,920,2.882,968,2.882,1013,2.882,1037,2.882,1038,2.882,1069,2.882,1070,2.882,1071,3.46,1072,3.46,1073,2.882,1074,3.46,1075,3.46,1076,2.882,1077,4.649,1078,5.816,1079,3.46,1080,3.46,1081,3.46,1082,3.46,1083,3.46,1084,3.46,1085,5.118,1086,4.571,1087,2.882,1088,3.46,1089,2.882,1090,2.882,1091,2.882,1092,2.882,1093,6.306,1094,3.46,1095,3.46,1096,3.46,1097,3.46,1098,3.46,1099,3.46,1100,3.46,1101,3.46,1102,3.46,1103,3.46,1104,3.46,1105,3.46,1106,3.46,1107,3.46,1108,3.46,1109,3.46,1110,3.46,1111,3.46,1112,3.46,1113,5.118,1114,3.46,1115,3.46,1116,3.46,1117,3.46,1118,5.254,1119,2.882,1120,2.882,1121,3.808,1122,2.882,1123,3.46,1124,3.46]],["title/dependencies.html",[196,2.419,1125,2.184]],["body/dependencies.html",[47,0.034,92,0.459,94,1.178,95,1.978,176,0.028,177,0.028,196,2.919,211,4.526,212,3.928,216,3.793,217,2.62,240,3.293,246,2.919,248,2.62,377,2.372,379,3.293,380,2.83,948,3.793,1126,4.553,1127,6.393,1128,4.553,1129,4.553,1130,4.553,1131,4.553,1132,4.553,1133,4.553,1134,4.553,1135,5.433,1136,4.553,1137,4.553,1138,4.553,1139,4.553,1140,4.553,1141,4.553,1142,4.553,1143,4.553,1144,4.553,1145,4.553,1146,4.553,1147,5.433,1148,4.553,1149,4.553,1150,4.553]],["title/index.html",[22,0.195,1009,1.896,1151,2.184]],["body/index.html",[0,0.089,3,0.317,7,0.212,15,0.844,47,0.027,48,0.373,54,1.207,63,2.267,68,1.314,113,1.207,140,2.462,164,1.239,176,0.027,177,0.027,207,2.462,291,2.229,297,3.989,321,2.462,387,3.388,507,2.743,521,3.784,639,4.087,706,4.709,790,3.565,839,4.258,1070,4.906,1125,3.565,1152,4.279,1153,4.279,1154,5.652,1155,4.279,1156,5.888,1157,4.279,1158,5.652,1159,4.279,1160,5.232,1161,4.279,1162,4.279,1163,5.232,1164,5.232,1165,6.145,1166,5.232,1167,4.279,1168,4.279,1169,4.279,1170,4.279,1171,4.279,1172,4.279,1173,4.279,1174,4.279,1175,6.04,1176,4.279,1177,4.279,1178,4.279,1179,4.279,1180,3.565,1181,5.232,1182,4.279,1183,4.279,1184,4.279,1185,5.232,1186,4.279,1187,4.279,1188,4.279,1189,3.565,1190,4.279,1191,4.279,1192,4.279,1193,4.279,1194,5.652,1195,4.279,1196,4.279,1197,4.279]],["title/license.html",[1009,1.896,1151,2.184,1198,2.184]],["body/license.html",[7,0.236,47,0.029,113,1.342,164,1.127,176,0.029,177,0.029,266,2.739,752,3.965,839,3.441,1189,3.965,1198,5.332,1199,4.759,1200,4.759,1201,5.915,1202,4.759,1203,4.759,1204,4.759,1205,4.759,1206,4.759,1207,4.759,1208,4.759,1209,4.759,1210,4.759,1211,4.759,1212,4.759,1213,4.759,1214,5.576,1215,4.759,1216,4.759,1217,4.759,1218,4.759,1219,4.759,1220,4.759,1221,4.759,1222,4.759,1223,4.759,1224,4.759,1225,4.759,1226,4.759]],["title/modules.html",[194,2.463]],["body/modules.html",[47,0.03,176,0.03,177,0.03,194,2.921,195,3.254,212,3.67,755,4.228,1227,5.076,1228,5.076]],["title/overview.html",[1229,3.566]],["body/overview.html",[0,0.065,1,1.102,41,1.323,47,0.034,95,1.518,104,0.309,142,0.987,149,1.22,151,1.102,153,1.102,155,1,158,1.102,160,1.102,161,1.22,163,1.102,166,1.102,168,1.102,170,1.209,172,1.102,174,1.102,176,0.026,177,0.026,194,2.963,195,4.243,196,2.672,197,3.472,198,3.472,199,3.472,200,3.472,201,3.472,202,3.472,203,3.472,204,2.649,205,4.289,206,2.672,207,2.398,361,3.014,376,1.078,435,1.28,554,2.682,555,3.014,556,3.014,1229,3.472,1230,3.472]],["title/miscellaneous/variables.html",[1077,2.729,1231,2.184]],["body/miscellaneous/variables.html",[2,0.269,15,1.034,16,0.306,17,0.578,22,0.14,25,0.75,27,1.795,29,0.75,32,2.09,34,0.819,47,0.034,48,0.553,49,0.537,54,0.533,55,1.728,58,0.819,64,2.418,72,2.303,81,0.478,86,0.939,87,1.692,100,0.86,102,0.699,106,0.882,110,1.605,116,0.763,130,2.11,134,0.75,138,3.359,139,1.892,140,1.698,159,0.409,176,0.015,177,0.015,190,1.996,191,2.99,217,1.698,223,2.626,226,0.896,266,1.698,274,2.626,275,2.626,290,1.767,297,3.865,303,1.367,321,1.088,326,0.489,327,0.448,334,1.088,340,1.367,348,3.047,349,1.574,350,3.219,351,3.453,352,3.708,353,2.11,380,1.537,398,1.171,410,0.984,432,1.171,452,0.819,479,1.573,500,3.192,505,2.626,506,2.626,507,2.631,513,1.574,554,1.891,555,2.626,556,2.134,561,4.549,562,3.687,564,4.248,565,2.934,575,3.708,576,4.248,577,4.366,579,1.211,580,1.892,582,2.328,583,2.328,584,1.892,585,1.367,586,1.367,587,2.134,591,1.211,746,1.367,747,1.367,794,1.211,808,1.574,826,1.574,843,2.626,844,2.626,845,2.328,846,2.328,847,2.626,848,2.626,849,2.626,850,2.626,851,2.626,914,2.134,1073,1.574,1076,1.574,1077,1.367,1087,4.366,1089,1.574,1090,2.459,1091,1.574,1092,2.459,1118,1.574,1119,3.025,1120,1.574,1121,3.93,1122,1.574,1180,2.459,1230,2.459,1231,1.574,1232,1.89,1233,1.89,1234,1.89,1235,1.89,1236,5.691,1237,1.89,1238,1.89,1239,1.89,1240,1.89,1241,1.89,1242,1.89,1243,1.89,1244,1.89,1245,1.89,1246,1.89,1247,1.89,1248,1.89,1249,1.89,1250,1.89,1251,1.89,1252,1.89,1253,1.89,1254,1.89,1255,1.89,1256,1.89,1257,1.89,1258,1.89,1259,1.89,1260,1.89,1261,1.89,1262,2.951,1263,2.951,1264,2.951,1265,5.691,1266,2.951,1267,5.691,1268,2.951,1269,2.951,1270,2.951,1271,2.951,1272,2.951,1273,3.631,1274,2.951,1275,4.104,1276,2.951,1277,2.951,1278,2.951,1279,2.951,1280,4.451,1281,4.104,1282,2.951,1283,1.89,1284,2.951,1285,1.89,1286,3.631,1287,4.451,1288,6.186,1289,6,1290,1.89,1291,2.951,1292,2.951,1293,1.89,1294,2.951,1295,2.951,1296,2.951,1297,4.718,1298,2.951,1299,1.89,1300,1.89,1301,1.89,1302,1.89,1303,1.89,1304,1.89,1305,2.951,1306,1.89,1307,2.951,1308,1.89,1309,1.89,1310,1.89,1311,1.89,1312,1.89,1313,1.89,1314,1.89,1315,1.89,1316,1.89,1317,1.89,1318,4.104,1319,1.89,1320,1.89,1321,1.89,1322,2.951,1323,2.951,1324,4.929,1325,1.89,1326,1.89,1327,1.89,1328,1.89,1329,1.89,1330,1.89,1331,1.89,1332,1.89,1333,1.89,1334,1.89,1335,1.89,1336,1.89,1337,2.951,1338,1.89,1339,1.89,1340,1.89]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0.0",{"_index":310,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["0.8.26",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":298,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["00ff00",{"_index":299,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0800200c9a61",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":294,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0x3",{"_index":917,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":918,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":554,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":350,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["11/17",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["13/21",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1230,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":914,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/33",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1203,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1209,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":346,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["200",{"_index":708,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":711,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1200,"title":{},"body":{"license.html":{}}}],["21321321321",{"_index":560,"title":{},"body":{"components/ClusterComponent.html":{}}}],["23",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":714,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["33",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3tb",{"_index":559,"title":{},"body":{"components/ClusterComponent.html":{}}}],["4",{"_index":556,"title":{},"body":{"components/ClusterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":344,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["4/7",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":719,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":725,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":728,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":739,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4h",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":906,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":555,"title":{},"body":{"components/ClusterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5/10",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["53",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["6/15",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["6/23",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6h",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7/13",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/16",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":295,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["96",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_notif",{"_index":886,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":730,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":960,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1055,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":888,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":744,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":449,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1211,"title":{},"body":{"license.html":{}}}],["alert",{"_index":892,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":959,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":537,"title":{},"body":{"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":863,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":1156,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":516,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1202,"title":{},"body":{"license.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["app.configur",{"_index":359,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.descript",{"_index":357,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.id",{"_index":356,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.nam",{"_index":355,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.rout",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["app.servic",{"_index":360,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.tag",{"_index":358,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appcompon",{"_index":149,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":824,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["applic",{"_index":266,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications.component.html",{"_index":268,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications.component.scss",{"_index":267,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications/applications.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":151,"title":{"components/ApplicationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":195,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":517,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1176,"title":{},"body":{"index.html":{}}}],["assest",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":305,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["attent",{"_index":937,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":379,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authent",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":362,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":204,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1188,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1170,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":269,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["avail",{"_index":291,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":582,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":612,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":600,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":610,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":596,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":603,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":597,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":601,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":599,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":604,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":608,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":606,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":817,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:109",{"_index":835,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:11",{"_index":818,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:120",{"_index":837,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:141",{"_index":836,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:153",{"_index":831,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:160",{"_index":827,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:176",{"_index":823,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:186",{"_index":828,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:196",{"_index":825,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:25",{"_index":833,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:36",{"_index":834,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:50",{"_index":832,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:61",{"_index":829,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:68",{"_index":830,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:78",{"_index":819,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:96",{"_index":821,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":41,"title":{"injectables/BackendService.html":{}},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1215,"title":{},"body":{"license.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["behavior",{"_index":842,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":942,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":911,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":853,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":622,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["brows",{"_index":1228,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1175,"title":{},"body":{"index.html":{}}}],["button",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1041,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":1042,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":683,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":909,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":339,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["carouselmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":619,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["chang",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":878,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":876,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":880,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newuseremail",{"_index":869,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newusernam",{"_index":867,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newuserrol",{"_index":871,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["charact",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":678,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":681,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":957,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":563,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":1018,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1158,"title":{},"body":{"index.html":{}}}],["click",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":1161,"title":{},"body":{"index.html":{}}}],["close",{"_index":652,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":500,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":502,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":501,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":654,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":663,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":668,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":666,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":667,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":665,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":658,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":664,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":660,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":662,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:76",{"_index":659,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":153,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":503,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":655,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":458,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":571,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":656,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":504,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":657,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1172,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":270,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["command",{"_index":1157,"title":{},"body":{"index.html":{}}}],["commun",{"_index":767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1205,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1185,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":578,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":621,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":618,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":752,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["configur",{"_index":352,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1047,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":738,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":729,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":766,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":749,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":715,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":770,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":733,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":709,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":633,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["console.log(mock",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{}}}],["const",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":286,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":924,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":649,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1207,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1199,"title":{},"body":{"license.html":{}}}],["core",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":530,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":1069,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":557,"title":{},"body":{"components/ClusterComponent.html":{}}}],["creat",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":565,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":522,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":271,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["danger",{"_index":940,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["darbi",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["data.email",{"_index":1031,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data.nam",{"_index":995,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["data.rol",{"_index":1032,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data['totalclust",{"_index":548,"title":{},"body":{"components/ClusterComponent.html":{}}}],["data['totalnod",{"_index":549,"title":{},"body":{"components/ClusterComponent.html":{}}}],["date",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{}}}],["debug",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":155,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":923,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":822,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":437,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":451,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":196,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":345,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["descript",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":826,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1167,"title":{},"body":{"index.html":{}}}],["develop",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":1060,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["direct",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1174,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1164,"title":{},"body":{"index.html":{}}}],["discard",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":893,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":929,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":634,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1177,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1214,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1036,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1070,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":293,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["done",{"_index":934,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doughnut",{"_index":272,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["due",{"_index":722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":948,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["edg",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":587,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":158,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":160,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["email",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":1063,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":750,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["engin",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":498,"title":{},"body":{"injectables/BackendService.html":{}}}],["error.statu",{"_index":707,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":220,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["eventemitt",{"_index":951,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["except",{"_index":1204,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1182,"title":{},"body":{"index.html":{}}}],["expect",{"_index":841,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1219,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjvc2vyswqioijqb2hulmrvzubtywlslmnvbsisik9yz2fuaxphdglvbklkijoimje0mzq2ntqzndm0myisilbyaw1pdgl2zxmiolsimcisijeilciyiiwimyjdlcjsb2xlbmftzsi6ik93bmvyiiwirxhwaxjlc0f0ijoxmjmzodu3mjcxmjc0m30",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":687,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1179,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1190,"title":{},"body":{"index.html":{}}}],["form",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":734,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":992,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":713,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["further",{"_index":1193,"title":{},"body":{"index.html":{}}}],["gain",{"_index":771,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":760,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":387,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":509,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":512,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1151,"title":{"index.html":{},"license.html":{}},"body":{}}],["getapp",{"_index":438,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getapps(organizationid",{"_index":454,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclust",{"_index":440,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail",{"_index":439,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail(clusterid",{"_index":456,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":459,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnod",{"_index":441,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnodes(clusterid",{"_index":461,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":966,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":442,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":463,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":443,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":465,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":444,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":467,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":445,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(userid",{"_index":469,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1196,"title":{},"body":{"index.html":{}}}],["good",{"_index":946,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":1224,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":273,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["group",{"_index":354,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{}}}],["group_work",{"_index":1035,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":361,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":901,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":699,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":701,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":704,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":698,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":700,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["head",{"_index":936,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":1194,"title":{},"body":{"index.html":{}}}],["helper",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1191,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1169,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1208,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":702,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1159,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":900,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1155,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":958,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":838,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1220,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":1040,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":1039,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":1038,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:20",{"_index":1051,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1059,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":1056,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1053,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1062,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1057,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":1058,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1061,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1043,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1052,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:62",{"_index":1048,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:68",{"_index":1044,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1045,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1049,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":573,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":330,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":997,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inject",{"_index":376,"title":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":953,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1160,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":575,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1186,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":435,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":723,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":564,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{}}}],["it'",{"_index":938,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":650,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["jack",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jackdoe@mail.com",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jame",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jamesdoe@mail.com",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javascript",{"_index":902,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["jimmi",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jimmydoe@mail.com",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johndoe@mail.com",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joshdoe@mail.com",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":515,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":337,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1029,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":343,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.stringifi",{"_index":854,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttoken.jwt",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(jwttokendata",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockappslist",{"_index":883,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist",{"_index":882,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mocknodelist",{"_index":884,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":858,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":881,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist",{"_index":859,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["jwt",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":334,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwthelperservic",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1184,"title":{},"body":{"index.html":{}}}],["key",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kf9ac17v9mwowmyjhhyc9gd8hgw6wrt6wwngduj1v4c",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1218,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":561,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["languag",{"_index":1223,"title":{},"body":{"license.html":{}}}],["law",{"_index":1210,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1019,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":747,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1187,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1198,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1226,"title":{},"body":{"license.html":{}}}],["line",{"_index":321,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":328,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":746,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":910,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":290,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":558,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":333,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":329,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":611,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":335,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":593,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":598,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":602,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":541,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":605,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":609,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":607,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":632,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":625,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":631,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":620,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":627,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":623,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":626,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":624,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":628,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":630,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":629,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":161,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":742,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":945,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":811,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":813,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":812,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":163,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1153,"title":{},"body":{"index.html":{}}}],["match",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":913,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikedoe@mail.com",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1231,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":274,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":275,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappslist",{"_index":850,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":505,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":848,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":873,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":877,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":875,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].tag",{"_index":879,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":843,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":851,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":506,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":846,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":847,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":849,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":42,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":845,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":860,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":862,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":865,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].email",{"_index":868,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].nam",{"_index":866,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].rol",{"_index":870,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo",{"_index":844,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserprofileinfo.email",{"_index":856,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.nam",{"_index":855,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.rol",{"_index":857,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":614,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":194,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1195,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":562,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nativedock",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navig",{"_index":1168,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":727,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":574,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":675,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":674,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":676,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["newuseremail",{"_index":695,"title":{},"body":{"components/EditUserComponent.html":{}}}],["newusernam",{"_index":693,"title":{},"body":{"components/EditUserComponent.html":{}}}],["newuserrol",{"_index":696,"title":{},"body":{"components/EditUserComponent.html":{}}}],["next",{"_index":327,"title":{},"body":{"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1165,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":507,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":568,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":566,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":567,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":570,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":569,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":508,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":432,"title":{"interfaces/Notification.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":963,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":922,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":921,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":166,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":591,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":43,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1154,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":309,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":332,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["observ",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1206,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":872,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["on",{"_index":523,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["onclos",{"_index":890,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":894,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":973,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openedituser(us",{"_index":979,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":974,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":981,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":642,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":616,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":315,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["organ",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":998,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":970,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":969,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_mock",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":168,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":971,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":950,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["overview",{"_index":1229,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1125,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":741,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":581,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":588,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":589,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":580,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:100",{"_index":645,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:145",{"_index":646,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:38",{"_index":648,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":643,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:42",{"_index":647,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:48",{"_index":644,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirm",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":716,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1225,"title":{},"body":{"license.html":{}}}],["persist",{"_index":613,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1034,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pie",{"_index":303,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":594,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":768,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1178,"title":{},"body":{"index.html":{}}}],["product",{"_index":1180,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":583,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1163,"title":{},"body":{"index.html":{}}}],["promis",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["proxi",{"_index":761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1192,"title":{},"body":{"index.html":{}}}],["r",{"_index":912,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":276,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["reactiveformsmodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":935,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":1197,"title":{},"body":{"index.html":{}}}],["real",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":705,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":277,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["regist",{"_index":347,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":1171,"title":{},"body":{"index.html":{}}}],["remov",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":952,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":306,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["replic",{"_index":840,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":1162,"title":{},"body":{"index.html":{}}}],["request",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["requir",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":446,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":473,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":479,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":342,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response(new",{"_index":852,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["responseopt",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["resset",{"_index":1050,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":677,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["root'},{'nam",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":297,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":576,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["save",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":447,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":661,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":475,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchang",{"_index":448,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchanges(f",{"_index":685,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(organizationid",{"_index":477,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":1173,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":278,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["screen",{"_index":635,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1221,"title":{},"body":{"license.html":{}}}],["select",{"_index":615,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1166,"title":{},"body":{"index.html":{}}}],["server",{"_index":706,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":353,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["set",{"_index":745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":891,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":279,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflabel",{"_index":280,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflin",{"_index":281,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxi",{"_index":282,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxislabel",{"_index":283,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxi",{"_index":284,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxislabel",{"_index":285,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["sidebar",{"_index":584,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1015,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1014,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":172,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sig",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":820,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["softwar",{"_index":1213,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":651,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":636,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1222,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":265,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{}}}],["src/app/applications/applications.component.ts:19",{"_index":292,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:24",{"_index":308,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:29",{"_index":289,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:34",{"_index":302,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:35",{"_index":301,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:36",{"_index":296,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:39",{"_index":300,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:53",{"_index":320,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:54",{"_index":323,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:55",{"_index":322,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:56",{"_index":324,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:57",{"_index":317,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:58",{"_index":319,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:59",{"_index":318,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:60",{"_index":316,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:61",{"_index":311,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:62",{"_index":314,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:71",{"_index":304,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:72",{"_index":307,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:73",{"_index":287,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:99",{"_index":288,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":499,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:113",{"_index":519,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:145",{"_index":514,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:160",{"_index":520,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:19",{"_index":525,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:24",{"_index":540,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:29",{"_index":527,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:34",{"_index":526,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:39",{"_index":528,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:44",{"_index":538,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:49",{"_index":539,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:54",{"_index":529,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:59",{"_index":534,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:60",{"_index":533,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":531,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:64",{"_index":532,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:78",{"_index":535,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:79",{"_index":536,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:80",{"_index":524,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":511,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":579,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/clust",{"_index":572,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":436,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":466,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":450,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":453,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":474,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:14",{"_index":478,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:16",{"_index":476,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":460,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:18",{"_index":462,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:19",{"_index":468,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:21",{"_index":455,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:22",{"_index":457,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":471,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":472,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":470,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":464,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/edit",{"_index":653,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":810,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":815,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":814,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":920,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":926,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":931,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":949,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":947,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":925,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":927,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":930,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":928,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":968,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:112",{"_index":977,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:123",{"_index":983,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:22",{"_index":984,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:26",{"_index":985,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":987,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":988,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":989,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:34",{"_index":976,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:54",{"_index":978,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:80",{"_index":982,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:96",{"_index":980,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:67",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":480,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:13",{"_index":492,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":493,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:19",{"_index":491,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:22",{"_index":488,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:25",{"_index":489,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:28",{"_index":482,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:31",{"_index":483,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:34",{"_index":494,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:37",{"_index":495,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":496,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:43",{"_index":490,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:46",{"_index":486,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:49",{"_index":484,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:52",{"_index":487,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:55",{"_index":485,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:9",{"_index":481,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/error",{"_index":697,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":816,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":885,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":961,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":962,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":967,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":964,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":965,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1013,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":1022,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":1024,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:25",{"_index":1025,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":1023,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1016,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:49",{"_index":1020,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:70",{"_index":1021,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":1017,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1037,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1009,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":348,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":552,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":518,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(respons",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":986,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":972,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["substitut",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["succeed",{"_index":710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":932,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/NotificationsComponent.html":{}}}],["summari",{"_index":340,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":939,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":755,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1227,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":617,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["syntax",{"_index":724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["system",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabl",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":351,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1054,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":887,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":895,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":889,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":897,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":954,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.app",{"_index":331,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.auth.logout",{"_index":1033,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1067,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getapps(this.organizationid",{"_index":341,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.backend.getclusterdetail(this.clusterid",{"_index":551,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.clusterid",{"_index":553,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":994,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":996,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":547,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(userid",{"_index":1030,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":1068,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":673,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":692,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1065,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":1066,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":542,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":546,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":670,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":672,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":669,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":545,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":671,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":595,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":955,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":1028,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.formbuilder.group",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(jwttoken.jwt",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":385,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":1002,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1005,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1004,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1001,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1026,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.nod",{"_index":543,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":544,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":592,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":956,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":638,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":336,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":990,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1027,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":690,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":991,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":1064,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":550,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateuserlist",{"_index":1003,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":993,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":691,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":694,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["throw",{"_index":497,"title":{},"body":{"injectables/BackendService.html":{}}}],["time",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":349,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/UserInfoComponent.html":{}}}],["todo",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["top",{"_index":338,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":513,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["totalclust",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":577,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":326,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1152,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":764,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1201,"title":{},"body":{"license.html":{}}}],["understand",{"_index":721,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1181,"title":{},"body":{"index.html":{}}}],["up",{"_index":590,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":521,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["updatenodeslist",{"_index":510,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateuserlist",{"_index":975,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1046,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["us",{"_index":839,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:103",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:18",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":689,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:24",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:25",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:26",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:28",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":679,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:33",{"_index":688,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:48",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:55",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:56",{"_index":684,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:71",{"_index":682,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:78",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:81",{"_index":680,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:89",{"_index":686,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:95",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":999,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.rol",{"_index":1000,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":586,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":452,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":585,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":174,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1006,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":325,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":898,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":903,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":915,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":919,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":899,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":1077,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1189,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1183,"title":{},"body":{"index.html":{}}}],["view",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":941,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":1217,"title":{},"body":{"license.html":{}}}],["well",{"_index":933,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":1216,"title":{},"body":{"license.html":{}}}],["write",{"_index":1212,"title":{},"body":{"license.html":{}}}],["x",{"_index":916,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.email).indexof(user.email",{"_index":861,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":864,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(clusterid",{"_index":874,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":896,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":312,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["xxxx",{"_index":905,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":904,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":908,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":944,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":943,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":907,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    console.log(mock);\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        if (!response._body) {\n          this.notificationsService.add({message: user.email + ' created successfully'});\n          this.bsModalRef.hide();\n        } else {\n          // Error\n          this.notificationsService.add({message: response._body});\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n     \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add user              ×                                                                                                   Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService }\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationsComponent.html":{"url":"components/ApplicationsComponent.html","title":"component - ApplicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/applications/applications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                applications\n            \n\n            \n                styleUrls\n                applications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./applications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apps\n                            \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockAppChart\n                            \n                            \n                                mockAppPieChart\n                            \n                            \n                                organizationId\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apps:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:29\n                            \n                        \n\n                \n                    \n                        List of available apps\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:34\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:71\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:53\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { mockAppChart, mockAppPieChart } from '../utils/mocks';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * List of available apps\n   */\n  apps: any[];\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockAppChart: any;\n  mockAppPieChart: any;\n  autoScale: any;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n\n\n    this.apps = [];\n    /**\n   * Mocked Charts\n   */\n  Object.assign(this, {mockAppPieChart, mockAppChart});\n}\n\n\n  ngOnInit() {\n      // Get User data from localStorage\n      const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n      if (jwtData !== null) {\n        this.organizationId = JSON.parse(jwtData).OrganizationId;\n        if (this.organizationId !== null) {\n          // Requests top card summary data\n          this.backend.getApps(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.apps = data;\n            }\n          });\n        }\n      }\n    }\n}\n\n    \n\n    \n        \n\n    \n      Application\n    \n  \n  \n    \n    \n      \n        \n          SUMMARY\n        \n        \n          \n            \n              \n                \n                \n                4/5\n              \n              Apps running\n              DEPLOYED\n            \n          \n          \n            \n              20\n            \n            REGISTERED\n          \n        \n      \n    \n    \n    \n      \n        \n          APP STATUS TIMELINE\n        \n        \n          \n            \n            \n            \n          \n          \n            100%\n            0%\n            \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          DEPLOYED APP LIST\n        \n        \n          \n            \n              \n                \n                  Name\n                \n                \n                  ID\n                \n                \n                  Description\n                \n                \n                  Tags\n                \n                \n                  Configuration\n                \n                \n                  Service Groups\n                \n                \n                  Info\n                \n              \n            \n            \n              \n                {{app.name}}\n                {{app.id}}\n                {{app.description}}  \n                {{app.tags}}\n                {{app.configuration}}\n                \n                {{app.service}}\n                \n                  \n                    \n                      i\n                    \n                  \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Application                                        SUMMARY                                                                                                    4/5                            Apps running              DEPLOYED                                                          20                        REGISTERED                                                            APP STATUS TIMELINE                                                                                              100%            0%                                                                DEPLOYED APP LIST                                                                                      Name                                                  ID                                                  Description                                                  Tags                                                  Configuration                                                  Service Groups                                                  Info                                                                                    {{app.name}}                {{app.id}}                {{app.description}}                  {{app.tags}}                {{app.configuration}}                                {{app.service}}                                                                            i                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable, of } from 'rxjs';\nimport { ResponseOptions } from '@angular/http';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    let complete;\n    let jwtToken;\n    this.backend.login(email, password)\n      .subscribe(response => {\n        if (response && response._body) {\n          jwtToken = JSON.parse(response._body);\n          const jwtTokenData =  this.jwtHelper.decodeToken(jwtToken.jwt);\n          localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(jwtToken.jwt));\n          localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n          complete = jwtTokenData;\n        }\n      }, error => {\n        complete = error;\n      });\n      return of (complete);\n  }\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        this.router.navigate(['login']);\n      }, error => {\n        console.log(error); // TODO: substitute with notification service messaging system\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getClusterDetail\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getNodes\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                                \n                                    saveUserChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, userId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    saveUserChanges(organizationId: string, userId: string, changes: any);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getNodes(clusterId: string);\n    getResourcesSummary(organizationId: string);\n    //Applications\n    getApps(organizationId: string);\n    getClusterDetail(clusterId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, userId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BackendService implements Backend {\n\n  constructor() { }\n\n  login(email: string, password: string): Observable {\n    throw new Error('Method not implemented.');\n  }\n  logout() {\n    throw new Error('Method not implemented.');\n  }\n  getUserProfileInfo(userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationInfo(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationUsers(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  addUser(organizationId: string, user: any) {\n    throw new Error('Method not implemented.');\n  }\n  deleteUser(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  resetPassword(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    throw new Error('Method not implemented.');\n  }\n  saveUserChanges(organizationId: string, userId: string, changes: any) {\n    throw new Error('Method not implemented.');\n  }\n  getResourcesSummary(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getClusters(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getApps(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getNodes(clusterId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getClusterDetail(clusterId: string) {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:54\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:59\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:78\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:49\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: any[];\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.resourcesMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = [];\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).OrganizationId;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n         .subscribe(response => {\n           if (response && response._body) {\n             const data = JSON.parse(response._body);\n             this.clustersCount = data['totalClusters'];\n             this.nodesCount = data['totalNodes'];\n           }\n         });\n         this.updateNodesList();\n       }\n     }\n    //  this.backend.getClusterDetail(this.clusterId)\n    //  .subscribe(response => {\n    //    if (response && response._body) {\n    //      const data = JSON.parse(response._body);\n    //      this.clusterData = data;\n    //    }\n    //  });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.clusterId)\n    .subscribe(response => {\n      if (response && response._body) {\n        const data = JSON.parse(response._body);\n        this.nodes = data;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        CLUSTER 1\n        5 available\n      \n      \n        \n          \n            \n              \n              \n              4/5\n            \n            4 nodes \n            NODES\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n            \n              {{clustersCount}}\n            \n            CPU LOAD\n          \n          \n            \n              3Tb\n            \n            STORAGE\n          \n        \n        \n          \n            \n              \n                id\n              \n              21321321321\n            \n            \n              \n                types\n              \n              Kubernetes \n            \n            \n              \n                Tags\n              \n              Tags\n            \n            \n              \n                Multitenant\n              \n              All\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > CLUSTER 1 > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      CLUSTER 1        5 available                                                                                    4/5                        4 nodes             NODES                                              SUMMARY CLUSTER 1                                                        {{clustersCount}}                        CPU LOAD                                              3Tb                        STORAGE                                                                              id                            21321321321                                                      types                            Kubernetes                                                       Tags                            Tags                                                      Multitenant                            All                                                                                    CLUSTER                                 > CLUSTER 1 >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/const/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Debug panel\n  \n  \n    \n      &times;\n    \n  \n\n\n\n  Backend control\n  \n    \n      \n      \n        {{item.name}}\n      \n      \n      \n        \n          Real\n        \n        \n          Mock\n        \n      \n    \n  \n  \n  Notifications\n  Spam test notification\n\n\n\n  \n    Close\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Debug panel              ×        Backend control                          {{item.name}}                                    Real                          Mock                        Notifications  Spam test notification      Close  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, this.userId, {\n        newUserName: this.userName,\n        newUserEmail: this.userId,\n        newUserRole: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    Edit user\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Edit user          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.router.navigate([\n          '/organization'\n        ]);\n      }, error => console.log(error));\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                \n                \n                Log in\n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                                                    Log in                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Simulates add user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Simulates delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            \nAppications\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:196\n                            \n                        \n\n\n                \n                    \n                            Simulates get cluster details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:186\n                            \n                        \n\n\n                \n                    \n                            Simulates get nodes list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:109\n                            \n                        \n\n\n                \n                    \n                            Simulates reset password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, userId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Simulates save user changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the user identificator - used to replicate expected backend behavior\n\n                                                        \n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserProfileInfo, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList, mockResourcesSummary, mockAppsList, mockNodeList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        jwt: mockJwtToken\n      }),\n      status: 200\n    })));\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        name: mockUserProfileInfo.name,\n        email: mockUserProfileInfo.email,\n        role: mockUserProfileInfo.role\n      }),\n      status: 200\n    })));\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })));\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList),\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates add user\n  */\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      })));\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      })));\n    }\n  }\n\n  /**\n  * Simulates delete user\n  */\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates reset password\n  */\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates save user changes\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  saveUserChanges(organizationId: string, userId: string, changes: any) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList[index].name = changes.newUserName;\n      mockUserList[index].email = changes.newUserEmail;\n      mockUserList[index].role = changes.newUserRole;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].tags = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })));\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n\n\n\n  /********************\n   * Appications\n   ********************/\n\n  /**\n   * Simulates get apps list\n   */\n  getApps(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockAppsList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get nodes list\n   */\n  getNodes(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockNodeList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get cluster details\n   */\n  getClusterDetail(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:22\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:34\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).OrganizationId;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.organizationName = data.name;\n            }\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.users = data;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId\n    };\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState});\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Requests an updated list of users to update the current one\n   */\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n        if (response && response._body) {\n          const data = JSON.parse(response._body);\n          this.users = data;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userId;\n      if (userId !== null) {\n        this.backend.getUserProfileInfo(userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.name = data.name;\n              this.email = data.email;\n              this.role = data.role;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                26 %\n                (6/23)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                61 %\n                (13/21)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                48 %\n                (16/33)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserProfileInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            mockUserProfileInfo   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Assets Application',\n        id: '0800200c9a61',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'SIG Application',\n        id: '0800200c9a62',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Engine App',\n        id: '0800200c9a63',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a64',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a65',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster2',\n        id: '0800200c9a62',\n        totalNodes: '10',\n        runningNodes: '2',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster3',\n        id: '0800200c9a63',\n        totalNodes: '10',\n        runningNodes: '3',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster4',\n        id: '0800200c9a64',\n        totalNodes: '10',\n        runningNodes: '4',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster5',\n        id: '0800200c9a65',\n        totalNodes: '10',\n        runningNodes: '5',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Error',\n        tags: 'ny, edge',\n        multitenant: 'No'\n    },\n    {\n        name: 'Cluster6',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '6',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster7',\n        id: '0800200c9a67',\n        totalNodes: '10',\n        runningNodes: '7',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJVc2VySWQiOiJqb2huLmRvZUBtYWlsLmNvbSIsIk9yZ2FuaXphdGlvbklkIjoiMjE0MzQ2NTQzNDM0MyIsIlByaW1pdGl2ZXMiOlsiMCIsIjEiLCIyIiwiMyJdLCJSb2xlbmFtZSI6Ik93bmVyIiwiRXhwaXJlc0F0IjoxMjMzODU3MjcxMjc0M30' +\n    '.kF9ac17V9mWoWMYjhHyc9GD8hGw6wRT6wwNgdUJ1v4c'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    totalClusters: mockClusterList.length,\n    totalNodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'Jack Doe',\n        email: 'jackdoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'James Doe',\n        email: 'jamesdoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'Jimmy Doe',\n        email: 'jimmydoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'Josh Doe',\n        email: 'joshdoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'Mike Doe',\n        email: 'mikedoe@mail.com',\n        role: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserProfileInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'John Doe',\n    email: 'john.doe@mail.com',\n    role: 'Owner'\n}\n                        \n                    \n\n                \n                    \n                        Mocked profile info\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
