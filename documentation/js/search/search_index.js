var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.046,1,0.627]],["body/components/AddUserComponent.html",[0,0.073,1,0.929,2,0.291,3,0.198,4,0.679,5,0.679,6,0.679,7,0.14,8,5.138,9,3.981,10,1.81,11,0.712,12,1.088,13,0.679,14,1.566,15,1.054,16,1.054,17,0.93,18,0.918,19,3.052,20,0.918,21,3.052,22,0.169,23,0.65,24,1.489,25,1.767,26,1.897,27,2.241,28,1.794,29,2.255,30,4.766,31,2.782,32,2.526,33,0.592,34,1.767,35,3.052,36,2.658,37,3.649,38,1.199,39,0.483,40,1.45,41,1.665,42,1.665,43,1.38,44,0.807,45,3.052,46,0.99,47,0.032,48,0.613,49,0.679,50,0.745,51,3.649,52,2.485,53,1.491,54,1.449,55,1.528,56,3.951,57,2.658,58,2.813,59,0.843,60,0.929,61,3.052,62,2.485,63,2.458,64,2.983,65,3.617,66,2.658,67,2.485,68,1.387,69,2.658,70,2.658,71,3.866,72,1.491,73,1.794,74,3.649,75,2.485,76,2.658,77,1.45,78,2.485,79,2.078,80,2.485,81,1.114,82,2.078,83,2.485,84,1.621,85,1.268,86,0.996,87,0.918,88,2.078,89,2.485,90,2.485,91,0.576,92,0.261,93,0.863,94,0.679,95,0.863,96,0.936,97,1.015,98,0.936,99,0.863,100,0.625,101,0.735,102,0.625,103,0.735,104,0.198,105,0.294,106,0.843,107,3.986,108,1.628,109,0.92,110,1.28,111,1.81,112,0.735,113,1.015,114,0.863,115,0.996,116,1.374,117,1.794,118,2.485,119,2.485,120,3.649,121,1.81,122,2.485,123,0.936,124,2.485,125,1.81,126,2.078,127,2.078,128,2.802,129,1.81,130,1.81,131,1.81,132,1.767,133,2.485,134,2.485,135,1.317,136,2.13,137,2.13,138,1.935,139,2.365,140,0.576,141,0.996,142,0.996,143,0.918,144,1.301,145,0.679,146,0.996,147,0.485,148,0.679,149,0.485,150,0.679,151,0.485,152,0.679,153,0.485,154,0.996,155,0.443,156,0.576,157,0.679,158,0.485,159,0.777,160,0.485,161,0.485,162,0.679,163,0.485,164,0.845,165,0.679,166,0.485,167,0.679,168,0.485,169,0.679,170,0.529,171,0.679,172,0.485,173,0.679,174,0.485,175,0.679,176,0.017,177,0.017]],["title/components/AppComponent.html",[0,0.046,147,0.627]],["body/components/AppComponent.html",[0,0.085,1,0.736,2,0.389,3,0.301,4,1.031,5,1.031,6,1.031,7,0.213,11,0.95,12,1.358,13,1.031,14,1.649,15,1.138,16,0.673,17,0.554,18,1.226,20,1.226,22,0.257,23,0.868,25,2.204,26,1.827,33,0.79,38,1.435,39,0.644,43,1.618,44,0.78,46,0.736,47,0.032,48,0.566,49,0.675,50,0.554,59,0.554,60,0.95,81,0.868,91,0.598,92,0.512,94,1.031,99,1.311,104,0.301,105,0.447,106,0.736,140,0.875,141,1.33,142,1.33,143,1.226,144,1.556,145,1.031,146,1.33,147,1.111,148,1.031,149,0.736,150,1.031,151,0.736,152,1.031,153,0.736,154,1.33,155,0.673,156,0.875,157,1.031,158,0.736,159,1.037,160,0.736,161,0.736,162,1.031,163,0.736,164,1.32,165,1.031,166,0.736,167,1.031,168,0.736,169,1.031,170,0.803,171,1.031,172,0.736,173,1.031,174,0.736,175,1.031,176,0.023,177,0.023,178,3.157,179,2.583,180,4.872,181,4.872,182,3.022,183,3.327,184,2.75,185,3.327,186,4.872,187,2.844,188,3.775,189,3.775,190,1.117,191,1.677,192,3.775,193,2.204]],["title/modules/AppModule.html",[194,1.876,195,2.082]],["body/modules/AppModule.html",[1,1.152,2,0.239,3,0.239,7,0.169,9,1.939,15,0.533,16,0.533,17,0.439,41,1.672,47,0.032,91,0.694,92,0.314,94,1.489,95,1.894,96,1.127,104,0.414,105,0.354,140,0.693,147,1.209,149,1.101,151,1.152,153,1.101,155,1.053,156,0.693,158,1.152,159,0.887,160,1.152,161,1.209,163,1.101,166,1.101,168,1.101,170,1.202,172,1.101,174,1.152,176,0.02,177,0.02,193,1.747,194,2.433,195,4.316,196,1.939,197,4.012,198,4.338,199,2.503,200,2.503,201,2.503,202,2.503,203,2.503,204,2.735,205,2.735,206,3.486,207,1.939,208,1.747,209,2.993,210,4.168,211,4.168,212,3.486,213,2.18,214,4.168,215,2.993,216,4.168,217,2.503,218,1.747,219,4.168,220,3.486,221,2.701,222,2.993,223,2.993,224,3.494,225,2.993,226,2.993,227,1.449,228,2.18,229,2.993,230,2.993,231,2.993,232,2.993,233,2.993,234,2.993,235,2.993,236,2.993,237,2.993,238,2.993,239,4.168,240,4.168,241,2.18,242,2.993,243,2.18,244,4.168,245,2.503,246,4.168,247,2.18,248,4.168,249,1.747,250,1.939,251,3.037,252,2.993,253,2.18,254,2.993,255,2.993,256,3.037,257,1.747,258,1.939,259,2.993,260,2.993,261,2.18,262,2.18,263,2.993,264,2.993,265,2.993,266,2.993,267,2.993,268,2.993]],["title/components/ApplicationsComponent.html",[0,0.046,149,0.627]],["body/components/ApplicationsComponent.html",[0,0.079,1,0.399,2,0.424,3,0.163,4,0.559,5,0.559,6,0.559,7,0.116,11,0.615,12,0.968,13,0.559,14,1.528,15,1.114,16,0.364,17,0.634,18,0.793,20,0.793,22,0.139,23,0.562,24,1.423,26,1.385,28,1.627,33,0.511,38,1.087,39,0.417,41,1.57,42,1.57,43,1.293,44,0.842,46,0.399,47,0.032,48,0.61,49,0.731,50,0.685,53,0.836,55,1.385,58,2.291,59,0.463,60,0.615,68,0.656,72,2.014,73,1.856,81,1.114,84,1.4,85,1.501,86,0.861,87,1.241,91,0.571,92,0.215,93,0.711,94,1.05,95,0.711,96,0.77,97,0.836,98,0.77,99,0.711,100,0.515,101,0.605,102,0.515,103,0.605,104,0.163,105,0.242,106,0.843,108,1.627,109,0.919,110,1.279,112,1.138,113,0.836,114,0.711,115,1.544,116,1.187,123,0.77,132,2.167,140,0.474,141,0.861,142,0.861,143,0.793,144,1.18,145,0.559,146,0.861,147,0.399,148,0.559,149,0.843,150,0.559,151,0.615,152,0.559,153,0.399,154,0.861,155,0.364,156,0.474,157,0.559,158,0.399,159,0.671,160,0.399,161,0.399,162,0.559,163,0.399,164,0.73,165,0.559,166,0.399,167,0.559,168,0.399,169,0.559,170,0.435,171,0.559,172,0.399,173,0.559,174,0.399,175,0.559,176,0.015,177,0.015,182,2.291,184,1.49,185,2.522,187,1.84,190,1.756,191,2.728,218,2.998,251,1.49,258,1.326,269,1.711,270,2.093,271,3.152,272,3.152,273,4.667,274,4.667,275,4.667,276,4.667,277,4.667,278,4.667,279,3.613,280,3.613,281,3.613,282,3.613,283,3.613,284,3.591,285,3.591,286,4.321,287,4.321,288,4.321,289,4.321,290,4.321,291,4.321,292,4.321,293,4.321,294,4.321,295,4.321,296,4.321,297,3.152,298,2.046,299,2.046,300,2.043,301,2.043,302,1.84,303,2.046,304,2.046,305,2.046,306,2.046,307,2.046,308,1.765,309,1.671,310,2.046,311,2.046,312,2.046,313,2.636,314,2.636,315,2.636,316,2.046,317,2.8,318,2.636,319,1.84,320,2.636,321,2.046,322,2.046,323,2.046,324,2.296,325,2.046,326,2.636,327,2.636,328,2.046,329,2.046,330,2.19,331,1.84,332,2.046,333,3.148,334,2.043,335,3.152,336,2.046,337,3.152,338,2.093,339,2.046,340,3.152,341,2.046,342,2.046,343,2.046,344,2.046,345,2.046,346,1.84,347,2.046,348,2.046,349,2.046,350,1.326,351,0.559,352,0.515,353,0.909,354,1.49,355,1.194,356,3.152,357,1.711,358,1.194,359,1.84,360,1.326,361,2.039,362,1.326,363,1.49,364,1.711,365,2.801,366,2.046,367,1.194,368,1.49,369,1.711,370,2.296,371,2.046,372,1.711,373,2.046,374,2.046,375,2.046,376,2.046,377,2.046,378,1.326,379,2.046,380,1.326,381,0.836,382,1.326,383,1.711,384,2.636,385,4.321,386,3.152,387,1.84,388,1.671,389,2.636,390,2.296,391,1.671,392,2.636,393,3.152,394,3.152,395,3.152,396,3.152,397,3.152,398,3.152]],["title/components/AppsInfoComponent.html",[0,0.046,151,0.627]],["body/components/AppsInfoComponent.html",[0,0.086,1,0.762,2,0.461,3,0.312,4,1.067,5,1.067,6,1.067,7,0.221,11,0.971,12,1.38,13,1.067,14,1.654,15,1.171,16,0.696,17,0.574,18,1.253,20,1.253,22,0.266,33,0.807,38,1.453,39,0.725,44,0.659,47,0.031,48,0.606,55,1.597,59,0.574,60,0.762,87,1.253,91,0.41,92,0.41,104,0.312,105,0.462,140,0.905,141,1.36,142,1.36,143,1.253,144,1.576,145,1.067,146,1.36,147,0.762,148,1.067,149,0.762,150,1.067,151,1.126,152,1.067,153,0.762,154,1.36,155,0.696,156,0.905,157,1.067,158,0.762,159,1.06,160,0.762,161,0.762,162,1.067,163,0.762,164,1.154,165,1.067,166,0.762,167,1.067,168,0.762,169,1.067,170,0.831,171,1.067,172,0.762,173,1.067,174,0.762,175,1.067,176,0.024,177,0.024,258,3.552,270,2.796,330,2.212,333,3.628,381,2.035,391,3.325,399,4.585,400,2.846,401,4.165,402,4.165,403,3.907,404,3.907,405,4.828,406,3.628,407,4.165,408,4.98,409,3.628]],["title/guards/AuthGuard.html",[410,2.341,411,2.687]],["body/guards/AuthGuard.html",[2,0.336,3,0.336,7,0.238,11,0.821,22,0.286,23,0.75,33,0.846,39,0.691,44,0.691,46,1.018,47,0.032,48,0.548,49,0.618,50,0.767,54,1.15,59,0.833,77,3.047,91,0.64,92,0.442,100,1.06,101,1.246,102,1.06,103,1.246,104,0.336,105,0.498,106,0.821,108,1.965,109,0.896,115,1.15,132,1.72,176,0.025,177,0.025,179,2.232,249,2.458,352,1.314,410,3.067,411,4.366,412,4.211,413,3.803,414,6.097,415,4.211,416,4.526,417,4.211,418,4.211,419,5.931,420,4.745,421,5.931,422,4.211,423,3.676,424,5.22,425,1.425,426,2.232,427,4.133,428,2.728,429,3.047,430,2.458,431,3.521,432,4.366,433,3.521,434,3.521,435,4.211,436,2.458,437,3.521,438,2.458,439,4.211,440,4.211,441,3.521]],["title/injectables/AuthService.html",[204,1.556,425,0.877]],["body/injectables/AuthService.html",[2,0.259,3,0.259,7,0.184,17,0.87,22,0.221,23,0.785,24,1.569,27,2.294,29,2.572,33,0.715,39,0.583,41,1.783,42,1.589,44,0.766,46,0.86,47,0.032,48,0.463,49,0.635,50,0.647,53,2.194,54,0.886,55,1.413,59,0.885,60,0.633,68,1.605,73,2.021,76,3.211,77,2.573,81,1.1,85,1.531,91,0.641,92,0.341,93,1.127,98,1.66,100,0.817,101,0.961,102,1.109,103,0.961,104,0.259,105,0.384,106,0.976,108,1.884,109,1.065,110,1.305,112,0.961,113,1.326,114,1.127,115,0.886,116,1.66,117,1.66,123,1.222,132,1.326,176,0.021,177,0.021,204,2.135,208,1.895,249,1.895,330,2.385,367,2.573,413,3.911,416,4.314,423,3.243,425,1.367,426,1.721,427,4.09,428,2.103,429,3.379,431,2.715,432,3.686,433,2.715,434,2.715,437,2.715,441,2.715,442,2.715,443,3.686,444,4.49,445,5.79,446,5.369,447,2.494,448,3.752,449,3.246,450,4.408,451,5.005,452,3.246,453,5.369,454,2.135,455,4.408,456,3.646,457,2.365,458,3.246,459,2.337,460,3.246,461,3.246,462,2.715,463,2.715,464,2.365,465,3.246,466,3.246,467,4.408,468,2.715,469,2.715,470,2.715,471,3.246,472,3.246,473,3.246,474,3.246,475,3.246,476,3.246,477,3.246,478,3.246,479,3.246,480,2.103,481,2.715,482,3.246,483,3.246,484,3.246]],["title/interfaces/Backend.html",[24,0.809,485,1.03]],["body/interfaces/Backend.html",[2,0.266,3,0.266,7,0.188,17,0.744,22,0.226,24,1.128,27,1.36,28,2.375,29,2.252,33,0.727,34,2.171,44,0.852,46,1.25,47,0.032,48,0.673,49,0.759,50,0.942,59,0.945,63,2.825,81,1.202,86,0.909,91,0.349,104,0.266,176,0.021,177,0.021,270,1.612,423,3.285,426,1.764,447,2.252,448,3.515,457,3.266,485,1.437,486,2.783,487,3.266,488,4.536,489,3.749,490,3.749,491,3.749,492,3.749,493,3.749,494,3.749,495,3.749,496,3.266,497,3.266,498,3.266,499,3.749,500,3.328,501,3.749,502,2.974,503,3.328,504,4.536,505,3.328,506,3.328,507,3.749,508,3.328,509,3.669,510,3.749,511,3.328,512,3.749,513,3.328,514,3.749,515,3.328,516,3.749,517,3.328,518,3.749,519,3.328,520,3.749,521,3.328,522,3.328,523,3.328,524,3.749,525,3.328,526,3.749,527,3.328,528,3.749,529,3.328,530,1.36]],["title/components/ClusterComponent.html",[0,0.046,153,0.627]],["body/components/ClusterComponent.html",[0,0.074,1,0.397,2,0.344,3,0.162,4,0.556,5,0.556,6,0.556,7,0.115,11,0.612,12,0.965,13,0.556,14,1.516,15,1.006,16,0.362,17,0.633,18,0.79,20,0.79,22,0.138,23,0.559,24,1.421,26,1.381,28,1.622,33,0.509,38,1.084,39,0.415,41,1.517,42,1.567,43,1.29,44,0.812,46,0.612,47,0.032,48,0.583,49,0.718,50,0.633,53,1.76,55,0.652,58,2.88,59,0.684,60,0.612,68,0.652,72,2.267,73,1.852,81,0.876,84,2.185,85,1.709,86,0.857,87,1.333,91,0.556,92,0.214,93,0.707,94,1.271,95,0.707,96,0.766,97,0.831,98,0.766,99,0.707,100,0.512,101,0.602,102,0.965,103,0.602,104,0.162,105,0.241,106,0.747,108,1.622,109,0.991,110,1.275,112,1.517,113,0.831,114,0.707,115,1.271,116,1.182,117,1.182,123,1.443,140,0.471,141,0.857,142,0.857,143,0.79,144,1.176,145,0.556,146,0.857,147,0.397,148,0.556,149,0.397,150,0.556,151,0.397,152,0.556,153,0.84,154,0.857,155,0.362,156,0.471,157,0.556,158,0.397,159,0.668,160,0.397,161,0.397,162,0.556,163,0.397,164,0.727,165,0.556,166,0.397,167,0.556,168,0.397,169,0.556,170,0.433,171,0.556,172,0.397,173,0.556,174,0.397,175,0.556,176,0.015,177,0.015,182,2.284,190,1.378,191,2.465,218,3.296,279,3.603,280,3.603,281,3.603,282,3.603,283,3.603,308,2.095,309,2.807,313,2.625,314,2.625,315,2.625,317,3.52,318,2.625,319,1.832,320,2.625,324,3.584,326,2.625,327,4.114,330,1.394,331,1.832,334,3.874,338,2.087,350,1.318,355,1.188,357,1.702,358,1.188,359,1.832,360,1.318,361,1.664,362,1.318,363,1.482,364,1.702,365,2.792,367,2.237,368,2.792,369,3.205,384,2.625,387,1.832,388,1.664,391,2.608,409,2.287,436,1.832,509,2.792,530,1.282,531,1.702,532,3.694,533,2.625,534,2.625,535,4.308,536,4.919,537,3.584,538,3.584,539,4.033,540,4.308,541,3.139,542,4.308,543,1.702,544,3.139,545,3.139,546,4.723,547,2.035,548,3.139,549,3.139,550,3.139,551,3.139,552,2.035,553,2.035,554,3.391,555,1.832,556,2.625,557,2.035,558,2.035,559,2.035,560,2.035,561,2.035,562,2.035,563,4.308,564,2.035,565,2.035,566,2.035,567,2.035,568,2.035,569,2.035,570,2.035,571,2.035,572,2.035,573,1.482,574,2.035,575,3.139,576,3.139,577,3.139,578,3.139,579,2.035,580,2.035,581,2.035,582,2.035,583,2.035,584,2.035,585,2.035,586,2.608,587,2.625,588,2.287,589,3.139,590,1.52,591,3.139,592,3.139,593,2.287,594,2.625,595,2.625,596,1.832,597,3.139,598,3.139,599,3.139,600,3.139,601,3.139]],["title/interfaces/ClusterInfo.html",[485,1.03,602,2.341]],["body/interfaces/ClusterInfo.html",[2,0.429,3,0.352,7,0.249,22,0.3,23,0.956,44,0.583,47,0.031,48,0.633,49,0.779,50,0.788,55,1.98,72,1.8,81,1.198,87,1.517,104,0.352,126,3.685,176,0.025,177,0.025,388,3.194,391,3.194,406,3.21,485,1.856,532,3.133,593,4.389,602,3.911,603,3.685,604,3.685,605,3.21,606,5.039,607,5.039]],["title/interfaces/ComponentMockOption.html",[485,1.03,608,2.082]],["body/interfaces/ComponentMockOption.html",[0,0.079,2,0.387,3,0.244,7,0.172,11,0.595,12,1.063,14,1.063,15,0.752,16,0.752,17,0.712,18,0.768,20,0.768,22,0.207,23,0.752,25,1.246,26,1.553,34,1.477,38,0.768,39,0.403,43,1.316,47,0.032,48,0.669,49,0.573,50,0.712,54,0.833,55,0.978,60,0.595,72,1.98,81,1.012,86,1.153,87,0.768,91,0.549,92,0.32,94,0.833,99,1.059,100,0.768,101,0.903,102,1.063,103,0.903,104,0.387,105,0.361,106,0.595,109,0.649,110,1.893,111,2.222,115,1.71,117,1.148,132,2.66,155,0.543,156,1.272,159,0.649,176,0.02,177,0.02,190,0.903,191,1.876,193,1.78,227,1.477,308,2.244,309,2.239,351,0.833,352,0.768,353,1.355,354,2.222,358,2.465,387,1.78,447,1.876,459,1.617,464,2.222,480,1.976,485,1.677,530,1.726,573,2.222,590,1.477,608,3.389,609,1.976,610,1.976,611,3.14,612,1.976,613,2.465,614,2.323,615,2.737,616,2.222,617,2.222,618,3.077,619,2.551,620,2.551,621,1.976,622,1.976,623,2.551,624,3.077,625,2.551,626,5.156,627,3.532,628,3.532,629,2.222,630,3.532,631,3.532,632,3.532,633,2.551,634,3.532,635,3.532,636,2.222,637,3.532,638,2.222,639,3.532,640,2.222,641,3.532,642,2.222,643,3.532,644,3.532,645,2.737,646,2.222,647,2.551,648,1.976,649,2.551,650,3.995,651,2.551,652,5.156,653,3.995,654,2.551,655,2.551,656,2.551,657,2.551,658,2.551,659,2.551,660,2.551,661,2.551,662,2.551,663,2.551,664,2.551,665,2.551,666,2.551,667,2.551,668,1.78,669,2.551,670,1.246,671,2.222,672,1.976,673,2.551]],["title/components/DebugPanelComponent.html",[0,0.046,155,0.572]],["body/components/DebugPanelComponent.html",[0,0.087,1,0.485,2,0.381,3,0.199,4,0.68,5,0.68,6,0.68,7,0.141,11,0.712,12,1.09,13,0.68,14,1.574,15,1.055,16,0.85,17,0.7,18,0.92,20,0.92,22,0.169,23,0.651,24,0.92,25,1.769,26,1.898,33,0.592,34,1.205,38,1.2,39,0.483,40,1.453,43,1.446,44,0.726,46,0.712,47,0.032,48,0.657,49,0.601,50,0.78,54,0.998,55,0.798,59,0.636,60,0.93,72,1.769,81,0.651,86,0.998,87,0.626,91,0.501,92,0.261,94,0.68,99,0.865,100,0.626,101,0.737,102,1.09,103,0.737,104,0.346,105,0.295,106,0.485,109,0.53,110,1.851,111,1.813,114,1.269,115,1.651,117,0.937,132,2.606,135,1.32,140,0.577,141,0.998,142,0.998,143,0.92,144,1.302,145,0.68,146,0.998,147,0.485,148,0.68,149,0.485,150,0.68,151,0.485,152,0.68,153,0.485,154,0.998,155,0.85,156,1.353,157,0.68,158,0.485,159,0.921,160,0.485,161,0.485,162,0.68,163,0.485,164,0.846,165,0.68,166,0.485,167,0.68,168,0.485,169,0.68,170,0.53,171,0.68,172,0.485,173,0.68,174,0.485,175,0.68,176,0.017,177,0.017,190,1.081,191,2.119,193,1.453,227,2.726,308,2.169,309,2.295,351,0.68,352,0.626,353,1.106,354,1.813,358,2.133,381,1.493,387,1.453,447,1.623,459,1.937,464,1.813,480,2.367,485,1.171,530,1.493,573,1.813,590,1.205,608,3.441,609,3.647,610,1.613,611,3.291,612,1.613,613,2.133,614,2.551,615,2.367,616,1.813,617,1.813,618,2.662,619,3.056,620,3.056,621,2.367,622,3.09,623,2.082,624,2.662,625,2.082,626,4.951,627,3.056,628,3.056,629,1.813,630,3.056,631,3.056,632,3.056,633,2.082,634,3.056,635,3.056,636,1.813,637,3.056,638,1.813,639,3.056,640,1.813,641,3.056,642,1.813,643,3.056,644,3.62,645,2.805,646,2.662,647,3.056,648,1.613,649,2.082,650,3.836,651,2.082,652,4.951,653,3.836,654,2.082,655,2.082,656,2.082,657,2.082,658,2.082,659,2.082,660,2.082,661,2.082,662,2.082,663,2.082,664,2.082,665,3.056,666,3.056,667,3.989,668,1.453,669,2.082,670,1.017,671,3.153,672,1.613,673,2.082,674,3.654,675,3.654,676,2.489,677,2.489,678,2.489,679,2.489,680,2.489,681,3.654,682,3.654,683,3.654]],["title/components/EditClusterComponent.html",[0,0.046,158,0.627]],["body/components/EditClusterComponent.html",[0,0.076,1,0.522,2,0.308,3,0.214,4,0.731,5,0.731,6,0.731,7,0.151,11,0.751,12,1.136,13,0.731,14,1.59,15,1.042,16,0.477,17,0.393,18,0.97,20,0.97,22,0.182,23,0.686,24,1.513,25,1.844,26,1.927,28,1.858,33,0.625,36,2.807,38,1.242,39,0.51,40,1.563,41,1.7,42,1.7,43,1.413,44,0.795,46,0.88,47,0.032,48,0.589,49,0.68,50,0.663,53,1.574,55,1.583,56,3.847,58,2.043,59,0.663,60,0.88,63,2.186,66,2.807,68,1.447,69,2.807,70,2.807,71,3.968,72,2.017,73,2.051,81,1.108,84,1.712,85,1.338,86,1.052,87,1.242,91,0.589,92,0.281,93,0.93,94,0.731,95,0.93,96,1.008,97,1.094,98,1.008,99,0.93,100,0.674,101,0.793,102,0.674,103,0.793,104,0.214,105,0.317,106,0.88,108,1.699,109,0.82,110,1.336,112,0.793,113,1.094,114,0.93,115,0.731,116,1.451,117,1.451,123,1.008,128,2.925,129,1.951,130,1.951,131,1.951,135,1.42,139,3.199,140,0.62,141,1.052,142,1.052,143,0.97,144,1.348,145,0.731,146,1.052,147,0.522,148,0.731,149,0.522,150,0.731,151,0.522,152,0.731,153,0.522,154,1.052,155,0.477,156,0.62,157,0.731,158,0.963,159,1.279,160,0.522,161,0.522,162,0.731,163,0.522,164,0.893,165,0.731,166,0.522,167,0.731,168,0.522,169,0.731,170,0.57,171,0.731,172,0.522,173,0.731,174,0.522,175,0.731,176,0.018,177,0.018,190,1.461,253,4.425,351,0.731,352,0.674,353,1.19,355,2.881,361,1.42,391,2.043,497,2.807,509,3.199,532,3.276,533,3.223,534,3.223,590,2.391,642,1.951,645,2.497,668,1.563,670,1.094,684,4.425,685,2.24,686,4.936,687,5.446,688,4.936,689,3.853,690,2.678,691,2.678,692,3.853,693,2.678,694,2.678,695,2.678,696,2.678,697,2.678,698,2.678,699,2.678,700,4.513,701,3.853,702,3.853,703,4.513,704,2.678,705,2.678,706,2.678,707,2.678]],["title/components/EditUserComponent.html",[0,0.046,160,0.627]],["body/components/EditUserComponent.html",[0,0.073,1,0.478,2,0.288,3,0.196,4,0.669,5,0.669,6,0.669,7,0.139,10,1.785,11,0.704,12,1.08,13,0.669,14,1.563,15,1.051,16,0.437,17,0.893,18,0.909,19,3.021,20,0.909,21,3.021,22,0.167,23,0.643,24,1.485,25,1.753,26,1.892,27,2.231,28,1.782,29,1.605,31,2.763,32,2.51,33,0.586,35,3.021,36,2.632,38,1.192,39,0.478,40,1.43,41,1.659,42,1.659,43,1.374,44,0.811,45,2.05,46,0.984,47,0.032,48,0.611,49,0.689,50,0.741,53,1.476,54,1.293,55,1.375,56,3.631,58,1.915,59,0.802,60,0.923,61,3.021,63,2.444,64,3.165,65,3.588,66,2.632,68,1.618,69,3.449,70,2.632,71,3.847,72,1.934,73,1.988,77,2.763,79,2.05,81,1.112,82,2.05,84,1.605,85,1.644,86,0.986,87,0.909,88,2.05,91,0.573,92,0.257,93,0.851,94,0.669,95,0.851,96,0.923,97,1.001,98,0.923,99,0.851,100,0.617,101,0.725,102,0.617,103,0.725,104,0.196,105,0.29,106,0.837,107,3.588,108,1.36,109,0.769,110,1.27,112,0.725,113,1.001,114,0.851,115,1.171,116,1.36,117,1.615,121,1.785,123,0.923,128,2.78,129,1.785,130,1.785,131,1.785,132,1.476,135,1.299,136,2.108,137,2.108,138,1.915,139,3.067,140,0.568,141,0.986,142,0.986,143,0.909,144,1.293,145,0.669,146,0.986,147,0.478,148,0.669,149,0.478,150,0.669,151,0.478,152,0.669,153,0.478,154,0.986,155,0.437,156,0.568,157,0.669,158,0.478,159,1.217,160,0.923,161,0.478,162,0.669,163,0.478,164,0.837,165,0.669,166,0.478,167,0.669,168,0.478,169,0.669,170,0.522,171,0.669,172,0.478,173,0.669,174,0.478,175,0.669,176,0.017,177,0.017,183,3.271,257,3.602,388,1.915,498,2.632,502,2.293,555,2.108,640,1.785,645,2.341,668,1.43,670,1.001,684,4.496,708,4.734,709,3.021,710,3.612,711,2.451,712,3.021,713,2.451,714,3.021,715,2.451,716,2.451,717,3.612,718,2.451,719,3.612,720,2.451,721,2.451,722,2.451,723,3.021,724,2.451,725,3.612,726,3.021,727,2.451,728,3.021]],["title/injectables/ErrorHandlerService.html",[221,2.082,425,0.877]],["body/injectables/ErrorHandlerService.html",[2,0.291,3,0.291,7,0.206,11,0.928,17,0.779,22,0.248,33,0.86,39,0.701,44,0.63,46,0.711,47,0.032,48,0.383,49,0.431,50,0.535,53,2.554,55,1.168,59,0.535,60,0.928,91,0.5,92,0.383,104,0.291,105,0.431,112,1.078,117,1.372,135,1.932,143,0.917,176,0.023,177,0.023,190,1.078,208,2.127,220,3.982,221,3.085,245,3.047,309,1.932,319,3.558,346,2.127,351,0.995,352,0.917,367,2.127,420,3.047,425,1.448,438,2.127,444,3.982,468,3.047,469,3.047,530,1.945,555,2.779,596,2.127,605,2.655,621,2.361,648,2.361,650,4.201,653,4.216,729,4.435,730,3.047,731,4.761,732,3.644,733,4.761,734,5.623,735,3.644,736,3.982,737,5.303,738,5.376,739,3.644,740,3.047,741,3.644,742,3.644,743,3.644,744,3.644,745,4.761,746,3.644,747,3.644,748,3.644,749,3.644,750,3.047,751,3.644,752,4.761,753,3.644,754,4.761,755,4.761,756,3.644,757,3.644,758,3.644,759,3.644,760,3.047,761,3.644,762,4.761,763,3.644,764,4.761,765,3.644,766,3.644,767,3.644,768,3.644,769,3.644,770,3.644,771,3.644,772,3.644,773,3.047,774,3.644,775,3.644,776,2.655,777,3.644,778,2.655,779,2.655,780,3.644,781,3.644,782,3.644,783,3.047,784,3.644,785,3.644,786,3.047,787,3.644,788,3.644,789,3.644,790,3.644,791,3.644,792,3.644,793,3.644,794,3.644,795,4.761,796,3.644,797,3.644,798,3.644,799,3.644,800,3.644,801,3.644,802,3.644,803,3.644,804,3.644]],["title/components/LoginComponent.html",[0,0.046,161,0.627]],["body/components/LoginComponent.html",[0,0.078,1,0.557,2,0.322,3,0.228,4,0.78,5,0.78,6,0.78,7,0.162,11,0.787,12,1.177,13,0.78,14,1.596,15,1.085,16,0.509,17,0.42,18,1.016,20,1.016,22,0.194,23,0.719,26,1.63,27,2.337,29,2.541,33,0.654,38,1.279,39,0.534,44,0.757,46,0.557,47,0.032,48,0.491,49,0.602,50,0.42,54,0.78,56,2.615,57,2.94,59,0.687,60,0.912,68,1.294,73,1.519,76,3.408,81,0.905,85,1.933,86,0.78,91,0.601,92,0.3,94,0.78,95,0.992,104,0.228,105,0.338,106,0.991,109,0.859,112,1.504,123,1.076,136,1.668,137,1.668,138,1.515,140,0.662,141,1.102,142,1.102,143,1.016,144,1.388,145,0.78,146,1.102,147,0.557,148,0.78,149,0.557,150,0.78,151,0.557,152,0.78,153,0.557,154,1.102,155,0.719,156,1.289,157,0.78,158,0.557,159,0.859,160,0.557,161,0.991,162,0.78,163,0.557,164,1.178,165,0.78,166,0.557,167,0.78,168,0.557,169,0.78,170,0.608,171,0.78,172,0.557,173,0.78,174,0.557,175,0.78,176,0.019,177,0.019,182,2.695,185,2.967,187,2.731,190,0.846,204,2.77,227,1.384,228,2.082,241,2.082,243,2.082,249,1.668,270,1.954,300,3.294,301,2.615,302,2.355,319,2.731,330,2.258,331,2.355,358,2.355,378,1.851,380,1.851,381,1.167,382,1.851,392,3.375,413,2.082,416,4.167,427,3.408,428,1.851,429,2.731,447,2.595,454,1.954,456,2.94,470,2.39,481,4.251,530,1.167,596,2.967,611,3.294,648,1.851,650,3.031,653,3.031,670,1.649,776,2.94,805,2.39,806,4.035,807,4.035,808,5.083,809,5.083,810,5.083,811,4.251,812,2.857,813,5.565,814,4.035,815,2.857,816,2.857,817,4.035,818,4.035,819,2.139,820,4.035,821,3.375,822,4.035,823,3.375,824,2.857,825,5.083,826,2.857,827,2.857,828,2.857,829,2.857,830,4.035,831,2.857,832,2.857,833,4.678,834,2.857,835,2.857,836,2.857,837,2.857,838,2.857,839,5.083,840,2.857,841,2.39,842,2.39,843,2.94,844,4.035,845,4.035,846,4.035]],["title/components/MainComponent.html",[0,0.046,163,0.627]],["body/components/MainComponent.html",[0,0.088,1,0.807,2,0.412,3,0.33,4,1.129,5,1.129,6,1.129,7,0.234,11,1.007,12,1.416,13,1.129,14,1.667,15,1.14,16,0.737,17,0.607,18,1.299,20,1.299,22,0.281,33,0.837,38,1.483,39,0.744,44,0.683,47,0.032,48,0.542,59,0.607,60,0.807,91,0.434,92,0.434,104,0.33,105,0.489,140,0.958,141,1.41,142,1.41,143,1.299,144,1.609,145,1.129,146,1.41,147,0.807,148,1.129,149,0.807,150,1.129,151,0.807,152,1.129,153,0.807,154,1.41,155,0.737,156,0.958,157,1.129,158,0.807,159,1.099,160,0.807,161,0.807,162,1.129,163,1.149,164,1.365,165,1.129,166,0.807,167,1.129,168,0.807,169,1.129,170,0.88,171,1.129,172,0.807,173,1.129,174,0.807,175,1.129,176,0.025,177,0.025,351,1.129,352,1.041,353,1.837,847,3.459,848,5.162,849,5.162,850,5.162,851,4.136,852,4.136]],["title/injectables/MockupBackendService.html",[42,0.951,425,0.877]],["body/injectables/MockupBackendService.html",[2,0.262,3,0.172,7,0.122,11,0.421,15,0.385,17,0.894,22,0.39,24,1.203,27,1.625,28,2.157,29,2.326,33,0.533,34,1.591,39,0.526,42,0.972,44,0.799,46,1.159,47,0.032,48,0.624,49,0.703,50,0.872,53,1.625,54,1.622,59,0.942,63,2.439,81,1.182,85,0.75,86,0.897,91,0.529,92,0.227,93,0.75,104,0.172,105,0.256,109,1.018,117,1.8,125,2.393,139,2.577,176,0.016,177,0.016,179,1.145,207,2.129,247,1.573,308,1.625,346,1.26,350,1.399,351,0.59,352,0.543,367,1.26,388,3.204,423,2.577,425,1.086,426,1.145,430,1.26,447,2.124,448,3.263,456,1.573,457,2.393,459,2.356,462,1.806,463,1.806,487,2.393,488,2.748,489,2.748,490,2.748,491,2.748,492,2.748,493,2.748,494,2.748,495,2.748,496,2.393,497,2.393,498,2.393,499,2.748,501,2.748,502,2.775,504,2.748,507,2.748,509,3.263,510,2.748,512,2.748,514,2.748,516,2.748,518,2.748,520,2.748,524,2.748,526,2.748,528,2.748,530,1.342,532,2.594,539,2.129,586,2.67,613,1.26,740,5.014,760,1.806,778,1.573,779,1.573,853,5.09,854,1.806,855,2.159,856,2.159,857,6.124,858,2.748,859,2.159,860,2.748,861,2.159,862,3.285,863,2.159,864,2.748,865,2.159,866,2.159,867,2.159,868,2.159,869,2.159,870,2.159,871,2.159,872,2.159,873,2.159,874,2.159,875,2.159,876,6.086,877,2.393,878,2.129,879,1.399,880,2.393,881,1.573,882,1.573,883,1.573,884,1.573,885,6.043,886,5.73,887,3.285,888,1.806,889,2.159,890,2.159,891,2.159,892,2.159,893,2.159,894,5.236,895,5.236,896,5.236,897,3.977,898,3.238,899,3.977,900,3.977,901,3.977,902,4.444,903,3.285,904,2.159,905,2.159,906,3.285,907,2.159,908,2.159,909,2.159,910,2.159,911,1.806,912,2.159,913,2.159,914,1.806,915,3.285,916,2.159,917,2.159,918,2.159,919,2.159,920,2.159,921,2.159,922,2.159,923,2.159,924,2.159,925,3.285,926,2.159,927,2.159]],["title/interfaces/Notification.html",[485,1.03,614,1.427]],["body/interfaces/Notification.html",[2,0.32,3,0.32,7,0.227,16,0.714,22,0.377,23,0.902,39,0.53,43,1.009,47,0.032,49,0.746,50,0.915,59,0.815,81,1.133,87,1.467,91,0.421,92,0.421,104,0.404,105,0.475,106,0.782,109,1.077,176,0.024,177,0.024,179,2.126,308,1.638,334,3.595,338,1.942,351,1.095,352,1.009,381,1.638,425,1.383,430,2.341,436,2.341,438,2.341,454,1.942,485,1.623,586,2.684,614,2.67,670,2.381,672,3.777,819,2.126,928,2.921,929,3.354,930,4.234,931,3.354,932,3.354,933,2.921,934,2.921,935,2.921,936,2.921,937,2.921,938,3.354,939,3.354,940,3.354,941,4.234,942,3.354,943,3.354,944,3.354,945,3.354,946,3.354,947,3.354,948,3.354,949,3.354,950,3.354,951,3.354,952,4.234,953,2.921,954,3.354,955,4.641,956,3.354,957,2.921,958,3.354,959,3.354,960,3.354,961,3.354,962,3.354]],["title/components/NotificationsComponent.html",[0,0.046,166,0.627]],["body/components/NotificationsComponent.html",[0,0.078,1,0.566,2,0.447,3,0.232,4,0.792,5,0.792,6,0.792,7,0.164,11,0.795,12,1.187,13,0.792,14,1.6,15,1.088,16,0.517,17,0.426,18,1.027,20,1.027,22,0.197,23,0.727,24,1.551,25,1.927,33,0.661,38,1.288,39,0.54,41,1.736,42,1.7,43,1.446,44,0.776,46,0.795,47,0.032,48,0.537,49,0.723,50,0.821,57,3.728,59,0.693,60,1.051,68,1.308,91,0.634,92,0.305,93,1.008,96,1.092,97,1.185,98,1.092,99,1.008,100,0.73,101,0.859,102,0.73,103,0.859,104,0.232,105,0.343,106,0.92,109,0.617,110,1.207,114,1.417,115,1.288,116,1.536,127,3.411,140,0.672,141,1.397,142,1.114,143,1.027,144,1.397,145,0.792,146,1.114,147,0.566,148,0.792,149,0.566,150,0.792,151,0.566,152,0.792,153,0.566,154,1.114,155,0.517,156,0.672,157,0.792,158,0.566,159,0.868,160,0.566,161,0.566,162,0.792,163,0.566,164,0.945,165,0.792,166,0.998,167,0.792,168,0.566,169,0.792,170,0.617,171,0.792,172,0.566,173,0.792,174,0.566,175,0.792,176,0.019,177,0.019,190,1.207,191,1.812,207,3.316,338,1.975,351,0.792,352,0.73,363,2.971,381,1.666,438,2.987,443,3.411,459,2.162,605,2.971,614,2.683,621,3.316,622,2.643,624,2.113,670,2.396,736,3.411,819,2.162,933,2.971,934,2.971,935,4.342,936,4.272,937,2.971,953,2.113,963,2.426,964,4.079,965,4.079,966,5.117,967,2.901,968,2.901,969,2.901,970,2.901,971,2.901,972,2.426,973,2.901,974,2.901,975,4.079,976,4.079,977,4.079,978,4.079,979,4.079,980,4.079,981,4.079,982,4.079,983,4.079,984,4.079,985,4.079,986,4.079,987,4.079,988,4.079,989,4.079,990,2.901,991,3.411,992,2.901,993,2.426,994,2.426,995,2.901,996,2.901,997,4.079,998,2.901,999,2.901,1000,4.079,1001,4.079,1002,4.079]],["title/injectables/NotificationsService.html",[43,0.809,425,0.877]],["body/injectables/NotificationsService.html",[2,0.303,3,0.303,7,0.215,16,1.017,22,0.368,23,0.871,33,0.792,39,0.715,43,1.23,44,0.8,46,0.953,47,0.032,48,0.513,49,0.64,50,0.839,59,0.888,60,0.953,81,0.963,87,0.955,91,0.398,92,0.398,104,0.39,105,0.449,106,1.054,109,1.04,176,0.023,177,0.023,179,2.012,308,1.997,334,2.459,338,1.838,351,1.036,352,0.955,381,1.997,425,1.476,430,2.215,436,2.853,438,2.853,454,1.838,485,1.217,586,2.591,614,2.798,670,1.55,672,2.459,819,2.591,928,2.764,929,4.776,930,4.088,931,4.088,932,3.173,933,4.16,934,3.561,935,3.561,936,3.561,937,3.561,938,3.173,939,3.173,940,3.173,941,4.776,942,4.088,943,4.088,944,4.088,945,4.088,946,4.776,947,3.173,948,3.173,949,3.173,950,3.173,951,3.173,952,4.088,953,2.764,954,3.173,955,4.522,956,3.173,957,2.764,958,3.173,959,3.173,960,3.173,961,3.173,962,3.173,972,3.173,1003,4.888,1004,4.888,1005,3.794,1006,3.794,1007,3.794,1008,3.794,1009,3.794,1010,3.794]],["title/components/OrganizationComponent.html",[0,0.046,168,0.627]],["body/components/OrganizationComponent.html",[0,0.086,1,0.677,2,0.441,3,0.186,4,0.635,5,0.635,6,0.635,7,0.131,9,1.506,11,0.677,12,1.047,13,0.635,14,1.559,15,1.005,16,0.983,17,0.945,18,0.874,20,0.874,22,0.158,23,0.619,24,1.468,26,1.479,27,1.419,28,1.95,31,2.027,32,1.233,33,0.563,34,2.234,38,1.161,39,0.459,41,1.633,42,1.633,43,1.351,44,0.781,46,0.811,47,0.032,48,0.592,49,0.668,50,0.611,54,0.949,59,0.725,60,0.963,63,1.682,64,2.205,68,1.583,73,1.737,81,1.052,84,1.543,85,1.917,86,1.414,87,0.874,91,0.612,92,0.244,93,0.808,94,0.635,95,0.808,96,0.875,97,0.95,98,0.875,99,0.808,100,0.585,101,0.688,102,0.585,103,0.688,104,0.186,105,0.275,106,0.963,108,1.859,109,1.051,110,1.231,112,0.688,113,0.95,114,0.808,115,0.635,116,1.308,123,1.737,125,3.361,140,0.539,141,0.949,142,0.949,143,0.874,144,1.26,145,0.635,146,0.949,147,0.453,148,0.635,149,0.453,150,0.635,151,0.453,152,0.635,153,0.453,154,0.949,155,0.414,156,0.539,157,0.635,158,0.453,159,1.174,160,0.677,161,0.453,162,0.635,163,0.453,164,0.805,165,0.635,166,0.453,167,0.635,168,0.9,169,0.635,170,0.495,171,0.635,172,0.453,173,0.635,174,0.677,175,0.635,176,0.02,177,0.016,182,2.446,183,1.357,184,1.694,185,2.693,187,2.027,205,2.234,250,1.506,251,1.694,256,2.531,257,1.357,261,1.694,262,1.694,300,3.356,301,3.356,302,3.023,308,1.419,330,1.543,331,2.027,338,1.682,351,0.635,352,0.585,353,1.033,359,2.027,360,1.506,361,2.746,362,1.506,370,3.773,372,1.944,378,2.695,380,2.695,381,1.699,382,2.695,383,3.478,387,2.027,502,1.682,590,1.126,594,2.905,629,1.694,819,1.842,858,2.905,911,3.858,914,3.858,1011,1.944,1012,3.474,1013,3.474,1014,4.615,1015,5.18,1016,2.905,1017,3.474,1018,4.613,1019,3.478,1020,3.474,1021,2.325,1022,2.325,1023,3.474,1024,2.325,1025,3.474,1026,2.325,1027,2.325,1028,2.325,1029,2.325,1030,5.642,1031,2.325,1032,2.325,1033,2.325,1034,4.613,1035,2.325,1036,4.158,1037,4.613,1038,2.325,1039,1.944,1040,4.158,1041,4.158,1042,2.325,1043,2.325,1044,1.944,1045,2.325,1046,3.474,1047,3.474,1048,3.474,1049,2.531,1050,3.474,1051,3.474]],["title/components/SidebarComponent.html",[0,0.046,172,0.627]],["body/components/SidebarComponent.html",[0,0.079,1,0.473,2,0.376,3,0.194,4,0.663,5,0.663,6,0.663,7,0.137,11,0.699,12,1.074,13,0.663,14,1.569,15,1.049,16,0.432,17,0.838,18,0.903,20,0.903,22,0.165,23,0.639,24,1.482,26,1.511,27,2.283,28,2.05,31,1.417,32,1.287,33,0.581,38,1.186,39,0.474,41,1.611,42,1.654,44,0.796,46,0.699,47,0.032,48,0.626,49,0.661,50,0.527,53,1.465,59,0.738,60,0.98,64,2.963,68,0.778,73,1.774,81,1.104,84,2.093,85,1.941,86,0.979,87,0.903,91,0.609,92,0.255,93,0.843,94,0.663,95,0.843,96,0.914,97,0.992,98,0.914,100,0.611,101,0.718,102,0.611,103,0.718,104,0.194,105,0.287,106,0.832,108,1.893,109,1.003,110,1.262,112,0.718,113,0.992,114,0.843,115,0.663,116,1.35,123,0.914,140,0.562,141,0.979,142,0.979,143,0.903,144,1.287,145,0.663,146,0.979,147,0.473,148,0.663,149,0.473,150,0.663,151,0.473,152,0.663,153,0.473,154,0.979,155,0.639,156,1.219,157,0.663,158,0.473,159,1.12,160,0.699,161,0.473,162,0.663,163,0.473,164,1.219,165,0.663,166,0.473,167,0.663,168,0.473,169,0.663,170,0.517,171,0.663,172,0.919,173,0.663,174,0.473,175,0.663,176,0.017,177,0.017,182,2.498,183,1.417,185,2.75,187,2.49,190,1.262,204,2.282,205,2.282,227,1.176,228,1.768,243,1.768,256,1.768,257,1.417,261,1.768,262,1.768,270,1.737,300,3.41,301,3.41,302,3.071,330,1.593,331,2.093,351,0.663,352,0.611,353,1.078,355,2.49,359,2.093,360,1.573,361,1.901,362,1.573,370,2.613,378,2.324,380,2.324,381,1.465,382,2.324,447,1.593,448,3.41,502,2.885,530,1.465,543,2.03,554,3.433,555,2.093,556,3,590,2.066,596,2.093,611,3.053,613,2.934,615,3.053,636,1.768,773,3,811,3.941,821,3.568,841,2.03,842,2.03,993,2.03,994,2.03,1016,3.941,1019,3.568,1039,2.03,1044,2.03,1052,2.03,1053,3.587,1054,3.587,1055,3.587,1056,3.587,1057,2.427,1058,3.587,1059,3.587,1060,2.427,1061,2.427,1062,2.427,1063,3.587,1064,2.427,1065,2.427,1066,2.427,1067,2.427,1068,2.427,1069,2.427,1070,2.427,1071,4.266,1072,3.568,1073,4.266,1074,2.427,1075,3.587,1076,2.427,1077,2.427,1078,2.427,1079,2.427,1080,2.427,1081,2.427,1082,3,1083,3.587,1084,3.587]],["title/injectables/UpdateEventsService.html",[205,1.556,425,0.877]],["body/injectables/UpdateEventsService.html",[2,0.383,3,0.383,7,0.271,22,0.326,23,1.006,39,0.794,44,0.747,47,0.032,54,1.542,91,0.593,92,0.504,104,0.383,105,0.568,176,0.027,177,0.027,179,2.543,190,1.42,191,2.131,205,2.735,425,1.639,426,2.543,430,2.8,1085,5.02,1086,4.012,1087,6.198,1088,5.648,1089,6.003]],["title/components/UserInfoComponent.html",[0,0.046,174,0.627]],["body/components/UserInfoComponent.html",[0,0.073,1,0.481,2,0.404,3,0.197,4,0.674,5,0.674,6,0.674,7,0.14,11,0.708,12,1.084,13,0.674,14,1.573,15,1.021,16,0.44,17,0.929,18,0.914,20,0.914,22,0.168,23,0.647,24,1.487,25,1.76,26,1.895,28,1.789,29,2.352,31,2.773,33,0.589,38,1.196,39,0.48,40,1.441,41,1.662,42,1.662,43,1.378,44,0.812,46,0.708,47,0.032,48,0.59,49,0.699,50,0.533,54,0.674,59,0.777,60,0.84,64,3.09,68,1.381,73,1.367,77,1.441,81,1.139,84,1.613,85,1.261,86,0.992,87,0.914,91,0.59,92,0.259,93,0.857,94,0.674,96,0.929,97,1.009,98,0.929,99,0.857,100,0.621,101,0.731,102,0.621,103,0.731,104,0.197,105,0.292,106,0.84,108,1.906,109,0.525,110,1.275,112,0.731,113,1.009,114,0.857,115,0.992,116,1.367,117,0.929,123,1.367,128,2.353,132,1.009,135,1.309,136,2.12,137,2.12,138,1.925,140,0.572,141,0.992,142,0.992,143,0.914,144,1.297,145,0.674,146,0.992,147,0.481,148,0.674,149,0.481,150,0.674,151,0.481,152,0.674,153,0.481,154,0.992,155,0.44,156,0.572,157,0.674,158,0.481,159,1.011,160,0.481,161,0.481,162,0.674,163,0.481,164,0.841,165,0.674,166,0.481,167,0.674,168,0.481,169,0.674,170,0.525,171,0.674,172,0.481,173,0.674,174,0.926,175,0.674,176,0.017,177,0.017,183,3.278,190,1.075,193,1.441,250,4.003,350,1.6,351,0.674,352,0.621,353,1.097,355,2.12,361,1.925,368,1.799,400,1.799,401,3.037,402,3.037,487,3.461,496,3.461,502,2.452,555,2.12,590,1.759,638,1.799,646,2.646,668,2.12,670,1.484,709,3.037,712,3.037,714,3.037,723,3.037,726,4.428,728,2.065,819,2.519,860,4.577,878,1.6,879,1.6,1014,3.973,1072,2.065,1082,3.037,1090,5.167,1091,5.294,1092,5.294,1093,3.632,1094,2.469,1095,2.469,1096,4.751,1097,4.751,1098,2.469,1099,2.469,1100,5.063,1101,2.469,1102,2.469,1103,2.469,1104,4.751,1105,4.751,1106,2.469,1107,2.469,1108,2.469,1109,2.469,1110,2.469,1111,2.469,1112,3.632,1113,2.469,1114,2.469,1115,2.469,1116,2.469,1117,2.469]],["title/coverage.html",[1118,3.661]],["body/coverage.html",[0,0.093,1,0.661,7,0.192,8,2.836,9,2.197,10,3.307,24,0.854,32,1.798,41,1.004,42,1.004,43,0.854,47,0.032,49,0.401,54,0.926,100,0.854,102,0.854,147,0.661,149,0.661,151,0.661,153,0.661,155,0.604,158,0.661,160,0.661,161,0.661,163,0.661,166,0.661,168,0.661,170,0.722,172,0.661,174,0.661,176,0.022,177,0.022,178,2.836,204,1.642,205,1.642,221,2.197,224,2.47,227,2.479,250,2.197,253,2.47,257,1.979,258,2.197,269,2.836,284,2.47,285,2.47,338,3.098,390,4.661,399,2.836,400,3.307,425,1.601,442,2.836,454,2.199,485,1.752,486,2.836,531,2.836,537,2.47,538,2.47,602,2.47,603,2.836,604,2.836,608,2.197,609,3.316,610,3.316,612,2.197,614,1.506,684,3.307,685,2.836,729,2.836,730,2.836,805,2.836,847,2.836,853,2.836,854,2.836,877,2.47,878,2.197,879,2.197,880,2.47,881,2.47,882,2.47,883,2.47,884,2.47,928,3.307,963,2.836,1011,2.836,1052,2.836,1085,2.836,1086,2.836,1090,2.836,1118,2.836,1119,2.836,1120,3.391,1121,3.391,1122,2.836,1123,3.391,1124,3.391,1125,2.836,1126,4.758,1127,6.086,1128,3.391,1129,3.391,1130,5.118,1131,3.391,1132,3.391,1133,3.391,1134,3.391,1135,5.118,1136,4.54,1137,2.836,1138,2.836,1139,2.836,1140,2.836,1141,6.398,1142,3.391,1143,2.836,1144,3.391,1145,3.391,1146,5.466,1147,4.54,1148,3.391,1149,3.391,1150,3.391,1151,3.391,1152,3.391,1153,3.391,1154,3.391,1155,3.391,1156,3.391,1157,3.391,1158,3.391,1159,3.797,1160,3.391,1161,2.836,1162,3.391,1163,3.391,1164,3.391,1165,3.391,1166,3.391,1167,3.391,1168,5.323,1169,2.836,1170,3.307,1171,3.307,1172,3.797,1173,3.307,1174,3.391,1175,3.391]],["title/dependencies.html",[196,2.503,1176,2.247]],["body/dependencies.html",[47,0.032,92,0.486,94,1.264,95,1.921,176,0.026,177,0.026,196,2.999,212,4.624,213,4.028,217,3.871,218,2.702,241,3.372,247,3.372,249,2.702,426,2.454,428,2.999,429,3.227,991,3.871,1177,4.628,1178,6.516,1179,4.628,1180,4.628,1181,4.628,1182,4.628,1183,4.628,1184,4.628,1185,4.628,1186,5.529,1187,4.628,1188,4.628,1189,4.628,1190,4.628,1191,4.628,1192,4.628,1193,4.628,1194,4.628,1195,4.628,1196,4.628,1197,4.628,1198,5.529,1199,4.628,1200,4.628,1201,4.628]],["title/miscellaneous/functions.html",[454,1.871,1202,1.741]],["body/miscellaneous/functions.html",[22,0.348,47,0.028,176,0.028,177,0.028,454,2.476,1170,3.724,1171,4.731,1173,3.724,1202,3.313,1203,4.276,1204,4.276]],["title/index.html",[22,0.183,1049,1.958,1205,2.247]],["body/index.html",[0,0.083,3,0.347,7,0.246,15,0.774,47,0.025,48,0.456,54,1.186,63,2.577,68,1.393,112,1.285,138,2.303,164,1.233,176,0.025,177,0.025,208,2.535,309,2.303,317,4.108,346,2.535,436,3.499,539,2.814,554,3.876,671,4.191,738,4.811,823,3.632,898,4.368,1119,5.014,1176,3.632,1206,4.343,1207,4.343,1208,5.752,1209,4.343,1210,5.995,1211,4.343,1212,5.752,1213,4.343,1214,5.321,1215,4.343,1216,4.343,1217,5.321,1218,5.321,1219,6.26,1220,5.321,1221,4.343,1222,4.343,1223,4.343,1224,4.343,1225,4.343,1226,4.343,1227,4.343,1228,4.343,1229,6.151,1230,4.343,1231,4.343,1232,4.343,1233,4.343,1234,3.632,1235,5.321,1236,4.343,1237,4.343,1238,4.343,1239,5.321,1240,4.343,1241,4.343,1242,4.343,1243,3.632,1244,4.343,1245,4.343,1246,4.343,1247,4.343,1248,5.752,1249,4.343,1250,4.343,1251,4.343]],["title/license.html",[1049,1.958,1205,2.247,1252,2.247]],["body/license.html",[7,0.274,47,0.027,112,1.433,164,1.122,176,0.027,177,0.027,270,2.345,783,4.05,898,3.528,1243,4.05,1252,5.457,1253,4.843,1254,4.843,1255,6.027,1256,4.843,1257,4.843,1258,4.843,1259,4.843,1260,4.843,1261,4.843,1262,4.843,1263,4.843,1264,4.843,1265,4.843,1266,4.843,1267,4.843,1268,5.68,1269,4.843,1270,4.843,1271,4.843,1272,4.843,1273,4.843,1274,4.843,1275,4.843,1276,4.843,1277,4.843,1278,4.843,1279,4.843,1280,4.843]],["title/modules.html",[194,2.555]],["body/modules.html",[47,0.028,176,0.028,177,0.028,194,3.02,195,3.352,213,3.769,786,4.327,1281,5.173,1282,5.173]],["title/overview.html",[1283,3.661]],["body/overview.html",[0,0.06,1,1.1,41,1.67,47,0.032,95,1.444,104,0.332,140,0.963,147,1.225,149,1.1,151,1.1,153,1.1,155,1.005,158,1.1,160,1.1,161,1.225,163,1.1,166,1.1,168,1.1,170,1.201,172,1.1,174,1.1,176,0.025,177,0.025,194,3.023,195,4.378,196,2.695,197,3.478,198,3.478,199,3.478,200,3.478,201,3.478,202,3.478,203,3.478,204,2.732,205,2.732,206,4.332,207,2.695,208,2.427,410,3.03,425,1.136,485,1.333,586,2.746,588,3.03,843,3.03,1283,3.478,1284,3.478]],["title/miscellaneous/variables.html",[1126,2.814,1202,1.741]],["body/miscellaneous/variables.html",[2,0.236,15,0.944,16,0.335,17,0.659,22,0.128,25,1.205,27,2.034,29,0.834,32,1.931,34,0.91,47,0.032,48,0.677,49,0.737,54,0.513,55,1.828,58,0.996,64,0.996,72,2.358,81,0.525,86,0.995,87,1.534,100,0.917,102,0.742,106,0.971,110,1.687,115,0.805,121,3.626,132,0.767,136,3.095,137,1.722,138,1.564,159,0.4,176,0.014,177,0.014,190,1.794,191,2.851,218,1.722,224,2.653,227,0.91,270,1.429,284,2.653,285,2.653,302,1.096,308,1.832,317,3.97,319,2.617,324,1.368,330,1.992,333,3.267,346,1.096,351,0.513,352,0.473,359,1.096,365,1.368,388,3.148,389,1.571,390,3.267,391,3.231,405,1.571,406,3.267,407,3.75,409,4.029,429,1.722,447,1.31,459,0.996,480,1.217,502,0.91,530,1.488,532,3.281,537,2.653,538,2.653,539,2.674,546,1.571,586,1.931,587,3.046,588,2.149,593,3.755,595,4.434,596,3.009,606,4.311,607,4.434,609,1.217,610,1.911,612,2.36,613,1.722,614,1.31,615,1.911,616,1.368,617,1.368,618,2.149,622,1.217,750,1.571,776,1.368,778,1.368,779,1.368,843,1.368,864,1.571,877,2.653,878,2.36,879,2.36,880,2.653,881,2.653,882,2.653,883,2.653,884,2.653,888,1.571,957,2.149,1122,1.571,1125,1.571,1126,1.368,1137,1.571,1138,2.467,1139,1.571,1140,2.467,1143,4.434,1159,1.571,1161,3.046,1168,1.571,1169,3.046,1170,1.368,1171,1.368,1172,4.163,1173,1.368,1202,1.217,1203,1.571,1204,1.571,1234,2.467,1284,1.571,1285,1.878,1286,1.878,1287,1.878,1288,5.701,1289,1.878,1290,1.878,1291,1.878,1292,1.878,1293,2.95,1294,2.95,1295,1.878,1296,1.878,1297,1.878,1298,1.878,1299,1.878,1300,1.878,1301,1.878,1302,1.878,1303,1.878,1304,1.878,1305,1.878,1306,1.878,1307,1.878,1308,1.878,1309,1.878,1310,1.878,1311,1.878,1312,1.878,1313,1.878,1314,1.878,1315,1.878,1316,1.878,1317,1.878,1318,1.878,1319,1.878,1320,1.878,1321,2.95,1322,2.95,1323,2.95,1324,5.771,1325,2.95,1326,5.771,1327,2.95,1328,2.95,1329,2.95,1330,2.95,1331,2.95,1332,3.642,1333,2.95,1334,4.127,1335,2.95,1336,2.95,1337,2.95,1338,2.95,1339,2.95,1340,4.484,1341,4.127,1342,2.95,1343,2.95,1344,1.878,1345,3.642,1346,6.29,1347,6.095,1348,2.95,1349,2.95,1350,1.878,1351,2.95,1352,2.95,1353,2.95,1354,4.76,1355,2.95,1356,1.878,1357,1.878,1358,1.878,1359,1.878,1360,1.878,1361,1.878,1362,2.95,1363,1.878,1364,2.95,1365,1.878,1366,1.878,1367,1.878,1368,1.878,1369,1.878,1370,1.878,1371,1.878,1372,1.878,1373,1.878,1374,1.878,1375,1.878,1376,4.127,1377,1.878,1378,1.878,1379,1.878,1380,2.95,1381,1.878,1382,1.878,1383,1.878,1384,1.878,1385,2.95,1386,1.878,1387,1.878,1388,1.878,1389,1.878,1390,1.878,1391,1.878,1392,1.878,1393,1.878,1394,1.878,1395,1.878,1396,1.878,1397,1.878,1398,1.878,1399,1.878,1400,1.878,1401,2.95,1402,1.878,1403,1.878,1404,1.878]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":338,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0\">email",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0",{"_index":335,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["0.8.26",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":318,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["00ff00",{"_index":320,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["018e42cf",{"_index":889,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["0800200c9a61",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":314,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0x3",{"_index":960,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":961,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":586,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["10/20",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":390,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":673,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["11/17",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["123456789",{"_index":408,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["13/21",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1284,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":957,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/33",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1257,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1263,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":386,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["200",{"_index":740,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1254,"title":{},"body":{"license.html":{}}}],["21321321321",{"_index":592,"title":{},"body":{"components/ClusterComponent.html":{}}}],["23",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31404/v1",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3tb",{"_index":591,"title":{},"body":{"components/ClusterComponent.html":{}}}],["4",{"_index":588,"title":{},"body":{"components/ClusterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":384,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["4/9",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":760,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":771,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b4c",{"_index":891,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["4h",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":949,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":587,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["5/8",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":785,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":788,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":793,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":796,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":800,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c54334d6947",{"_index":893,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["6h",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/14",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["8/31",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["8804",{"_index":892,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["9.0.0",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":315,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["96",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9acb",{"_index":890,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["_notif",{"_index":929,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":1003,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":790,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1105,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":858,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":931,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":776,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":499,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1265,"title":{},"body":{"license.html":{}}}],["alert",{"_index":935,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":1002,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":331,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":908,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":1210,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":549,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1256,"title":{},"body":{"license.html":{}}}],["api",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_url",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["app.configur",{"_index":397,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.descript",{"_index":395,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.id",{"_index":394,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.nam",{"_index":393,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.rout",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["app.servic",{"_index":398,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.tag",{"_index":396,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appcompon",{"_index":147,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigur",{"_index":273,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appdescript",{"_index":274,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appic",{"_index":862,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["appid",{"_index":275,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applic",{"_index":270,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Backend.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications.component.html",{"_index":272,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications.component.scss",{"_index":271,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications/applications.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":149,"title":{"components/ApplicationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":195,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnam",{"_index":276,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["apps_mock",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appservic",{"_index":277,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appsinfocompon",{"_index":151,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appsmock",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptyp",{"_index":278,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["array",{"_index":550,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1230,"title":{},"body":{"index.html":{}}}],["assest",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":326,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["attent",{"_index":980,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":411,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":204,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1242,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1224,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":279,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["avail",{"_index":309,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":612,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":643,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":631,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":627,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":634,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":628,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":632,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":630,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":635,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":854,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:112",{"_index":859,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":855,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:125",{"_index":873,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:136",{"_index":875,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:159",{"_index":874,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:171",{"_index":869,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:178",{"_index":865,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:192",{"_index":861,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:202",{"_index":866,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:212",{"_index":863,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":871,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:41",{"_index":872,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:55",{"_index":870,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:67",{"_index":867,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:77",{"_index":868,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:90",{"_index":856,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1269,"title":{},"body":{"license.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["behavior",{"_index":901,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":985,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":954,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":886,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1282,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1229,"title":{},"body":{"index.html":{}}}],["button",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1091,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":1092,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":714,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":952,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":414,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":364,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["carouselmodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["celia",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":921,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":919,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":923,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changesonuserlist",{"_index":1087,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":709,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":712,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":1000,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":594,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":1058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1212,"title":{},"body":{"index.html":{}}}],["click",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":1215,"title":{},"body":{"index.html":{}}}],["close",{"_index":381,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":532,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":534,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":533,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":685,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":694,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":699,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":697,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":698,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":696,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":689,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":695,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":691,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":693,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:76",{"_index":690,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":153,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":535,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":686,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":509,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":602,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":687,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":536,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":688,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1226,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":280,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["command",{"_index":1211,"title":{},"body":{"index.html":{}}}],["commun",{"_index":798,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1259,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1239,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":608,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":783,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["configur",{"_index":333,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1097,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":770,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":768,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":744,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":797,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":780,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":747,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":801,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":764,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":794,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":804,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":543,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":967,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":681,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1261,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1253,"title":{},"body":{"license.html":{}}}],["core",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":563,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":1118,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":589,"title":{},"body":{"components/ClusterComponent.html":{}}}],["creat",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":596,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":555,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":281,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["danger",{"_index":983,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["darbi",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["data['totalclust",{"_index":580,"title":{},"body":{"components/ClusterComponent.html":{}}}],["data['totalnod",{"_index":581,"title":{},"body":{"components/ClusterComponent.html":{}}}],["date",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dave",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davesmith@mail.com",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":155,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":966,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":860,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":487,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":501,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":196,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":385,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["descript",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":864,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1221,"title":{},"body":{"index.html":{}}}],["develop",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":723,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1228,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1218,"title":{},"body":{"index.html":{}}}],["discard",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":936,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":972,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1231,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1268,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1084,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1119,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":313,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["done",{"_index":977,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doughnut",{"_index":282,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["due",{"_index":754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":991,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["edg",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":618,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":158,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":160,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ellen",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellen.martin@mail.com",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":1112,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":781,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["engin",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":319,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error.statu",{"_index":739,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.statustext",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorhandl",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":221,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":994,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1086,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1088,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1258,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1236,"title":{},"body":{"index.html":{}}}],["expect",{"_index":900,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1273,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhy2nlc3miolsit1jhil0simv4cci6mtu0mji4njg2mywiawf0ijoxntqymjc2mdyzlcjpc3mioijhdxroecisimp0asi6iji1ota5zdnkltjlodmtndlmmc04zmqzltflymzintyxmtnhmsisim5izii6ije1ndiynzywnjmilcjvcmdhbml6yxrpb25jrci6ijdhzdfhn2e4lwu0yjetndc5oc05mdcxlwu0nty5mdhmywqxmyisinjvbguioijpd25lciisinvzzxjjrci6impvag4uzg9lqg1hawwuy29tin0",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":719,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":766,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1233,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1244,"title":{},"body":{"index.html":{}}}],["form",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":775,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1036,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":454,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1247,"title":{},"body":{"index.html":{}}}],["gain",{"_index":802,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":789,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":791,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":541,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":545,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1205,"title":{"index.html":{},"license.html":{}},"body":{}}],["getapp",{"_index":488,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getapps(organizationid",{"_index":504,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getbaseurl",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getclust",{"_index":490,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail",{"_index":489,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail(clusterid",{"_index":507,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":510,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnod",{"_index":491,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnodes(clusterid",{"_index":512,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":1009,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":492,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":514,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":493,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":516,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":494,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":518,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":495,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(organizationid",{"_index":520,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":749,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1250,"title":{},"body":{"index.html":{}}}],["good",{"_index":989,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":1278,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":283,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["group",{"_index":392,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{}}}],["group_work",{"_index":1083,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":410,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":944,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":787,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":733,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":736,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":730,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["hardcod",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":979,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":1248,"title":{},"body":{"index.html":{}}}],["helper",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1245,"title":{},"body":{"index.html":{}}}],["http://192.168.99.100",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1223,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1262,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":734,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1213,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":943,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1209,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":1001,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":897,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["ik63rhhqhztqrk7dgiewcew0vrk",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1274,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["incorrect",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info'},{'nam",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":402,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":401,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":400,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:12",{"_index":404,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1101,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1109,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":1106,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1103,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1111,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1107,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":1108,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1110,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1093,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1102,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:62",{"_index":1098,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:68",{"_index":1094,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1095,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:8",{"_index":403,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1099,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":604,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/app",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":355,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":370,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate.userid",{"_index":1076,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":425,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":996,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1214,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":406,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1240,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":485,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":755,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":595,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{}}}],["it'",{"_index":981,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":682,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":945,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh.peterson@mail.com",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":548,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":362,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1074,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":369,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["json.stringifi",{"_index":887,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttokendata",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockappslist",{"_index":926,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist",{"_index":925,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mocknodelist",{"_index":927,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":905,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":924,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist[index",{"_index":904,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(respons",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":359,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1238,"title":{},"body":{"index.html":{}}}],["key",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1272,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":409,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["languag",{"_index":1277,"title":{},"body":{"license.html":{}}}],["law",{"_index":1264,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":779,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1241,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1252,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1280,"title":{},"body":{"license.html":{}}}],["line",{"_index":346,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":353,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":778,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":953,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":308,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":590,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorag",{"_index":358,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":354,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":642,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":360,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":624,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":629,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":633,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":573,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":636,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":638,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":654,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.reload",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":161,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":774,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":988,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":848,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":850,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":849,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":163,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1207,"title":{},"body":{"index.html":{}}}],["map",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["map(respons",{"_index":895,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["martin",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":956,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecoz_udyimldug",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1047,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":670,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikeslashis@mail.com",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1202,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":284,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":285,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappslist",{"_index":883,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":537,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":881,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":916,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":920,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":918,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].tag",{"_index":922,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":877,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":884,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":538,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":879,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":880,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":882,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":42,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":878,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":902,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":907,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":909,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].email",{"_index":912,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].nam",{"_index":910,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].role_nam",{"_index":913,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":301,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":1050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":645,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":194,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":407,"title":{},"body":{"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1249,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":593,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nativedock",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navig",{"_index":1222,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":605,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":803,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":706,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":705,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":707,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["next",{"_index":352,"title":{},"body":{"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1219,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":539,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":599,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":597,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":598,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":601,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":600,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":540,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":614,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":1006,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":965,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":964,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":166,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":622,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":43,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1208,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":334,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":357,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["observ",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1260,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":915,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["on",{"_index":556,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":933,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":937,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":300,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openappsinfo",{"_index":296,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["opendebugpanel",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":1023,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":1017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":674,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":647,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":340,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["organ",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":372,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_mock",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":1048,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":168,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":1014,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":993,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["overview",{"_index":1283,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1176,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":773,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":611,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":619,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":620,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":610,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:100",{"_index":677,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:145",{"_index":678,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:38",{"_index":680,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":675,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:42",{"_index":679,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:48",{"_index":676,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["password).pipe(map(respons",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirm",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":1051,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1279,"title":{},"body":{"license.html":{}}}],["persist",{"_index":644,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1082,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["peterson",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pie",{"_index":324,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":894,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["platform",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":625,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":784,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":799,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1232,"title":{},"body":{"index.html":{}}}],["product",{"_index":1234,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":613,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1217,"title":{},"body":{"index.html":{}}}],["promis",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":792,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1246,"title":{},"body":{"index.html":{}}}],["r",{"_index":955,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":286,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["reactiveformsmodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":978,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":1251,"title":{},"body":{"index.html":{}}}],["real",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":287,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["refresh_token",{"_index":888,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regist",{"_index":387,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":1225,"title":{},"body":{"index.html":{}}}],["remov",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":995,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":327,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["replic",{"_index":899,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":1216,"title":{},"body":{"index.html":{}}}],["request",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["requir",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":496,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":524,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":530,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":367,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["response(new",{"_index":885,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":368,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["response.email",{"_index":1079,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.json",{"_index":896,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response.nam",{"_index":1039,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":1080,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["responseopt",{"_index":876,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["resset",{"_index":1100,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["role_nam",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":708,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":317,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":606,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["sara",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saradoe@mail.com",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":497,"title":{},"body":{"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":692,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":526,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchang",{"_index":498,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchanges(f",{"_index":717,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(organizationid",{"_index":528,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":1227,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":288,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["screen",{"_index":666,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1275,"title":{},"body":{"license.html":{}}}],["select",{"_index":646,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1220,"title":{},"body":{"index.html":{}}}],["server",{"_index":738,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":330,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":934,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":289,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflabel",{"_index":290,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflin",{"_index":291,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxi",{"_index":292,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxislabel",{"_index":293,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxi",{"_index":294,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxislabel",{"_index":295,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["sidebar",{"_index":615,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":172,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sig",{"_index":405,"title":{},"body":{"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["simul",{"_index":857,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["slashi",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smith",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":1267,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":683,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":667,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1276,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../backend.service.t",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1203,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1204,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":399,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":269,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{}}}],["src/app/applications/applications.component.ts:112",{"_index":298,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:133",{"_index":299,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:21",{"_index":312,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:26",{"_index":332,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:27",{"_index":306,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:28",{"_index":305,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:29",{"_index":304,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:30",{"_index":311,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:31",{"_index":303,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:32",{"_index":310,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:37",{"_index":307,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:42",{"_index":329,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:47",{"_index":323,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:48",{"_index":322,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:49",{"_index":316,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:52",{"_index":321,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:66",{"_index":345,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:67",{"_index":348,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:68",{"_index":347,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:69",{"_index":349,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:70",{"_index":342,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:71",{"_index":344,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:72",{"_index":343,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:73",{"_index":341,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:74",{"_index":336,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:75",{"_index":339,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:85",{"_index":325,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:86",{"_index":328,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:87",{"_index":297,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":531,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:113",{"_index":552,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:145",{"_index":547,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:160",{"_index":553,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:19",{"_index":558,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:24",{"_index":572,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:29",{"_index":560,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:34",{"_index":559,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:39",{"_index":561,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:44",{"_index":570,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:49",{"_index":571,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:54",{"_index":562,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:59",{"_index":567,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:60",{"_index":566,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":564,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:64",{"_index":565,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:78",{"_index":568,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:79",{"_index":569,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:80",{"_index":557,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":544,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":609,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/loc",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":486,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":515,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":517,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":500,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":503,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:14",{"_index":525,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:15",{"_index":529,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":527,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:18",{"_index":511,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:19",{"_index":513,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:20",{"_index":519,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:22",{"_index":506,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:23",{"_index":508,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:4",{"_index":505,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":522,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:7",{"_index":523,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":521,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/clust",{"_index":603,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":684,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:86",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":847,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":852,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":851,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":963,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":969,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":974,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":992,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":990,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":968,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":970,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":973,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":971,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:100",{"_index":1024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:117",{"_index":1021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:127",{"_index":1027,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":1028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":1029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":1031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1032,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:35",{"_index":1020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:56",{"_index":1022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:84",{"_index":1026,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/error",{"_index":729,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":853,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":928,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":1004,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":1005,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":1010,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":1007,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":1008,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1085,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1052,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:104",{"_index":1064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:116",{"_index":1057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":1065,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:28",{"_index":1067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1069,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1066,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:35",{"_index":1070,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1068,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:41",{"_index":1056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:62",{"_index":1060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:76",{"_index":1061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:85",{"_index":1062,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1090,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1049,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":388,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":584,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":551,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1089,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(respons",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":1030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["succeed",{"_index":742,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":975,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/NotificationsComponent.html":{}}}],["summari",{"_index":365,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":982,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":786,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1281,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":648,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":391,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":671,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1104,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":930,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":938,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":932,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":940,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":997,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.app",{"_index":356,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.appconfigur",{"_index":376,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.appdescript",{"_index":374,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.appid",{"_index":373,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.appnam",{"_index":371,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.appservic",{"_index":377,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.apptyp",{"_index":375,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.auth.logout",{"_index":1081,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1116,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getapps(this.organizationid",{"_index":366,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.backend.getclusterdetail(this.clusterid",{"_index":583,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.clusterid",{"_index":585,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1038,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":579,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1078,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":1117,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":704,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":727,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1114,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":1115,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":574,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":578,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":701,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":703,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":700,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":577,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":702,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":626,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":998,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":1073,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.errormessag",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":378,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":380,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":382,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(appsinfocompon",{"_index":379,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1044,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1043,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.nod",{"_index":575,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":576,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":623,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":668,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":999,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":669,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":361,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1072,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":725,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":1035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":1113,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":582,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1075,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1077,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":383,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.us",{"_index":1037,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":726,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":728,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["time",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":389,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":672,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["token",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{}}}],["top",{"_index":363,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":546,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["totalclust",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":607,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["toth",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth.c@mail.com",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":351,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1206,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":795,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1255,"title":{},"body":{"license.html":{}}}],["understand",{"_index":753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":782,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1235,"title":{},"body":{"index.html":{}}}],["up",{"_index":621,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":554,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":205,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updatenodeslist",{"_index":542,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateprofileus",{"_index":1055,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1063,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":1019,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":1018,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1096,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":750,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":898,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":722,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":724,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":721,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:34",{"_index":710,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":720,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:52",{"_index":716,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:54",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:60",{"_index":715,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:72",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:75",{"_index":713,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:85",{"_index":711,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:89",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:93",{"_index":718,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:97",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":911,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":914,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":617,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":502,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":616,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":174,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1046,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":350,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":941,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":946,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":958,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":962,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":942,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":1126,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1243,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1237,"title":{},"body":{"index.html":{}}}],["view",{"_index":302,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":984,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":1271,"title":{},"body":{"license.html":{}}}],["well",{"_index":976,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":1270,"title":{},"body":{"license.html":{}}}],["write",{"_index":1266,"title":{},"body":{"license.html":{}}}],["x",{"_index":959,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.email).indexof(user.email",{"_index":906,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":903,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(clusterid",{"_index":917,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":939,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":337,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["xxxx",{"_index":948,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":947,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":951,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":987,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":986,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":950,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role_name: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        this.notificationsService.add({message: user.email + ' created successfully'});\n        this.bsModalRef.hide();\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n     \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add user              ×                                                                                                   Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationsComponent.html":{"url":"components/ApplicationsComponent.html","title":"component - ApplicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/applications/applications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                applications\n            \n\n            \n                styleUrls\n                applications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./applications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appConfiguration\n                            \n                            \n                                appDescription\n                            \n                            \n                                appId\n                            \n                            \n                                appName\n                            \n                            \n                                apps\n                            \n                            \n                                appServices\n                            \n                            \n                                appType\n                            \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockAppChart\n                            \n                            \n                                mockAppPieChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAppsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/applications/applications.component.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAppsInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenAppsInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the apps info component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appConfiguration:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apps:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of available apps\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appServices\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appServices:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:47\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:85\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID, name, id, description, type, configuration and services\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:66\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { mockAppChart, mockAppPieChart } from '../utils/mocks';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { AppsInfoComponent } from '../apps-info/apps-info.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID, name, id, description, type, configuration and services\n   */\n  organizationId: string;\n  appName: string;\n  appId: string;\n  appDescription: string;\n  appType: string;\n  appConfiguration: string;\n  appServices: string;\n\n  /**\n   * List of available apps\n   */\n  apps: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockAppChart: any;\n  mockAppPieChart: any;\n  autoScale: any;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.apps = [];\n\n  /**\n   * Mocked Charts\n   */\n  Object.assign(this, {mockAppPieChart, mockAppChart});\n  }\n\n  ngOnInit() {\n      // Get User data from localStorage\n      const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n      if (jwtData !== null) {\n        this.organizationId = JSON.parse(jwtData).OrganizationId;\n        if (this.organizationId !== null) {\n          // Requests top card summary data\n          this.backend.getApps(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.apps = data;\n            }\n          });\n        }\n      }\n    }\n\n  /**\n   * Opens the modal view that holds the apps info component\n   */\n  openAppsInfo() {\n    const initialState = {\n      appName: this.appName,\n      organizatinoId: this.organizationId,\n      appId: this.appId,\n      appDescription: this.appDescription,\n      appType: this.appType,\n      appConfiguration: this.appConfiguration,\n      appServices: this.appServices\n    };\n\n    this.modalRef = this.modalService.show(AppsInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    // this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n}\n\n    \n\n    \n        \n\n    \n      Application\n    \n  \n  \n    \n    \n      \n        \n          SUMMARY\n        \n        \n          \n            \n              \n                \n                \n                4/5\n              \n              Apps running\n              DEPLOYED\n            \n          \n          \n            \n              20\n            \n            REGISTERED\n          \n        \n      \n    \n    \n    \n      \n        \n          APP STATUS TIMELINE\n        \n        \n          \n            \n            \n            \n          \n          \n            100%\n            0%\n            \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          DEPLOYED APP LIST\n        \n        \n          \n            \n              \n                \n                  Name\n                \n                \n                  ID\n                \n                \n                  Description\n                \n                \n                  Tags\n                \n                \n                  Configuration\n                \n                \n                  Service Groups\n                \n                \n                  Info\n                \n              \n            \n            \n              \n                {{app.name}}\n                {{app.id}}\n                {{app.description}}  \n                {{app.tags}}\n                {{app.configuration}}\n                \n                {{app.service}}\n                \n                  \n                    \n                      i\n                    \n                  \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Application                                        SUMMARY                                                                                                    4/5                            Apps running              DEPLOYED                                                          20                        REGISTERED                                                            APP STATUS TIMELINE                                                                                              100%            0%                                                                DEPLOYED APP LIST                                                                                      Name                                                  ID                                                  Description                                                  Tags                                                  Configuration                                                  Service Groups                                                  Info                                                                                    {{app.name}}                {{app.id}}                {{app.description}}                  {{app.tags}}                {{app.configuration}}                                {{app.service}}                                                                            i                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      SIG Application\n    \n    \n    \n      Services\n      \n\n      \n      \n        \n          \n            \n              Name\n            \n            SIG Application\n          \n          \n            \n              Description\n            \n            Instance of MongoDB \n          \n          \n            \n              Id\n            \n            123456789\n          \n          \n            \n              Configuration\n            \n            Kubernetes\n          \n          \n            \n              Tags\n            \n            Tags, tag, tags\n          \n        \n      \n    \n    \n      \n        Close\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              SIG Application                  Services                                                              Name                        SIG Application                                              Description                        Instance of MongoDB                                               Id                        123456789                                              Configuration                        Kubernetes                                              Tags                        Tags, tag, tags                                              Close                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getClusterDetail\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getNodes\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                                \n                                    saveUserChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n  getApps(organizationId: string): any;\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(organizationId: string, userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    saveUserChanges(organizationId: string, changes: any);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getNodes(clusterId: string);\n    getResourcesSummary(organizationId: string);\n    // Applications\n    getApps(organizationId: string);\n    getClusterDetail(clusterId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:54\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:59\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:78\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:49\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: any[];\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.resourcesMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = [];\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).OrganizationId;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n         .subscribe(response => {\n           if (response && response._body) {\n             const data = JSON.parse(response._body);\n             this.clustersCount = data['totalClusters'];\n             this.nodesCount = data['totalNodes'];\n           }\n         });\n         this.updateNodesList();\n       }\n     }\n    //  this.backend.getClusterDetail(this.clusterId)\n    //  .subscribe(response => {\n    //    if (response && response._body) {\n    //      const data = JSON.parse(response._body);\n    //      this.clusterData = data;\n    //    }\n    //  });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.clusterId)\n    .subscribe(response => {\n      if (response && response._body) {\n        const data = JSON.parse(response._body);\n        this.nodes = data;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        CLUSTER 1\n        5 available\n      \n      \n        \n          \n            \n              \n              \n              4/5\n            \n            4 nodes \n            NODES\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n            \n              {{clustersCount}}\n            \n            CPU LOAD\n          \n          \n            \n              3Tb\n            \n            STORAGE\n          \n        \n        \n          \n            \n              \n                id\n              \n              21321321321\n            \n            \n              \n                types\n              \n              Kubernetes \n            \n            \n              \n                Tags\n              \n              Tags\n            \n            \n              \n                Multitenant\n              \n              All\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > CLUSTER 1 > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      CLUSTER 1        5 available                                                                                    4/5                        4 nodes             NODES                                              SUMMARY CLUSTER 1                                                        {{clustersCount}}                        CPU LOAD                                              3Tb                        STORAGE                                                                              id                            21321321321                                                      types                            Kubernetes                                                       Tags                            Tags                                                      Multitenant                            All                                                                                    CLUSTER                                 > CLUSTER 1 >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n    Backend control\n    \n      \n        \n        \n          {{item.name}}\n        \n        \n        \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                    Backend control                                    {{item.name}}                                              Real                                Mock                                    Notifications    Spam test notification                Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error message\n   */\n  errorMessage: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessage = '';\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessage = '';\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.errorMessage = error.statusText;\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                0\">Email or password incorrect\n                \n                \n                Log in\n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                    0\">Email or password incorrect                                                Log in                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Simulates adding a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Simulates delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:192\n                            \n                        \n\n\n                \n                    \n                            \nAppications\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Simulates get cluster details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:202\n                            \n                        \n\n\n                \n                    \n                            Simulates get nodes list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Simulates reset password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Simulates save user changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList, mockResourcesSummary, mockAppsList, mockNodeList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        token: mockJwtToken,\n        refresh_token: '018e42cf-9acb-4b4c-8804-6c54334d6947'\n      }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {}\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList[index]),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({ users: mockUserList }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /**\n  * Simulates adding a user\n  */\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      }))).pipe(\n        map(response => response.json())\n      );\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      }))).pipe(\n        map(response => response.json())\n      );\n    }\n  }\n\n  /**\n  * Simulates delete user\n  */\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates reset password\n  */\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates save user changes\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  saveUserChanges(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index !== -1) {\n      mockUserList[index].name = user.name;\n      mockUserList[index].email = user.email;\n      mockUserList[index].role_name = user.role_name;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    }))).pipe(\n      map(response => response.json())\n    );\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].tags = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })));\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n\n  /********************\n   * Appications\n   ********************/\n\n  /**\n   * Simulates get apps list\n   */\n  getApps(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockAppsList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get nodes list\n   */\n  getNodes(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockNodeList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get cluster details\n   */\n  getClusterDetail(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:35\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n              this.users = response.users;\n          });\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId\n    };\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState});\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n          this.users = response.users;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      this.updateService.changesOnUserList.next();\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                25 %\n                (8/31)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                61 %\n                (13/21)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                48 %\n                (16/33)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../backend.service.ts)\n                        \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/backend.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + ':31404/v1/'\n                        \n                    \n\n                \n                    \n                        URL of the public API\n\n                    \n                \n\n            \n        \n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: getBaseUrl\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // hardcoded local environment API ip address\n  apiUrl: 'http://192.168.99.100'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n    refreshToken: 'refresh_token'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Assets Application',\n        id: '0800200c9a61',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'SIG Application',\n        id: '0800200c9a62',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Engine App',\n        id: '0800200c9a63',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a64',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a65',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster2',\n        id: '0800200c9a62',\n        totalNodes: '10',\n        runningNodes: '2',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster3',\n        id: '0800200c9a63',\n        totalNodes: '10',\n        runningNodes: '3',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster4',\n        id: '0800200c9a64',\n        totalNodes: '10',\n        runningNodes: '4',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster5',\n        id: '0800200c9a65',\n        totalNodes: '10',\n        runningNodes: '5',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Error',\n        tags: 'ny, edge',\n        multitenant: 'No'\n    },\n    {\n        name: 'Cluster6',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '6',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster7',\n        id: '0800200c9a67',\n        totalNodes: '10',\n        runningNodes: '7',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJhY2Nlc3MiOlsiT1JHIl0sImV4cCI6MTU0MjI4Njg2MywiaWF0IjoxNTQyMjc2MDYzLCJpc3MiOiJhdXRoeCIsImp0aSI6IjI1OTA5ZDNkLTJlODMtNDlmMC04ZmQzLTFlYmZiNTYxMTNhMSIsIm5iZiI6IjE1NDIyNzYwNjMiLCJvcmdhbml6YXRpb25JRCI6IjdhZDFhN2E4LWU0YjEtNDc5OC05MDcxLWU0NTY5MDhmYWQxMyIsInJvbGUiOiJPd25lciIsInVzZXJJRCI6ImpvaG4uZG9lQG1haWwuY29tIn0' +\n    '.MeCoZ_UdYiMlduG-ik63rHHqHztQrK7dgIEWceW0VRk'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    totalClusters: mockClusterList.length,\n    totalNodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Celia Toth',\n        email: 'toth.c@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Sara Doe',\n        email: 'saradoe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Dave Smith',\n        email: 'davesmith@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'john.doe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Ellen Martin',\n        email: 'ellen.martin@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Josh Peterson',\n        email: 'josh.peterson@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Mike Slashis',\n        email: 'mikeslashis@mail.com',\n        role_name: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
