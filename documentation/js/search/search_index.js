var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/pipes/AbbreviatePipe.html",[0,1.704,1,1.876]],["body/pipes/AbbreviatePipe.html",[0,3.04,1,3.093,2,0.293,3,0.344,4,0.244,5,3.608,6,1.086,7,0.679,8,5.299,9,0.768,10,3.143,11,4.431,12,1.148,13,0.571,14,4.314,15,5.227,16,3.093,17,1.447,18,3.093,19,2.165,20,5.299,21,1.447,22,5.002,23,5.299,24,3.093,25,3.876,26,5.981,27,5.981,28,5.299,29,4.431,30,0.841,31,0.032,32,0.511,33,0.633,34,1.178,35,2.165,36,1.84,37,0.699,38,0.511,39,4.431,40,0.453,41,0.344,42,0.511,43,0.841,44,1.277,45,1.033,46,4.314,47,2.518,48,5.299,49,4.314,50,2.089,51,4.314,52,4.431,53,0.025,54,0.025]],["title/components/AddUserComponent.html",[55,0.112,56,0.684]],["body/components/AddUserComponent.html",[2,0.209,3,0.158,4,0.112,6,0.499,7,0.674,9,0.548,12,1.13,13,0.799,16,1.157,17,1.329,18,2.841,19,1.256,21,1.16,25,1.284,29,1.657,30,0.99,31,0.032,32,0.691,33,0.746,34,1.329,35,0.81,37,0.909,38,0.621,40,0.208,41,0.158,42,0.235,43,0.6,44,1.44,45,0.735,47,1.157,50,1.489,53,0.015,54,0.015,55,0.16,56,0.904,57,0.586,58,0.586,59,0.586,60,5.083,61,3.938,62,1.444,63,1.029,64,1.649,65,1.212,66,1.094,67,1.005,68,0.84,69,2.572,70,0.84,71,2.572,72,0.208,73,0.499,74,1.798,75,1.419,76,1.798,77,4.248,78,2.542,79,3.095,80,1.887,81,2.58,82,4.248,83,2.479,84,2.479,85,1.993,86,2.24,87,2.572,88,2.24,89,1.993,90,2.24,91,1.16,92,0.499,93,1.05,94,1.553,95,1.823,96,1.387,97,1.981,98,3.075,99,1.981,100,1.256,101,2.827,102,1.993,103,2.162,104,0.979,105,2.24,106,1.981,107,2.24,108,2.24,109,2.572,110,1.981,111,1.225,112,2.857,113,3.152,114,2.24,115,3.095,116,1.981,117,2.442,118,1.993,119,1.981,120,1.208,121,1.63,122,1.993,123,3.153,124,1.887,125,1.599,126,2.24,127,1.981,128,1.795,129,2.292,130,1.068,131,1.44,132,2.24,133,1.63,134,2.24,135,2.2,136,3.926,137,1.981,138,1.981,139,1.657,140,0.586,141,1.795,142,1.068,143,1.795,144,1.029,145,1.657,146,1.736,147,2.572,148,3.075,149,1.068,150,1.63,151,2.572,152,3.075,153,2.24,154,3.075,155,1.981,156,1.657,157,1.981,158,1.158,159,0.91,160,0.986,161,1.981,162,1.981,163,1.981,164,1.657,165,0.746,166,0.459,167,0.635,168,0.746,169,0.81,170,0.746,171,0.746,172,0.541,173,0.586,174,0.541,175,0.586,176,1.157,177,0.802,178,3.553,179,1.158,180,1.208,181,1.444,182,0.81,183,0.688,184,1.158,185,3.35,186,3.35,187,1.879,188,1.981,189,1.981,190,1.657,191,1.657,192,1.981,193,0.81,194,1.657,195,1.657,196,1.657,197,2.2,198,1.284,199,1.284,200,1.157,201,1.657,202,1.657,203,2.572,204,1.981,205,1.444,206,1.444,207,1.444,208,2.746,209,1.444,210,1.284,211,1.284,212,1.981,213,1.981,214,1.657,215,1.981,216,1.284,217,1.981,218,2.24,219,1.444,220,1.444,221,1.444,222,1.444,223,0.96,224,1.795,225,1.795,226,1.63,227,2.24,228,1.993,229,0.499,230,0.91,231,0.84,232,1.257,233,0.586,234,0.91,235,0.422,236,0.586,237,0.459,238,0.586,239,0.422,240,0.586,241,0.422,242,0.586,243,0.459,244,0.91,245,0.386,246,0.499,247,0.586,248,0.422,249,0.654,250,0.422,251,0.422,252,0.586,253,0.422,254,0.712,255,0.586,256,0.422,257,0.586,258,0.422,259,0.586,260,0.459,261,0.586,262,0.422,263,0.586,264,0.422,265,0.586]],["title/components/AppComponent.html",[55,0.112,235,0.684]],["body/components/AppComponent.html",[2,0.328,3,0.297,4,0.21,6,0.936,7,0.634,9,0.86,12,0.86,13,0.777,21,1.318,30,0.725,31,0.032,32,0.671,33,0.546,35,1.52,37,0.603,38,0.671,40,0.507,41,0.297,42,0.44,43,0.941,53,0.023,54,0.023,55,0.204,56,0.792,57,1.101,58,1.101,59,1.101,63,1.462,64,1.791,65,1.365,66,0.725,67,0.603,68,1.318,70,1.318,72,0.391,73,0.782,75,2.016,76,1.817,91,1.548,92,0.782,96,1.751,104,1.027,111,0.936,140,1.101,166,0.862,171,1.4,177,0.792,229,0.936,230,1.428,231,1.318,232,1.677,233,1.101,234,1.428,235,1.206,236,1.101,237,0.862,238,1.101,239,0.792,240,1.101,241,0.792,242,1.101,243,0.862,244,1.428,245,0.725,246,0.936,247,1.101,248,0.792,249,1.027,250,0.792,251,0.792,252,1.101,253,0.792,254,1.313,255,1.101,256,0.792,257,1.101,258,0.792,259,1.101,260,0.862,261,1.101,262,0.792,263,1.101,264,0.792,265,1.101,266,3.111,267,2.816,268,4.825,269,4.825,270,3.672,271,3.005,272,2.71,273,3.005,274,4.825,275,2.558,276,3.72,277,3.72,278,3.72,279,2.171]],["title/modules/AppModule.html",[280,1.876,281,2.082]],["body/modules/AppModule.html",[1,3.224,2,0.19,3,0.223,4,0.158,31,0.032,38,0.783,40,0.293,41,0.402,42,0.331,53,0.019,54,0.019,56,1.236,61,1.811,65,0.595,66,0.545,67,0.453,94,1.635,111,0.703,166,1.28,167,1.705,168,1.052,176,1.631,229,0.703,235,1.303,237,1.28,239,1.236,241,1.236,243,1.28,245,1.133,246,0.703,248,1.236,249,0.845,250,1.236,251,1.303,253,1.176,256,1.176,258,1.176,260,1.28,262,1.176,264,1.236,279,1.631,280,2.318,281,4.318,282,1.631,283,3.865,284,4.209,285,2.337,286,2.337,287,2.337,288,2.337,289,2.337,290,3.224,291,2.675,292,2.675,293,3.322,294,2.337,295,1.631,296,2.794,297,3.972,298,3.972,299,3.322,300,2.036,301,3.972,302,2.794,303,3.972,304,3.322,305,1.811,306,3.972,307,1.631,308,3.972,309,3.322,310,2.574,311,2.794,312,2.794,313,3.865,314,2.794,315,2.794,316,1.481,317,2.036,318,2.794,319,2.794,320,2.794,321,2.794,322,2.794,323,2.794,324,2.794,325,2.794,326,2.794,327,2.794,328,3.972,329,3.972,330,2.794,331,2.036,332,3.972,333,2.337,334,2.794,335,2.794,336,3.972,337,2.337,338,3.972,339,1.241,340,1.811,341,3.322,342,2.794,343,2.036,344,2.794,345,2.794,346,2.894,347,1.631,348,2.036,349,2.794,350,2.794,351,2.036,352,2.036,353,1.631,354,2.036,355,2.794,356,2.794,357,2.794,358,2.794,359,2.794,360,2.794,361,2.794,362,2.794,363,2.794]],["title/interfaces/ApplicationInstance.html",[364,1.03,365,2.341]],["body/interfaces/ApplicationInstance.html",[2,0.296,3,0.348,4,0.246,7,0.71,12,1.185,13,0.577,31,0.031,32,0.775,34,1.681,41,0.348,53,0.025,54,0.025,72,0.458,73,0.864,103,1.936,146,1.781,364,1.847,365,3.885,366,3.645,367,3.645,368,1.936,369,2.544,370,6.003,371,6.003,372,6.003,373,6.003,374,4.373,375,4.373,376,6.003,377,5.02,378,3.182,379,5.02]],["title/components/AppsInfoComponent.html",[55,0.112,239,0.684]],["body/components/AppsInfoComponent.html",[2,0.315,3,0.249,4,0.114,6,0.508,7,0.686,9,0.556,10,3.126,12,1.044,13,0.826,16,1.822,18,1.822,19,1.275,21,0.852,24,2.863,30,0.744,31,0.032,32,0.733,33,0.751,34,0.852,35,1.275,36,1.084,37,0.752,38,0.625,40,0.212,41,0.161,42,0.239,43,0.609,44,0.924,45,0.744,53,0.015,54,0.015,55,0.161,56,0.43,57,0.598,58,0.598,59,0.598,63,1.042,64,1.654,65,1.311,66,0.394,67,0.327,68,0.852,70,0.852,72,0.212,73,0.506,74,1.807,75,1.436,76,1.807,80,1.906,91,1.172,92,0.506,93,1.071,94,1.563,95,1.835,103,1.906,104,0.664,111,0.508,120,0.648,124,2.575,125,1.616,131,1.129,140,0.598,142,1.491,144,1.172,146,1.753,149,1.084,158,1.616,159,1.27,160,1.858,165,0.76,166,0.884,167,0.648,168,0.76,169,0.825,170,0.76,172,0.551,173,0.598,174,0.551,175,1.129,177,0.664,179,1.436,180,1.223,182,0.825,183,0.701,184,1.175,187,1.275,229,0.508,230,0.924,231,0.852,232,1.27,233,0.598,234,0.924,235,0.43,236,0.598,237,0.468,238,0.598,239,0.913,240,0.598,241,0.43,242,0.598,243,0.468,244,0.924,245,0.394,246,0.508,247,0.598,248,0.43,249,0.664,250,0.43,251,0.43,252,0.598,253,0.43,254,0.723,255,0.598,256,0.43,257,0.598,258,0.43,259,0.598,260,0.468,261,0.598,262,0.43,263,0.598,264,0.43,265,0.598,271,2.8,307,2.227,348,4.564,369,3.383,374,2.274,375,1.471,377,2.61,378,2.8,380,5.239,381,1.471,382,2.61,383,2.61,384,4.291,385,4.291,386,4.291,387,4.291,388,4.291,389,4.291,390,4.291,391,4.291,392,4.291,393,3.589,394,4.291,395,4.291,396,4.291,397,2.271,398,4.291,399,3.121,400,3.121,401,3.121,402,2.02,403,3.121,404,2.02,405,3.121,406,3.121,407,2.61,408,3.121,409,2.02,410,2.274,411,3.121,412,2.934,413,2.02,414,2.02,415,2.02,416,2.02,417,2.02,418,2.02,419,2.02,420,1.689,421,2.02,422,2.02,423,1.655,424,2.02,425,2.02,426,1.386,427,2.6,428,2.02,429,3.121,430,3.121,431,3.121,432,2.02,433,2.02,434,2.02,435,1.689,436,2.274,437,2.02,438,2.02,439,3.121,440,1.689,441,2.61,442,1.471,443,1.471,444,2.022,445,3.19,446,1.689,447,2.02,448,2.02,449,2.02,450,2.02,451,2.02,452,2.02,453,2.02,454,2.02,455,2.02,456,2.02,457,2.02,458,2.02,459,2.02,460,2.02,461,2.02,462,2.02,463,2.274,464,3.121,465,3.121,466,2.02,467,1.071,468,2.02,469,2.02,470,2.02,471,2.02,472,2.02,473,3.815,474,3.815,475,2.02,476,2.02,477,2.02,478,2.02,479,2.02,480,2.02,481,2.02,482,2.02,483,2.02,484,2.02,485,3.121,486,3.121,487,3.121,488,3.121,489,3.121,490,3.121,491,2.61,492,3.121,493,3.121,494,3.121,495,3.121,496,3.121,497,2.61,498,2.61,499,3.121,500,3.121,501,3.121,502,3.121,503,3.121,504,4.291,505,3.121,506,4.291]],["title/guards/AuthGuard.html",[507,2.341,508,2.687]],["body/guards/AuthGuard.html",[2,0.258,3,0.303,4,0.215,7,0.579,9,0.871,13,0.647,17,1.037,30,0.953,31,0.032,32,0.579,33,0.718,37,0.958,38,0.716,40,0.399,41,0.303,42,0.449,43,0.74,45,0.953,53,0.023,54,0.023,67,0.793,72,0.399,73,0.615,92,0.793,112,3.306,120,1.734,142,1.879,144,1.037,172,1.037,173,1.124,174,1.037,175,1.124,177,0.808,179,2.036,225,2.216,226,2.013,267,2.216,339,1.686,368,1.686,412,2.368,442,2.766,507,2.766,508,4.089,509,3.796,510,3.562,511,5.91,512,3.796,513,3.208,514,3.796,515,3.796,516,5.711,517,3.94,518,5.711,519,3.796,520,1.568,521,4.523,522,4.889,523,1.447,524,2.46,525,3.94,526,2.46,527,2.46,528,4.089,529,2.46,530,3.175,531,4.523,532,3.175,533,3.562,534,3.796,535,3.175,536,3.796,537,3.796,538,3.796,539,3.796,540,3.175,541,4.089,542,5.711,543,4.889,544,1.551]],["title/injectables/AuthService.html",[291,1.556,523,0.951]],["body/injectables/AuthService.html",[2,0.218,3,0.256,4,0.181,7,0.518,9,0.779,12,1.098,13,0.763,17,0.876,19,1.787,30,0.853,31,0.032,32,0.632,33,0.642,34,1.194,37,0.974,38,0.721,40,0.337,41,0.256,42,0.38,44,1.294,45,0.97,53,0.021,54,0.021,67,0.957,72,0.337,73,0.709,74,1.995,78,2.708,81,3.059,92,0.709,94,1.779,95,1.856,100,2.183,104,0.683,117,2.834,120,1.595,125,2.012,131,0.95,142,1.114,144,0.876,147,2.683,158,1.647,165,1.208,170,1.647,172,0.876,173,0.95,174,1.194,175,0.95,177,1.059,179,1.873,180,1.402,182,1.311,183,1.114,184,1.647,193,1.311,291,2.118,295,1.873,339,1.425,378,2.833,407,2.683,412,2.118,510,3.893,513,3.13,521,4.161,523,1.473,524,2.079,525,4.073,526,2.079,527,3.739,530,2.683,531,3.658,532,2.683,540,2.683,545,2.683,546,3.658,547,4.469,548,5.77,549,5.343,550,3.264,551,3.739,552,3.209,553,4.373,554,4.975,555,3.209,556,5.343,557,2.118,558,4.373,559,4.161,560,3.209,561,3.209,562,3.209,563,3.209,564,3.209,565,3.209,566,2.337,567,3.209,568,3.209,569,4.373,570,2.683,571,2.683,572,3.658,573,2.683,574,3.209,575,3.209,576,3.209,577,3.209,578,3.209,579,3.209,580,3.209,581,3.209,582,2.337,583,2.337,584,3.209,585,3.209,586,3.209,587,3.209]],["title/components/ChangePasswordComponent.html",[55,0.112,241,0.684]],["body/components/ChangePasswordComponent.html",[2,0.222,3,0.171,4,0.121,6,0.538,7,0.637,9,0.581,12,1.13,13,0.791,17,0.89,18,2.928,19,1.806,21,1.207,25,2.112,30,0.978,31,0.032,32,0.694,33,0.737,34,1.3,37,0.911,38,0.637,40,0.224,41,0.171,42,0.253,43,0.636,44,1.409,45,0.77,47,1.247,50,1.579,53,0.015,54,0.019,55,0.166,56,0.455,57,0.632,58,0.632,59,0.632,63,1.079,64,1.67,65,1.234,66,0.417,67,0.927,68,0.89,70,0.89,72,0.224,73,0.528,74,1.833,75,1.488,76,1.833,78,1.035,79,3.22,80,1.963,81,3.221,86,2.374,88,2.374,89,2.112,90,2.374,91,1.207,92,0.528,93,1.133,94,1.592,95,1.868,96,1.424,100,1.332,101,2.871,102,2.112,103,1.963,104,0.941,105,2.374,107,2.374,108,2.374,111,1.506,114,2.374,115,3.8,117,2.112,118,2.112,120,1.267,121,1.728,122,2.112,123,3.25,124,1.448,125,1.664,126,2.374,128,1.902,129,2.444,130,1.535,131,1.409,132,2.374,133,1.728,134,2.374,135,1.902,136,4.015,144,0.584,146,1.332,158,1.664,159,0.965,160,1.417,165,0.805,166,0.495,167,0.685,168,0.805,169,0.873,170,0.805,171,0.805,172,0.584,173,0.632,174,0.584,175,0.632,176,1.247,177,0.841,179,0.805,180,1.267,182,0.873,183,0.742,184,1.227,185,3.467,186,3.22,187,1.806,190,1.787,193,0.873,194,1.787,196,1.787,197,2.306,198,1.385,199,1.385,200,1.247,206,1.557,207,1.557,208,2.374,209,1.557,210,2.112,211,2.112,218,2.374,219,1.557,220,1.557,221,1.557,222,1.557,223,1.035,227,2.374,228,2.864,229,0.538,230,0.965,231,0.89,232,1.308,233,0.632,234,0.965,235,0.455,236,0.632,237,0.495,238,0.632,239,0.455,240,0.632,241,0.941,242,0.632,243,0.495,244,0.965,245,0.417,246,0.538,247,0.632,248,0.455,249,0.694,250,0.455,251,0.455,252,0.632,253,0.455,254,0.755,255,0.632,256,0.455,257,0.632,258,0.455,259,0.632,260,0.495,261,0.632,262,0.455,263,0.632,264,0.455,265,0.632,353,3.521,588,5.044,589,1.787,590,3.259,591,3.259,592,4.42,593,4.42,594,2.58,595,3.259,596,3.259,597,2.137,598,2.137,599,2.137,600,2.137,601,2.137,602,3.259,603,2.137,604,2.137,605,2.137,606,2.137,607,2.137,608,2.137,609,2.137,610,2.137,611,2.137,612,3.259,613,1.557,614,2.137,615,2.137,616,2.137,617,1.787,618,1.247,619,2.137,620,2.137,621,2.137,622,2.137,623,2.137,624,2.137,625,2.137,626,2.137,627,2.137,628,2.137]],["title/interfaces/Cluster.html",[364,1.03,629,1.427]],["body/interfaces/Cluster.html",[2,0.359,3,0.342,4,0.242,7,0.706,12,1.189,13,0.567,16,2.503,24,3.643,31,0.031,32,0.762,33,0.976,34,1.674,41,0.342,53,0.025,54,0.025,72,0.45,73,0.856,124,1.905,364,1.834,369,2.503,375,4.349,379,4.992,410,3.124,629,2.651,630,3.587,631,5.969,632,5.969,633,5.969,634,5.969,635,5.969]],["title/interfaces/ComponentMockOption.html",[364,1.03,636,2.082]],["body/interfaces/ComponentMockOption.html",[2,0.313,3,0.221,4,0.157,7,0.748,12,1.01,17,1.078,19,1.132,31,0.032,32,0.544,33,0.675,34,0.757,35,2.165,36,1.841,38,0.593,40,0.291,41,0.367,42,0.328,43,0.54,44,1.168,45,0.54,53,0.019,54,0.019,55,0.192,63,1.078,64,1.078,65,0.84,66,0.77,67,0.746,68,0.757,70,0.757,72,0.291,73,0.64,75,1.043,76,1.475,85,1.795,91,0.757,92,0.449,96,1.369,104,0.59,121,1.469,124,2.043,130,0.962,140,0.82,142,2.252,144,1.696,159,1.168,160,0.888,166,0.642,171,1.043,172,0.757,173,0.82,174,1.078,175,0.82,177,0.59,180,2.05,181,2.018,216,1.795,245,0.54,246,1.334,249,0.59,279,1.617,316,1.469,364,1.607,423,2.093,426,1.231,443,2.018,520,0.888,544,1.613,550,2.304,566,2.018,582,2.018,629,1.754,636,3.249,637,2.018,638,2.018,639,2.98,640,2.018,641,2.093,642,2.428,643,2.304,644,2.317,645,2.317,646,3.302,647,0.962,648,1.342,649,2.317,650,2.317,651,1.795,652,2.018,653,2.018,654,2.317,655,2.876,656,3.847,657,2.317,658,3.351,659,2.317,660,5.112,661,3.302,662,3.302,663,2.018,664,3.302,665,2.317,666,3.302,667,2.317,668,3.302,669,3.302,670,2.317,671,3.302,672,3.302,673,2.018,674,3.302,675,2.018,676,3.302,677,2.018,678,3.302,679,2.018,680,3.302,681,5.194,682,2.317,683,2.317,684,2.317,685,3.847,686,3.302,687,3.302,688,3.302,689,3.302,690,3.302,691,3.302,692,3.302,693,3.302,694,3.302,695,3.302,696,3.302,697,3.302,698,2.558,699,2.317,700,1.795,701,2.317,702,3.961,703,5.112,704,3.961,705,2.317,706,2.018,707,2.317,708,2.317,709,2.317,710,1.617,711,2.317,712,2.018,713,1.342,714,1.617,715,2.317,716,2.317,717,2.317]],["title/components/DebugPanelComponent.html",[55,0.112,245,0.627]],["body/components/DebugPanelComponent.html",[2,0.304,3,0.174,4,0.123,6,0.549,7,0.737,9,0.589,12,0.855,13,0.748,17,1.219,19,1.352,21,0.904,30,0.871,31,0.032,32,0.598,33,0.795,34,0.904,35,2.264,36,1.756,37,0.778,38,0.529,40,0.229,41,0.319,42,0.258,43,0.645,44,0.979,45,0.425,53,0.016,54,0.016,55,0.207,56,0.464,57,0.645,58,0.645,59,0.645,63,1.092,64,1.684,65,1.239,66,0.871,67,0.724,68,0.904,70,0.904,72,0.229,73,0.536,74,1.432,75,1.506,76,1.841,85,1.412,91,1.219,92,0.536,93,1.156,96,1.513,104,1.076,111,0.549,121,1.754,124,1.777,130,0.757,140,0.979,142,2.196,144,1.625,149,1.149,159,0.979,160,0.699,166,0.505,171,0.821,172,0.595,173,0.645,174,1.092,175,0.645,177,0.464,180,2.027,181,1.588,183,1.551,216,2.144,223,1.056,229,0.549,230,0.979,231,0.904,232,1.322,233,0.645,234,0.979,235,0.464,236,0.645,237,0.505,238,0.645,239,0.464,240,0.645,241,0.464,242,0.645,243,0.505,244,0.979,245,0.871,246,1.422,247,0.645,248,0.464,249,0.851,250,0.464,251,0.464,252,0.645,253,0.464,254,0.767,255,0.645,256,0.464,257,0.645,258,0.464,259,0.645,260,0.505,261,0.645,262,0.464,263,0.645,264,0.464,265,0.645,279,1.272,316,3.045,364,1.061,423,2.12,426,0.968,443,1.588,520,0.699,544,1.352,550,1.931,566,1.588,582,2.41,629,1.47,636,3.275,637,4.184,638,1.588,639,3.111,640,1.588,641,1.754,642,2.684,643,1.931,644,1.823,645,1.823,646,2.767,647,0.757,648,1.056,649,2.767,650,2.767,651,2.144,652,3.253,653,3.682,654,1.823,655,2.41,656,3.345,657,1.823,658,2.914,659,1.823,660,4.87,661,2.767,662,2.767,663,1.588,664,2.767,665,1.823,666,2.767,667,1.823,668,2.767,669,2.767,670,1.823,671,2.767,672,2.767,673,1.588,674,2.767,675,1.588,676,2.767,677,1.588,678,2.767,679,1.588,680,2.767,681,5.022,682,2.767,683,1.823,684,1.823,685,3.735,686,2.767,687,2.767,688,2.767,689,2.767,690,2.767,691,2.767,692,2.767,693,2.767,694,2.767,695,2.767,696,2.767,697,2.767,698,2.592,699,2.767,700,1.412,701,1.823,702,3.773,703,4.87,704,3.773,705,1.823,706,1.588,707,2.767,708,2.767,709,3.735,710,1.272,711,1.823,712,2.914,713,1.056,714,1.272,715,2.767,716,2.767,717,1.823,718,3.309,719,3.309,720,3.309,721,3.309,722,2.18,723,2.18,724,2.18,725,2.18,726,2.18,727,2.18,728,2.18,729,2.18,730,3.309,731,3.309,732,3.309]],["title/components/EditClusterComponent.html",[55,0.112,248,0.684]],["body/components/EditClusterComponent.html",[2,0.257,3,0.208,4,0.147,6,0.655,7,0.674,9,0.672,12,1.103,13,0.79,21,1.03,30,0.866,31,0.032,32,0.674,33,0.652,34,1.412,37,0.72,38,0.658,40,0.273,41,0.208,42,0.308,43,0.736,44,1.117,45,0.736,53,0.018,54,0.018,55,0.18,56,0.554,57,0.77,58,0.77,59,0.77,63,1.212,64,1.726,65,1.255,66,0.507,67,0.422,68,1.03,70,1.03,72,0.273,73,0.612,74,1.916,75,1.672,76,1.916,80,2.163,89,2.445,91,1.33,92,0.612,93,1.379,94,1.687,95,1.979,96,1.519,100,1.542,101,2.857,103,1.676,104,0.945,111,1.226,118,2.445,120,1.424,121,2,122,2.445,123,3.494,124,2.163,125,2.03,129,1.063,130,1.311,131,0.77,140,1.441,144,0.71,146,1.542,158,1.421,159,1.117,160,1.561,165,0.979,166,0.603,167,0.834,168,0.979,169,1.063,170,0.979,171,0.979,172,0.71,173,0.77,174,0.71,175,0.77,177,0.945,179,1.672,180,1.424,182,1.063,183,0.904,184,1.421,193,1.063,197,2.843,198,1.686,199,1.686,200,1.518,223,1.26,228,3.156,229,0.655,230,1.117,231,1.03,232,1.441,233,0.77,234,1.117,235,0.554,236,0.77,237,0.603,238,0.77,239,0.554,240,0.77,241,0.554,242,0.77,243,0.603,244,1.117,245,0.507,246,0.655,247,0.77,248,1.036,249,1.272,250,0.554,251,0.554,252,0.77,253,0.554,254,0.874,255,0.77,256,0.554,257,0.77,258,0.554,259,0.77,260,0.603,261,0.77,262,0.554,263,0.77,264,0.554,265,0.77,343,4.401,426,2.163,444,2.582,467,1.379,491,3.156,520,0.834,618,1.518,629,2.471,647,0.904,648,1.26,679,1.895,698,2.445,710,2.202,713,1.827,714,2.202,733,4.401,734,2.176,735,3.773,736,3.773,737,4.87,738,4.87,739,5.393,740,4.87,741,3.773,742,3.773,743,2.602,744,2.602,745,3.773,746,2.602,747,2.602,748,2.602,749,2.602,750,2.602,751,2.602,752,2.602,753,4.44,754,3.773,755,2.602,756,4.44,757,2.602]],["title/components/EditUserComponent.html",[55,0.112,250,0.684]],["body/components/EditUserComponent.html",[2,0.198,3,0.147,4,0.104,6,0.464,7,0.672,9,0.518,12,1.121,13,0.804,17,1.115,21,0.793,30,0.921,31,0.032,32,0.688,33,0.693,34,1.115,36,1.249,37,0.92,38,0.624,40,0.193,41,0.147,42,0.218,43,0.567,44,1.315,45,0.701,53,0.014,54,0.014,55,0.172,56,0.392,57,0.545,58,0.545,59,0.545,62,1.342,63,0.982,64,1.628,65,1.191,66,0.359,67,0.951,68,0.793,69,2.43,70,0.793,71,2.43,72,0.193,73,0.471,74,1.764,75,1.354,76,1.863,78,2.393,80,1.974,81,2.715,83,2.383,84,2.755,87,2.43,89,1.883,91,1.115,92,0.471,94,1.516,95,1.779,96,1.349,100,1.187,101,2.48,103,1.291,104,0.946,109,2.43,111,1.429,112,3.239,113,3.008,118,1.883,120,1.514,121,2.165,122,1.883,123,3.059,124,1.814,125,1.928,129,1.668,130,1.418,131,1.065,139,1.541,141,1.075,142,1.418,143,1.075,144,1.115,145,1.541,146,1.187,149,0.64,150,2.165,156,1.541,158,1.777,159,0.86,160,1.309,164,1.541,165,0.694,166,0.427,167,0.591,168,0.694,169,0.753,170,0.694,171,0.694,172,0.503,173,0.545,174,0.503,175,0.545,177,0.946,178,4.133,179,1.094,180,1.153,182,0.753,183,0.64,184,1.094,191,1.541,193,1.187,197,2.884,198,1.194,199,1.194,200,1.075,223,0.892,224,2.989,225,2.1,226,1.907,228,2.646,229,0.464,230,0.86,231,0.793,232,1.208,233,0.545,234,0.86,235,0.392,236,0.545,237,0.427,238,0.545,239,0.392,240,0.545,241,0.618,242,0.545,243,0.427,244,0.86,245,0.359,246,0.464,247,0.545,248,0.392,249,1.208,250,0.869,251,0.392,252,0.545,253,0.392,254,0.673,255,0.545,256,0.392,257,0.545,258,0.392,259,0.545,260,0.427,261,0.545,262,0.392,263,0.545,264,0.392,265,0.545,271,2.715,272,1.342,273,2.165,275,1.54,339,0.818,347,3.566,353,1.075,354,1.342,368,0.818,397,1.291,412,2.152,427,1.54,436,2.117,444,1.54,467,0.977,513,2.62,517,1.342,544,0.753,594,2.593,613,2.974,618,1.696,641,0.977,677,1.342,698,1.883,710,2.383,713,1.977,714,2.383,733,4.45,758,3.415,759,4.083,760,4.083,761,4.083,762,3.415,763,2.43,764,2.905,765,3.415,766,2.905,767,2.905,768,1.843,769,2.43,770,1.843,771,1.696,772,2.43,773,1.843,774,2.905,775,1.843,776,2.905,777,2.43,778,1.843,779,1.843,780,1.696,781,2.905,782,1.843,783,2.905,784,1.843,785,1.843,786,2.43,787,1.843,788,1.843,789,1.843,790,1.843,791,1.843,792,1.843,793,2.905,794,4.443,795,4.941,796,1.843,797,1.843,798,1.843,799,1.843,800,1.843,801,3.008,802,1.843,803,1.843,804,1.843,805,1.843,806,2.43,807,1.883,808,1.541,809,1.541,810,1.194,811,1.541,812,4.083,813,1.843,814,1.843,815,1.843,816,1.843]],["title/injectables/ErrorHandlerService.html",[310,2.082,523,0.951]],["body/injectables/ErrorHandlerService.html",[2,0.245,3,0.288,4,0.204,7,0.427,9,0.94,13,0.626,30,0.704,31,0.032,32,0.427,33,0.53,34,0.986,37,0.585,38,0.56,40,0.379,41,0.288,42,0.427,43,0.923,44,1.068,53,0.022,54,0.022,67,0.856,72,0.379,92,0.856,100,2.55,104,1.007,129,2.485,131,1.068,140,1.068,153,2.63,205,2.63,223,1.748,231,0.986,295,2.107,309,3.957,310,3.066,333,3.019,410,2.63,423,1.914,517,2.63,520,1.157,523,1.562,535,3.019,541,3.957,544,1.933,547,3.957,570,3.019,571,3.019,572,3.019,647,1.254,651,2.339,653,2.63,700,2.339,702,4.197,704,4.212,771,2.762,817,4.415,818,3.019,819,4.732,820,3.61,821,4.732,822,5.603,823,3.61,824,3.957,825,5.279,826,5.37,827,3.61,828,3.61,829,3.61,830,3.61,831,3.61,832,3.61,833,4.732,834,3.61,835,3.61,836,3.61,837,3.61,838,3.61,839,4.732,840,3.61,841,4.732,842,4.732,843,3.61,844,3.61,845,3.61,846,3.61,847,2.63,848,3.61,849,3.61,850,2.339,851,4.732,852,3.61,853,3.61,854,3.61,855,3.61,856,3.61,857,3.019,858,3.61,859,3.61,860,3.019,861,3.61,862,3.61,863,3.61,864,3.019,865,3.019,866,3.61,867,3.61,868,3.61,869,3.019,870,3.61,871,3.61,872,3.019,873,3.61,874,3.61,875,3.61,876,3.61,877,3.61,878,3.61,879,3.61,880,3.61,881,4.732,882,3.61,883,3.61,884,3.61,885,3.61,886,3.61,887,3.61,888,3.61,889,3.61,890,3.61]],["title/components/LoginComponent.html",[55,0.112,251,0.684]],["body/components/LoginComponent.html",[2,0.232,3,0.181,4,0.128,6,0.571,7,0.607,9,0.608,12,1.058,13,0.767,17,0.619,18,2.996,19,1.393,21,1.244,25,1.47,30,0.889,31,0.032,32,0.648,33,0.669,34,1.119,37,0.926,38,0.63,40,0.238,41,0.181,42,0.268,43,0.665,44,1.213,45,0.665,47,1.324,50,1.652,53,0.016,54,0.016,55,0.17,56,0.483,57,0.671,58,0.671,59,0.671,63,1.119,64,1.685,65,1.25,66,0.442,67,0.792,68,0.931,70,0.931,72,0.238,73,0.553,76,1.461,78,1.652,79,3.32,81,1.203,86,2.485,88,2.485,90,2.485,91,1.244,92,0.553,100,1.393,101,2.486,102,2.21,103,2.28,104,0.97,105,2.485,107,2.485,108,2.485,111,0.571,114,2.485,115,3.879,117,2.953,120,1.093,125,1.284,126,2.485,128,1.991,129,2.471,130,1.583,131,1.349,132,2.485,133,1.808,134,2.985,135,1.991,136,4.159,140,0.671,142,1.185,144,0.619,149,0.788,150,1.808,151,2.852,158,1.932,159,0.671,166,0.526,167,0.727,176,1.324,177,0.97,185,3.739,186,2.985,187,1.674,193,0.927,201,1.897,202,1.897,203,2.852,205,1.653,206,1.653,207,1.653,208,2.485,209,1.653,210,1.47,211,1.47,218,2.485,219,1.653,220,1.653,221,1.653,222,1.653,224,1.324,225,1.324,226,1.203,227,2.485,229,0.571,230,1.009,231,0.931,232,1.349,233,0.671,234,1.009,235,0.483,236,0.671,237,0.526,238,0.671,239,0.483,240,0.671,241,0.483,242,0.671,243,0.526,244,1.009,245,0.665,246,1.292,247,0.671,248,0.483,249,0.726,250,0.483,251,0.97,252,0.671,253,0.483,254,1.056,255,0.671,256,0.483,257,0.671,258,0.483,259,0.671,260,0.526,261,0.671,262,0.483,263,0.671,264,0.483,265,0.671,270,2.953,273,2.416,275,2.173,291,2.579,316,1.203,317,1.653,331,1.653,339,1.008,368,1.515,374,2.485,378,2.416,397,1.515,412,1.985,426,1.515,427,1.808,510,1.653,513,2.823,525,2.985,526,1.47,527,2.655,544,0.927,550,3.332,557,1.652,559,2.852,573,1.897,583,3.32,617,1.897,618,1.324,639,2.953,658,2.485,700,1.47,702,2.655,704,2.655,780,2.66,806,3.811,847,3.32,891,1.897,892,3.41,893,3.41,894,4.557,895,4.557,896,4.557,897,3.811,898,2.269,899,5.132,900,3.41,901,2.269,902,2.269,903,2.269,904,2.269,905,2.269,906,3.41,907,1.515,908,3.41,909,2.852,910,3.41,911,2.852,912,2.269,913,2.269,914,2.269,915,2.269,916,2.485,917,2.269,918,2.269,919,2.269,920,3.41,921,2.269,922,2.269,923,4.098,924,2.269,925,2.269,926,2.269,927,2.269,928,2.269,929,2.269,930,2.269,931,2.269,932,2.269,933,2.269,934,1.653,935,1.897,936,1.653,937,1.653,938,1.897,939,2.269]],["title/components/MainComponent.html",[55,0.112,253,0.684]],["body/components/MainComponent.html",[2,0.347,3,0.325,4,0.23,6,1.024,7,0.605,9,0.91,13,0.676,21,1.395,31,0.032,37,0.66,38,0.482,40,0.427,41,0.325,42,0.482,43,0.996,53,0.024,54,0.024,55,0.21,56,0.866,57,1.204,58,1.204,59,1.204,63,1.525,64,1.809,65,1.367,66,0.794,67,0.66,68,1.395,70,1.395,72,0.427,91,1.6,92,0.906,104,0.866,111,1.024,229,1.024,230,1.512,231,1.395,232,1.734,233,1.204,234,1.512,235,0.866,236,1.204,237,0.943,238,1.204,239,0.866,240,1.204,241,0.866,242,1.204,243,0.943,244,1.512,245,0.794,246,1.024,247,1.204,248,0.866,249,1.087,250,0.866,251,0.866,252,1.204,253,1.247,254,1.357,255,1.204,256,0.866,257,1.204,258,0.866,259,1.204,260,0.943,261,1.204,262,0.866,263,1.204,264,0.866,265,1.204,520,1.305,647,1.413,648,1.971,940,3.403,941,5.11,942,5.11,943,5.11,944,4.069,945,4.069]],["title/interfaces/Notification.html",[364,1.03,642,1.556]],["body/interfaces/Notification.html",[2,0.271,3,0.318,4,0.225,12,1.132,24,3.228,31,0.032,32,0.745,33,0.914,36,1.383,37,0.897,38,0.471,40,0.418,41,0.402,42,0.471,45,0.983,50,2.441,53,0.024,54,0.024,66,0.776,72,0.581,73,0.817,92,0.645,96,1.087,130,2.019,133,2.111,149,1.383,160,1.864,177,0.847,187,1.627,267,2.324,364,1.616,520,1.276,523,1.492,529,2.58,557,1.928,642,2.904,647,1.383,713,2.815,850,2.58,907,1.768,946,2.9,947,3.33,948,4.215,949,3.33,950,3.33,951,2.9,952,2.9,953,2.9,954,2.9,955,3.33,956,3.33,957,3.33,958,2.9,959,4.215,960,3.33,961,3.33,962,3.33,963,3.33,964,3.33,965,3.33,966,3.33,967,3.33,968,3.33,969,3.33,970,4.215,971,2.9,972,3.33,973,4.625,974,3.33,975,2.9,976,3.33,977,2.9,978,3.33,979,3.33,980,3.33]],["title/components/NotificationsComponent.html",[55,0.112,256,0.684]],["body/components/NotificationsComponent.html",[2,0.363,3,0.256,4,0.181,6,0.806,7,0.632,9,0.778,13,0.763,19,1.784,21,1.192,30,0.852,31,0.032,32,0.632,33,0.847,35,1.308,37,0.708,38,0.682,40,0.336,41,0.256,42,0.379,43,0.852,45,0.624,53,0.021,54,0.021,55,0.194,56,0.681,57,0.948,58,0.948,59,0.948,63,1.357,64,1.763,65,1.334,66,0.624,67,0.519,68,1.192,70,1.192,72,0.336,73,0.708,74,2.01,75,1.871,91,1.458,92,0.708,94,1.778,95,2.05,96,1.611,102,3.459,104,1.058,111,0.806,128,1.869,133,2.315,140,0.948,144,1.357,149,1.517,165,1.205,168,1.205,169,1.308,170,1.205,171,1.205,172,0.874,173,0.948,174,0.874,175,0.948,177,1.058,180,1.4,183,1.517,184,1.644,187,1.784,229,0.806,230,1.292,231,1.192,232,1.58,233,0.948,234,1.292,235,0.681,236,0.948,237,0.742,238,0.948,239,0.681,240,0.948,241,0.681,242,0.948,243,0.742,244,1.292,245,0.624,246,0.806,247,0.948,248,0.681,249,0.929,250,0.681,251,0.681,252,0.948,253,0.681,254,1.012,255,0.948,256,1.136,257,0.948,258,0.681,259,0.948,260,0.742,261,0.948,262,0.681,263,0.948,264,0.681,265,0.948,520,1.026,546,3.652,642,2.909,647,1.112,651,2.83,652,3.181,655,2.332,824,3.652,850,3.459,907,1.94,951,3.181,952,4.07,953,4.376,954,3.181,971,2.332,981,2.678,982,4.367,983,4.367,984,3.202,985,4.367,986,3.202,987,3.202,988,3.202,989,2.678,990,3.202,991,2.678,992,3.202,993,3.202,994,3.202,995,3.202,996,4.367,997,3.181,998,4.367,999,4.367]],["title/injectables/NotificationsService.html",[96,0.877,523,0.951]],["body/injectables/NotificationsService.html",[2,0.256,3,0.3,4,0.213,7,0.575,9,0.866,12,0.959,13,0.798,24,2.196,30,0.948,31,0.032,32,0.637,33,0.836,36,1.688,37,0.979,38,0.445,40,0.395,41,0.388,42,0.445,45,0.948,50,2.354,53,0.023,54,0.023,66,1.11,72,0.565,73,0.788,92,0.873,96,1.327,104,1.034,130,1.307,133,2.577,149,1.688,160,1.206,177,1.146,187,1.537,267,2.196,364,1.206,520,1.206,523,1.594,529,2.438,557,1.822,642,3.046,647,1.307,713,1.822,850,3.15,907,2.159,946,2.741,947,4.76,948,4.065,949,4.065,950,3.146,951,4.147,952,3.541,953,3.541,954,3.541,955,3.146,956,3.146,957,3.146,958,3.541,959,4.76,960,4.065,961,4.065,962,4.065,963,4.065,964,4.76,965,3.146,966,3.146,967,3.146,968,3.146,969,3.146,970,4.065,971,2.741,972,3.146,973,4.504,974,3.146,975,2.741,976,3.146,977,2.741,978,3.146,979,3.146,980,3.146,989,3.146,1000,4.861,1001,4.861,1002,3.762,1003,3.762,1004,3.762,1005,3.762,1006,3.762,1007,3.762]],["title/components/OrganizationComponent.html",[55,0.112,258,0.684]],["body/components/OrganizationComponent.html",[2,0.36,3,0.162,4,0.115,6,0.512,7,0.643,9,0.559,12,1.056,13,0.784,17,0.857,21,0.857,30,0.747,31,0.032,32,0.678,33,0.563,36,1.617,37,0.754,38,0.678,40,0.214,41,0.162,42,0.241,43,0.612,45,0.959,53,0.018,54,0.015,55,0.202,56,0.668,57,0.602,58,0.602,59,0.602,61,1.318,63,1.046,64,1.666,65,1.181,66,1.032,67,1.036,68,0.857,70,0.857,72,0.214,73,0.509,74,1.81,76,1.381,78,1.52,80,2.277,83,1.831,84,1.187,85,2.791,91,1.176,92,0.509,94,1.567,95,1.839,96,1.4,100,1.901,103,1.394,104,0.99,111,0.964,112,2.607,120,1.492,125,1.622,129,1.282,130,1.09,131,0.602,135,1.831,140,0.602,141,2.236,142,1.496,143,2.236,144,1.046,146,1.282,149,1.331,150,2.607,158,2.089,159,1.517,160,1.006,165,0.766,166,0.471,167,0.652,168,0.766,169,0.831,170,0.766,171,0.766,172,0.555,173,0.602,174,0.555,175,0.602,177,1.047,179,1.852,180,1.228,182,0.831,183,0.706,184,1.181,187,1.282,193,1.565,195,3.602,224,1.187,229,0.512,230,0.929,231,0.857,232,1.275,233,0.602,234,0.929,235,0.433,236,0.602,237,0.471,238,0.602,239,0.433,240,0.602,241,0.433,242,0.602,243,0.471,244,0.929,245,0.397,246,0.512,247,0.602,248,0.433,249,1.127,250,0.668,251,0.433,252,0.602,253,0.433,254,0.727,255,0.602,256,0.433,257,0.602,258,0.917,259,0.602,260,0.471,261,0.602,262,0.433,263,0.602,264,0.668,265,0.602,270,2.791,271,1.078,272,1.481,273,2.283,275,1.663,292,2.086,339,0.903,340,1.318,341,1.701,346,2.286,347,1.187,351,1.481,352,1.481,378,1.663,393,3.602,397,2.185,412,1.855,423,1.663,426,1.702,427,1.663,444,1.078,445,3.602,467,2.467,513,2.717,520,0.652,533,3.138,594,1.831,647,0.706,648,0.985,663,1.481,706,2.286,762,1.701,771,1.831,780,2.871,807,3.187,810,2.483,907,1.394,916,2.286,934,2.791,936,2.791,937,2.791,1008,1.701,1009,3.138,1010,3.138,1011,4.307,1012,4.427,1013,5.294,1014,4.918,1015,2.624,1016,3.138,1017,4.307,1018,3.204,1019,3.138,1020,2.033,1021,2.033,1022,3.138,1023,2.033,1024,3.138,1025,2.033,1026,2.033,1027,3.39,1028,2.033,1029,2.033,1030,2.033,1031,2.033,1032,2.033,1033,3.957,1034,2.033,1035,3.138,1036,2.033,1037,2.033,1038,4.307,1039,2.033,1040,3.831,1041,4.307,1042,3.138,1043,2.624,1044,1.701,1045,2.033,1046,1.701,1047,4.307,1048,2.033,1049,3.138,1050,3.138,1051,4.307,1052,4.307,1053,2.033,1054,2.033,1055,2.033,1056,1.701,1057,1.701,1058,2.033,1059,2.033,1060,2.033,1061,2.033,1062,3.138,1063,2.286,1064,2.033,1065,3.138,1066,2.033,1067,3.138,1068,3.138,1069,3.138]],["title/components/SidebarComponent.html",[55,0.112,262,0.684]],["body/components/SidebarComponent.html",[2,0.314,3,0.186,4,0.132,6,0.588,7,0.699,9,0.621,12,1.098,13,0.79,21,0.952,30,0.68,31,0.032,32,0.654,33,0.512,37,0.802,38,0.691,40,0.245,41,0.186,42,0.276,43,0.68,45,0.902,53,0.017,54,0.017,55,0.187,56,0.497,57,0.691,58,0.691,59,0.691,63,1.139,64,1.701,65,1.258,66,0.455,67,0.916,68,0.952,70,0.952,72,0.245,73,0.565,74,1.871,76,1.482,78,2.676,80,2.455,83,1.363,84,1.363,91,1.263,92,0.565,94,1.591,95,1.919,100,1.424,104,1.053,111,0.588,112,2.93,120,0.749,125,1.741,128,1.363,131,0.691,135,2.034,140,1.234,141,1.363,142,0.811,143,1.363,144,0.638,146,1.889,149,1.211,150,2.751,158,2.08,159,1.234,160,1.117,165,0.879,166,0.541,167,0.749,168,0.879,169,0.954,170,0.879,172,0.638,173,0.691,174,0.638,175,0.691,177,0.984,179,1.862,180,1.337,182,0.954,183,0.811,184,1.312,193,0.954,229,0.588,230,1.031,231,0.952,232,1.368,233,0.691,234,1.031,235,0.497,236,0.691,237,0.541,238,0.691,239,0.497,240,0.691,241,0.497,242,0.691,243,0.541,244,1.031,245,0.68,246,1.306,247,0.691,248,0.497,249,1.104,250,0.742,251,0.497,252,0.691,253,0.497,254,1.202,255,0.691,256,0.497,257,0.691,258,0.497,259,0.691,260,0.541,261,0.691,262,0.984,263,0.691,264,0.497,265,0.691,270,2.996,271,1.238,273,2.451,275,2.21,291,2.239,292,2.239,316,1.238,317,1.701,331,1.701,339,1.037,346,1.701,347,1.363,351,1.701,352,1.701,368,1.548,378,1.848,397,2.305,426,1.852,444,2.21,467,2.21,513,2.85,520,0.749,533,2.539,544,1.424,550,2.034,551,3.362,594,3.45,639,2.996,641,2.622,643,2.699,647,0.811,648,1.131,673,1.701,771,2.034,780,3.028,807,2.258,810,1.513,847,2.539,860,2.915,897,3.867,909,3.487,916,2.539,934,2.539,935,1.953,936,2.539,937,2.539,938,1.953,991,1.953,1015,3.867,1018,3.487,1027,3.368,1043,1.953,1044,1.953,1046,1.953,1056,1.953,1057,1.953,1070,1.953,1071,3.485,1072,3.485,1073,3.485,1074,2.335,1075,3.485,1076,2.335,1077,3.485,1078,3.485,1079,2.335,1080,2.335,1081,2.335,1082,3.485,1083,2.335,1084,2.335,1085,2.335,1086,2.335,1087,2.335,1088,2.335,1089,2.335,1090,4.169,1091,3.487,1092,4.169,1093,2.335,1094,3.485,1095,2.335,1096,2.335,1097,2.335,1098,2.335,1099,2.335,1100,2.335,1101,2.915,1102,3.485,1103,3.485]],["title/pipes/TruncatePipe.html",[0,1.704,290,1.876]],["body/pipes/TruncatePipe.html",[0,3.064,2,0.299,3,0.351,4,0.248,6,1.105,7,0.684,9,0.782,10,3.199,11,4.48,12,1.132,13,0.581,15,4.48,22,5.16,30,0.856,31,0.032,32,0.52,33,0.645,34,1.199,35,2.459,36,1.861,37,0.937,38,0.52,39,4.48,40,0.461,41,0.351,42,0.52,43,0.856,44,1.3,45,0.856,52,3.672,53,0.025,54,0.025,66,1.045,153,3.902,290,3.513,865,4.48,1104,3.672,1105,5.356,1106,4.391,1107,5.356,1108,5.356,1109,5.356,1110,5.356,1111,5.356,1112,5.356,1113,5.356,1114,4.48,1115,4.391,1116,4.391]],["title/injectables/UpdateEventsService.html",[292,1.556,523,0.951]],["body/injectables/UpdateEventsService.html",[2,0.325,3,0.382,4,0.27,13,0.746,17,1.54,31,0.032,35,1.954,38,0.667,40,0.502,41,0.382,42,0.566,53,0.027,54,0.027,72,0.502,73,0.914,92,0.972,140,1.416,267,2.792,292,2.731,523,1.775,524,3.1,529,3.1,1117,5.015,1118,4.001,1119,6.192,1120,5.639,1121,5.996]],["title/components/UserInfoComponent.html",[55,0.112,264,0.684]],["body/components/UserInfoComponent.html",[2,0.333,3,0.182,4,0.129,6,0.575,7,0.65,9,0.611,12,1.129,13,0.807,21,0.936,30,0.669,31,0.032,32,0.696,33,0.503,37,0.834,38,0.665,40,0.24,41,0.182,42,0.27,43,0.669,44,0.676,45,0.802,53,0.016,54,0.016,55,0.186,56,0.486,57,0.676,58,0.676,59,0.676,63,1.124,64,1.696,65,1.217,66,0.445,67,1.02,68,0.936,70,0.936,72,0.24,73,0.556,74,1.862,75,1.549,76,1.926,80,2.177,81,2.829,83,2.669,91,1.249,92,0.556,93,1.211,94,1.625,95,1.907,96,1.457,104,0.876,111,1.413,112,3.032,120,1.319,125,1.722,129,0.933,130,1.191,131,0.676,140,1.015,141,1.333,142,1.191,143,1.333,144,0.936,146,1.401,149,0.793,150,2.424,158,1.722,159,1.015,160,1.099,165,0.86,166,0.529,168,0.86,169,0.933,170,0.86,171,0.86,172,0.624,173,0.676,174,0.624,175,0.676,177,0.973,179,1.549,180,1.319,182,0.933,183,0.793,184,1.291,193,0.933,197,2.001,200,1.333,214,2.867,216,2.221,223,1.106,224,2.001,225,2.001,226,1.818,229,0.575,230,1.015,231,0.936,232,1.353,233,0.676,234,1.015,235,0.486,236,0.676,237,0.529,238,0.676,239,0.486,240,0.676,241,0.73,242,0.676,243,0.529,244,1.015,245,0.445,246,0.575,247,0.676,248,0.486,249,1.095,250,0.486,251,0.486,252,0.676,253,0.486,254,0.794,255,0.676,256,0.486,257,0.676,258,0.486,259,0.676,260,0.529,261,0.676,262,0.486,263,0.676,264,0.973,265,0.676,271,2.91,273,2.424,275,2.182,279,1.333,340,3.98,353,1.333,354,1.664,381,1.664,382,2.867,383,2.867,397,1.523,412,1.106,420,1.911,426,1.523,435,1.911,436,2.498,442,1.664,444,1.818,446,1.911,467,1.818,520,0.732,594,3.004,613,3.57,618,1.333,647,0.793,648,1.106,675,1.664,710,2.001,713,1.66,714,2.001,758,3.825,763,2.867,765,3.825,769,2.867,771,2.001,772,2.867,780,2.001,786,2.867,801,1.911,807,2.221,808,1.911,809,1.911,810,1.48,811,1.911,907,2.031,1012,3.825,1064,2.963,1091,1.911,1101,2.867,1114,3.825,1122,5.136,1123,5.146,1124,5.146,1125,4.573,1126,3.428,1127,2.284,1128,2.284,1129,3.428,1130,5.337,1131,2.284,1132,2.284,1133,2.284,1134,2.284,1135,2.284,1136,2.284,1137,2.284,1138,2.284,1139,2.284,1140,2.284,1141,3.428,1142,1.911,1143,1.911,1144,2.284,1145,2.284,1146,3.428,1147,2.284,1148,2.284]],["title/changelog.html",[1066,1.741,1149,1.958,1150,2.687]],["body/changelog.html",[2,0.444,16,2.63,17,1.486,31,0.026,36,2.109,53,0.026,54,0.026,65,1.323,67,0.73,101,2.182,159,1.73,166,1.044,249,0.959,254,1.044,305,3.525,307,3.176,368,2.001,369,2.63,397,2.761,427,3.099,463,3.964,544,2.223,551,2.919,629,2.761,641,2.389,643,2.63,907,2.596,997,4.423,1033,3.282,1063,3.282,1064,3.525,1151,4.505,1152,3.768,1153,3.768,1154,3.768,1155,3.768,1156,5.077,1157,3.768,1158,4.888,1159,3.768,1160,3.768,1161,4.55,1162,3.768,1163,3.768,1164,3.768,1165,4.55,1166,3.768]],["title/coverage.html",[1167,3.661]],["body/coverage.html",[0,2.332,1,1.889,4,0.183,5,2.707,17,0.884,31,0.032,32,0.383,53,0.021,54,0.021,55,0.223,56,0.689,60,2.707,61,2.097,62,3.205,74,1.038,84,1.889,94,0.958,95,1.124,96,0.884,172,0.884,174,0.884,187,2.61,235,0.689,237,0.75,239,0.689,241,0.689,243,0.75,245,0.631,248,0.689,250,0.689,251,0.689,253,0.689,256,0.689,258,0.689,260,0.75,262,0.689,264,0.689,266,2.707,290,1.889,291,1.568,292,1.568,310,2.097,313,2.707,316,2.65,340,2.097,343,2.358,347,1.889,348,2.358,353,1.889,364,1.798,365,2.358,366,2.707,367,2.707,380,2.707,381,3.205,441,2.707,497,3.679,498,5.451,523,1.712,528,2.707,545,2.707,557,2.131,588,2.707,589,2.707,629,1.438,630,2.707,636,2.097,637,3.641,638,3.641,640,2.358,642,1.568,733,3.205,734,2.707,817,2.707,818,2.707,891,2.707,940,2.707,946,3.205,981,2.707,1008,2.707,1070,2.707,1104,2.707,1117,2.707,1118,2.707,1122,2.707,1142,2.707,1143,2.707,1167,2.707,1168,2.707,1169,3.237,1170,3.237,1171,3.237,1172,3.237,1173,3.237,1174,3.237,1175,6.174,1176,3.237,1177,3.237,1178,3.237,1179,3.237,1180,3.237,1181,4.998,1182,3.237,1183,3.237,1184,3.237,1185,3.237,1186,3.237,1187,3.237,1188,4.998,1189,4.4,1190,3.237,1191,3.237,1192,3.237,1193,3.237,1194,6.388,1195,6.388,1196,3.237,1197,3.237,1198,3.237,1199,3.237,1200,3.237,1201,3.237,1202,3.237,1203,3.237,1204,3.237,1205,3.237,1206,4.4,1207,3.237,1208,3.237,1209,3.237,1210,3.237,1211,3.237,1212,3.237,1213,3.237,1214,3.237,1215,3.237,1216,4.4,1217,3.237,1218,3.237,1219,3.237,1220,3.237,1221,3.237,1222,3.237,1223,3.237,1224,3.237,1225,3.237,1226,3.237,1227,3.237,1228,3.237,1229,3.237,1230,6.357,1231,3.237,1232,3.237,1233,3.237,1234,3.237,1235,3.237,1236,3.237,1237,3.237,1238,3.237,1239,3.237,1240,3.237,1241,3.679,1242,3.679,1243,3.679,1244,3.237,1245,3.237]],["title/dependencies.html",[282,2.255,1246,2.247]],["body/dependencies.html",[31,0.032,40,0.479,53,0.026,54,0.026,166,1.057,167,1.757,176,2.662,282,2.662,299,4.584,300,3.993,304,4.584,305,2.956,307,2.662,337,3.815,339,2.026,440,3.815,524,2.956,526,2.956,527,3.552,1247,4.561,1248,6.501,1249,4.561,1250,4.561,1251,4.561,1252,4.561,1253,4.561,1254,4.561,1255,4.561,1256,4.561,1257,4.561,1258,5.481,1259,4.561,1260,4.561,1261,4.561,1262,4.561,1263,4.561,1264,4.561,1265,4.561,1266,4.561,1267,4.561,1268,4.561,1269,4.561,1270,4.561,1271,5.481,1272,4.561,1273,4.561,1274,4.561]],["title/miscellaneous/functions.html",[557,1.871,1275,2.247]],["body/miscellaneous/functions.html",[31,0.028,53,0.028,54,0.028,72,0.536,557,2.474,1241,4.271,1242,5.431,1243,4.271,1275,4.271,1276,5.107,1277,5.107]],["title/index.html",[72,0.282,1066,1.741,1149,1.958]],["body/index.html",[2,0.427,3,0.285,4,0.265,7,0.422,17,1.433,31,0.022,36,1.937,53,0.022,54,0.022,55,0.183,65,1.266,67,0.578,101,1.727,111,1.182,120,1.505,129,1.457,131,1.055,159,1.553,166,1.216,167,1.143,210,2.311,226,1.891,249,0.759,254,1.216,282,2.082,295,2.082,305,3.042,307,3.063,368,1.584,369,2.082,397,2.574,423,1.891,427,2.782,463,3.823,523,1.055,544,1.918,551,2.311,583,2.598,629,2.574,641,1.891,643,2.082,712,4.062,777,2.983,826,4.389,857,2.983,864,2.983,907,2.331,911,2.983,958,4.221,977,4.614,997,4.062,1027,3.42,1033,2.598,1063,2.598,1064,3.042,1152,2.983,1153,3.926,1154,2.983,1155,3.926,1156,4.663,1157,2.983,1158,4.389,1159,2.983,1160,2.983,1161,3.926,1162,2.983,1163,2.983,1164,2.983,1165,3.926,1166,2.983,1168,4.663,1246,2.983,1278,3.566,1279,3.566,1280,2.983,1281,3.566,1282,3.566,1283,3.566,1284,3.566,1285,3.566,1286,4.694,1287,3.566,1288,3.566,1289,3.566,1290,3.566,1291,4.694,1292,3.566,1293,4.694,1294,3.566,1295,4.694,1296,3.566,1297,4.694,1298,3.566,1299,3.566,1300,4.694,1301,3.566,1302,3.566,1303,5.248,1304,3.566,1305,5.576,1306,3.566,1307,5.248,1308,3.566,1309,4.694,1310,3.566,1311,3.566,1312,4.694,1313,4.694,1314,6.064,1315,5.949,1316,4.694,1317,3.566,1318,3.566,1319,3.566,1320,3.566,1321,3.566,1322,3.566,1323,4.663,1324,3.566,1325,5.576,1326,3.566,1327,3.566,1328,3.566,1329,3.566,1330,3.566,1331,3.566,1332,4.694,1333,4.694,1334,3.566,1335,3.566,1336,3.566,1337,4.694,1338,3.566,1339,3.566,1340,2.983,1341,3.566,1342,3.566,1343,3.566,1344,3.566,1345,5.248,1346,3.566,1347,3.566]],["title/license.html",[1066,1.741,1149,1.958,1348,2.247]],["body/license.html",[4,0.273,31,0.027,53,0.027,54,0.027,131,1.43,254,1.119,368,2.146,869,4.04,1280,4.04,1323,4.04,1340,4.04,1348,5.455,1349,4.831,1350,4.831,1351,6.02,1352,4.831,1353,4.831,1354,4.831,1355,4.831,1356,4.831,1357,4.831,1358,4.831,1359,4.831,1360,4.831,1361,4.831,1362,4.831,1363,4.831,1364,5.671,1365,4.831,1366,4.831,1367,4.831,1368,4.831,1369,4.831,1370,4.831,1371,4.831,1372,4.831,1373,4.831,1374,4.831,1375,4.831]],["title/modules.html",[280,2.555]],["body/modules.html",[31,0.028,53,0.028,54,0.028,280,3.018,281,3.35,300,3.767,872,4.324,1376,5.17,1377,5.17]],["title/overview.html",[1378,3.661]],["body/overview.html",[0,2.131,1,3.242,31,0.032,41,0.321,47,2.346,50,2.456,53,0.024,54,0.024,55,0.14,56,1.182,94,1.644,167,1.289,211,2.604,229,1.012,235,1.327,237,1.287,239,1.182,241,1.182,243,1.287,245,1.083,248,1.182,250,1.182,251,1.327,253,1.182,256,1.182,258,1.182,260,1.287,262,1.182,264,1.182,280,2.959,281,4.382,282,2.346,283,3.361,284,3.361,285,3.361,286,3.361,287,3.361,288,3.361,289,3.361,290,3.242,291,2.69,292,2.69,293,4.24,294,3.361,295,2.346,364,1.289,507,2.928,523,1.19,975,2.928,1378,3.361,1379,4.019]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":187,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":978,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":979,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":50,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["1/1",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":714,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["1027",{"_index":1295,"title":{},"body":{"index.html":{}}}],["1080",{"_index":1298,"title":{},"body":{"index.html":{}}}],["11/22",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["1200",{"_index":1299,"title":{},"body":{"index.html":{}}}],["1280",{"_index":1286,"title":{},"body":{"index.html":{}}}],["13",{"_index":1115,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["1366",{"_index":1289,"title":{},"body":{"index.html":{}}}],["1440",{"_index":1291,"title":{},"body":{"index.html":{}}}],["16",{"_index":975,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["1613",{"_index":1293,"title":{},"body":{"index.html":{}}}],["1680",{"_index":1296,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["1800",{"_index":1301,"title":{},"body":{"index.html":{}}}],["1920",{"_index":1297,"title":{},"body":{"index.html":{}}}],["2",{"_index":47,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1353,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1359,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":828,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["201",{"_index":831,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1350,"title":{},"body":{"license.html":{}}}],["22/25",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["24/41",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["24/44",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":458,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["2560",{"_index":1300,"title":{},"body":{"index.html":{}}}],["3.0.1",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":834,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["33",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":457,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["36",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["4.1.3",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":838,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":844,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":848,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":854,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":858,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["4xxx",{"_index":967,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":871,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":874,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":879,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":882,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":886,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["52",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":211,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["6.1.10",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["6c86f7",{"_index":461,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["7",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["720",{"_index":1287,"title":{},"body":{"index.html":{}}}],["75",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":1290,"title":{},"body":{"index.html":{}}}],["8",{"_index":46,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["8/14",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1288,"title":{},"body":{"index.html":{}}}],["81",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["9/16",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["9/19",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1292,"title":{},"body":{"index.html":{}}}],["917",{"_index":1294,"title":{},"body":{"index.html":{}}}],["_notif",{"_index":947,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["abbrevi",{"_index":8,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["abbreviatepip",{"_index":1,"title":{"pipes/AbbreviatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["abbstr",{"_index":48,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["access",{"_index":541,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":1000,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":876,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1064,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":265,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":1067,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["add(notificationinst",{"_index":949,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":205,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["adduser(form",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addusercompon",{"_index":56,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["agre",{"_index":1361,"title":{},"body":{"license.html":{}}}],["alert",{"_index":952,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert('unauthor",{"_index":543,"title":{},"body":{"guards/AuthGuard.html":{}}}],["alert.messag",{"_index":999,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":1305,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["apach",{"_index":1352,"title":{},"body":{"license.html":{}}}],["api_url",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.compon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["app_descriptor_id",{"_index":370,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["app_instance_id",{"_index":371,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["appcompon",{"_index":235,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":1164,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["applic",{"_index":368,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["applicationinst",{"_index":365,"title":{"interfaces/ApplicationInstance.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["applications'},{'nam",{"_index":238,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications/applications.compon",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":237,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":281,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appsinfocompon",{"_index":239,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":18,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["array.foreach(el",{"_index":219,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostr",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostring(array",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["artifact",{"_index":1326,"title":{},"body":{"index.html":{}}}],["assest",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["assign",{"_index":430,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["auth",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":508,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":291,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autocent",{"_index":384,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["autom",{"_index":1339,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1319,"title":{},"body":{"index.html":{}}}],["autozoom",{"_index":385,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["avail",{"_index":423,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["availablecomponents.addus",{"_index":680,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":668,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":666,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":678,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":671,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":669,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":672,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":676,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":674,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["avoid",{"_index":466,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["backdrop",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["backendservic",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["base",{"_index":1166,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["basi",{"_index":1365,"title":{},"body":{"license.html":{}}}],["befor",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["between",{"_index":777,"title":{},"body":{"components/EditUserComponent.html":{},"index.html":{}}}],["bitwis",{"_index":972,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["brand",{"_index":1152,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["breadcrumb",{"_index":1163,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["break",{"_index":704,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1377,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bspasswordmodalref",{"_index":758,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["build",{"_index":1325,"title":{},"body":{"index.html":{}}}],["button",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["buttonchangepassword",{"_index":1123,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1124,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":772,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":970,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capit",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["card",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{}}}],["carousel",{"_index":1159,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["carouselmodul",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":702,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["certain",{"_index":1110,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["chang",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["changeal",{"_index":718,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["changeall(newvalu",{"_index":682,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["changelog",{"_index":1150,"title":{"changelog.html":{}},"body":{}}],["changelog.md",{"_index":1282,"title":{},"body":{"index.html":{}}}],["changepasswordcompon",{"_index":241,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changerol",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changesonuserlist",{"_index":1119,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":25,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["chart",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["check",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkformfield",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkformfields(form",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkuserrol",{"_index":763,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":769,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":42,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":996,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clean",{"_index":1077,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1307,"title":{},"body":{"index.html":{}}}],["click",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["clone",{"_index":1310,"title":{},"body":{"index.html":{}}}],["close",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster",{"_index":629,"title":{"interfaces/Cluster.html":{}},"body":{"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cluster'},{'nam",{"_index":244,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":736,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":735,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":734,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":747,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":752,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":750,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":751,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":749,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":742,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":748,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":744,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":746,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:82",{"_index":743,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster_appmodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_id",{"_index":631,"title":{},"body":{"interfaces/Cluster.html":{}}}],["cluster_type_nam",{"_index":632,"title":{},"body":{"interfaces/Cluster.html":{}}}],["clustercompon",{"_index":243,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdescript",{"_index":737,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterid",{"_index":738,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusternam",{"_index":739,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":740,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1321,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":386,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["command",{"_index":1306,"title":{},"body":{"index.html":{}}}],["commun",{"_index":884,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":856,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1355,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1337,"title":{},"body":{"index.html":{}}}],["compon",{"_index":55,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.mock",{"_index":684,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["component_templ",{"_index":233,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":636,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":703,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":701,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":869,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{}}}],["configur",{"_index":494,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["configuration_opt",{"_index":372,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["confirm",{"_index":214,"title":{},"body":{"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["confirm('delet",{"_index":1147,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":199,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["confirmnewpassword",{"_index":592,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["conflict",{"_index":857,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["console.log('bad",{"_index":839,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":855,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":832,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":849,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":883,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":859,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":866,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":835,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":887,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":851,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":829,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":705,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":880,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":845,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":890,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":45,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":1074,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":984,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":19,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["control",{"_index":730,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1357,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1349,"title":{},"body":{"license.html":{}}}],["core",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":1167,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":16,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"changelog.html":{}}}],["credenti",{"_index":847,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":771,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["curv",{"_index":387,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["d3",{"_index":440,"title":{},"body":{"components/AppsInfoComponent.html":{},"dependencies.html":{}}}],["data",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["debug",{"_index":246,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":245,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["defin",{"_index":13,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definit",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["definitions/const/loc",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":1130,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteconfirm",{"_index":1146,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":1125,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["depend",{"_index":282,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1165,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["descript",{"_index":34,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/TruncatePipe.html":{}}}],["descriptor",{"_index":489,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["design",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":1317,"title":{},"body":{"index.html":{}}}],["develop",{"_index":226,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["dialog",{"_index":436,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":231,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1324,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1313,"title":{},"body":{"index.html":{}}}],["discard",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":953,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":989,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":707,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1327,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1364,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1103,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1168,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":460,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["draggingen",{"_index":388,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["due",{"_index":841,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":249,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["editclust",{"_index":646,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["editclustercompon",{"_index":248,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":250,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":21,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["element.tolowercas",{"_index":220,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ellipsi",{"_index":1111,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["email",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["email/id",{"_index":1141,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["enablezoom",{"_index":389,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["encount",{"_index":867,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["end",{"_index":1112,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["endpoint",{"_index":506,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["entrycompon",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":497,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["environment_vari",{"_index":373,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["error",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["error.error",{"_index":617,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error.error.messag",{"_index":618,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["error.error.message.charat(0).touppercas",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.message.slice(1",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statu",{"_index":827,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":310,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errorrespons",{"_index":1060,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["errorresponse.error.messag",{"_index":1061,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event",{"_index":716,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["eventemitt",{"_index":991,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1118,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1120,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1354,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1334,"title":{},"body":{"index.html":{}}}],["expiraci",{"_index":537,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":41,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1369,"title":{},"body":{"license.html":{}}}],["f",{"_index":783,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["featur",{"_index":1279,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":853,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["first",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["flag",{"_index":1329,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1341,"title":{},"body":{"index.html":{}}}],["form",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{}}}],["form.controls.confirmnewpassword.valu",{"_index":626,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.email.errors.email",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.controls.email.errors.pattern",{"_index":204,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.email.errors.requir",{"_index":202,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.email.invalid",{"_index":201,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.newpassword.errors.minlength",{"_index":623,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.errors.requir",{"_index":621,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.invalid",{"_index":620,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.valu",{"_index":625,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.password.errors.minlength",{"_index":209,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.errors.requir",{"_index":207,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.invalid",{"_index":206,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.valu",{"_index":212,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.passwordconfirm.valu",{"_index":213,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.dirti",{"_index":198,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.value.email",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.newpassword",{"_index":615,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.value.password",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["format",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(error",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(errormessages).msg",{"_index":227,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formbuild",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formgroupdirect",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":862,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":852,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["frontend",{"_index":1154,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfil",{"_index":833,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":557,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1344,"title":{},"body":{"index.html":{}}}],["gain",{"_index":888,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":875,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":877,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":958,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":1149,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getbaseurl",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnotif",{"_index":1006,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getroleid",{"_index":764,"title":{},"body":{"components/EditUserComponent.html":{}}}],["getroleid(rol",{"_index":774,"title":{},"body":{"components/EditUserComponent.html":{}}}],["given",{"_index":837,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1346,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1373,"title":{},"body":{"license.html":{}}}],["graph",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphdata",{"_index":390,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["grapho",{"_index":411,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group",{"_index":374,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/LoginComponent.html":{}}}],["group.nam",{"_index":505,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group_work",{"_index":1102,"title":{},"body":{"components/SidebarComponent.html":{}}}],["grpah",{"_index":429,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["guard",{"_index":507,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":962,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":873,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":819,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":821,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":824,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":818,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":823,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":820,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["height",{"_index":391,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["help",{"_index":1345,"title":{},"body":{"index.html":{}}}],["helper",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":230,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1342,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1318,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1358,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":822,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1308,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":961,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1304,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["id=\"alert",{"_index":998,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identifi",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["ignorebackdropclick",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["implement",{"_index":43,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1370,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":72,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["indic",{"_index":1156,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["info'},{'nam",{"_index":240,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":383,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":382,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":381,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:106",{"_index":402,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:118",{"_index":1132,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:123",{"_index":409,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:150",{"_index":404,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:19",{"_index":415,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1133,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":425,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1139,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:29",{"_index":432,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1134,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:34",{"_index":424,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1135,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":422,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1140,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1136,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1137,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":435,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:45",{"_index":1138,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:49",{"_index":428,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:50",{"_index":1126,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:54",{"_index":434,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:55",{"_index":420,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":433,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:57",{"_index":418,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:58",{"_index":414,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:59",{"_index":413,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:60",{"_index":419,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:61",{"_index":417,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:62",{"_index":437,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:63",{"_index":438,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:64",{"_index":421,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:65",{"_index":401,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:68",{"_index":416,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1131,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1127,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1128,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info/app",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":444,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":807,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialstate.userid",{"_index":1095,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":523,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["input",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":993,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1309,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":369,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"changelog.html":{},"index.html":{}}}],["instance.app_descriptor_id",{"_index":490,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.app_instance_id",{"_index":488,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.nam",{"_index":486,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rul",{"_index":476,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rules.foreach(rul",{"_index":477,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.services.foreach(servic",{"_index":472,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.status_nam",{"_index":487,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.t",{"_index":367,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["instanceid",{"_index":392,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["integr",{"_index":1338,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":364,"title":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":842,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["isowner(userrol",{"_index":816,"title":{},"body":{"components/EditUserComponent.html":{}}}],["item.nam",{"_index":731,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":963,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["js",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":1044,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).rol",{"_index":1055,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1093,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":532,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwtdata",{"_index":534,"title":{},"body":{"guards/AuthGuard.html":{}}}],["json.stringify(jwttokendata",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(respons",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["jwtdata",{"_index":533,"title":{},"body":{"guards/AuthGuard.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["jwtdata.rol",{"_index":536,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwthelper",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":531,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken.token",{"_index":538,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendata",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1336,"title":{},"body":{"index.html":{}}}],["key",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["kind",{"_index":1368,"title":{},"body":{"license.html":{}}}],["label",{"_index":375,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["label[0",{"_index":492,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["label[1",{"_index":493,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["languag",{"_index":1372,"title":{},"body":{"license.html":{}}}],["last",{"_index":28,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["last_chunk_length",{"_index":27,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["law",{"_index":1360,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1078,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":229,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":865,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["letter",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["librari",{"_index":1332,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1348,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1375,"title":{},"body":{"license.html":{}}}],["line",{"_index":864,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["line:compon",{"_index":648,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":863,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["line:no",{"_index":971,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["link",{"_index":464,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linkedservic",{"_index":482,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linst",{"_index":1162,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":36,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"index.html":{}}}],["load",{"_index":426,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":393,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":181,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":443,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":679,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":667,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":1043,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.passwordmock",{"_index":611,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":670,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":673,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.url",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":677,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":675,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":697,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":690,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":696,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":689,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":686,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":692,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":687,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":691,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":688,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":693,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.url",{"_index":717,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":695,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":694,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["location.reload",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["login'},{'nam",{"_index":252,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":251,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequest",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["long",{"_index":1113,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["longer",{"_index":861,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":941,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":255,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":943,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":942,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":253,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1107,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["manag",{"_index":1302,"title":{},"body":{"index.html":{}}}],["map",{"_index":407,"title":{},"body":{"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{}}}],["match",{"_index":54,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":974,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["member",{"_index":1063,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["messag",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":6,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":9,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["miscellan",{"_index":1275,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mockappchart",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["mockapppiechart",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["mockappsinstanceslist",{"_index":441,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["mockclusterchart",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["mockclusterdetail",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["mockclusterlist",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["mockjwttoken",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["mocknodelist",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["mocknodeschart",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["mockorganizationinfo",{"_index":1142,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockregisteredappslist",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["mockresetpasword",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["mockresourcessummari",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["mockservicesgraph",{"_index":394,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["mockup",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":1143,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["modal",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modalmodul",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalrefonhid",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["modalservic",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mode",{"_index":1068,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":698,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":280,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":210,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["msg",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.length",{"_index":222,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.slice(0",{"_index":221,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["multitenant_support",{"_index":633,"title":{},"body":{"interfaces/Cluster.html":{}}}],["nalej",{"_index":254,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":7,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["navig",{"_index":1155,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["necessari",{"_index":846,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":410,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"injectables/ErrorHandlerService.html":{}}}],["network",{"_index":889,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":17,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["new_password",{"_index":614,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newpassword",{"_index":593,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newrol",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["newvalu",{"_index":681,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["next",{"_index":520,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["next.routeconfig.path",{"_index":542,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":1315,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":166,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngxchartsmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxgraphmodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":463,"title":{},"body":{"components/AppsInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["node.label",{"_index":485,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["noth",{"_index":200,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["notif",{"_index":642,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notificationinst",{"_index":1003,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":257,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":983,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":982,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscompon",{"_index":256,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["notificationsservic",{"_index":96,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["npm",{"_index":1303,"title":{},"body":{"index.html":{}}}],["null",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["num_total_char",{"_index":22,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["number",{"_index":24,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["object",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["object.entries(object",{"_index":484,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostr",{"_index":399,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostring(object",{"_index":403,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["observ",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1356,"title":{},"body":{"license.html":{}}}],["older",{"_index":1281,"title":{},"body":{"index.html":{}}}],["on",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":951,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":954,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":780,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["openchangepassword",{"_index":765,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["opendebugpanel",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":1022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":225,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["option[0",{"_index":495,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["option[1",{"_index":496,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["optionchang",{"_index":719,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":699,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["organization'},{'nam",{"_index":259,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":1009,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":376,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["organizationclick",{"_index":1065,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":258,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationnam",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["orient",{"_index":395,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["out",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{}}}],["overal",{"_index":1278,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1378,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":224,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["packag",{"_index":1246,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":860,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":247,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":638,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:106",{"_index":722,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":724,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:177",{"_index":725,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:185",{"_index":726,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":728,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":729,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:41",{"_index":721,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:44",{"_index":727,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":723,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["param",{"_index":44,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["pars",{"_index":405,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["password",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["password'},{'nam",{"_index":242,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password).pipe(map(respons",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["password.component.html",{"_index":591,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.scss",{"_index":590,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.t",{"_index":589,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:128",{"_index":600,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:151",{"_index":597,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:19",{"_index":604,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:24",{"_index":610,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:25",{"_index":609,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:26",{"_index":607,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":606,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:28",{"_index":608,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:33",{"_index":596,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:36",{"_index":605,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:50",{"_index":601,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:58",{"_index":603,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:79",{"_index":599,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:96",{"_index":598,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password/chang",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["passwordchang",{"_index":612,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["passwordconfirm",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{}}}],["past",{"_index":1109,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["payment",{"_index":1069,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perform",{"_index":406,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["perman",{"_index":836,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1374,"title":{},"body":{"license.html":{}}}],["persist",{"_index":685,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1101,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pie",{"_index":1160,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pipe",{"_index":0,"title":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/abbreviate.pip",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/truncate.pip",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":39,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["pixel",{"_index":1285,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1157,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["platform",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["prevent",{"_index":870,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":885,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1328,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1330,"title":{},"body":{"index.html":{}}}],["profil",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["project",{"_index":1312,"title":{},"body":{"index.html":{}}}],["promis",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":529,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":878,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":1343,"title":{},"body":{"index.html":{}}}],["queri",{"_index":796,"title":{},"body":{"components/EditUserComponent.html":{}}}],["r",{"_index":973,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1347,"title":{},"body":{"index.html":{}}}],["real",{"_index":183,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":825,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["redirect",{"_index":805,"title":{},"body":{"components/EditUserComponent.html":{}}}],["refer",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":706,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["relat",{"_index":504,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["reload",{"_index":1320,"title":{},"body":{"index.html":{}}}],["remov",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{}}}],["renam",{"_index":992,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":431,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["repositori",{"_index":1311,"title":{},"body":{"index.html":{}}}],["request",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requesterror",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["requir",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolut",{"_index":1284,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":544,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["resources'},{'nam",{"_index":261,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcescompon",{"_index":260,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["response.email",{"_index":1098,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.nam",{"_index":1046,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.rol",{"_index":799,"title":{},"body":{"components/EditUserComponent.html":{}}}],["response.role_nam",{"_index":1099,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":1059,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":850,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["role_nam",{"_index":191,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["roledirti",{"_index":759,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleid",{"_index":812,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.nam",{"_index":814,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.role_id",{"_index":815,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["roleslist",{"_index":760,"title":{},"body":{"components/EditUserComponent.html":{}}}],["root",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":236,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["router",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rule",{"_index":377,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{}}}],["rule.auth_servic",{"_index":478,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.auth_services.foreach(linkedservic",{"_index":479,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.nam",{"_index":502,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.rule_id",{"_index":503,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.source_service_id",{"_index":480,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["run",{"_index":1314,"title":{},"body":{"index.html":{}}}],["running_nod",{"_index":634,"title":{},"body":{"interfaces/Cluster.html":{}}}],["rxj",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":29,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{}}}],["save",{"_index":228,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["saveclusterchang",{"_index":741,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(form",{"_index":745,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["savenewpassword",{"_index":595,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["savenewpassword(form",{"_index":602,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["saveuserchang",{"_index":766,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(f",{"_index":781,"title":{},"body":{"components/EditUserComponent.html":{}}}],["scaffold",{"_index":1322,"title":{},"body":{"index.html":{}}}],["screen",{"_index":708,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["search",{"_index":776,"title":{},"body":{"components/EditUserComponent.html":{}}}],["see",{"_index":1280,"title":{},"body":{"index.html":{},"license.html":{}}}],["select",{"_index":216,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["serv",{"_index":1316,"title":{},"body":{"index.html":{}}}],["server",{"_index":826,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":378,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["service.nam",{"_index":474,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.service_id",{"_index":473,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.status_nam",{"_index":501,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["services/auth.servic",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":535,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["shape",{"_index":439,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shape.curvebundl",{"_index":451,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shorten",{"_index":1108,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["show",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showlegend",{"_index":396,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["sidebar",{"_index":643,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":263,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1072,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcompon",{"_index":262,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slice",{"_index":15,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["softwar",{"_index":1363,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":732,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":709,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1371,"title":{},"body":{"license.html":{}}}],["src/.../environment.prod.t",{"_index":1276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.t",{"_index":1277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":380,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["src/app/applications/applications.component.t",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["src/app/chang",{"_index":588,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["src/app/debug",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/const/us",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/appl",{"_index":366,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/cluster.t",{"_index":630,"title":{},"body":{"interfaces/Cluster.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":733,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:12",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:16",{"_index":519,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:107",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:131",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:154",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":940,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":945,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":944,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":981,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":986,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":990,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":985,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":987,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":988,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:115",{"_index":1023,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:143",{"_index":1020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:156",{"_index":1026,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:24",{"_index":1028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1032,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":1036,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:32",{"_index":1037,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:37",{"_index":1029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:42",{"_index":1030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:43",{"_index":1031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:48",{"_index":1019,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:73",{"_index":1021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:98",{"_index":1025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pipes/abbreviate.pipe.t",{"_index":5,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/abbreviate.pipe.ts:13",{"_index":14,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["src/app/pipes/truncate.pipe.t",{"_index":1104,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.ts:12",{"_index":1106,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/resources/resources.component.t",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["src/app/services/error",{"_index":817,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":946,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":1001,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":1002,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":1007,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":1004,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":1005,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1117,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1070,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:109",{"_index":1083,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:121",{"_index":1076,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":1084,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1086,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1088,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:31",{"_index":1085,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1089,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:37",{"_index":1087,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:42",{"_index":1075,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:64",{"_index":1079,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":1080,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":1081,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1122,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.t",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1066,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":810,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["statu",{"_index":427,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["status_nam",{"_index":379,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{}}}],["storag",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["store",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["styleurl",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1121,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(inst",{"_index":470,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["subscribe(respons",{"_index":193,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(responserol",{"_index":804,"title":{},"body":{"components/EditUserComponent.html":{}}}],["subscript",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["subscriptiontyp",{"_index":1014,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subset",{"_index":20,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["succeed",{"_index":830,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":196,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["summari",{"_index":1158,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["suport",{"_index":1283,"title":{},"body":{"index.html":{}}}],["support",{"_index":872,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":700,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":843,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":491,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{}}}],["target",{"_index":481,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tb",{"_index":449,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["templat",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["temporalrol",{"_index":761,"title":{},"body":{"components/EditUserComponent.html":{}}}],["test",{"_index":712,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1114,"title":{},"body":{"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":948,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":955,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":950,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":957,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.adduser(form",{"_index":217,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.alert",{"_index":994,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":1100,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.autocent",{"_index":453,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.autozoom",{"_index":452,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.changerole(this.organizationid",{"_index":802,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1148,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getappinstance(this.organizationid",{"_index":468,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1049,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1097,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.listroles(this.organizationid",{"_index":797,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.login(email",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":616,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":757,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":800,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":197,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref",{"_index":808,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref.content.closebtnnam",{"_index":811,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttonchangepassword",{"_index":1145,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1144,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clusterdescript",{"_index":754,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":756,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":753,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":755,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.colorschem",{"_index":459,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.components.foreach(compon",{"_index":683,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.components.push",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.curv",{"_index":450,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.draggingen",{"_index":455,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":1092,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.enablezoom",{"_index":454,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.errormessag",{"_index":185,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.length",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessages.push('a",{"_index":622,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('email",{"_index":203,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('password",{"_index":208,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('set",{"_index":627,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('th",{"_index":624,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('us",{"_index":215,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.errormessages.push(error.error.messag",{"_index":619,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages[0",{"_index":218,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getroleid(this.temporalrol",{"_index":803,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.graphdata",{"_index":462,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.links.push(link",{"_index":483,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.nodes.push(nod",{"_index":475,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.inst",{"_index":465,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.instanceid",{"_index":469,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":530,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken.token",{"_index":539,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loadeddata",{"_index":445,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalrefonhid",{"_index":1054,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1058,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(changepasswordcompon",{"_index":809,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1056,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1053,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1090,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":654,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":710,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":194,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":995,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":711,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":467,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1038,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.orient",{"_index":448,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.requesterror",{"_index":1042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1091,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":793,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist",{"_index":798,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist.foreach(roleobject",{"_index":813,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":806,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":540,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.url",{"_index":1057,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.savenewpassword(form",{"_index":628,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.showlegend",{"_index":447,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.subscriptiontyp",{"_index":1039,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.temporalrol",{"_index":795,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.titl",{"_index":446,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.tographdata(inst",{"_index":471,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1094,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1096,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1048,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1047,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.url",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.us",{"_index":1041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":613,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":801,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":178,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.userroletoedit",{"_index":794,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.view",{"_index":456,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["time",{"_index":223,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":1161,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["timeout",{"_index":713,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["tographdata",{"_index":400,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tographdata(inst",{"_index":408,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["token",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tooltipmodul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":997,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"index.html":{}}}],["total",{"_index":23,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["total_nod",{"_index":635,"title":{},"body":{"interfaces/Cluster.html":{}}}],["transform",{"_index":10,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"pipes/TruncatePipe.html":{}}}],["transform(valu",{"_index":11,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["truncat",{"_index":1105,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepip",{"_index":290,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslint:dis",{"_index":647,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["two",{"_index":1331,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["types/jwt",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1153,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unavail",{"_index":881,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["undefin",{"_index":1035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["under",{"_index":1351,"title":{},"body":{"license.html":{}}}],["understand",{"_index":840,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":868,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1333,"title":{},"body":{"index.html":{}}}],["up",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":1027,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":292,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileus",{"_index":1073,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1082,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":1018,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":1017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1129,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["urlchang",{"_index":720,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["urlchange($ev",{"_index":715,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["us",{"_index":1323,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["user'},{'nam",{"_index":234,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:103",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:106",{"_index":770,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:111",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:117",{"_index":768,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:126",{"_index":782,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:145",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:168",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:180",{"_index":779,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:19",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:195",{"_index":775,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:20",{"_index":784,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:24",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:26",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:28",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:29",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":788,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:32",{"_index":792,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":791,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":790,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:35",{"_index":787,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:36",{"_index":789,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:40",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:42",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":767,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:51",{"_index":785,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:59",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:66",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:67",{"_index":778,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:86",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:90",{"_index":773,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.email",{"_index":195,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":1051,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":1052,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["useredit",{"_index":645,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userid",{"_index":594,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userinfo",{"_index":644,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userinfocompon",{"_index":264,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["userroletoedit",{"_index":762,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["users.length",{"_index":1062,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":442,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":959,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":964,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":976,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":980,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v0.1.0",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":960,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":35,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{}}}],["value.length",{"_index":52,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["value.slice(0",{"_index":49,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.slice(value.length",{"_index":51,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.substring(0",{"_index":1116,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":232,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":498,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["variable[0",{"_index":499,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["variable[1",{"_index":500,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["version",{"_index":1340,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1335,"title":{},"body":{"index.html":{}}}],["view",{"_index":397,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["void",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1367,"title":{},"body":{"license.html":{}}}],["width",{"_index":398,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["window",{"_index":786,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["without",{"_index":1366,"title":{},"body":{"license.html":{}}}],["word",{"_index":26,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["write",{"_index":1362,"title":{},"body":{"license.html":{}}}],["x",{"_index":977,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":956,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":966,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":965,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":969,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["yxxx",{"_index":968,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/AbbreviatePipe.html":{"url":"pipes/AbbreviatePipe.html","title":"pipe - AbbreviatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AbbreviatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/abbreviate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        abbreviate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/abbreviate.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n                            Slice creates a new Array or String containing a subset (slice) of the elements.\nNUM_TOTAL_CHARS is the total number of characters of a word\nLAST_CHUNK_LENGTH is the last characters of the same word\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'abbreviate'\n})\nexport class AbbreviatePipe implements PipeTransform {\n/**\n  * Slice creates a new Array or String containing a subset (slice) of the elements.\n  * NUM_TOTAL_CHARS is the total number of characters of a word\n  * LAST_CHUNK_LENGTH is the last characters of the same word\n  * @param value is a list or a string to be sliced.\n*/\n  transform(value: string): string {\n    const NUM_TOTAL_CHARS = 8;\n    const LAST_CHUNK_LENGTH = NUM_TOTAL_CHARS - 2;\n    let abbstring;\n\n    abbstring = value.slice(0, 1) + '...' + value.slice(value.length - LAST_CHUNK_LENGTH, value.length);\n\n    if (value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                arrayToString\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  errorMessages: string[];\n\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.errorMessages = [];\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    if (this.errorMessages.length === 0) {\n      const user = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        role_name: this.userRole\n      };\n      this.backend.addUser(this.organizationId, user)\n        .subscribe(response => {\n          this.notificationsService.add({message: user.email + ' created successfully'});\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.pattern) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.password.value !== form.controls.passwordConfirm.value) {\n      this.errorMessages.push('Password and confirm password are not the same one');\n    }\n    if (!this.userRole) {\n      this.errorMessages.push('User role selection is required');\n    }\n\n    if (this.errorMessages.length === 0) {\n      this.addUser(form);\n    }\n  }\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n\n    \n    \n         0\">\n        {{formatValidationOutput(errorMessages).msg}}\n      \n    \n    \n\n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                   0\">        {{formatValidationOutput(errorMessages).msg}}                                    Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbbreviatePipe\n                            \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                TruncatePipe\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AbbreviatePipe } from './pipes/abbreviate.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n    ChangePasswordComponent,\n    AbbreviatePipe,\n    TruncatePipe\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    NgxGraphModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationInstance.html":{"url":"interfaces/ApplicationInstance.html","title":"interface - ApplicationInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/application-instance.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Application instance Data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app_descriptor_id\n                                \n                                \n                                        app_instance_id\n                                \n                                \n                                        configuration_options\n                                \n                                \n                                        description\n                                \n                                \n                                        environment_variables\n                                \n                                \n                                        groups\n                                \n                                \n                                        labels\n                                \n                                \n                                        name\n                                \n                                \n                                        organization_id\n                                \n                                \n                                        rules\n                                \n                                \n                                        services\n                                \n                                \n                                        status_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_descriptor_id\n                                    \n                                \n                                \n                                    \n                                        app_descriptor_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app_instance_id\n                                    \n                                \n                                \n                                    \n                                        app_instance_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configuration_options\n                                    \n                                \n                                \n                                    \n                                        configuration_options:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_variables\n                                    \n                                \n                                \n                                    \n                                        environment_variables:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization_id\n                                    \n                                \n                                \n                                    \n                                        organization_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                    \n                                \n                                \n                                    \n                                        services:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApplicationInstance {\n  organization_id: string;\n  app_descriptor_id: string;\n  app_instance_id: string;\n  name: string;\n  description: string;\n  configuration_options: any;\n  environment_variables: any;\n  labels: any;\n  rules: any[];\n  groups: any[];\n  services: any[];\n  status_name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCenter\n                            \n                            \n                                autoZoom\n                            \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                colorScheme\n                            \n                            \n                                curve\n                            \n                            \n                                draggingEnabled\n                            \n                            \n                                enableZoom\n                            \n                            \n                                graphData\n                            \n                            \n                                height\n                            \n                            \n                                instance\n                            \n                            \n                                instanceId\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockServicesGraph\n                            \n                            \n                                organizationId\n                            \n                            \n                                orientation\n                            \n                            \n                                showlegend\n                            \n                            \n                                title\n                            \n                            \n                                view\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                objectToString\n                            \n                            \n                                toGraphData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectToString(object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Transforms objects to arrays to be parsed to string and performed in the view\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key-value map that contains the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraphData\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraphData(instance: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Transforms the data needed to create the grapho\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                instance object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoCenter:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curve:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            draggingEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        draggingEnabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available apps instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instanceId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instanceId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockServicesGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockServicesGraph:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:49\n                            \n                        \n\n                \n                    \n                        NGX-Grpahs object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orientation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showlegend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showlegend:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:54\n                            \n                        \n\n                \n                    \n                        Graph options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:44\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport * as shape from 'd3-shape';\nimport { mockAppsInstancesList } from '../utils/mocks';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold organization ID\n   */\n  instanceId: string;\n\n  /**\n   * List of available apps instances\n   */\n  instance: any;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * NGX-Grpahs object-assign required object references (for rendering)\n   */\n  mockServicesGraph: any;\n\n  /**\n   * Graph options\n   */\n  showlegend: boolean;\n  graphData: any;\n  orientation: string;\n  curve: any;\n  autoZoom: boolean;\n  autoCenter: boolean;\n  enableZoom: boolean;\n  colorScheme: any;\n  view: any[];\n  width: number;\n  height: number;\n  draggingEnabled: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.title = 'App info';\n\n    // Graph initialization\n    this.showlegend = false;\n    this.orientation = 'TB';\n    this.curve = shape.curveBundle;\n    this.autoZoom = true;\n    this.autoCenter = true;\n    this.enableZoom = false;\n    this.draggingEnabled = false;\n    this.view = [350, 250];\n    this.colorScheme = {\n      domain: ['#6C86F7']\n    };\n\n    this.graphData = {\n      nodes: [],\n      links: []\n    };\n    this.instance = mockAppsInstancesList\n    ; // Initialization to avoid null in view\n\n  }\n\n  ngOnInit() {\n     if (this.organizationId !== null) {\n      this.backend.getAppInstance(this.organizationId,  this.instanceId)\n      .subscribe(instance => {\n          this.instance = instance;\n          this.toGraphData(instance);\n          if (!this.loadedData) {\n            this.loadedData = true;\n          }\n      });\n    }\n  }\n\n/**\n * Transforms the data needed to create the grapho\n * @param instance instance object\n */\n  toGraphData(instance) {\n    instance.services.forEach(service => {\n      const node = {\n        id: service.service_id,\n        label: service.name\n      };\n      this.graphData.nodes.push(node);\n    });\n    if (instance.rules) {\n      instance.rules.forEach(rule => {\n        if (rule.auth_services) {\n          rule.auth_services.forEach(linkedService => {\n            const link = {\n              source: rule.source_service_id,\n              target: linkedService\n            };\n            this.graphData.links.push(link);\n          });\n        }\n      });\n    }\n  }\n\n/**\n * Transforms objects to arrays to be parsed to string and performed in the view\n * @param object Key-value map that contains the object\n */\n  objectToString(object: any) {\n    if (!object) {\n      return ['--'];\n    }\n    return Object.entries(object);\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n        \n          {{title}}\n        \n        \n        \n          \n            \n            Services\n            \n              \n              \n                \n                  \n                    \n                    \n                      {{node.label}}\n                  \n                  \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n            \n            \n            \n              \n                Name\n                {{instance.name}}\n              \n              \n              \n                Status\n                \n                  {{instance.status_name}}\n                \n              \n              \n              \n                Instance id\n                {{instance.app_instance_id}}\n              \n              \n              \n                Descriptor id\n                {{instance.app_descriptor_id}}\n              \n              \n              \n                Tags\n              \n              \n                {{label[0]}}\n                {{label[1]}}\n              \n              \n              \n                Configuration options\n              \n              \n                {{option[0]}}\n                {{option[1]}}\n              \n              \n              \n                Environment variables\n              \n              \n                \n                  {{variable[0]}}\n                \n                \n                  {{variable[1]}}\n                \n              \n              \n              \n                Services\n              \n              \n                \n                  Name\n                  {{service.name}}\n                \n                \n                  Id\n                  {{service.service_id}}\n                \n                \n                  Status\n                   \n                    {{service.status_name}}\n                  \n                \n                \n              \n              \n                Rules\n              \n              \n                \n                  Name\n                  {{rule.name}}\n                \n                \n                  Id\n                  {{rule.rule_id}}\n                \n                \n                  Relations\n                  \n                  {{relation}}\n                \n                \n              \n              \n                Groups\n              \n              \n                -\n                -\n              \n              \n                \n                  Name\n                  {{group.name}}\n                \n                \n                  Services\n                  \n                  {{service}}\n                  \n                \n                \n              \n                Endpoints\n              \n              \n                 0\">\n                  \n                    \n                      {{endpoint}}\n                    \n                    \n                       \n                \n              \n              \n               \n           \n                     \n          \n            \n              \n                \n              \n            \n          \n          \n          \n            \n              Close\n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{title}}                                                          Services                                                                                                                                        {{node.label}}                                                                                                                                                                                                                                                Name                {{instance.name}}                                                          Status                                  {{instance.status_name}}                                                                          Instance id                {{instance.app_instance_id}}                                                          Descriptor id                {{instance.app_descriptor_id}}                                                          Tags                                            {{label[0]}}                {{label[1]}}                                                          Configuration options                                            {{option[0]}}                {{option[1]}}                                                          Environment variables                                                              {{variable[0]}}                                                  {{variable[1]}}                                                                          Services                                                              Name                  {{service.name}}                                                  Id                  {{service.service_id}}                                                  Status                                       {{service.status_name}}                                                                                              Rules                                                              Name                  {{rule.name}}                                                  Id                  {{rule.rule_id}}                                                  Relations                                    {{relation}}                                                                            Groups                                            -                -                                                              Name                  {{group.name}}                                                  Services                                    {{service}}                                                                                Endpoints                                             0\">                                                            {{endpoint}}                                                                                                                                                                                                                                                                                                Close                                            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { mockJwtToken } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    const jwtData = JSON.parse(localStorage.getItem(LocalStorageKeys.jwtData)) || null;\n    let role;\n    // Set role\n    if (jwtData) {\n      role = jwtData.role;\n    }\n    // Check jwtToken expiracy\n    if (jwtToken === null\n      || (jwtToken.token !== mockJwtToken\n          && this.jwtHelper.isTokenExpired(jwtToken.token)\n          )\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    // Check user role access\n    if (\n      role &&\n      role === 'Developer' && !(\n      next.routeConfig.path === 'applications' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n    // Check user role access\n    if (\n      role === 'Operator' && !(\n      next.routeConfig.path === 'resources' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/change-password/change-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                change-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                confirmNewPassword\n                            \n                            \n                                errorMessages\n                            \n                            \n                                newPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveNewPassword(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Request to save changes in the user password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form containing the user input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmNewPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user id, and passwords\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { FormGroup } from '@angular/forms';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user id, and passwords\n   */\n  userId: string;\n  password: string;\n  newPassword: string;\n  confirmNewPassword: string;\n  organizationId: string;\n\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.passwordMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n\n  /**\n   * Request to save changes in the user password\n   * @param form Form containing the user input\n   */\n  saveNewPassword(form: FormGroup) {\n    const passwordChange = {\n      email: this.userId,\n      password: form.value.password,\n      new_password: form.value.newPassword\n    };\n    this.backend.resetPassword(this.organizationId, passwordChange)\n      .subscribe(response => {\n        this.notificationsService.add({message: 'Password changed successfully'});\n        this.bsModalRef.hide();\n      }, error => {\n        if (error && error.error && error.error.message) {\n          this.errorMessages.push(error.error.message);\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.invalid) {\n      if (form.controls.newPassword.errors.required) {\n        this.errorMessages.push('A new password is required');\n      }\n      if (form.controls.newPassword.errors.minlength) {\n        this.errorMessages.push('The new password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.value !== form.controls.confirmNewPassword.value) {\n      this.errorMessages.push('Set passwords do not match');\n    }\n    if (this.errorMessages.length === 0) {\n      this.saveNewPassword(form);\n    }\n  }\n\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n    \n      Change password\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n        \n        \n           0\">\n            {{formatValidationOutput(errorMessages).msg}}\n          \n        \n        \n        \n            \n            Save\n          \n          \n            Discard\n          \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Change password              ×                                                                                                       0\">            {{formatValidationOutput(errorMessages).msg}}                                                          Save                                Discard                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cluster.html":{"url":"interfaces/Cluster.html","title":"interface - Cluster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cluster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type_name\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant_support\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status_name\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type_name\n                                    \n                                \n                                \n                                    \n                                        cluster_type_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant_support\n                                    \n                                \n                                \n                                    \n                                        multitenant_support:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cluster {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: number;\n  running_nodes?: number;\n  description?: string;\n  status_name?: string;\n  cluster_type_name?: string;\n  labels?: string;\n  multitenant_support?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                            \n                                urlChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAll(newValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Modifies all components mocks values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlChange($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n      Backend URL\n      \n    \n    Backend control\n    \n      \n          All real\n          \n          All mock\n          \n      \n      \n      \n        \n        \n          {{item.name}}\n        \n        \n          \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n    \n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                      Backend URL              Backend control                    All real                    All mock                                                      {{item.name}}                                                Real                                Mock                                    Notifications    Spam test notification                    Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        name: this.clusterName,\n        description: this.clusterDescription,\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          this.notificationsService.add({\n            message: error.error.message,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n\n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                        Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                rolesList\n                            \n                            \n                                temporalRole\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                            \n                                userRoleToEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                getRoleId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, bsModalRef: BsModalRef, backendService: BackendService, router: Router, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoleId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRoleId(role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Search between roles list to get the required id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Role name\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rolesList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporalRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temporalRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRoleToEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRoleToEdit:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userRoleToEdit: string;\n  userName: string;\n  userId: string;\n  email: string;\n  rolesList: any[];\n  temporalRole: string;\n\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private router: Router,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n// edit\n    if (this.userRoleToEdit) {\n        // this.userRole should be initialized by initial state\n      this.temporalRole = this.userRoleToEdit;\n    } else {\n          // profile\n      this.temporalRole = this.userRole;\n    }\n\n    if (this.userRole && this.userRole === 'Owner') {\n      // Query role list\n      this.backend.listRoles(this.organizationId)\n        .subscribe(response => {\n          this.rolesList = response.roles;\n        });\n      }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.temporalRole) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.temporalRole = newRole;\n  }\n\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n      .subscribe(response => {\n        if (this.userRole && this.userRole === 'Owner') {\n          this.backend.changeRole(this.organizationId, this.userId, this.getRoleId(this.temporalRole)).\n          subscribe(responseRole => {\n            this.notificationsService.add({\n              message: 'The user ' + this.userName + ' has been edited',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n            if (!this.userRoleToEdit && this.temporalRole === 'Owner') {\n              // no redirection for the owner\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Developer') {\n              this.router.navigate([\n                '/applications'\n              ]);\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Operator') {\n              this.router.navigate([\n                '/resources'\n              ]);\n            }\n          }, error => {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message,\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          });\n        } else {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }\n      }, error => {\n        this.notificationsService.add({\n          message: 'ERROR: ' + error.error.message,\n          timeout: 10000\n        });\n        this.bsModalRef.hide();\n      });\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n\n  /**\n   * Search between roles list to get the required id\n   * @param role Role name\n   */\n  getRoleId(role: string): string {\n    let roleId = '';\n    this.rolesList.forEach(roleObject => {\n      if (roleObject.name === role) {\n        roleId = roleObject.role_id;\n        return roleId;\n      }\n    });\n    return roleId;\n  }\n\n /**\n  * Checks it the role is Owner\n  * @param userRole user Role\n  */\n//  isOwner(userRole: string): boolean {\n//    if (userRole === 'Owner') {\n//     return true;\n//    }\n//    return false;\n//  }\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n    \n    \n      Change password\n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                           Change password            Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessages = [];\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessages = [];\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        if (error.error && error.error.message) {\n          this.errorMessages.push(\n            error.error.message.charAt(0).toUpperCase() +\n            error.error.message.slice(1)); // Capitalize first letter of error msg\n        }\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.email) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n  }\n\n  /**\n  * Outputs the error messages in the required format, showing the first one\n  * @param errors String containing the errors\n  */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        NALEJ\n        \n\n            \n                    Log in\n                \n                \n\n                \n\n                \n                \n                     0\">\n                        {{formatValidationOutput(errorMessages).msg}}\n                    \n                \n\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NALEJ                                        Log in                                                                                                     0\">                        {{formatValidationOutput(errorMessages).msg}}                                                                                        Log in                                                                                                                                                                                                               '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n            ?\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              ?                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                modalRefOnHide\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                requestError\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, router: Router, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:37\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRefOnHide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRefOnHide:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:48\n                            \n                        \n\n                \n                    \n                        Hold request error message or undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n  modalRefOnHide: any;\n\n  /**\n   * Hold request error message or undefined\n   */\n  requestError: string;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private router: Router,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n    this.requestError = '';\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalRefOnHide = this.modalService.onHide.subscribe((reason: string) => {this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    let role = 'Owner';\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      role = JSON.parse(jwtData).role;\n    }\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: role,\n      userRoleToEdit: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n        if (this.router.url === '/organization') {\n        this.updateUserList();\n      }\n    });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    }, errorResponse => {\n        this.loadedData = true;\n        this.requestError = errorResponse.error.message;\n      });\n  }\n}\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n       0 && !requestError\">\n        \n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n                Actions\n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n               -->\n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n      \n      \n      \n        There are not registered users in this organizationClick on \"add user\" button to start adding new users \n      \n      \n      \n        {{requestError}}\n      \n      \n      \n        \n          \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS             0 && !requestError\">                                                            Name                                            Role                                            Email                                            Actions                                                                        {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                             -->                                                      edit                                                                                                        There are not registered users in this organizationClick on \"add user\" button to start adding new users                           {{requestError}}                                                                                      Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, router: Router, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private router: Router,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile',\n      organizationId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      if (this.router.url === '/organization') {\n        this.updateService.changesOnUserList.next();\n      }\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/truncate.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\nNUM_TOTAL_CHARS how long we would like the text to be\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\n   * NUM_TOTAL_CHARS how long we would like the text to be\n   * @param value is a list or a string to be sliced.\n   */\n    transform(value: string): string {\n    const NUM_TOTAL_CHARS = 13;\n    if (value && value.length > NUM_TOTAL_CHARS) {\n      return value.substring(0, NUM_TOTAL_CHARS) + '...';\n    } else {\n      return value;\n    }\n   }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                buttonChangePassword\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonChangePassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:31\n                            \n                        \n\n                \n                    \n                        Text for the change password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:26\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the change password action button\n   */\n  buttonChangePassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonChangePassword = 'Change Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    const deleteConfirm = confirm('Delete user?');\n    if (deleteConfirm) {\n      if (this.organizationId !== null && this.userId !== null) {\n        this.backend.deleteUser(this.organizationId, this.userId)\n          .subscribe(response => {\n            this.notificationsService.add({\n              message: 'User ' + this.userId + ' has been deleted',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          }, error => {\n            this.notificationsService.add({\n              message: error.error.message,\n              timeout: 10000\n            });\n          });\n      }\n    } else {\n      // Do nothing\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonChangePassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonChangePassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nv0.1.0\nCreated the brand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                47 %\n                (9/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                54 %\n                (24/44)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                src/app/change-password/change-password.component.ts\n            \n            \n                component\n            \n            \n                ChangePasswordComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/application-instance.ts\n            \n            \n                interface\n            \n            \n                ApplicationInstance\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster.ts\n            \n            \n                interface\n            \n            \n                Cluster\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (11/22)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                src/app/pipes/abbreviate.pipe.ts\n            \n            \n                pipe\n            \n            \n                AbbreviatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/truncate.pipe.ts\n            \n            \n                pipe\n            \n            \n                TruncatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                58 %\n                (24/41)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                88 %\n                (22/25)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsInstancesList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockRegisteredAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-graph : ^5.1.1\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nOverall features\nBrand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\nTo see older logs check CHANGELOG.md file\nTested and suported resolutions in pixels:\n\n1280 x 720\n1280 x 800\n1366 x 768\n1440 x 900 \n1613 x 917\n1613 x 1027\n1680 x 1027\n1920 x 1080\n1920 x 1200\n2560 x 1440\n2560 x 1800\n\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Using --prod flag will produce a dependency injection error (generated conflict between two libraries: ngx-bootstrap and ngx-graph).\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
