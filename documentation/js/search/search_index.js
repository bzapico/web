var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.081,1,0.654]],["body/components/AddUserComponent.html",[0,0.128,1,0.971,2,0.303,3,0.206,4,0.715,5,0.715,6,0.715,7,0.146,8,5.084,9,3.926,10,1.796,11,0.745,12,1.143,13,0.715,14,1.631,15,1.168,16,1.099,17,0.967,18,0.965,19,3.029,20,0.965,21,3.029,22,0.176,23,0.618,24,1.434,25,1.731,26,2.001,27,2.192,28,1.753,29,2.211,30,4.732,31,2.743,32,2.487,33,0.618,34,1.739,35,3.029,36,2.634,37,3.628,38,1.259,39,0.503,40,1.434,41,1.614,42,1.614,43,1.33,44,0.838,45,3.029,46,0.943,47,0.033,48,0.636,49,0.625,50,0.698,51,3.628,52,2.474,53,1.462,54,1.401,55,1.614,56,3.897,57,2.634,58,2.768,59,0.877,60,0.971,61,3.029,62,2.474,63,2.415,64,2.933,65,3.586,66,2.634,67,2.474,68,1.349,69,2.634,70,2.634,71,3.822,72,1.462,73,1.753,74,3.628,75,2.474,76,2.634,77,1.434,78,2.474,79,2.065,80,2.474,81,1.055,82,2.065,83,2.474,84,1.592,85,1.237,86,0.965,87,0.965,88,2.065,89,2.474,90,2.474,91,0.598,92,0.272,93,0.844,94,0.658,95,0.917,96,0.917,97,0.997,98,0.917,99,0.844,100,0.605,101,0.715,102,0.605,103,0.715,104,0.206,105,0.307,106,0.804,107,3.95,108,1.592,109,0.882,110,1.242,111,1.796,112,0.715,113,0.997,114,0.844,115,0.965,116,1.344,117,1.753,118,2.474,119,2.474,120,3.628,121,1.796,122,2.474,123,0.917,124,2.474,125,1.796,126,2.065,127,2.065,128,2.769,129,1.796,130,1.796,131,1.796,132,1.731,133,2.474,134,2.474,135,1.3,136,2.103,137,2.103,138,1.907,139,2.339,140,0.605,141,1.049,142,1.049,143,0.965,144,1.368,145,0.715,146,1.049,147,0.508,148,0.715,149,0.508,150,0.715,151,0.508,152,1.049,153,0.463,154,0.605,155,0.715,156,0.508,157,0.814,158,0.508,159,0.508,160,0.715,161,0.508,162,0.887,163,0.715,164,0.508,165,0.715,166,0.508,167,0.715,168,0.555,169,0.715,170,0.508,171,0.715,172,0.508,173,0.715,174,0.018,175,0.018]],["title/components/AppComponent.html",[0,0.081,147,0.654]],["body/components/AppComponent.html",[0,0.149,1,0.773,2,0.404,3,0.314,4,1.089,5,1.089,6,1.089,7,0.222,11,0.995,12,1.426,13,1.089,14,1.722,15,1.281,16,0.705,17,0.58,18,1.289,20,1.289,22,0.267,23,0.825,25,2.159,26,1.93,33,0.825,38,1.506,39,0.672,43,1.558,44,0.812,46,0.705,47,0.033,48,0.589,49,0.622,50,0.522,59,0.58,60,0.995,81,0.825,91,0.622,92,0.532,94,1.002,99,1.284,104,0.314,105,0.466,106,0.705,140,0.92,141,1.401,142,1.401,143,1.289,144,1.637,145,1.089,146,1.401,147,1.161,148,1.089,149,0.773,150,1.089,151,0.773,152,1.401,153,0.705,154,0.92,155,1.089,156,0.773,157,1.087,158,0.773,159,0.773,160,1.089,161,0.773,162,1.384,163,1.089,164,0.773,165,1.089,166,0.773,167,1.089,168,0.844,169,1.089,170,0.773,171,1.089,172,0.773,173,1.089,174,0.024,175,0.024,176,3.143,177,2.547,178,4.847,179,4.847,180,3.281,181,3.281,182,3.143,183,3.648,184,4.847,185,3.124,186,3.765,187,3.765,188,1.089,189,1.652,190,3.765,191,2.182]],["title/modules/AppModule.html",[192,1.846,193,2.053]],["body/modules/AppModule.html",[1,1.206,2,0.252,3,0.252,7,0.178,9,1.945,16,0.565,17,0.465,41,1.627,47,0.033,91,0.719,92,0.331,94,1.447,95,2.014,96,1.118,104,0.432,105,0.374,140,0.738,147,1.263,149,1.154,151,1.154,153,1.101,154,0.738,156,1.206,157,0.937,158,1.206,159,1.263,161,1.154,164,1.154,166,1.154,168,1.261,170,1.154,172,1.206,174,0.021,175,0.021,191,1.749,192,2.423,193,4.25,194,1.945,195,4.003,196,4.322,197,2.519,198,2.519,199,2.519,200,2.519,201,2.519,202,2.696,203,2.696,204,3.489,205,1.945,206,1.749,207,3.017,208,4.18,209,4.18,210,3.489,211,2.19,212,4.18,213,3.017,214,4.18,215,2.519,216,1.749,217,4.18,218,3.489,219,2.694,220,3.017,221,3.017,222,3.481,223,3.017,224,3.017,225,1.446,226,2.19,227,3.017,228,3.017,229,3.017,230,3.017,231,3.017,232,3.017,233,3.017,234,3.017,235,3.017,236,3.017,237,4.18,238,4.18,239,2.19,240,3.017,241,2.19,242,4.18,243,2.519,244,4.18,245,2.19,246,4.18,247,1.749,248,1.945,249,2.519,250,3.017,251,2.19,252,3.017,253,3.017,254,3.034,255,1.749,256,3.017,257,3.017,258,2.19,259,2.19,260,3.017,261,3.017,262,3.017,263,3.017,264,3.017,265,3.017]],["title/components/ApplicationsComponent.html",[0,0.081,149,0.654]],["body/components/ApplicationsComponent.html",[0,0.125,1,0.479,2,0.384,3,0.195,4,0.674,5,0.674,6,0.674,7,0.138,11,0.713,12,1.104,13,0.674,14,1.626,15,1.268,16,0.437,17,0.535,18,0.924,20,0.924,22,0.166,23,0.591,24,1.416,28,1.703,33,0.591,38,1.223,39,0.481,41,1.544,42,1.586,43,1.305,44,0.867,46,0.437,47,0.033,48,0.636,49,0.644,50,0.681,53,0.94,55,1.185,58,2.417,59,0.359,60,0.479,68,0.732,72,2.076,73,1.703,81,0.837,84,1.524,85,1.185,86,0.924,87,1.223,91,0.586,92,0.256,93,0.795,94,0.924,96,0.864,97,0.94,98,0.864,99,0.795,100,0.57,101,0.674,102,0.57,103,0.674,104,0.195,105,0.289,106,0.777,108,1.703,109,0.852,110,1.33,112,1.2,113,0.94,114,0.795,115,1.541,116,1.287,123,0.864,132,2.21,140,0.57,141,1.004,142,1.004,143,0.924,144,1.33,145,0.674,146,1.004,147,0.479,148,0.674,149,0.944,150,0.674,151,0.479,152,1.004,153,0.437,154,0.57,155,0.674,156,0.479,157,0.779,158,0.479,159,0.479,160,0.674,161,0.479,162,0.849,163,0.674,164,0.479,165,0.674,166,0.479,167,0.674,168,0.523,169,0.674,170,0.479,171,0.674,172,0.479,173,0.674,174,0.017,175,0.017,188,1.744,189,2.723,216,3.095,266,1.947,267,2.417,268,3.473,269,3.473,270,3.838,271,3.838,272,3.838,273,3.838,274,3.838,275,3.742,276,3.742,277,4.598,278,4.598,279,4.598,280,4.598,281,4.598,282,4.598,283,4.598,284,4.598,285,4.598,286,4.598,287,1.693,288,3.473,289,2.332,290,2.332,291,1.852,292,1.826,293,2.332,294,2.899,295,2.899,296,2.899,297,2.332,298,2.964,299,2.899,300,2.013,301,2.899,302,2.332,303,2.332,304,2.332,305,2.521,306,2.332,307,2.899,308,2.899,309,2.332,310,2.332,311,2.239,312,3.473,313,2.332,314,3.473,315,2.204,316,2.332,317,3.473,318,2.332,319,2.332,320,2.332,321,2.332,322,2.332,323,2.013,324,2.332,325,2.332,326,2.332,327,1.503,328,0.62,329,0.57,330,1.023,331,1.693,332,1.352,333,3.473,334,1.947,335,1.352,336,2.013,337,1.503,338,1.826,339,1.503,340,1.693,341,1.947,342,3.012,343,2.332,344,1.352,345,1.693,346,1.947,347,2.899,348,4.598,349,3.473,350,2.013,351,1.826,352,2.899,353,2.521,354,2.013,355,2.899,356,1.665,357,2.899,358,3.473,359,3.473,360,3.473,361,3.473,362,3.473,363,3.473]],["title/guards/AuthGuard.html",[364,2.312,365,2.659]],["body/guards/AuthGuard.html",[2,0.348,3,0.348,7,0.246,11,0.856,22,0.296,23,0.71,33,0.88,39,0.717,44,0.717,46,0.968,47,0.033,48,0.568,49,0.568,50,0.717,54,1.11,59,0.866,77,2.998,91,0.663,92,0.458,100,1.02,101,1.206,102,1.02,103,1.206,104,0.348,105,0.517,106,0.781,108,1.916,109,0.856,115,1.11,132,1.681,174,0.026,175,0.026,177,2.193,247,2.418,329,1.264,364,3.028,365,4.317,366,4.172,367,3.754,368,6.039,369,4.172,370,4.467,371,4.172,372,4.172,373,5.875,374,4.691,375,5.875,376,4.172,377,3.623,378,5.171,379,1.376,380,2.193,381,4.08,382,2.689,383,2.998,384,2.418,385,3.483,386,4.317,387,3.483,388,3.483,389,4.172,390,2.418,391,3.483,392,2.418,393,4.172,394,4.172,395,3.483]],["title/injectables/AuthService.html",[202,1.527,379,0.847]],["body/injectables/AuthService.html",[2,0.268,3,0.268,7,0.19,17,0.904,22,0.228,23,0.743,24,1.51,27,2.24,29,2.517,33,0.743,39,0.605,41,1.726,42,1.538,44,0.795,46,0.818,47,0.033,48,0.48,49,0.584,50,0.605,53,2.143,54,0.856,55,1.49,59,0.919,60,0.66,68,1.558,73,1.971,76,3.171,77,2.532,81,1.041,85,1.49,91,0.665,92,0.353,93,1.097,98,1.618,100,0.787,101,0.93,102,1.068,103,0.93,104,0.268,105,0.399,106,0.929,108,1.837,109,1.018,110,1.263,112,0.93,113,1.296,114,1.097,115,0.856,116,1.618,117,1.618,123,1.192,132,1.296,174,0.022,175,0.022,202,2.094,206,1.865,247,1.865,344,2.532,356,2.55,367,3.861,370,4.259,377,3.197,379,1.319,380,1.691,381,4.037,382,2.074,383,3.325,385,2.686,386,3.646,387,2.686,388,2.686,391,2.686,395,2.686,396,2.686,397,3.646,398,4.44,399,5.736,400,5.319,401,2.441,402,3.697,403,3.217,404,4.368,405,4.959,406,3.217,407,5.319,408,2.094,409,4.368,410,3.6,411,2.336,412,3.217,413,2.296,414,3.217,415,3.217,416,2.686,417,2.686,418,2.336,419,3.217,420,3.217,421,4.368,422,2.686,423,2.686,424,2.686,425,3.217,426,3.217,427,3.217,428,3.217,429,3.217,430,3.217,431,3.217,432,3.217,433,3.217,434,2.074,435,2.686,436,3.217,437,3.217,438,3.217]],["title/interfaces/Backend.html",[24,0.779,439,1]],["body/interfaces/Backend.html",[2,0.28,3,0.28,7,0.198,17,0.781,22,0.239,24,1.1,27,1.354,28,2.305,29,2.225,33,0.766,34,2.156,44,0.882,46,1.187,47,0.033,48,0.696,49,0.696,50,0.878,59,0.981,63,2.785,81,1.137,86,0.894,91,0.369,104,0.28,174,0.022,175,0.022,267,1.767,377,3.269,380,1.767,401,2.225,402,3.491,411,3.266,439,1.413,440,2.806,441,3.266,442,3.755,443,3.755,444,3.755,445,3.755,446,3.755,447,3.755,448,3.755,449,3.755,450,3.266,451,3.266,452,3.266,453,3.755,454,3.361,455,3.755,456,2.927,457,3.361,458,3.755,459,3.361,460,3.755,461,3.361,462,3.639,463,3.755,464,3.361,465,3.755,466,3.361,467,3.755,468,3.361,469,3.755,470,3.361,471,3.755,472,3.361,473,3.755,474,3.361,475,3.361,476,3.361,477,3.755,478,3.361,479,3.755,480,3.361,481,3.755,482,3.361,483,1.354]],["title/components/ClusterComponent.html",[0,0.081,151,0.654]],["body/components/ClusterComponent.html",[0,0.13,1,0.415,2,0.357,3,0.169,4,0.585,5,0.585,6,0.585,7,0.119,11,0.64,12,1.013,13,0.585,14,1.577,15,1.106,16,0.379,17,0.659,18,0.83,20,0.83,22,0.144,23,0.531,24,1.369,26,1.459,28,1.585,33,0.531,38,1.138,39,0.433,41,1.471,42,1.519,43,1.243,44,0.843,46,0.584,47,0.033,48,0.604,49,0.66,50,0.593,53,1.723,55,0.69,58,2.832,59,0.712,60,0.64,68,0.636,72,2.217,73,1.808,81,0.831,84,2.142,85,1.665,86,0.83,87,1.397,91,0.577,92,0.222,93,0.69,94,1.229,95,0.75,96,0.75,97,0.816,98,0.75,99,0.69,100,0.495,101,0.585,102,0.931,103,0.585,104,0.169,105,0.251,106,0.713,108,1.585,109,0.948,110,1.237,112,1.471,113,0.816,114,0.69,115,1.229,116,1.156,117,1.156,123,1.41,140,0.495,141,0.902,142,0.902,143,0.83,144,1.237,145,0.585,146,0.902,147,0.415,148,0.585,149,0.415,150,0.585,151,0.878,152,0.902,153,0.379,154,0.495,155,0.585,156,0.415,157,0.7,158,0.415,159,0.415,160,0.585,161,0.415,162,0.763,163,0.585,164,0.415,165,0.585,166,0.415,167,0.585,168,0.454,169,0.585,170,0.415,171,0.585,172,0.415,173,0.585,174,0.015,175,0.015,180,2.48,188,1.336,189,2.415,216,3.246,270,3.571,271,3.571,272,3.571,273,3.571,274,3.571,287,1.47,291,2.049,292,2.76,294,2.605,295,2.605,296,2.605,298,3.473,299,2.605,300,1.809,301,2.605,305,3.543,307,2.605,308,4.075,311,3.82,315,2.05,327,1.305,332,1.174,334,1.69,335,1.174,336,1.809,337,1.305,338,1.64,339,1.305,340,1.47,341,1.69,342,2.763,344,2.207,345,2.763,346,3.178,347,2.605,350,1.809,351,1.64,354,2.83,356,1.496,390,1.809,462,2.757,483,1.257,484,1.69,485,3.636,486,2.605,487,2.605,488,4.278,489,4.881,490,3.543,491,3.543,492,3.976,493,4.278,494,3.12,495,4.278,496,3.12,497,3.12,498,4.674,499,2.025,500,3.12,501,3.12,502,3.12,503,3.12,504,2.025,505,2.025,506,3.354,507,1.809,508,2.605,509,2.025,510,2.025,511,2.025,512,2.025,513,2.025,514,2.025,515,4.278,516,2.025,517,2.025,518,2.025,519,2.025,520,2.025,521,2.025,522,2.011,523,2.025,524,2.025,525,2.025,526,1.47,527,2.025,528,3.12,529,3.12,530,3.12,531,3.12,532,2.025,533,2.025,534,2.025,535,2.025,536,2.025,537,2.025,538,2.025,539,2.566,540,2.605,541,2.265,542,3.12,543,1.496,544,3.12,545,3.12,546,2.605,547,2.265,548,2.605,549,2.605,550,1.809,551,3.12,552,3.12,553,3.12,554,3.12,555,3.12]],["title/interfaces/ClusterInfo.html",[439,1,556,2.312]],["body/interfaces/ClusterInfo.html",[2,0.444,3,0.364,7,0.258,22,0.31,23,0.905,44,0.605,47,0.032,48,0.656,49,0.716,50,0.737,55,2.086,72,1.759,81,1.134,87,1.588,104,0.364,126,3.644,174,0.026,175,0.026,351,3.137,354,3.46,439,1.801,485,3.082,547,4.332,556,3.86,557,3.644,558,3.644,559,3.169,560,3.644,561,4.982,562,4.982]],["title/interfaces/ComponentMockOption.html",[439,1,563,2.053]],["body/interfaces/ComponentMockOption.html",[0,0.139,2,0.4,3,0.252,7,0.178,11,0.62,12,1.114,14,1.114,15,0.859,16,0.784,17,0.739,18,0.804,20,0.804,22,0.215,23,0.712,25,1.218,26,1.637,34,1.449,38,0.804,39,0.419,43,1.267,47,0.033,48,0.693,49,0.527,50,0.665,54,0.804,55,1.031,60,0.62,72,1.934,81,0.958,86,1.114,87,0.804,91,0.569,92,0.332,94,0.804,99,1.031,100,0.739,101,0.874,102,1.023,103,0.874,104,0.4,105,0.375,106,0.566,109,0.62,110,1.832,111,2.195,115,1.651,117,1.12,132,2.598,153,0.566,154,1.33,157,0.678,174,0.021,175,0.021,188,0.874,189,1.837,191,1.753,225,1.449,291,2.192,292,2.2,328,0.804,329,0.739,330,1.327,331,2.195,335,2.426,350,1.753,401,1.837,413,1.589,418,2.195,434,1.949,439,1.627,483,1.686,526,2.195,543,1.449,563,3.34,564,1.949,565,1.949,566,3.095,567,1.949,568,2.426,569,2.274,570,2.698,571,2.195,572,2.195,573,3.038,574,2.524,575,2.524,576,1.949,577,1.949,578,2.524,579,3.038,580,2.524,581,5.098,582,3.494,583,3.494,584,2.195,585,3.494,586,3.494,587,3.494,588,2.524,589,3.494,590,3.494,591,2.195,592,3.494,593,2.195,594,3.494,595,2.195,596,3.494,597,2.195,598,3.494,599,3.494,600,2.698,601,2.195,602,2.524,603,1.949,604,2.524,605,3.936,606,2.524,607,5.098,608,3.936,609,2.524,610,2.524,611,2.524,612,2.524,613,2.524,614,2.524,615,2.524,616,2.524,617,2.524,618,2.524,619,2.524,620,2.524,621,2.524,622,2.524,623,1.753,624,2.524,625,1.218,626,2.195,627,1.949,628,2.524]],["title/components/DebugPanelComponent.html",[0,0.081,153,0.596]],["body/components/DebugPanelComponent.html",[0,0.151,1,0.509,2,0.395,3,0.207,4,0.717,5,0.717,6,0.717,7,0.146,11,0.745,12,1.144,13,0.717,14,1.641,15,1.169,16,0.887,17,0.729,18,0.966,20,0.966,22,0.176,23,0.618,24,0.888,25,1.732,26,2.002,33,0.618,34,1.188,38,1.26,39,0.504,40,1.437,43,1.393,44,0.755,46,0.68,47,0.033,48,0.681,49,0.554,50,0.73,54,0.966,55,0.845,59,0.662,60,0.972,72,1.732,81,0.618,86,0.966,87,0.659,91,0.52,92,0.272,94,0.659,99,0.845,100,0.606,101,0.717,102,1.051,103,0.717,104,0.359,105,0.307,106,0.464,109,0.509,110,1.793,111,1.799,114,1.239,115,1.595,117,0.918,132,2.546,135,1.303,140,0.606,141,1.05,142,1.05,143,0.966,144,1.369,145,0.717,146,1.05,147,0.509,148,0.717,149,0.509,150,0.717,151,0.509,152,1.05,153,0.887,154,1.416,155,0.717,156,0.509,157,0.964,158,0.509,159,0.509,160,0.717,161,0.509,162,0.888,163,0.717,164,0.509,165,0.717,166,0.509,167,0.717,168,0.556,169,0.717,170,0.509,171,0.717,172,0.509,173,0.717,174,0.018,175,0.018,188,1.05,189,2.078,191,1.437,225,2.676,291,2.123,292,2.26,328,0.659,329,0.606,330,1.087,331,1.799,335,2.106,350,1.437,401,1.594,413,1.909,418,1.799,434,2.341,439,1.141,483,1.463,526,1.799,543,1.188,563,3.396,564,3.599,565,1.597,566,3.25,567,1.597,568,2.106,569,2.5,570,2.341,571,1.799,572,1.799,573,2.637,574,3.032,575,3.032,576,2.341,577,3.052,578,2.069,579,2.637,580,2.069,581,4.9,582,3.032,583,3.032,584,1.799,585,3.032,586,3.032,587,3.032,588,2.069,589,3.032,590,3.032,591,1.799,592,3.032,593,1.799,594,3.032,595,1.799,596,3.032,597,1.799,598,3.032,599,3.59,600,2.772,601,2.637,602,3.032,603,1.597,604,2.069,605,3.783,606,2.069,607,4.9,608,3.783,609,2.069,610,2.069,611,2.069,612,2.069,613,2.069,614,2.069,615,2.069,616,2.069,617,2.069,618,2.069,619,2.069,620,3.032,621,3.032,622,3.953,623,1.437,624,2.069,625,0.998,626,3.122,627,1.597,628,2.069,629,3.633,630,3.633,631,2.478,632,2.478,633,2.478,634,2.478,635,2.478,636,3.633,637,3.633,638,3.633,639,1.741]],["title/components/EditClusterComponent.html",[0,0.081,156,0.654]],["body/components/EditClusterComponent.html",[0,0.132,1,0.547,2,0.32,3,0.222,4,0.771,5,0.771,6,0.771,7,0.157,11,0.786,12,1.193,13,0.771,14,1.658,15,1.143,16,0.499,17,0.411,18,1.019,20,1.019,22,0.189,23,0.652,24,1.457,25,1.806,26,2.033,28,1.816,33,0.652,36,2.781,38,1.304,39,0.531,40,1.546,41,1.647,42,1.647,43,1.361,44,0.826,46,0.84,47,0.033,48,0.612,49,0.626,50,0.622,53,1.543,55,1.672,56,3.795,58,2.014,59,0.691,60,0.92,63,2.149,66,2.781,68,1.408,69,2.781,70,2.781,71,3.923,72,1.974,73,2.002,81,1.049,84,1.681,85,1.307,86,1.019,87,1.304,91,0.612,92,0.293,93,0.91,94,0.71,95,0.988,96,0.988,97,1.074,98,0.988,99,0.91,100,0.652,101,0.771,102,0.652,103,0.771,104,0.222,105,0.33,106,0.84,108,1.661,109,0.786,110,1.297,112,0.771,113,1.074,114,0.91,115,0.71,116,1.419,117,1.419,123,0.988,128,2.89,129,1.936,130,1.936,131,1.936,135,1.402,139,3.159,140,0.652,141,1.108,142,1.108,143,1.019,144,1.417,145,0.771,146,1.108,147,0.547,148,0.771,149,0.547,150,0.771,151,0.547,152,1.108,153,0.499,154,0.652,155,0.771,156,1.006,157,1.337,158,0.547,159,0.547,160,0.771,161,0.547,162,0.937,163,0.771,164,0.547,165,0.771,166,0.547,167,0.771,168,0.598,169,0.771,170,0.547,171,0.771,172,0.547,173,0.771,174,0.019,175,0.019,188,1.417,251,4.372,328,0.71,329,0.652,330,1.17,332,2.841,338,1.402,354,2.221,451,2.781,462,3.159,485,3.227,486,3.198,487,3.198,543,2.349,597,1.936,600,2.47,623,1.546,625,1.074,640,4.372,641,2.226,642,4.901,643,5.404,644,4.901,645,3.831,646,2.667,647,2.667,648,3.831,649,2.667,650,2.667,651,2.667,652,2.667,653,2.667,654,2.667,655,2.667,656,4.484,657,3.831,658,3.831,659,4.484,660,2.667,661,2.667,662,2.667,663,2.667]],["title/components/EditUserComponent.html",[0,0.081,158,0.654]],["body/components/EditUserComponent.html",[0,0.128,1,0.501,2,0.3,3,0.204,4,0.706,5,0.706,6,0.706,7,0.144,10,1.771,11,0.737,12,1.134,13,0.706,14,1.627,15,1.164,16,0.457,17,0.929,18,0.955,19,2.998,20,0.955,21,2.998,22,0.173,23,0.611,24,1.43,25,1.717,26,1.995,27,2.182,28,1.741,29,1.576,31,2.725,32,2.471,33,0.611,35,2.998,36,2.607,38,1.251,39,0.498,40,1.414,41,1.607,42,1.607,43,1.324,44,0.842,45,2.037,46,0.938,47,0.033,48,0.634,49,0.634,50,0.694,53,1.447,54,1.251,55,1.453,56,3.583,58,1.888,59,0.834,60,0.965,61,2.998,63,2.401,64,3.111,65,3.557,66,2.607,68,1.573,69,3.412,70,2.607,71,3.803,72,1.894,73,1.941,77,2.725,79,2.037,81,1.053,82,2.037,84,1.576,85,1.603,86,0.955,87,0.955,88,2.037,91,0.595,92,0.268,93,0.832,94,0.649,95,0.904,96,0.904,97,0.983,98,0.904,99,0.832,100,0.597,101,0.706,102,0.597,103,0.706,104,0.204,105,0.302,106,0.798,107,3.557,108,1.33,109,0.737,110,1.232,112,0.706,113,0.983,114,0.832,115,1.134,116,1.33,117,1.579,121,1.771,123,0.904,128,2.747,129,1.771,130,1.771,131,1.771,132,1.447,135,1.283,136,2.082,137,2.082,138,1.888,139,3.03,140,0.597,141,1.038,142,1.038,143,0.955,144,1.359,145,0.706,146,1.038,147,0.501,148,0.706,149,0.501,150,0.706,151,0.501,152,1.038,153,0.457,154,0.597,155,0.706,156,0.501,157,1.272,158,0.965,159,0.501,160,0.706,161,0.501,162,0.878,163,0.706,164,0.501,165,0.706,166,0.501,167,0.706,168,0.547,169,0.706,170,0.501,171,0.706,172,0.501,173,0.706,174,0.018,175,0.018,181,3.222,255,3.546,351,1.888,452,2.607,456,2.253,507,2.082,595,1.771,600,2.315,623,1.414,625,0.983,640,4.44,664,4.7,665,2.998,666,3.591,667,2.44,668,2.998,669,2.44,670,2.998,671,2.44,672,2.44,673,3.591,674,2.44,675,3.591,676,2.44,677,2.44,678,2.44,679,2.998,680,2.44,681,3.591,682,2.998,683,2.44,684,2.998]],["title/injectables/ErrorHandlerService.html",[219,2.053,379,0.847]],["body/injectables/ErrorHandlerService.html",[2,0.301,3,0.301,7,0.213,11,0.968,17,0.809,22,0.256,33,0.894,39,0.728,44,0.654,46,0.676,47,0.033,48,0.397,49,0.397,50,0.501,53,2.495,55,1.232,59,0.556,60,0.968,91,0.518,92,0.397,104,0.301,105,0.447,112,1.044,117,1.338,135,1.898,143,0.961,174,0.023,175,0.023,188,1.044,206,2.093,218,3.938,219,3.041,243,3.015,292,1.898,300,3.5,323,2.093,328,0.961,329,0.883,344,2.093,374,3.015,379,1.398,392,2.093,398,3.938,422,3.015,423,3.015,483,1.9,507,2.735,550,2.093,559,2.621,576,2.328,603,2.328,605,4.14,608,4.154,685,4.386,686,3.015,687,4.717,688,3.611,689,4.717,690,5.571,691,3.611,692,3.938,693,5.254,694,5.315,695,3.611,696,3.015,697,3.611,698,3.611,699,3.611,700,3.611,701,4.717,702,3.611,703,3.611,704,3.611,705,3.611,706,3.015,707,3.611,708,4.717,709,3.611,710,4.717,711,4.717,712,3.611,713,3.611,714,3.611,715,3.611,716,3.015,717,3.611,718,4.717,719,3.611,720,4.717,721,3.611,722,3.611,723,3.611,724,3.611,725,3.611,726,3.611,727,3.611,728,3.611,729,3.015,730,3.611,731,3.611,732,2.621,733,3.611,734,2.621,735,2.621,736,3.611,737,3.611,738,3.611,739,3.015,740,3.611,741,3.611,742,3.015,743,3.611,744,3.611,745,3.611,746,3.611,747,3.611,748,3.611,749,3.611,750,3.611,751,4.717,752,3.611,753,3.611,754,3.611,755,3.611,756,3.611,757,3.611,758,3.611,759,3.611,760,3.611]],["title/components/LoginComponent.html",[0,0.081,159,0.654]],["body/components/LoginComponent.html",[0,0.136,1,0.584,2,0.335,3,0.237,4,0.823,5,0.823,6,0.823,7,0.168,11,0.823,12,1.237,13,0.823,14,1.665,15,1.209,16,0.533,17,0.438,18,1.068,20,1.068,22,0.202,23,0.683,26,1.721,27,2.286,29,2.49,33,0.683,38,1.343,39,0.556,44,0.787,46,0.533,47,0.033,48,0.511,49,0.554,50,0.395,54,0.757,56,2.587,57,2.913,59,0.716,60,0.954,68,1.26,73,1.487,76,3.374,81,0.859,85,1.883,86,0.757,91,0.623,92,0.313,94,0.757,95,1.054,104,0.237,105,0.353,106,0.945,109,0.823,112,1.459,123,1.054,136,1.65,137,1.65,138,1.496,140,0.696,141,1.16,142,1.16,143,1.068,144,1.459,145,0.823,146,1.16,147,0.584,148,0.823,149,0.584,150,0.823,151,0.584,152,1.16,153,0.751,154,1.35,155,0.823,156,0.584,157,0.9,158,0.584,159,1.036,160,0.823,161,0.584,162,1.234,163,0.823,164,0.584,165,0.823,166,0.584,167,0.823,168,0.638,169,0.823,170,0.584,171,0.823,172,0.584,173,0.823,174,0.02,175,0.02,180,2.926,183,3.253,185,2.996,188,0.823,202,2.72,225,1.364,226,2.066,239,2.066,241,2.066,247,1.65,267,2.109,300,2.694,335,2.326,356,2.419,357,3.35,367,2.066,370,4.119,381,3.374,382,1.835,383,2.694,401,2.543,408,1.923,410,2.913,424,2.376,435,4.213,483,1.147,522,2.587,550,2.926,566,3.253,603,1.835,605,2.996,608,2.996,625,1.617,639,1.364,732,2.913,761,2.376,762,4.013,763,4.013,764,5.047,765,5.047,766,5.047,767,4.213,768,2.846,769,5.522,770,4.013,771,2.846,772,2.846,773,4.013,774,4.013,775,2.109,776,4.013,777,3.35,778,4.013,779,3.35,780,2.846,781,3.664,782,2.913,783,2.587,784,5.047,785,2.846,786,2.846,787,2.846,788,2.846,789,4.013,790,2.846,791,2.846,792,4.648,793,2.846,794,2.846,795,2.846,796,2.846,797,2.846,798,5.047,799,2.846,800,2.066,801,2.376,802,2.066,803,2.066,804,2.376,805,2.913,806,4.013,807,4.013,808,4.013]],["title/components/MainComponent.html",[0,0.081,161,0.654]],["body/components/MainComponent.html",[0,0.153,1,0.847,2,0.428,3,0.344,4,1.193,5,1.193,6,1.193,7,0.243,11,1.054,12,1.488,13,1.193,14,1.743,15,1.277,16,0.773,17,0.636,18,1.366,20,1.366,22,0.293,33,0.874,38,1.557,39,0.775,44,0.712,47,0.033,48,0.564,59,0.636,60,0.847,91,0.453,92,0.453,104,0.344,105,0.511,140,1.009,141,1.485,142,1.485,143,1.366,144,1.692,145,1.193,146,1.485,147,0.847,148,1.193,149,0.847,150,1.193,151,0.847,152,1.485,153,0.773,154,1.009,155,1.193,156,0.847,157,1.152,158,0.847,159,0.847,160,1.193,161,1.201,162,1.431,163,1.193,164,0.847,165,1.193,166,0.847,167,1.193,168,0.925,169,1.193,170,0.847,171,1.193,172,0.847,173,1.193,174,0.025,175,0.025,328,1.098,329,1.009,330,1.811,809,3.444,810,5.136,811,5.136,812,5.136,813,4.126,814,4.126]],["title/injectables/MockupBackendService.html",[42,0.921,379,0.847]],["body/injectables/MockupBackendService.html",[2,0.27,3,0.177,7,0.125,11,0.436,15,0.436,17,0.927,22,0.402,24,1.155,27,1.581,28,2.1,29,2.271,33,0.551,34,1.553,39,0.544,42,0.937,44,0.829,46,1.1,47,0.033,48,0.646,49,0.646,50,0.815,53,1.581,54,1.564,59,0.978,63,2.386,81,1.118,85,0.725,86,0.862,91,0.547,92,0.234,93,0.725,104,0.177,105,0.263,109,0.969,117,1.75,125,2.352,139,2.53,174,0.016,175,0.016,177,1.118,205,2.088,245,1.543,291,1.581,323,1.232,327,1.371,328,0.566,329,0.52,344,1.232,351,3.143,377,2.53,379,1.044,380,1.118,384,1.232,401,2.073,402,3.208,410,1.543,411,2.352,413,2.307,416,1.775,417,1.775,441,2.352,442,2.704,443,2.704,444,2.704,445,2.704,446,2.704,447,2.704,448,2.704,449,2.704,450,2.352,451,2.352,452,2.352,453,2.704,455,2.704,456,2.717,458,2.704,460,2.704,462,3.208,463,2.704,465,2.704,467,2.704,469,2.704,471,2.704,473,2.704,477,2.704,479,2.704,481,2.704,483,1.305,485,2.544,492,2.088,539,2.616,568,1.232,696,4.951,716,1.775,734,1.543,735,1.543,815,5.026,816,1.775,817,2.126,818,2.126,819,6.06,820,2.704,821,2.126,822,2.704,823,2.126,824,3.24,825,2.126,826,2.704,827,2.126,828,2.126,829,2.126,830,2.126,831,2.126,832,2.126,833,2.126,834,2.126,835,2.126,836,2.126,837,2.126,838,6.022,839,2.352,840,2.088,841,1.371,842,2.352,843,1.543,844,1.543,845,1.543,846,1.543,847,5.979,848,5.668,849,3.24,850,1.775,851,2.126,852,2.126,853,2.126,854,2.126,855,2.126,856,5.465,857,5.465,858,5.465,859,3.925,860,3.186,861,3.925,862,3.925,863,3.925,864,4.388,865,3.24,866,2.126,867,2.126,868,3.24,869,2.126,870,2.126,871,2.126,872,2.126,873,1.775,874,2.126,875,2.126,876,1.775,877,3.24,878,2.126,879,2.126,880,2.126,881,2.126,882,2.126,883,2.126,884,2.126,885,2.126,886,2.126,887,3.24,888,2.126,889,2.126]],["title/interfaces/Notification.html",[439,1,569,1.398]],["body/interfaces/Notification.html",[2,0.331,3,0.331,7,0.234,16,0.744,22,0.39,23,0.854,39,0.551,43,0.971,47,0.033,49,0.686,50,0.856,59,0.847,81,1.073,87,1.536,91,0.436,92,0.436,104,0.418,105,0.492,106,0.744,109,1.029,174,0.025,175,0.025,177,2.089,291,1.601,311,3.543,315,1.905,328,1.057,329,0.971,379,1.335,384,2.303,390,2.303,392,2.303,408,1.905,439,1.575,539,2.637,569,2.613,625,2.326,627,3.722,639,1.905,775,2.089,890,2.884,891,3.317,892,4.187,893,3.317,894,3.317,895,2.884,896,2.884,897,2.884,898,2.884,899,2.884,900,3.317,901,3.317,902,3.317,903,4.187,904,3.317,905,3.317,906,3.317,907,3.317,908,3.317,909,3.317,910,3.317,911,3.317,912,3.317,913,3.317,914,4.187,915,2.884,916,3.317,917,4.589,918,3.317,919,2.884,920,3.317,921,3.317,922,3.317,923,3.317,924,3.317]],["title/components/NotificationsComponent.html",[0,0.081,164,0.654]],["body/components/NotificationsComponent.html",[0,0.136,1,0.593,2,0.463,3,0.241,4,0.836,5,0.836,6,0.836,7,0.17,11,0.832,12,1.247,13,0.836,14,1.668,15,1.213,16,0.541,17,0.445,18,1.079,20,1.079,22,0.205,23,0.69,24,1.494,25,1.888,33,0.69,38,1.352,39,0.562,41,1.682,42,1.648,43,1.393,44,0.806,46,0.759,47,0.033,48,0.558,49,0.665,50,0.769,57,3.689,59,0.722,60,1.098,68,1.274,91,0.658,92,0.317,93,0.986,96,1.071,97,1.164,98,1.071,99,0.986,100,0.706,101,0.836,102,0.706,103,0.836,104,0.241,105,0.358,106,0.877,109,0.593,110,1.173,114,1.383,115,1.247,116,1.503,127,3.386,140,0.706,141,1.469,142,1.173,143,1.079,144,1.469,145,0.836,146,1.173,147,0.593,148,0.836,149,0.593,150,0.836,151,0.593,152,1.173,153,0.541,154,0.706,155,0.836,156,0.593,157,0.91,158,0.593,159,0.593,160,0.836,161,0.593,162,0.992,163,0.836,164,1.043,165,0.836,166,0.593,167,0.836,168,0.648,169,0.836,170,0.593,171,0.836,172,0.593,173,0.836,174,0.02,175,0.02,188,1.173,189,1.78,205,3.275,315,1.944,328,0.769,329,0.706,340,2.944,392,2.945,397,3.386,413,2.132,559,2.944,569,2.629,576,3.275,577,2.614,579,2.098,625,2.343,639,1.944,692,3.386,775,2.132,895,2.944,896,2.944,897,4.291,898,4.222,899,2.944,915,2.098,925,2.412,926,4.056,927,4.056,928,5.081,929,2.89,930,2.89,931,2.89,932,2.89,933,2.89,934,2.412,935,2.89,936,2.89,937,4.056,938,4.056,939,4.056,940,4.056,941,4.056,942,4.056,943,4.056,944,4.056,945,4.056,946,4.056,947,4.056,948,4.056,949,4.056,950,4.056,951,4.056,952,2.89,953,3.386,954,2.89,955,2.412,956,2.412,957,2.89,958,2.89,959,4.056,960,2.89,961,2.89,962,4.056,963,4.056,964,4.056]],["title/injectables/NotificationsService.html",[43,0.779,379,0.847]],["body/injectables/NotificationsService.html",[2,0.314,3,0.314,7,0.222,16,1.059,22,0.38,23,0.824,33,0.824,39,0.743,43,1.184,44,0.831,46,0.907,47,0.033,48,0.532,49,0.588,50,0.784,59,0.923,60,0.994,81,0.912,87,1,91,0.413,92,0.413,104,0.404,105,0.466,106,1.003,109,0.994,174,0.024,175,0.024,177,1.976,291,1.951,311,2.424,315,1.802,328,1,329,0.919,379,1.425,384,2.18,390,2.807,392,2.807,408,1.802,439,1.181,539,2.545,569,2.738,625,1.515,627,2.424,639,2.321,775,2.545,890,2.73,891,4.722,892,4.042,893,4.042,894,3.139,895,4.106,896,3.515,897,3.515,898,3.515,899,3.515,900,3.139,901,3.139,902,3.139,903,4.722,904,4.042,905,4.042,906,4.042,907,4.042,908,4.722,909,3.139,910,3.139,911,3.139,912,3.139,913,3.139,914,4.042,915,2.73,916,3.139,917,4.471,918,3.139,919,2.73,920,3.139,921,3.139,922,3.139,923,3.139,924,3.139,934,3.139,965,4.843,966,4.843,967,3.76,968,3.76,969,3.76,970,3.76,971,3.76,972,3.76]],["title/components/OrganizationComponent.html",[0,0.081,166,0.654]],["body/components/OrganizationComponent.html",[0,0.151,1,0.709,2,0.457,3,0.193,4,0.669,5,0.669,6,0.669,7,0.137,9,1.492,11,0.709,12,1.099,13,0.669,14,1.624,15,1.093,16,1.025,17,0.982,18,0.919,20,0.919,22,0.164,23,0.588,24,1.413,26,1.562,27,1.391,28,1.904,31,2.002,32,1.216,33,0.588,34,2.196,38,1.219,39,0.479,41,1.583,42,1.583,43,1.302,44,0.812,46,0.773,47,0.033,48,0.615,49,0.615,50,0.573,54,0.919,59,0.755,60,1.006,63,1.655,64,2.171,68,1.539,73,1.697,81,0.996,84,1.515,85,1.867,86,1.367,87,0.919,91,0.635,92,0.254,93,0.789,94,0.616,95,0.857,96,0.857,97,0.932,98,0.857,99,0.789,100,0.566,101,0.669,102,0.566,103,0.669,104,0.193,105,0.287,106,0.918,108,1.815,109,1.006,110,1.195,112,0.669,113,0.932,114,0.789,115,0.616,116,1.279,123,1.697,125,3.325,140,0.566,141,0.999,142,0.999,143,0.919,144,1.325,145,0.669,146,0.999,147,0.475,148,0.669,149,0.475,150,0.669,151,0.475,152,0.999,153,0.433,154,0.566,155,0.669,156,0.475,157,1.227,158,0.709,159,0.475,160,0.669,161,0.475,162,0.844,163,0.669,164,0.475,165,0.669,166,0.94,167,0.669,168,0.519,169,0.669,170,0.475,171,0.669,172,0.709,173,0.669,174,0.02,175,0.017,180,2.655,181,1.341,182,1.932,183,2.953,185,2.226,203,2.196,248,1.492,249,1.932,254,2.507,255,1.341,258,1.68,259,1.68,291,1.391,315,1.655,328,0.616,329,0.566,330,1.016,336,2.002,337,1.492,338,2.702,339,1.492,350,2.002,356,1.655,456,1.655,522,2.226,543,1.109,548,2.883,584,1.68,639,1.98,775,1.815,781,3.731,782,3.731,783,3.313,800,2.999,802,2.999,803,2.999,820,2.883,873,3.824,876,3.824,973,1.932,974,3.453,975,3.453,976,4.569,977,5.14,978,2.883,979,3.453,980,4.581,981,3.448,982,3.453,983,2.314,984,2.314,985,3.453,986,2.314,987,3.453,988,2.314,989,2.314,990,2.314,991,2.314,992,5.595,993,2.314,994,2.314,995,2.314,996,4.581,997,2.314,998,4.131,999,4.581,1000,2.314,1001,1.932,1002,4.131,1003,4.131,1004,2.314,1005,4.29,1006,2.314,1007,2.314,1008,4.131,1009,1.932,1010,2.314,1011,3.453,1012,3.453,1013,3.453,1014,2.507,1015,3.453,1016,3.453]],["title/components/SidebarComponent.html",[0,0.081,170,0.654]],["body/components/SidebarComponent.html",[0,0.138,1,0.496,2,0.39,3,0.202,4,0.699,5,0.699,6,0.699,7,0.143,11,0.732,12,1.127,13,0.699,14,1.635,15,1.161,16,0.452,17,0.872,18,0.949,20,0.949,22,0.171,23,0.607,24,1.427,26,1.596,27,2.233,28,2.001,31,1.401,32,1.27,33,0.607,38,1.245,39,0.494,41,1.562,42,1.603,44,0.827,46,0.668,47,0.033,48,0.649,49,0.609,50,0.494,53,1.436,59,0.769,60,1.024,64,2.914,68,0.759,73,1.733,81,1.046,84,2.053,85,1.89,86,0.949,87,0.949,91,0.632,92,0.265,93,0.824,94,0.643,95,0.895,96,0.895,97,0.973,98,0.895,100,0.591,101,0.699,102,0.591,103,0.699,104,0.202,105,0.299,106,0.793,108,1.849,109,0.96,110,1.225,112,0.699,113,0.973,114,0.824,115,0.643,116,1.321,123,0.895,140,0.591,141,1.031,142,1.031,143,0.949,144,1.353,145,0.699,146,1.031,147,0.496,148,0.699,149,0.496,150,0.699,151,0.496,152,1.031,153,0.668,154,1.277,155,0.699,156,0.496,157,1.171,158,0.732,159,0.496,160,0.699,161,0.496,162,1.277,163,0.699,164,0.496,165,0.699,166,0.496,167,0.699,168,0.542,169,0.699,170,0.96,171,0.699,172,0.496,173,0.699,174,0.018,175,0.018,180,2.712,181,1.401,183,3.016,185,2.732,188,1.225,202,2.242,203,2.242,225,1.158,226,1.754,241,1.754,254,1.754,255,1.401,258,1.754,259,1.754,267,1.874,287,1.754,328,0.643,329,0.591,330,1.06,332,2.456,336,2.067,337,1.558,338,1.874,339,1.558,356,1.709,401,1.565,402,3.366,456,2.831,483,1.436,506,3.396,507,2.067,508,2.977,522,2.298,543,2.031,550,2.067,566,3.016,568,2.892,570,3.016,591,1.754,639,1.709,729,2.977,767,3.905,777,3.537,781,3.79,782,3.79,783,3.366,800,2.588,801,2.017,802,2.588,803,2.588,804,2.017,955,2.017,956,2.017,978,3.905,981,3.537,1001,2.017,1005,2.977,1009,2.017,1017,2.017,1018,3.566,1019,3.566,1020,3.566,1021,3.566,1022,2.416,1023,3.566,1024,3.566,1025,2.416,1026,2.416,1027,2.416,1028,3.566,1029,2.416,1030,2.416,1031,2.416,1032,2.416,1033,2.416,1034,2.416,1035,2.416,1036,4.238,1037,3.537,1038,4.238,1039,2.416,1040,3.566,1041,2.416,1042,2.416,1043,2.416,1044,2.416,1045,2.416,1046,2.416,1047,2.977,1048,3.566,1049,3.566]],["title/injectables/UpdateEventsService.html",[203,1.527,379,0.847]],["body/injectables/UpdateEventsService.html",[2,0.396,3,0.396,7,0.28,22,0.337,23,0.952,39,0.824,44,0.775,47,0.033,54,1.488,91,0.614,92,0.522,104,0.396,105,0.589,174,0.028,175,0.028,177,2.498,188,1.374,189,2.085,203,2.682,379,1.582,380,2.498,384,2.754,1050,4.963,1051,3.967,1052,6.139,1053,5.594,1054,5.946]],["title/components/UserInfoComponent.html",[0,0.081,172,0.654]],["body/components/UserInfoComponent.html",[0,0.128,1,0.504,2,0.419,3,0.205,4,0.711,5,0.711,6,0.711,7,0.145,11,0.741,12,1.139,13,0.711,14,1.639,15,1.114,16,0.46,17,0.966,18,0.961,20,0.961,22,0.174,23,0.615,24,1.432,25,1.724,26,1.998,28,1.747,29,2.305,31,2.734,33,0.615,38,1.255,39,0.5,40,1.425,41,1.611,42,1.611,43,1.327,44,0.843,46,0.676,47,0.033,48,0.612,49,0.644,50,0.5,54,0.654,59,0.809,60,0.878,64,3.038,68,1.344,73,1.338,77,1.425,81,1.078,84,1.585,85,1.231,86,0.961,87,0.961,91,0.612,92,0.27,93,0.838,94,0.654,96,0.911,97,0.99,98,0.911,99,0.838,100,0.601,101,0.711,102,0.601,103,0.711,104,0.205,105,0.305,106,0.801,108,1.862,109,0.504,110,1.238,112,0.711,113,0.99,114,0.838,115,0.961,116,1.338,117,0.911,123,1.338,128,2.327,132,0.99,135,1.292,136,2.093,137,2.093,138,1.898,140,0.601,141,1.044,142,1.044,143,0.961,144,1.364,145,0.711,146,1.044,147,0.504,148,0.711,149,0.504,150,0.711,151,0.504,152,1.044,153,0.46,154,0.601,155,0.711,156,0.504,157,1.058,158,0.504,159,0.504,160,0.711,161,0.504,162,0.883,163,0.711,164,0.504,165,0.711,166,0.504,167,0.711,168,0.551,169,0.711,170,0.504,171,0.711,172,0.968,173,0.711,174,0.018,175,0.018,181,3.229,188,1.044,191,1.425,248,3.947,327,1.584,328,0.654,329,0.601,330,1.079,332,2.093,338,1.898,345,1.784,441,3.424,450,3.424,456,2.409,507,2.093,543,1.731,593,1.784,601,2.621,623,2.093,625,1.455,665,3.014,668,3.014,670,3.014,679,3.014,682,4.385,684,2.052,775,2.479,822,4.533,840,1.584,841,1.584,976,3.937,1037,2.052,1047,3.014,1055,5.112,1056,2.052,1057,3.611,1058,3.611,1059,5.253,1060,5.253,1061,3.611,1062,2.458,1063,2.458,1064,4.717,1065,4.717,1066,2.458,1067,2.458,1068,5.025,1069,2.458,1070,2.458,1071,2.458,1072,4.717,1073,4.717,1074,2.458,1075,2.458,1076,2.458,1077,2.458,1078,2.458,1079,2.458,1080,3.611,1081,2.458,1082,2.458,1083,2.458,1084,2.458,1085,2.458]],["title/coverage.html",[1086,3.622]],["body/coverage.html",[0,0.162,1,0.696,7,0.2,8,2.831,9,2.186,10,3.285,24,0.829,32,1.783,41,0.981,42,0.981,43,0.829,47,0.033,49,0.373,54,0.902,100,0.829,102,0.829,147,0.696,149,0.696,151,0.696,153,0.635,156,0.696,158,0.696,159,0.696,161,0.696,164,0.696,166,0.696,168,0.761,170,0.696,172,0.696,174,0.022,175,0.022,176,2.831,202,1.626,203,1.626,219,2.186,222,2.462,225,2.442,248,2.186,251,2.462,255,1.966,266,2.831,275,2.462,276,2.462,315,3.026,353,4.606,379,1.55,396,2.831,408,2.169,439,1.707,440,2.831,484,2.831,490,2.462,491,2.462,556,2.462,557,2.831,558,2.831,563,2.186,564,3.283,565,3.283,567,2.186,569,1.488,640,3.285,641,2.831,685,2.831,686,2.831,761,2.831,809,2.831,815,2.831,816,2.831,839,2.462,840,2.186,841,2.186,842,2.462,843,2.462,844,2.462,845,2.462,846,2.462,890,3.285,925,2.831,973,2.831,1017,2.831,1050,2.831,1051,2.831,1055,2.831,1056,2.831,1086,2.831,1087,2.831,1088,3.392,1089,3.392,1090,2.831,1091,3.392,1092,3.392,1093,2.831,1094,4.7,1095,6.041,1096,3.392,1097,3.392,1098,3.392,1099,3.392,1100,3.392,1101,3.392,1102,5.094,1103,4.526,1104,2.831,1105,2.831,1106,2.831,1107,2.831,1108,6.345,1109,3.392,1110,2.831,1111,3.392,1112,3.392,1113,5.435,1114,4.526,1115,3.392,1116,3.392,1117,4.526,1118,3.392,1119,3.392,1120,3.392,1121,3.392,1122,3.392,1123,3.392,1124,3.392,1125,3.392,1126,3.392,1127,3.778,1128,3.392,1129,2.831,1130,3.392,1131,3.392,1132,3.392,1133,3.392,1134,3.392,1135,3.392,1136,5.269,1137,2.831,1138,3.285,1139,3.285,1140,3.778,1141,3.285,1142,3.392,1143,3.392]],["title/dependencies.html",[194,2.468,1144,2.224]],["body/dependencies.html",[47,0.033,92,0.504,94,1.22,95,2.029,174,0.027,175,0.027,194,2.956,210,4.572,211,3.976,215,3.828,216,2.658,239,3.328,245,3.328,247,2.658,380,2.41,382,2.956,383,3.175,953,3.828,1145,4.585,1146,6.454,1147,4.585,1148,4.585,1149,4.585,1150,4.585,1151,4.585,1152,4.585,1153,4.585,1154,5.477,1155,4.585,1156,4.585,1157,4.585,1158,4.585,1159,4.585,1160,4.585,1161,4.585,1162,4.585,1163,4.585,1164,4.585,1165,4.585,1166,5.477,1167,4.585,1168,4.585,1169,4.585]],["title/miscellaneous/functions.html",[408,1.835,1170,1.717]],["body/miscellaneous/functions.html",[22,0.359,47,0.029,174,0.029,175,0.029,408,2.427,1138,3.676,1139,4.669,1141,3.676,1170,3.264,1171,4.227,1172,4.227]],["title/index.html",[22,0.189,1014,1.934,1173,2.224]],["body/index.html",[0,0.145,3,0.359,7,0.254,15,0.883,47,0.026,48,0.473,54,1.145,63,2.527,68,1.352,112,1.244,138,2.262,162,1.289,174,0.026,175,0.026,206,2.494,292,2.262,298,4.048,323,2.494,390,3.443,492,2.774,506,3.826,626,4.136,694,4.757,779,3.592,860,4.311,1087,4.957,1144,3.592,1174,4.303,1175,4.303,1176,5.698,1177,4.303,1178,5.939,1179,4.303,1180,5.698,1181,4.303,1182,5.271,1183,4.303,1184,4.303,1185,5.271,1186,5.271,1187,6.201,1188,5.271,1189,4.303,1190,4.303,1191,4.303,1192,4.303,1193,4.303,1194,4.303,1195,4.303,1196,4.303,1197,6.093,1198,4.303,1199,4.303,1200,4.303,1201,4.303,1202,3.592,1203,5.271,1204,4.303,1205,4.303,1206,4.303,1207,5.271,1208,4.303,1209,4.303,1210,4.303,1211,3.592,1212,4.303,1213,4.303,1214,4.303,1215,4.303,1216,5.698,1217,4.303,1218,4.303,1219,4.303]],["title/license.html",[1014,1.934,1173,2.224,1220,2.224]],["body/license.html",[7,0.283,47,0.028,112,1.387,162,1.173,174,0.028,175,0.028,267,2.522,739,4.005,860,3.482,1211,4.005,1220,5.395,1221,4.797,1222,4.797,1223,5.97,1224,4.797,1225,4.797,1226,4.797,1227,4.797,1228,4.797,1229,4.797,1230,4.797,1231,4.797,1232,4.797,1233,4.797,1234,4.797,1235,4.797,1236,5.626,1237,4.797,1238,4.797,1239,4.797,1240,4.797,1241,4.797,1242,4.797,1243,4.797,1244,4.797,1245,4.797,1246,4.797,1247,4.797,1248,4.797]],["title/modules.html",[192,2.515]],["body/modules.html",[47,0.029,174,0.029,175,0.029,192,2.97,193,3.303,211,3.72,742,4.277,1249,5.124,1250,5.124]],["title/overview.html",[1251,3.622]],["body/overview.html",[0,0.106,1,1.151,41,1.622,47,0.033,95,1.539,104,0.347,140,1.016,147,1.279,149,1.151,151,1.151,153,1.05,156,1.151,158,1.151,159,1.279,161,1.151,164,1.151,166,1.151,168,1.258,170,1.151,172,1.151,174,0.025,175,0.025,192,2.99,193,4.311,194,2.678,195,3.468,196,3.468,197,3.468,198,3.468,199,3.468,200,3.468,201,3.468,202,2.689,203,2.689,204,4.306,205,2.678,206,2.408,364,3.016,379,1.105,439,1.305,539,2.711,541,3.016,805,3.016,1251,3.468,1252,3.468]],["title/miscellaneous/variables.html",[1094,2.779,1170,1.717]],["body/miscellaneous/variables.html",[2,0.23,15,1.053,16,0.324,17,0.661,22,0.123,25,1.112,27,1.931,29,0.76,32,1.809,34,0.83,47,0.033,48,0.7,49,0.647,54,0.461,55,1.96,58,0.91,64,0.91,72,2.266,81,0.47,86,0.916,87,1.496,100,0.841,102,0.675,106,0.898,110,1.605,115,0.734,121,3.48,132,0.697,136,2.974,137,1.6,138,1.451,157,0.388,174,0.014,175,0.014,188,1.715,189,2.771,216,1.6,222,2.498,225,0.83,267,1.451,275,2.498,276,2.498,291,1.728,298,3.924,300,2.486,305,1.257,323,1.003,328,0.461,329,0.423,336,1.003,342,1.257,351,3.118,352,1.445,353,3.113,354,3.26,355,3.58,356,2.056,383,1.6,401,1.211,413,0.91,434,1.116,456,0.83,483,1.386,485,3.298,490,2.498,491,2.498,492,2.531,498,1.445,539,1.809,540,2.873,541,2.003,546,4.695,547,3.898,549,4.283,550,2.886,560,3.58,561,1.445,562,1.445,564,1.116,565,1.779,567,2.218,568,1.6,569,1.211,570,1.779,571,1.257,572,1.257,573,2.003,577,1.116,706,1.445,732,1.257,734,1.257,735,1.257,783,1.116,805,1.257,826,1.445,839,2.498,840,2.218,841,2.218,842,2.498,843,2.498,844,2.498,845,2.498,846,2.498,850,1.445,919,2.003,1090,1.445,1093,1.445,1094,1.257,1104,1.445,1105,2.304,1106,1.445,1107,2.304,1110,4.633,1127,1.445,1129,2.873,1136,1.445,1137,2.873,1138,1.257,1139,1.257,1140,4.002,1141,1.257,1170,1.116,1171,1.445,1172,1.445,1202,2.304,1252,2.304,1253,1.731,1254,1.731,1255,1.731,1256,5.55,1257,1.731,1258,1.731,1259,1.731,1260,1.731,1261,2.76,1262,2.76,1263,1.731,1264,1.731,1265,1.731,1266,1.731,1267,1.731,1268,1.731,1269,1.731,1270,1.731,1271,1.731,1272,1.731,1273,1.731,1274,1.731,1275,1.731,1276,1.731,1277,1.731,1278,1.731,1279,1.731,1280,1.731,1281,1.731,1282,1.731,1283,1.731,1284,1.731,1285,1.731,1286,1.731,1287,1.731,1288,1.731,1289,2.76,1290,2.76,1291,2.76,1292,5.624,1293,2.76,1294,5.624,1295,2.76,1296,2.76,1297,2.76,1298,2.76,1299,2.76,1300,3.441,1301,2.76,1302,3.926,1303,2.76,1304,2.76,1305,2.76,1306,2.76,1307,4.289,1308,3.926,1309,2.76,1310,1.731,1311,2.76,1312,1.731,1313,3.441,1314,4.289,1315,6.275,1316,6.061,1317,1.731,1318,2.76,1319,2.76,1320,1.731,1321,2.76,1322,2.76,1323,2.76,1324,4.57,1325,2.76,1326,5.26,1327,5.26,1328,5.26,1329,5.26,1330,5.26,1331,5.26,1332,5.26,1333,5.371,1334,5.26,1335,5.26,1336,5.26,1337,1.731,1338,1.731,1339,1.731,1340,1.731,1341,1.731,1342,2.76,1343,1.731,1344,2.76,1345,1.731,1346,1.731,1347,2.76,1348,1.731,1349,1.731,1350,2.76,1351,1.731,1352,1.731,1353,1.731,1354,1.731,1355,1.731,1356,1.731,1357,1.731,1358,1.731,1359,1.731,1360,1.731,1361,1.731,1362,1.731,1363,3.926,1364,1.731,1365,1.731,1366,1.731,1367,2.76,1368,1.731,1369,1.731,1370,1.731,1371,1.731,1372,2.76,1373,1.731,1374,1.731,1375,1.731,1376,1.731,1377,1.731,1378,1.731,1379,1.731,1380,1.731,1381,1.731,1382,1.731,1383,1.731,1384,1.731,1385,1.731,1386,1.731,1387,1.731,1388,2.76,1389,1.731,1390,1.731,1391,1.731]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":315,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0\">email",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0",{"_index":312,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["0.8.26",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":299,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["00ff00",{"_index":301,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["018e42cf",{"_index":851,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["0800200c9a61",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a70",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":295,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0x3",{"_index":922,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":923,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":539,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["10/20",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":353,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":628,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["11/17",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["13/21",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1252,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":919,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/33",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1225,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1231,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":349,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["200",{"_index":696,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":699,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1222,"title":{},"body":{"license.html":{}}}],["21321321321",{"_index":545,"title":{},"body":{"components/ClusterComponent.html":{}}}],["23",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":702,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31404/v1",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3tb",{"_index":544,"title":{},"body":{"components/ClusterComponent.html":{}}}],["4",{"_index":541,"title":{},"body":{"components/ClusterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":347,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["4/9",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":707,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":713,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":716,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":723,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":727,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["4798",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b4c",{"_index":853,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["4h",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":911,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":540,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["5/8",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":744,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":749,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["6/23",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c54334d6947",{"_index":855,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["6h",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7ad1a7a8",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/14",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["8804",{"_index":854,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["9",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["9071",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":296,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["96",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9acb",{"_index":852,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["_notif",{"_index":891,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":965,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1073,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":820,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":893,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":732,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":453,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1233,"title":{},"body":{"license.html":{}}}],["alert",{"_index":897,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":964,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":522,"title":{},"body":{"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":870,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":1178,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":501,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1224,"title":{},"body":{"license.html":{}}}],["api",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_url",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["app.configur",{"_index":362,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.descript",{"_index":360,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.id",{"_index":359,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.nam",{"_index":358,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.rout",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["app.servic",{"_index":363,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.tag",{"_index":361,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appcompon",{"_index":147,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":824,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["applic",{"_index":267,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications.component.html",{"_index":269,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications.component.scss",{"_index":268,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications/applications.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":149,"title":{"components/ApplicationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":193,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":502,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1198,"title":{},"body":{"index.html":{}}}],["assest",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":307,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["attent",{"_index":942,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":365,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":202,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1210,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1192,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":270,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["avail",{"_index":292,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":567,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":598,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":586,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":596,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":582,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":589,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":583,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":587,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":585,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":590,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":594,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":592,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":816,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:112",{"_index":821,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":817,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:125",{"_index":835,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:136",{"_index":837,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:159",{"_index":836,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:171",{"_index":831,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:181",{"_index":827,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:198",{"_index":823,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:208",{"_index":828,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:218",{"_index":825,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":833,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:41",{"_index":834,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:55",{"_index":832,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:67",{"_index":829,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:77",{"_index":830,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:90",{"_index":818,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1237,"title":{},"body":{"license.html":{}}}],["befor",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["behavior",{"_index":863,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":947,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":916,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":848,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":608,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1250,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1197,"title":{},"body":{"index.html":{}}}],["button",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1059,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":1060,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":670,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":914,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":341,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["carouselmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":605,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["celia",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":883,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":881,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":885,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changesonuserlist",{"_index":1052,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":665,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":668,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":962,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":548,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":1023,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1180,"title":{},"body":{"index.html":{}}}],["click",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":1183,"title":{},"body":{"index.html":{}}}],["close",{"_index":639,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":485,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":487,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":486,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":641,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":650,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":655,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":653,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":654,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":652,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":645,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":651,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":647,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":649,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:76",{"_index":646,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster10",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster8",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster9",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_id",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_typ",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":151,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":488,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":642,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":462,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":556,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":643,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":489,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":644,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1194,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":271,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["command",{"_index":1179,"title":{},"body":{"index.html":{}}}],["commun",{"_index":754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":725,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1227,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1207,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":563,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":607,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":604,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":739,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["configur",{"_index":355,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1065,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":708,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":700,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":728,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":697,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":619,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":750,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":714,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":760,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":287,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":929,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":719,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":636,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1229,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1221,"title":{},"body":{"license.html":{}}}],["core",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":515,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":1086,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":542,"title":{},"body":{"components/ClusterComponent.html":{}}}],["creat",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":550,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":507,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":272,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["danger",{"_index":945,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["darbi",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["data['totalclust",{"_index":533,"title":{},"body":{"components/ClusterComponent.html":{}}}],["data['totalnod",{"_index":534,"title":{},"body":{"components/ClusterComponent.html":{}}}],["date",{"_index":394,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dave",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davesmith@mail.com",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":153,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":928,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":822,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":441,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":455,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":194,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":348,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["descript",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":826,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1189,"title":{},"body":{"index.html":{}}}],["develop",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":679,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1196,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1186,"title":{},"body":{"index.html":{}}}],["discard",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":898,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":934,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":620,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1199,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1236,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1049,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1087,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":294,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["done",{"_index":939,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doughnut",{"_index":273,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["due",{"_index":710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":953,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["e456908fad13",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e4b1",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edg",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":573,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":156,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":158,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ellen",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellen.martin@mail.com",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":1080,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["engin",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":300,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error.statu",{"_index":695,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.statustext",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorhandl",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":219,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":956,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1051,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1053,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1226,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1204,"title":{},"body":{"index.html":{}}}],["expect",{"_index":862,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":393,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1241,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhy2nlc3miolsit1jhil0simv4cci6mtu0mji4njg2mywiawf0ijoxntqymjc2mdyzlcjpc3mioijhdxroecisimp0asi6iji1ota5zdnkltjlodmtndlmmc04zmqzltflymzintyxmtnhmsisim5izii6ije1ndiynzywnjmilcjvcmdhbml6yxrpb25jrci6ijdhzdfhn2e4lwu0yjetndc5oc05mdcxlwu0nty5mdhmywqxmyisinjvbguioijpd25lciisinvzzxjjrci6impvag4uzg9lqg1hawwuy29tin0",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":675,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1201,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1212,"title":{},"body":{"index.html":{}}}],["form",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":721,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":998,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":701,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":408,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1215,"title":{},"body":{"index.html":{}}}],["gain",{"_index":758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":747,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":494,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":497,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1173,"title":{"index.html":{},"license.html":{}},"body":{}}],["getapp",{"_index":442,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getapps(organizationid",{"_index":458,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getbaseurl",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getclust",{"_index":444,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail",{"_index":443,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail(clusterid",{"_index":460,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":463,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnod",{"_index":445,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnodes(clusterid",{"_index":465,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":971,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":446,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":467,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":447,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":469,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":448,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":471,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":449,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(organizationid",{"_index":473,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":705,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1218,"title":{},"body":{"index.html":{}}}],["good",{"_index":951,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":1246,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":274,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["group",{"_index":357,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{}}}],["group_work",{"_index":1048,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":364,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":906,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":687,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":689,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":692,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":686,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":691,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":688,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["hardcod",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":941,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":1216,"title":{},"body":{"index.html":{}}}],["helper",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1213,"title":{},"body":{"index.html":{}}}],["http://192.168.99.100",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1191,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1230,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":690,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1181,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":905,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1177,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":963,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":859,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["ik63rhhqhztqrk7dgiewcew0vrk",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1242,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["incorrect",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":1058,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":1057,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":1056,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:20",{"_index":1069,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1077,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":1074,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1071,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1079,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1075,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":1076,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1078,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1061,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1070,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:62",{"_index":1066,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:68",{"_index":1062,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1063,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1067,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":558,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":332,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":1005,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate.userid",{"_index":1041,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":379,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":958,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1182,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":560,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1208,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":439,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":711,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":549,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{}}}],["it'",{"_index":943,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":637,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":907,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh.peterson@mail.com",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":500,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":339,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1039,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":387,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":346,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["json.stringifi",{"_index":849,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttokendata",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockappslist",{"_index":888,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist",{"_index":887,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mocknodelist",{"_index":889,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":867,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":886,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist[index",{"_index":866,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(respons",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":336,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1206,"title":{},"body":{"index.html":{}}}],["key",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1240,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":546,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":1245,"title":{},"body":{"license.html":{}}}],["law",{"_index":1232,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1024,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":735,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1209,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1220,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1248,"title":{},"body":{"license.html":{}}}],["line",{"_index":323,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":330,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":734,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":915,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":291,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":543,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorag",{"_index":335,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":331,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":597,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":337,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":579,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":584,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":588,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":526,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":591,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":595,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":593,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":618,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":611,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":617,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":606,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":613,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":609,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":612,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":610,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":614,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":616,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":615,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.reload",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":159,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":730,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":950,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":810,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":812,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":811,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":161,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1175,"title":{},"body":{"index.html":{}}}],["map",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["map(respons",{"_index":857,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["martin",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":918,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecoz_udyimldug",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":625,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikeslashis@mail.com",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1170,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":275,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":276,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappslist",{"_index":845,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":490,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":843,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":878,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":882,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].label",{"_index":884,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":880,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":839,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":846,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":491,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":841,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":842,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":844,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":42,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":840,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":864,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":869,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":871,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].email",{"_index":874,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].nam",{"_index":872,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].role_nam",{"_index":875,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":600,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":192,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1217,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":547,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nativedock",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navig",{"_index":1190,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":715,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":559,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":662,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":661,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":663,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["next",{"_index":329,"title":{},"body":{"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1187,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":492,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":553,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":551,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":552,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":555,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":554,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":493,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":569,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":968,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":927,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":926,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":164,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":577,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":43,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1176,"title":{},"body":{"index.html":{}}}],["null",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":311,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":334,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["observ",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1228,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":877,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["on",{"_index":508,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":895,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":899,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":978,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":985,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":979,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":987,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":629,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":602,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":317,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["organ",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":1006,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":975,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":974,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization_mock",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":166,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":976,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":955,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["overview",{"_index":1251,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1144,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":729,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":566,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":574,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":575,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":565,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:100",{"_index":632,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:145",{"_index":633,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:38",{"_index":635,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":630,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:42",{"_index":634,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:48",{"_index":631,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["password).pipe(map(respons",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirm",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":704,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1247,"title":{},"body":{"license.html":{}}}],["persist",{"_index":599,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1047,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["peterson",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pie",{"_index":305,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":856,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["platform",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":580,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":755,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1200,"title":{},"body":{"index.html":{}}}],["product",{"_index":1202,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":568,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1185,"title":{},"body":{"index.html":{}}}],["promis",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1214,"title":{},"body":{"index.html":{}}}],["r",{"_index":917,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":277,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["reactiveformsmodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":940,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":1219,"title":{},"body":{"index.html":{}}}],["real",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":693,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":278,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["refresh_token",{"_index":850,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regist",{"_index":350,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":1193,"title":{},"body":{"index.html":{}}}],["remov",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":957,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":308,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["replic",{"_index":861,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":1184,"title":{},"body":{"index.html":{}}}],["request",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["requir",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":450,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":477,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":483,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":344,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["response(new",{"_index":847,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":345,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["response.email",{"_index":1044,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.json",{"_index":858,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response.nam",{"_index":1001,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":1045,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1003,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["responseopt",{"_index":838,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["resset",{"_index":1068,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["role_nam",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":664,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":298,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["running_nod",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["runningnod",{"_index":561,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["sara",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saradoe@mail.com",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":451,"title":{},"body":{"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":648,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":479,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchang",{"_index":452,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchanges(f",{"_index":673,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(organizationid",{"_index":481,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":1195,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":279,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["screen",{"_index":621,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1243,"title":{},"body":{"license.html":{}}}],["select",{"_index":601,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1188,"title":{},"body":{"index.html":{}}}],["server",{"_index":694,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":356,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":733,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":896,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":280,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflabel",{"_index":281,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflin",{"_index":282,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxi",{"_index":283,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxislabel",{"_index":284,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxi",{"_index":285,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxislabel",{"_index":286,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["sidebar",{"_index":570,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1019,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1018,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":170,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sig",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":819,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["slashi",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smith",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":1235,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":638,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":622,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1244,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../backend.service.t",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1171,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1172,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":266,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{}}}],["src/app/applications/applications.component.ts:19",{"_index":293,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:24",{"_index":310,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:29",{"_index":290,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:34",{"_index":304,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:35",{"_index":303,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:36",{"_index":297,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:39",{"_index":302,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:53",{"_index":322,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:54",{"_index":325,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:55",{"_index":324,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:56",{"_index":326,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:57",{"_index":319,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:58",{"_index":321,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:59",{"_index":320,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:60",{"_index":318,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:61",{"_index":313,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:62",{"_index":316,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:71",{"_index":306,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:72",{"_index":309,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:73",{"_index":288,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:99",{"_index":289,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":484,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:113",{"_index":504,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:145",{"_index":499,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:160",{"_index":505,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:19",{"_index":510,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:24",{"_index":525,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:29",{"_index":512,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:34",{"_index":511,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:39",{"_index":513,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:44",{"_index":523,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:49",{"_index":524,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:54",{"_index":514,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:59",{"_index":519,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:60",{"_index":518,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":516,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:64",{"_index":517,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:78",{"_index":520,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:79",{"_index":521,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:80",{"_index":509,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":496,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":564,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/loc",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":440,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":470,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":454,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":457,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":478,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:14",{"_index":482,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:16",{"_index":480,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":464,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:18",{"_index":466,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:19",{"_index":472,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:21",{"_index":459,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:22",{"_index":461,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":475,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":476,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":474,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":468,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/clust",{"_index":557,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":640,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":376,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:86",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":809,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":814,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":813,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":925,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":931,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":936,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":954,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":952,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":930,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":932,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":935,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":933,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":973,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:100",{"_index":986,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:117",{"_index":983,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:127",{"_index":989,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":990,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":991,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":993,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":994,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":995,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:35",{"_index":982,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:56",{"_index":984,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:84",{"_index":988,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/error",{"_index":685,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":815,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":890,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":966,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":967,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":972,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":969,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":970,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1050,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1017,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:104",{"_index":1029,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:116",{"_index":1022,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":1030,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:28",{"_index":1032,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1034,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1031,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:35",{"_index":1035,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1033,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:41",{"_index":1021,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:62",{"_index":1025,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:76",{"_index":1026,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:85",{"_index":1027,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1055,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1014,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":351,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":537,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":503,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1054,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(respons",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":992,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":977,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["succeed",{"_index":698,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":937,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/NotificationsComponent.html":{}}}],["summari",{"_index":342,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":944,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":742,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1249,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":603,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":354,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":626,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1072,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":892,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":900,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":894,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":902,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":959,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.app",{"_index":333,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.auth.logout",{"_index":1046,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1084,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getapps(this.organizationid",{"_index":343,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.backend.getclusterdetail(this.clusterid",{"_index":536,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.clusterid",{"_index":538,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1000,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1002,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":532,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1043,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":1085,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":660,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":683,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1082,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":1083,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":527,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":531,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":657,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":659,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":656,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":530,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":658,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":581,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":960,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":1038,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.errormessag",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":385,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1009,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1036,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.nod",{"_index":528,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":529,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":578,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":623,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":961,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":624,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":338,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":996,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1037,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":681,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":395,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":997,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":1081,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":535,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1040,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1042,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1004,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":999,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":682,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":684,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["time",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":352,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":627,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["token",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{}}}],["top",{"_index":340,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":498,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["total_clust",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total_nod",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":562,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["toth",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth.c@mail.com",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":328,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1174,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1223,"title":{},"body":{"license.html":{}}}],["understand",{"_index":709,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":738,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1203,"title":{},"body":{"index.html":{}}}],["up",{"_index":576,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":506,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":203,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updatenodeslist",{"_index":495,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateprofileus",{"_index":1020,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1028,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":981,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":980,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1064,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":706,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":860,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":678,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":680,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":677,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:34",{"_index":666,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":676,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:52",{"_index":672,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:54",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:60",{"_index":671,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:72",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:75",{"_index":669,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:85",{"_index":667,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:89",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:93",{"_index":674,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:97",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":873,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":876,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":572,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":456,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":571,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":172,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":327,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":903,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":908,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":920,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":924,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":904,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":1094,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1211,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1205,"title":{},"body":{"index.html":{}}}],["view",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":946,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":1239,"title":{},"body":{"license.html":{}}}],["well",{"_index":938,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":1238,"title":{},"body":{"license.html":{}}}],["write",{"_index":1234,"title":{},"body":{"license.html":{}}}],["x",{"_index":921,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.cluster_id).indexof(clusterid",{"_index":879,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(user.email",{"_index":868,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":865,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":901,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":314,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["xxxx",{"_index":910,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":909,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":913,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":949,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":948,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":912,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role_name: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        this.notificationsService.add({message: user.email + ' created successfully'});\n        this.bsModalRef.hide();\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n     \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add user              ×                                                                                                   Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationsComponent.html":{"url":"components/ApplicationsComponent.html","title":"component - ApplicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/applications/applications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                applications\n            \n\n            \n                styleUrls\n                applications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./applications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apps\n                            \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockAppChart\n                            \n                            \n                                mockAppPieChart\n                            \n                            \n                                organizationId\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apps:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:29\n                            \n                        \n\n                \n                    \n                        List of available apps\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:34\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:71\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:53\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { mockAppChart, mockAppPieChart } from '../utils/mocks';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * List of available apps\n   */\n  apps: any[];\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockAppChart: any;\n  mockAppPieChart: any;\n  autoScale: any;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n\n\n    this.apps = [];\n    /**\n   * Mocked Charts\n   */\n  Object.assign(this, {mockAppPieChart, mockAppChart});\n}\n\n\n  ngOnInit() {\n      // Get User data from localStorage\n      const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n      if (jwtData !== null) {\n        this.organizationId = JSON.parse(jwtData).OrganizationId;\n        if (this.organizationId !== null) {\n          // Requests top card summary data\n          this.backend.getApps(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.apps = data;\n            }\n          });\n        }\n      }\n    }\n}\n\n    \n\n    \n        \n\n    \n      Application\n    \n  \n  \n    \n    \n      \n        \n          SUMMARY\n        \n        \n          \n            \n              \n                \n                \n                4/5\n              \n              Apps running\n              DEPLOYED\n            \n          \n          \n            \n              20\n            \n            REGISTERED\n          \n        \n      \n    \n    \n    \n      \n        \n          APP STATUS TIMELINE\n        \n        \n          \n            \n            \n            \n          \n          \n            100%\n            0%\n            \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          DEPLOYED APP LIST\n        \n        \n          \n            \n              \n                \n                  Name\n                \n                \n                  ID\n                \n                \n                  Description\n                \n                \n                  Tags\n                \n                \n                  Configuration\n                \n                \n                  Service Groups\n                \n                \n                  Info\n                \n              \n            \n            \n              \n                {{app.name}}\n                {{app.id}}\n                {{app.description}}  \n                {{app.tags}}\n                {{app.configuration}}\n                \n                {{app.service}}\n                \n                  \n                    \n                      i\n                    \n                  \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Application                                        SUMMARY                                                                                                    4/5                            Apps running              DEPLOYED                                                          20                        REGISTERED                                                            APP STATUS TIMELINE                                                                                              100%            0%                                                                DEPLOYED APP LIST                                                                                      Name                                                  ID                                                  Description                                                  Tags                                                  Configuration                                                  Service Groups                                                  Info                                                                                    {{app.name}}                {{app.id}}                {{app.description}}                  {{app.tags}}                {{app.configuration}}                                {{app.service}}                                                                            i                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getClusterDetail\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getNodes\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                                \n                                    saveUserChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(organizationId: string, userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    saveUserChanges(organizationId: string, changes: any);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getNodes(clusterId: string);\n    getResourcesSummary(organizationId: string);\n    // Applications\n    getApps(organizationId: string);\n    getClusterDetail(clusterId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:54\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:59\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:78\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:49\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: any[];\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.resourcesMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = [];\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).OrganizationId;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n         .subscribe(response => {\n           if (response && response._body) {\n             const data = JSON.parse(response._body);\n             this.clustersCount = data['totalClusters'];\n             this.nodesCount = data['totalNodes'];\n           }\n         });\n         this.updateNodesList();\n       }\n     }\n    //  this.backend.getClusterDetail(this.clusterId)\n    //  .subscribe(response => {\n    //    if (response && response._body) {\n    //      const data = JSON.parse(response._body);\n    //      this.clusterData = data;\n    //    }\n    //  });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.clusterId)\n    .subscribe(response => {\n      if (response && response._body) {\n        const data = JSON.parse(response._body);\n        this.nodes = data;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        CLUSTER 1\n        5 available\n      \n      \n        \n          \n            \n              \n              \n              4/5\n            \n            4 nodes \n            NODES\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n            \n              {{clustersCount}}\n            \n            CPU LOAD\n          \n          \n            \n              3Tb\n            \n            STORAGE\n          \n        \n        \n          \n            \n              \n                id\n              \n              21321321321\n            \n            \n              \n                types\n              \n              Kubernetes \n            \n            \n              \n                Tags\n              \n              Tags\n            \n            \n              \n                Multitenant\n              \n              All\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > CLUSTER 1 > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      CLUSTER 1        5 available                                                                                    4/5                        4 nodes             NODES                                              SUMMARY CLUSTER 1                                                        {{clustersCount}}                        CPU LOAD                                              3Tb                        STORAGE                                                                              id                            21321321321                                                      types                            Kubernetes                                                       Tags                            Tags                                                      Multitenant                            All                                                                                    CLUSTER                                 > CLUSTER 1 >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n    Backend control\n    \n      \n        \n        \n          {{item.name}}\n        \n        \n        \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                    Backend control                                    {{item.name}}                                              Real                                Mock                                    Notifications    Spam test notification                Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error message\n   */\n  errorMessage: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessage = '';\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessage = '';\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.errorMessage = error.statusText;\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                0\">Email or password incorrect\n                \n                \n                Log in\n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                    0\">Email or password incorrect                                                Log in                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Simulates adding a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Simulates delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:198\n                            \n                        \n\n\n                \n                    \n                            \nAppications\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:218\n                            \n                        \n\n\n                \n                    \n                            Simulates get cluster details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:208\n                            \n                        \n\n\n                \n                    \n                            Simulates get nodes list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Simulates reset password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Simulates save user changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList, mockResourcesSummary, mockAppsList, mockNodeList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        token: mockJwtToken,\n        refresh_token: '018e42cf-9acb-4b4c-8804-6c54334d6947'\n      }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {}\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList[index]),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({ users: mockUserList }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /**\n  * Simulates adding a user\n  */\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      }))).pipe(\n        map(response => response.json())\n      );\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      }))).pipe(\n        map(response => response.json())\n      );\n    }\n  }\n\n  /**\n  * Simulates delete user\n  */\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates reset password\n  */\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates save user changes\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  saveUserChanges(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index !== -1) {\n      mockUserList[index].name = user.name;\n      mockUserList[index].email = user.email;\n      mockUserList[index].role_name = user.role_name;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    }))).pipe(\n      map(response => response.json())\n    );\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.cluster_id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].labels = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /********************\n   * Appications\n   ********************/\n\n  /**\n   * Simulates get apps list\n   */\n  getApps(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockAppsList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get nodes list\n   */\n  getNodes(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockNodeList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get cluster details\n   */\n  getClusterDetail(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:35\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n              this.users = response.users;\n          });\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId\n    };\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState});\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n          this.users = response.users;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      this.updateService.changesOnUserList.next();\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                26 %\n                (6/23)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                61 %\n                (13/21)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                48 %\n                (16/33)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../backend.service.ts)\n                        \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/backend.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + ':31404/v1/'\n                        \n                    \n\n                \n                    \n                        URL of the public API\n\n                    \n                \n\n            \n        \n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: getBaseUrl\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // hardcoded local environment API ip address\n  apiUrl: 'http://192.168.99.100'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n    refreshToken: 'refresh_token'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Assets Application',\n        id: '0800200c9a61',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'SIG Application',\n        id: '0800200c9a62',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Engine App',\n        id: '0800200c9a63',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a64',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a65',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a61',\n        name: 'Cluster1',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '1',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a62',\n        name: 'Cluster2',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '2',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a63',\n        name: 'Cluster3',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '3',\n        cluster_type: 'Kubernetes',\n        status: 'Error',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a64',\n        name: 'Cluster4',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '4',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a65',\n        name: 'Cluster5',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '5',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a66',\n        name: 'Cluster6',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '6',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a67',\n        name: 'Cluster7',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '7',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a68',\n        name: 'Cluster8',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '8',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a69',\n        name: 'Cluster9',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '9',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a70',\n        name: 'Cluster10',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '10',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJhY2Nlc3MiOlsiT1JHIl0sImV4cCI6MTU0MjI4Njg2MywiaWF0IjoxNTQyMjc2MDYzLCJpc3MiOiJhdXRoeCIsImp0aSI6IjI1OTA5ZDNkLTJlODMtNDlmMC04ZmQzLTFlYmZiNTYxMTNhMSIsIm5iZiI6IjE1NDIyNzYwNjMiLCJvcmdhbml6YXRpb25JRCI6IjdhZDFhN2E4LWU0YjEtNDc5OC05MDcxLWU0NTY5MDhmYWQxMyIsInJvbGUiOiJPd25lciIsInVzZXJJRCI6ImpvaG4uZG9lQG1haWwuY29tIn0' +\n    '.MeCoZ_UdYiMlduG-ik63rHHqHztQrK7dgIEWceW0VRk'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    total_clusters: mockClusterList.length,\n    total_nodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Celia Toth',\n        email: 'toth.c@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Sara Doe',\n        email: 'saradoe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Dave Smith',\n        email: 'davesmith@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'john.doe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Ellen Martin',\n        email: 'ellen.martin@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Josh Peterson',\n        email: 'josh.peterson@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Mike Slashis',\n        email: 'mikeslashis@mail.com',\n        role_name: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
