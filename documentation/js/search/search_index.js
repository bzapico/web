var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.225,1,0.751]],["body/components/AppComponent.html",[0,0.407,1,1.308,2,0.4,3,0.305,4,1.247,5,1.247,6,1.247,7,0.202,8,2.787,9,0.996,10,1.657,11,1.247,12,2.006,13,1.541,14,2.211,15,1.485,16,4.43,17,1.485,18,4.43,19,0.305,20,0.996,21,3.279,22,2.467,23,1.82,24,4.333,25,0.8,26,1.759,27,0.711,28,2.787,29,3.279,30,0.875,31,4.43,32,0.682,33,0.039,34,0.527,35,0.559,36,0.478,37,2.767,38,3.377,39,0.542,40,0.996,41,2.138,42,3.377,43,0.895,44,1.247,45,1.878,46,1.596,47,3.377,48,0.649,49,0.548,50,1.132,51,1.878,52,1.52,53,0.305,54,0.478,55,0.842,56,1.027,57,1.636,58,1.636,59,1.485,60,1.939,61,1.247,62,1.247,63,0.759,64,1.027,65,1.247,66,0.842,67,0.93,68,1.247,69,0.842,70,1.247,71,0.842,72,1.247,73,0.842,74,1.247,75,0.842,76,1.247,77,0.93,78,1.247,79,0.842,80,1.247,81,0.842,82,0.542,83,1.247,84,0.027,85,0.027]],["title/modules/AppModule.html",[86,1.675,87,1.881]],["body/modules/AppModule.html",[1,1.446,2,0.25,3,0.25,7,0.166,33,0.039,48,0.759,49,0.343,50,1.707,51,1.543,53,0.437,54,0.393,56,0.844,63,1.243,64,0.844,66,1.378,67,0.765,69,1.446,71,1.315,73,1.315,75,1.315,77,1.454,79,1.315,81,1.378,82,0.446,84,0.024,85,0.024,86,2.157,87,3.852,88,1.733,89,3.691,90,2.293,91,3.996,92,2.291,93,2.291,94,2.291,95,2.291,96,2.291,97,2.375,98,1.605,99,3.202,100,1.972,101,1.543,102,2.775,103,3.879,104,3.879,105,3.202,106,1.972,107,3.879,108,2.775,109,3.879,110,2.291,111,1.972,112,3.879,113,3.202,114,2.423,115,2.775,116,2.775,117,3.177,118,2.775,119,2.775,120,1.249,121,1.972,122,2.775,123,2.775,124,2.775,125,2.775,126,2.775,127,2.775,128,2.775,129,2.775,130,2.775,131,2.775,132,3.879,133,3.879,134,1.972,135,2.775,136,1.972,137,1.385,138,3.879,139,2.291,140,3.879,141,1.733,142,3.879,143,1.543,144,1.733,145,2.291,146,2.775,147,1.972,148,2.775,149,2.775,150,2.775,151,2.775,152,2.775,153,2.775,154,2.775,155,2.775]],["title/guards/AuthGuard.html",[156,2.14,157,2.486]],["body/guards/AuthGuard.html",[2,0.336,3,0.336,7,0.223,9,0.838,14,1.859,19,0.336,20,0.838,25,0.853,27,0.758,30,0.758,32,0.954,33,0.039,34,0.503,35,0.503,36,0.668,39,0.832,48,0.695,49,0.461,53,0.336,54,0.528,55,0.929,84,0.029,85,0.029,143,2.072,156,2.647,157,3.897,158,3.726,159,3.897,160,5.62,161,3.726,162,4.08,163,3.726,164,3.726,165,5.447,166,4.277,167,5.447,168,3.726,169,1.061,170,2.881,171,4.721,172,3.354,173,1.061,174,1.859,175,1.133,176,1.376,177,1.133,178,1.376,179,4.277,180,2.647,181,2.355,182,2.072,183,3.076,184,1.133,185,1.027,186,3.897,187,3.076,188,2.355,189,3.076,190,3.726,191,2.327,192,3.076,193,2.072,194,3.726,195,3.726,196,3.076,197,1.859,198,1.249]],["title/injectables/AuthService.html",[97,1.356,173,0.677]],["body/injectables/AuthService.html",[2,0.241,3,0.241,7,0.16,19,0.241,20,0.85,25,0.683,27,0.607,30,0.837,32,0.763,33,0.039,34,0.403,35,0.507,36,0.535,39,0.837,40,0.601,43,1.14,48,0.688,49,0.331,53,0.241,54,0.379,55,1.092,82,0.861,84,0.023,85,0.023,97,1.701,98,1.665,101,1.487,141,1.67,143,1.487,159,3.931,162,3.809,170,2.437,172,2.685,173,0.985,174,1.334,175,0.813,176,0.987,177,1.149,178,0.987,179,4.147,180,1.9,181,2.602,183,2.207,184,0.813,185,1.207,186,3.931,187,2.207,188,2.187,189,2.207,192,2.207,196,2.207,197,1.334,198,0.896,199,2.207,200,1.701,201,3.138,202,3.119,203,3.931,204,5.215,205,1.573,206,4.762,207,1.759,208,2.9,209,2.674,210,1.759,211,3.778,212,4.382,213,2.674,214,4.762,215,2.36,216,1.785,217,3.778,218,3.617,219,3.119,220,2.36,221,2.413,222,2.674,223,3.384,224,1.94,225,1.885,226,1.701,227,2.674,228,2.674,229,2.376,230,1.089,231,1.885,232,2.207,233,1.395,234,1.9,235,0.987,236,1.487,237,1.203,238,1.885,239,2.101,240,3.931,241,2.674,242,1.885,243,1.334,244,1.67,245,1.67,246,3.778,247,2.674,248,2.674,249,2.674,250,2.674,251,2.674,252,2.737,253,2.674,254,2.674,255,1.9,256,2.207,257,2.674,258,2.674,259,1.9,260,2.674,261,2.674,262,0.987,263,0.987,264,2.674]],["title/interfaces/Backend.html",[205,0.83,265,0.83]],["body/interfaces/Backend.html",[2,0.292,3,0.292,7,0.194,19,0.292,25,0.779,30,0.949,32,1.184,33,0.038,34,0.624,35,0.624,36,0.83,39,0.949,43,1.269,48,0.4,53,0.292,82,0.778,84,0.027,85,0.027,170,2.693,174,1.615,205,1.187,207,1.788,208,2.871,220,2.691,221,2.18,224,1.319,265,1.187,266,2.672,267,2.691,268,2.691,269,3.061,270,3.061,271,3.061,272,3.061,273,3.061,274,2.691,275,2.691,276,3.061,277,3.237,278,3.137,279,3.061,280,2.815,281,3.237,282,3.061,283,3.237,284,3.061,285,3.237,286,3.061,287,3.237,288,3.061,289,3.237,290,3.061,291,3.237,292,3.237,293,3.237,294,3.061,295,3.237,296,3.061,297,2.693,298,3.237,299,2.022,300,1.196,301,1.457]],["title/injectables/BackendService.html",[98,0.916,173,0.677]],["body/injectables/BackendService.html",[2,0.257,3,0.257,7,0.17,9,1.31,14,1.421,19,0.257,25,0.713,27,0.728,30,0.936,32,1.155,33,0.039,34,0.609,35,0.609,36,0.81,39,0.928,40,1.286,43,1.26,48,0.56,49,0.352,53,0.257,54,0.403,82,0.728,84,0.024,85,0.024,98,1.2,170,2.52,173,1.019,174,1.421,182,1.583,184,1.756,205,1.088,207,1.458,208,2.722,220,2.466,221,2.04,224,1.16,230,1.16,267,2.466,268,2.466,269,2.805,270,2.805,271,2.805,272,2.805,273,2.805,274,2.466,275,2.466,276,2.805,278,3.034,279,2.805,280,2.722,282,2.805,284,2.805,286,2.805,288,2.805,290,2.805,294,2.805,296,2.805,297,2.52,299,1.778,302,2.35,303,2.847,304,2.847,305,2.847,306,2.847,307,2.847,308,2.847,309,2.847,310,2.847,311,2.847,312,2.847,313,2.847,314,2.847,315,5.776,316,5.776]],["title/interfaces/ClusterInfo.html",[265,0.83,317,2.14]],["body/interfaces/ClusterInfo.html",[2,0.441,3,0.356,7,0.236,19,0.356,20,1.099,30,0.633,33,0.038,34,0.592,35,0.654,36,0.692,43,1.271,53,0.356,84,0.03,85,0.03,200,2.572,265,1.465,317,3.473,318,3.252,319,3.252,320,2.439,321,2.799,322,3.94,323,2.461,324,3.94,325,2.264,326,4.588,327,4.588,328,3.949,329,3.949,330,4.588]],["title/interfaces/ComponentMockOption.html",[265,0.83,331,1.881]],["body/interfaces/ComponentMockOption.html",[0,0.375,2,0.395,3,0.24,7,0.159,9,0.599,10,1.263,12,1.263,13,1.039,15,0.893,17,0.893,19,0.24,20,0.847,22,1.329,23,1.446,26,0.893,27,0.428,33,0.039,34,0.623,35,0.466,36,0.619,40,0.599,41,1.781,43,1.052,44,0.984,45,2.096,48,0.588,49,0.329,50,0.893,51,1.481,52,1.199,53,0.395,54,0.377,55,0.664,63,0.599,64,1.525,67,0.734,82,0.428,84,0.023,85,0.023,120,1.199,169,0.599,175,0.81,176,0.984,177,1.146,178,0.984,184,0.81,185,0.734,197,2.99,198,1.912,200,1.199,207,1.392,225,1.329,233,2.173,234,1.893,239,1.481,255,1.893,262,1.756,263,0.984,265,1.31,300,1.392,301,1.696,320,1.329,323,2.732,325,1.085,331,2.97,332,1.664,333,1.664,334,2.503,335,2.732,336,1.664,337,2.354,338,2.354,339,1.893,340,1.893,341,0.664,342,1.199,343,2.199,344,2.199,345,2.354,346,1.664,347,1.664,348,2.199,349,2.678,350,1.329,351,2.678,352,2.199,353,4.592,354,3.111,355,3.111,356,1.893,357,3.111,358,2.199,359,3.111,360,2.199,361,3.111,362,2.199,363,3.111,364,3.111,365,1.893,366,3.111,367,1.893,368,3.111,369,1.893,370,3.111,371,3.111,372,1.893,373,2.199,374,1.893,375,2.199,376,3.952,377,2.199,378,4.592,379,3.952,380,2.199,381,2.199,382,2.199,383,2.199,384,2.199,385,2.199,386,2.199,387,2.199,388,2.199,389,1.893,390,1.481,391,2.199,392,2.199,393,2.199,394,1.481,395,2.199,396,1.893,397,1.664,398,2.199]],["title/components/DebugPanelComponent.html",[0,0.225,63,0.677]],["body/components/DebugPanelComponent.html",[0,0.412,1,0.533,2,0.387,3,0.193,4,0.79,5,0.79,6,0.79,7,0.128,9,0.722,10,1.292,11,0.79,12,1.869,13,1.329,15,1.076,17,1.076,19,0.193,20,0.722,22,1.924,23,1.6,25,0.58,26,1.436,27,0.516,30,0.803,32,0.649,33,0.039,34,0.609,35,0.489,36,0.683,39,0.619,40,0.964,41,2.218,43,0.649,44,1.186,45,2.383,46,0.977,48,0.53,49,0.265,50,0.717,51,1.19,52,0.963,53,0.348,54,0.303,55,0.533,56,0.651,57,1.186,58,1.186,59,1.076,60,1.583,61,0.79,62,0.79,63,0.964,64,1.63,65,0.79,66,0.533,67,0.885,68,0.79,69,0.533,70,0.79,71,0.533,72,0.79,73,0.533,74,0.79,75,0.533,76,0.79,77,0.59,78,0.79,79,0.533,80,0.79,81,0.533,82,0.516,83,0.79,84,0.02,85,0.02,120,2.316,169,0.481,175,0.651,176,0.79,177,1.172,178,0.79,184,0.977,185,0.59,197,2.906,198,1.825,200,0.963,205,0.885,207,1.186,225,1.603,233,2.113,234,1.52,237,1.446,239,1.19,255,2.282,262,1.944,263,0.79,265,0.885,300,1.186,301,1.446,320,1.068,323,2.409,325,0.872,331,3.013,332,3.215,333,1.337,334,2.407,335,2.869,336,1.337,337,2.006,338,2.006,339,1.52,340,1.52,341,0.533,342,0.963,343,2.651,344,2.651,345,2.409,346,2.006,347,2.677,348,1.766,349,2.282,350,1.068,351,2.282,352,1.766,353,4.345,354,2.651,355,2.651,356,1.52,357,2.651,358,1.766,359,2.651,360,1.766,361,2.651,362,1.766,363,2.651,364,2.651,365,1.52,366,2.651,367,1.52,368,2.651,369,1.52,370,3.183,371,3.183,372,2.282,373,2.651,374,1.52,375,1.766,376,3.74,377,1.766,378,4.345,379,3.74,380,1.766,381,1.766,382,1.766,383,1.766,384,1.766,385,1.766,386,1.766,387,1.766,388,1.766,389,1.52,390,1.786,391,2.651,392,2.651,393,3.538,394,1.19,395,1.766,396,2.74,397,1.337,398,1.766,399,3.212,400,1.52,401,3.212,402,2.14,403,2.14,404,2.14,405,2.14,406,2.14,407,1.337,408,3.212,409,3.212,410,3.212,411,1.446]],["title/components/EditClusterComponent.html",[0,0.225,66,0.751]],["body/components/EditClusterComponent.html",[0,0.364,1,0.616,2,0.322,3,0.223,4,0.913,5,0.913,6,0.913,7,0.148,9,0.803,10,1.406,11,0.913,12,1.921,13,1.266,15,1.197,17,1.197,19,0.223,20,0.803,22,2.093,23,1.593,25,0.646,26,1.54,27,0.574,30,0.891,32,0.5,33,0.039,34,0.519,35,0.571,36,0.35,39,0.574,40,0.803,41,2.289,43,1.175,44,1.697,46,1.086,48,0.648,49,0.306,50,0.828,52,1.113,53,0.223,54,0.35,55,1.046,56,0.752,57,1.319,58,1.319,59,1.197,60,1.697,61,0.913,62,0.913,63,0.556,64,0.752,65,0.913,66,1.145,67,1.478,68,0.913,69,0.616,70,0.913,71,0.616,72,0.913,73,0.616,74,0.913,75,0.616,76,0.913,77,0.681,78,0.913,79,0.616,80,0.913,81,0.616,82,0.397,83,0.913,84,0.022,85,0.022,90,1.113,98,1.631,137,1.234,147,3.992,169,0.556,175,0.752,176,0.913,177,0.752,178,0.913,185,0.681,188,1.783,198,0.828,200,1.608,205,1.548,210,1.981,216,1.007,226,1.608,229,1.783,230,1.007,231,1.234,233,1.549,235,0.913,236,1.375,237,1.113,238,1.783,242,1.234,263,0.913,275,2.87,299,2.87,320,2.727,329,2.538,341,0.616,342,1.113,350,2.293,369,1.756,394,1.375,400,1.756,407,1.544,412,4.638,413,2.041,414,3.573,415,3.573,416,5.08,417,4.595,418,5.08,419,4.595,420,3.573,421,2.472,422,2.472,423,2.472,424,2.472,425,2.472,426,2.949,427,3.463,428,1.608,429,2.472,430,2.472,431,2.232,432,2.472,433,1.375,434,4.195,435,3.265,436,3.573,437,3.573,438,3.573,439,2.472,440,2.472,441,2.472,442,2.472,443,2.472,444,2.041]],["title/injectables/ErrorHandlerService.html",[114,1.881,173,0.677]],["body/injectables/ErrorHandlerService.html",[2,0.283,3,0.283,7,0.187,9,0.947,19,0.283,25,0.86,27,0.765,30,0.677,32,0.633,33,0.039,34,0.334,35,0.334,36,0.443,39,0.503,40,0.947,44,1.156,48,0.521,49,0.387,53,0.283,54,0.443,59,1.049,82,0.765,84,0.026,85,0.026,101,1.741,113,3.478,114,2.632,139,2.585,166,2.585,169,0.704,173,1.071,193,1.741,200,1.409,203,3.478,223,4.094,235,1.156,239,1.741,240,2.585,243,1.562,252,3.495,259,2.225,301,1.896,321,2.225,341,0.78,345,1.956,346,1.956,374,2.225,376,4.274,379,4.291,407,1.956,445,3.931,446,2.585,447,4.213,448,3.131,449,4.213,450,5.094,451,3.131,452,3.478,453,4.762,454,4.916,455,3.131,456,2.585,457,3.131,458,3.131,459,3.131,460,3.131,461,4.213,462,3.131,463,3.131,464,3.131,465,3.131,466,3.131,467,3.131,468,4.213,469,3.131,470,4.213,471,4.213,472,3.131,473,3.131,474,3.131,475,3.131,476,2.225,477,3.131,478,3.131,479,4.213,480,3.131,481,3.131,482,4.213,483,3.131,484,3.131,485,3.131,486,3.131,487,3.131,488,4.213,489,3.131,490,3.131,491,2.585,492,3.131,493,3.131,494,2.585,495,3.131,496,2.225,497,1.956,498,2.225,499,3.131,500,3.131,501,3.131,502,3.131,503,2.585,504,3.131,505,3.131,506,2.585,507,3.131,508,3.131,509,3.131,510,3.131,511,3.131,512,3.131,513,3.131,514,3.131,515,4.213,516,3.131,517,3.131,518,3.131,519,3.131,520,3.131,521,3.131,522,3.131,523,3.131]],["title/components/LoginComponent.html",[0,0.225,69,0.751]],["body/components/LoginComponent.html",[0,0.375,1,0.664,2,0.34,3,0.24,4,0.984,5,0.984,6,0.984,7,0.159,9,0.847,10,1.466,11,0.984,12,1.93,13,1.435,15,1.263,17,1.263,19,0.24,20,0.847,21,2.97,25,0.681,26,1.593,27,0.605,29,2.97,30,0.836,32,0.538,33,0.039,34,0.466,35,0.466,36,0.377,37,2.732,39,0.702,40,0.983,41,1.937,46,1.446,48,0.644,49,0.329,50,0.893,53,0.24,54,0.377,55,1.185,56,0.81,57,1.392,58,1.392,59,1.263,60,1.756,61,0.984,62,0.984,63,0.847,64,1.584,65,0.984,66,0.664,67,0.734,68,0.984,69,1.185,70,0.984,71,0.664,72,0.984,73,0.664,74,0.984,75,0.664,76,0.984,77,0.734,78,0.984,79,0.664,80,0.984,81,0.664,82,0.428,83,0.984,84,0.023,85,0.023,90,1.199,97,2.41,120,1.199,121,1.893,134,1.893,136,1.893,143,1.481,162,3.805,181,1.881,201,2.97,207,2.02,215,2.354,216,1.535,218,3.111,219,3.61,221,2.258,224,2.181,226,2.14,229,1.881,235,1.756,242,1.329,252,1.664,256,3.925,259,1.893,300,0.984,335,2.97,351,2.678,411,1.199,428,1.696,476,3.378,494,3.111,524,2.199,525,3.769,526,3.769,527,4.755,528,4.755,529,3.925,530,2.664,531,5.209,532,3.769,533,2.664,534,2.664,535,3.769,536,3.769,537,3.769,538,3.111,539,3.769,540,3.111,541,2.664,542,3.378,543,2.678,544,2.354,545,4.755,546,2.664,547,3.769,548,3.769,549,3.111,550,2.678,551,2.664,552,2.664,553,3.769,554,2.664,555,2.664,556,2.664,557,2.664,558,2.664,559,1.893,560,2.199,561,1.893,562,3.111,563,3.769]],["title/components/MainComponent.html",[0,0.225,71,0.751]],["body/components/MainComponent.html",[0,0.422,1,0.943,2,0.43,3,0.342,4,1.397,5,1.397,6,1.397,7,0.227,9,1.072,10,1.749,11,1.397,12,2.047,13,1.509,15,1.597,17,1.597,19,0.342,25,0.861,26,1.836,27,0.838,30,0.765,33,0.038,34,0.508,39,0.608,40,0.851,46,1.666,48,0.468,49,0.468,53,0.342,54,0.536,56,1.15,57,1.76,58,1.76,59,1.597,60,2.023,61,1.397,62,1.397,63,0.851,64,1.15,65,1.397,66,0.943,67,1.043,68,1.397,69,0.943,70,1.397,71,1.365,72,1.397,73,0.943,74,1.397,75,0.943,76,1.397,77,1.043,78,1.397,79,0.943,80,1.397,81,0.943,82,0.608,83,1.397,84,0.029,85,0.029,169,0.851,341,0.943,342,1.703,564,3.123,565,4.767,566,4.767,567,4.767,568,3.784,569,3.784]],["title/injectables/MockupBackendService.html",[173,0.677,210,1.112]],["body/injectables/MockupBackendService.html",[2,0.301,3,0.203,7,0.135,9,0.507,14,1.125,19,0.424,25,0.603,27,0.639,30,0.895,32,1.097,33,0.039,34,0.587,35,0.579,36,0.769,39,0.954,43,1.247,48,0.58,49,0.279,53,0.203,54,0.319,82,0.79,84,0.021,85,0.021,141,1.408,169,0.507,170,2.212,173,0.894,174,1.125,181,1.125,182,1.253,184,1.675,185,0.92,205,1.212,207,1.734,208,2.734,210,1.233,220,2.086,221,2.113,223,2.826,224,1.791,225,1.985,226,1.014,230,0.918,232,4.603,239,2.445,243,1.125,267,2.086,268,2.086,269,2.372,270,2.372,271,2.372,272,2.372,273,2.372,274,2.086,275,2.086,276,2.372,278,2.83,279,2.372,280,2.608,282,2.372,284,2.372,286,2.372,288,2.372,290,2.372,294,2.372,296,2.372,297,2.445,299,2.086,300,1.233,301,1.503,320,1.666,328,3.914,337,1.408,341,0.562,427,1.861,456,4.547,496,1.601,497,1.408,498,1.601,570,4.651,571,1.861,572,2.254,573,2.254,574,2.254,575,2.254,576,2.254,577,2.254,578,2.254,579,2.254,580,2.254,581,2.254,582,4.695,583,2.254,584,2.254,585,2.372,586,1.408,587,1.408,588,1.408,589,2.372,590,1.601,591,1.601,592,1.601,593,5.509,594,5.089,595,3.339,596,3.339,597,2.372,598,3.339,599,3.339,600,3.339,601,2.254,602,2.254,603,1.253,604,2.254,605,2.254,606,2.254,607,2.254,608,2.254,609,2.254,610,2.212,611,2.254,612,2.254,613,2.254,614,2.254,615,2.254,616,2.254,617,2.254,618,2.254,619,2.254,620,2.254,621,2.254,622,2.254]],["title/interfaces/Notification.html",[262,1.112,265,0.83]],["body/interfaces/Notification.html",[2,0.317,3,0.317,7,0.21,14,1.752,19,0.455,20,1.022,23,1.068,27,0.564,33,0.039,35,0.621,36,0.815,39,0.809,43,1.191,48,0.434,49,0.434,53,0.41,54,0.497,55,0.875,84,0.028,85,0.028,169,0.79,173,1.022,182,1.953,185,1.252,191,2.193,193,1.953,215,2.193,262,2.038,263,1.968,265,1.252,325,2.17,334,1.752,341,0.875,390,1.953,397,3.328,411,1.581,428,1.581,610,2.527,623,2.495,624,4.159,625,2.899,626,3.751,627,2.899,628,2.899,629,2.495,630,2.495,631,2.495,632,2.495,633,2.495,634,2.899,635,2.899,636,2.899,637,3.751,638,2.899,639,2.899,640,2.899,641,2.899,642,2.899,643,2.899,644,2.899,645,2.899,646,2.899,647,2.899,648,3.751,649,2.495,650,2.899,651,4.159,652,2.899,653,2.495,654,1.953,655,2.899,656,2.899,657,2.899,658,2.899,659,2.899]],["title/components/NotificationsComponent.html",[0,0.225,73,0.751]],["body/components/NotificationsComponent.html",[0,0.364,1,0.613,2,0.458,3,0.222,4,0.909,5,0.909,6,0.909,7,0.147,9,0.801,10,1.402,11,0.909,12,1.902,13,1.398,15,1.193,17,1.193,19,0.222,20,0.801,22,2.088,23,1.59,25,0.643,26,1.537,27,0.572,30,0.86,32,0.72,33,0.039,34,0.489,35,0.598,36,0.718,39,0.672,40,1.094,44,1.315,45,1.98,46,1.083,48,0.685,49,0.304,52,1.108,53,0.222,54,0.348,55,1.043,56,0.748,57,1.694,58,1.315,59,1.193,60,1.694,61,0.909,62,0.909,63,0.553,64,0.748,65,0.909,66,0.613,67,0.678,68,0.909,69,0.613,70,0.909,71,0.613,72,0.909,73,1.143,74,0.909,75,0.613,76,0.909,77,0.678,78,0.909,79,0.613,80,0.909,81,0.613,82,0.395,83,0.909,84,0.022,85,0.022,98,1.629,100,3.258,137,1.228,169,0.553,175,0.748,176,0.909,177,0.748,178,0.909,185,0.678,193,2.55,198,1.402,202,2.939,205,1.564,210,1.932,216,1.45,225,1.777,230,1.002,231,1.228,233,1.315,237,1.603,238,1.777,262,2.047,263,1.978,321,2.53,341,0.613,346,2.864,347,2.224,349,1.749,411,1.603,428,1.603,433,1.369,452,2.939,549,3.785,629,2.53,630,2.53,631,3.878,632,3.806,633,2.53,649,1.749,654,1.98,660,2.032,661,3.561,662,3.561,663,4.586,664,2.461,665,2.461,666,2.461,667,2.461,668,2.461,669,2.032,670,2.461,671,2.461,672,3.561,673,3.561,674,3.561,675,2.939,676,3.561,677,3.561,678,3.561,679,3.561,680,3.561,681,3.561,682,3.561,683,3.561,684,3.561,685,3.561,686,3.561,687,3.561,688,2.461,689,2.939,690,2.461,691,2.461,692,2.461,693,2.461,694,2.461,695,3.561,696,2.461,697,2.461,698,3.561,699,3.561,700,3.561,701,3.561]],["title/injectables/NotificationsService.html",[23,0.916,173,0.677]],["body/injectables/NotificationsService.html",[2,0.297,3,0.297,7,0.197,14,1.64,19,0.44,20,0.978,23,1.323,25,0.786,27,0.783,30,0.891,32,0.879,33,0.039,34,0.464,35,0.52,36,0.735,39,0.891,40,0.978,43,0.986,48,0.406,49,0.406,53,0.393,54,0.465,55,1.216,84,0.027,85,0.027,169,0.739,173,1.097,182,1.827,185,1.199,191,2.718,193,2.42,215,2.052,262,2.149,263,1.214,265,0.905,325,1.338,334,2.171,341,0.819,390,2.888,397,2.052,411,1.958,428,1.958,610,2.42,623,2.335,624,2.712,625,4.287,626,3.592,627,3.592,628,2.712,629,3.69,630,3.091,631,3.091,632,3.091,633,3.091,634,2.712,635,2.712,636,2.712,637,4.287,638,3.592,639,3.592,640,3.592,641,3.592,642,4.287,643,2.712,644,2.712,645,2.712,646,2.712,647,2.712,648,3.592,649,2.335,650,2.712,651,4.027,652,2.712,653,2.335,654,1.827,655,2.712,656,2.712,657,2.712,658,2.712,659,2.712,669,2.712,702,4.351,703,4.351,704,3.286,705,3.286,706,3.286,707,3.286,708,3.286,709,3.286]],["title/components/OrganizationComponent.html",[0,0.225,75,0.751]],["body/components/OrganizationComponent.html",[0,0.392,1,0.528,2,0.434,3,0.191,4,0.782,5,0.782,6,0.782,7,0.127,9,0.716,10,1.284,11,0.782,12,1.865,13,1.175,15,1.068,17,1.068,19,0.191,20,0.716,21,2.663,23,1.516,25,0.576,26,1.429,27,0.512,28,1.748,29,2.663,30,0.872,32,0.428,33,0.039,34,0.531,35,0.559,36,0.3,37,1.99,39,0.685,40,0.959,41,1.736,43,1.08,46,0.969,48,0.649,49,0.262,50,0.709,52,0.953,53,0.191,54,0.3,55,1.063,56,0.644,57,1.177,58,1.177,59,1.068,60,1.574,61,0.782,62,0.782,63,0.476,64,0.644,65,0.782,66,0.528,67,1.056,68,0.782,69,0.528,70,0.782,71,0.528,72,0.782,73,0.528,74,0.782,75,1.063,76,0.782,77,0.583,78,0.782,79,0.528,80,0.782,81,0.794,82,0.95,83,0.782,84,0.02,85,0.02,90,0.953,98,1.56,137,1.056,144,1.322,145,1.748,169,0.476,175,0.644,176,0.782,177,0.644,178,0.782,184,0.969,185,1.324,188,2.281,198,0.709,201,1.99,205,1.497,210,1.895,216,1.862,224,1.298,226,1.919,229,2.127,230,0.862,231,1.056,233,1.415,235,0.782,236,1.177,237,0.953,238,1.59,242,2.127,243,1.912,244,2.393,245,2.393,263,0.782,267,2.663,278,2.371,297,1.772,300,1.774,325,1.298,334,1.59,341,0.528,342,0.953,350,1.056,356,1.504,389,2.264,390,2.371,394,1.177,411,0.953,428,1.434,431,1.99,433,1.177,542,2.264,543,2.264,544,1.99,550,2.264,559,1.504,561,1.504,586,1.99,592,1.504,603,1.772,654,1.772,675,1.748,710,1.748,711,3.186,712,3.186,713,4.115,714,4.804,715,4.263,716,4.263,717,3.186,718,2.117,719,2.117,720,2.117,721,2.117,722,2.117,723,2.117,724,5.248,725,2.117,726,2.117,727,2.117,728,3.832,729,2.117,730,3.832,731,3.832,732,1.99,733,1.504,734,3.519,735,2.117,736,2.117,737,2.856,738,1.504,739,3.186,740,3.186,741,2.117,742,2.117,743,2.117,744,3.186,745,2.117,746,3.832,747,3.186,748,3.186,749,3.186,750,3.186,751,3.186,752,3.186,753,3.186,754,2.264,755,3.186,756,3.186]],["title/components/SidebarComponent.html",[0,0.225,79,0.751]],["body/components/SidebarComponent.html",[0,0.358,1,0.59,2,0.313,3,0.214,4,0.875,5,0.875,6,0.875,7,0.142,9,0.779,10,1.372,11,0.875,12,1.906,13,1.379,15,1.16,17,1.16,19,0.214,20,0.779,21,2.813,25,0.626,26,1.509,27,0.556,29,2.813,30,0.868,32,0.479,33,0.039,34,0.593,35,0.533,36,0.335,37,2.557,39,0.657,40,0.92,41,1.834,43,1.092,44,1.512,46,1.522,48,0.655,49,0.293,50,0.794,53,0.214,54,0.335,55,0.863,56,0.72,57,1.279,58,1.279,59,1.16,60,1.663,61,0.875,62,0.875,63,0.779,64,1.522,65,0.875,66,0.59,67,0.653,68,0.875,69,0.59,70,0.875,71,0.59,72,0.875,73,0.59,74,0.875,75,0.59,76,0.875,77,0.653,78,0.875,79,1.123,80,0.875,81,0.59,82,0.657,83,0.875,84,0.021,85,0.021,90,1.066,97,2.027,98,1.572,120,1.066,121,1.683,136,1.683,137,1.182,169,0.532,175,0.72,176,0.875,177,0.72,178,0.875,185,1.241,188,2.247,198,0.794,201,2.163,205,1.534,207,1.279,208,2.783,210,1.957,216,0.965,224,2.159,226,2.027,229,2.247,230,0.965,231,1.182,233,1.512,235,0.875,236,1.317,237,1.066,238,1.728,242,1.182,243,1.182,244,1.479,245,1.479,280,1.728,300,1.279,301,1.559,335,2.813,338,2.813,341,0.59,342,1.066,350,2.043,365,1.683,411,1.066,431,2.163,433,1.317,435,2.908,476,2.46,491,2.858,529,3.718,538,3.379,542,3.2,543,2.46,544,2.163,550,2.46,559,1.683,560,1.955,561,1.683,603,2.947,732,2.163,733,1.683,737,1.479,738,1.683,757,1.955,758,3.463,759,3.463,760,2.368,761,3.463,762,2.368,763,3.463,764,3.463,765,2.368,766,2.368,767,2.368,768,2.368,769,2.368,770,2.368,771,3.463,772,2.858,773,3.463,774,2.368,775,2.368,776,1.955,777,2.368,778,2.368,779,2.858,780,3.463,781,3.463,782,2.858]],["title/components/UserInfoComponent.html",[0,0.225,81,0.751]],["body/components/UserInfoComponent.html",[0,0.335,1,0.505,2,0.405,3,0.183,4,0.749,5,0.749,6,0.749,7,0.121,9,0.693,10,1.251,11,0.749,12,1.848,13,1.149,15,1.033,17,1.033,19,0.183,20,0.693,22,1.862,23,1.493,24,4.178,25,0.557,26,1.398,27,0.495,30,0.903,32,0.623,33,0.039,34,0.539,35,0.573,36,0.437,39,0.759,40,0.839,41,2.19,43,1.193,44,1.139,46,0.938,48,0.626,49,0.251,50,0.679,51,1.127,52,0.912,53,0.183,54,0.287,55,0.93,56,0.616,57,1.139,58,1.139,59,1.033,60,1.54,61,0.749,62,0.749,63,0.456,64,0.616,65,0.749,66,0.505,67,1.028,68,0.749,69,0.505,70,0.749,71,0.505,72,0.749,73,0.505,74,0.749,75,0.505,76,0.749,77,0.559,78,0.749,79,0.505,80,0.749,81,1.039,82,0.91,83,0.749,84,0.019,85,0.019,98,1.539,137,1.012,144,3.54,169,0.456,172,1.44,175,0.616,176,0.749,177,0.616,178,0.749,184,0.616,185,1.149,188,2.526,197,1.012,198,1.033,205,1.481,210,1.869,216,0.826,221,1.877,226,1.388,229,1.539,230,0.826,231,1.012,233,1.378,235,0.749,236,1.127,237,0.912,238,1.539,242,1.862,243,1.012,244,1.926,245,1.266,263,1.139,268,2.605,274,2.605,278,2.319,280,2.081,300,1.139,325,1.256,341,0.505,342,0.912,350,1.539,367,1.44,372,2.191,394,1.715,400,1.44,407,1.266,426,3.442,428,1.877,431,1.926,433,1.127,435,2.191,444,2.545,587,1.266,588,1.266,592,1.44,603,2.815,713,3.442,732,1.926,733,1.44,734,2.545,737,1.266,738,1.44,772,2.545,776,1.673,779,2.545,783,4.679,784,1.673,785,3.084,786,3.084,787,4.725,788,4.725,789,4.17,790,3.084,791,3.084,792,3.084,793,2.027,794,3.084,795,2.027,796,2.027,797,2.027,798,2.027,799,2.027,800,2.027,801,4.17,802,4.17,803,2.027,804,3.732,805,2.027,806,2.027,807,2.027,808,3.084,809,2.027,810,2.027,811,3.084,812,2.027,813,3.084,814,5.185,815,2.027,816,2.027,817,2.027,818,2.027,819,2.027,820,2.027,821,2.027,822,2.027,823,2.027,824,2.545,825,2.545,826,2.191]],["title/coverage.html",[827,3.388]],["body/coverage.html",[0,0.438,1,0.807,7,0.194,8,2.672,23,0.984,33,0.039,35,0.345,63,0.728,66,0.807,69,0.807,71,0.807,73,0.807,75,0.807,77,0.892,79,0.807,81,0.807,84,0.027,85,0.027,97,1.457,98,0.984,114,2.022,117,2.3,120,2.18,144,2.022,147,2.3,173,1.209,175,0.984,177,0.984,184,0.984,199,2.672,205,0.892,210,1.196,262,1.196,265,1.423,266,2.672,302,2.672,317,2.3,318,2.672,319,2.672,331,2.022,332,3.025,333,3.025,336,2.022,412,2.672,413,2.672,445,2.672,446,2.672,524,2.672,564,2.672,570,2.672,571,2.672,585,2.3,586,2.022,587,2.022,588,2.022,589,2.3,590,2.3,591,2.3,623,3.061,654,3.344,660,2.672,710,2.672,757,2.672,783,2.672,784,2.672,827,2.672,828,2.672,829,3.237,830,3.237,831,3.237,832,2.672,833,4.292,834,5.801,835,3.237,836,3.237,837,4.843,838,4.308,839,2.3,840,3.237,841,2.672,842,2.672,843,2.672,844,2.672,845,2.672,846,4.563,847,5.528,848,3.237,849,3.237,850,3.237,851,3.237,852,3.237,853,3.237,854,3.237,855,3.237,856,3.237,857,3.237,858,3.237,859,3.237,860,3.237,861,3.237,862,3.237,863,3.237,864,3.237,865,4.308,866,3.237,867,3.237,868,3.237,869,3.237,870,3.237,871,4.789,872,2.672,873,2.672,874,2.672,875,3.556,876,2.672,877,3.237,878,3.237]],["title/dependencies.html",[88,2.261,879,2.079]],["body/dependencies.html",[33,0.039,49,0.518,50,1.404,84,0.031,85,0.031,88,2.616,90,2.284,105,4.189,106,3.606,110,3.457,111,2.976,134,2.976,141,2.616,143,2.329,174,2.09,180,2.976,181,2.532,689,3.457,880,4.188,881,6.076,882,4.188,883,4.188,884,4.188,885,4.188,886,4.188,887,4.188,888,4.188,889,5.075,890,4.188,891,4.188,892,4.188,893,4.188,894,4.188,895,4.188,896,4.188,897,4.188,898,4.188,899,4.188,900,4.188,901,5.075,902,4.188,903,4.188,904,4.188]],["title/index.html",[19,0.227,754,1.789,905,2.079]],["body/index.html",[0,0.394,3,0.349,7,0.232,13,1.067,33,0.03,34,0.412,46,1.47,84,0.03,85,0.03,101,2.152,184,1.177,191,3.45,216,1.577,235,1.43,297,2.688,345,2.418,396,3.746,454,4.352,497,2.418,540,3.195,597,3.924,826,2.75,828,4.559,879,3.195,906,3.871,907,3.195,908,3.871,909,5.273,910,3.871,911,5.523,912,3.871,913,5.273,914,3.871,915,4.835,916,3.871,917,3.871,918,4.835,919,4.835,920,4.855,921,5.798,922,4.835,923,3.871,924,3.871,925,3.871,926,3.871,927,3.871,928,3.871,929,3.871,930,3.871,931,5.684,932,3.871,933,3.871,934,3.871,935,3.871,936,3.195,937,4.835,938,3.871,939,3.871,940,3.871,941,4.835,942,3.871,943,3.871,944,3.871,945,4.835,946,3.195,947,3.871,948,3.871,949,3.871,950,3.871,951,5.273,952,3.871,953,3.871,954,3.871]],["title/license.html",[754,1.789,905,2.079,955,2.079]],["body/license.html",[7,0.265,33,0.032,46,1.348,84,0.032,85,0.032,235,1.637,503,3.659,597,3.15,782,3.659,946,3.659,955,5.031,956,4.433,957,4.433,958,5.595,959,4.433,960,4.433,961,4.433,962,4.433,963,4.433,964,4.433,965,4.433,966,4.433,967,4.433,968,4.433,969,4.433,970,4.433,971,5.251,972,4.433,973,4.433,974,4.433,975,4.433,976,4.433,977,4.433,978,4.433,979,4.433,980,4.433,981,4.433,982,4.433,983,4.433]],["title/modules.html",[86,2.282]],["body/modules.html",[33,0.034,84,0.034,85,0.034,86,2.682,87,3.012,106,3.426,506,3.981,984,4.822,985,4.822]],["title/overview.html",[986,3.388]],["body/overview.html",[0,0.292,1,1.469,33,0.038,53,0.352,56,1.187,63,1.19,66,1.32,69,1.469,71,1.32,73,1.32,75,1.32,77,1.459,79,1.32,81,1.32,84,0.03,85,0.03,86,2.703,87,3.931,88,2.439,89,3.223,90,1.758,91,3.223,92,3.223,93,3.223,94,3.223,95,3.223,96,3.223,97,2.383,98,1.61,99,4.013,100,2.775,101,2.171,156,2.775,173,0.878,265,1.076,610,2.703,839,2.775,986,3.223,987,3.223,988,3.223]],["title/miscellaneous/variables.html",[833,2.572,989,2.079]],["body/miscellaneous/variables.html",[2,0.186,13,0.862,19,0.186,33,0.039,34,0.632,35,0.623,43,0.632,44,2.084,45,3.29,67,0.569,82,0.502,84,0.019,85,0.019,111,1.467,117,2.682,120,0.93,169,0.464,175,1.148,177,0.951,181,1.561,184,0.628,197,1.031,198,1.048,200,2.225,207,1.155,221,0.93,224,2.014,225,1.031,233,1.758,252,1.954,262,1.155,280,1.031,300,1.155,301,1.699,320,2.694,323,3.552,325,2.014,326,4.081,327,4.081,328,3.512,329,3.512,330,4.203,332,1.29,333,1.954,334,1.561,336,2.358,337,1.954,338,1.954,339,1.467,340,1.467,341,0.515,347,1.29,496,1.467,497,1.29,498,1.467,544,1.29,562,1.705,585,2.682,586,2.358,587,2.358,588,2.358,589,2.682,590,2.682,591,2.682,603,2.831,610,1.739,653,1.467,732,1.29,737,1.29,824,4.303,825,2.582,826,2.222,832,1.705,833,1.467,839,3.617,841,1.705,842,2.582,843,1.705,844,2.582,845,3.116,846,3.116,871,1.705,872,3.116,873,3.116,874,1.705,875,3.929,876,1.705,907,3.116,920,4.203,936,2.582,987,2.582,988,1.705,989,1.705,990,2.065,991,2.065,992,2.065,993,2.065,994,5.212,995,2.065,996,2.065,997,2.065,998,2.065,999,2.065,1000,2.065,1001,2.065,1002,2.065,1003,2.065,1004,2.065,1005,2.065,1006,2.065,1007,2.065,1008,2.065,1009,2.065,1010,2.065,1011,2.065,1012,2.065,1013,2.065,1014,2.065,1015,2.065,1016,2.065,1017,4.943,1018,5.593,1019,4.943,1020,4.943,1021,2.065,1022,2.065,1023,2.065,1024,3.127,1025,2.065,1026,2.065,1027,2.065,1028,2.065,1029,2.065,1030,2.065,1031,2.065,1032,2.065,1033,2.065,1034,2.065,1035,2.065,1036,4.943,1037,2.065,1038,4.943,1039,2.065,1040,2.065,1041,2.065,1042,2.065,1043,2.065,1044,2.065,1045,2.065,1046,2.065,1047,2.065,1048,2.065,1049,2.065,1050,3.775,1051,2.065,1052,3.775,1053,2.065,1054,2.065,1055,2.065,1056,2.065,1057,2.065,1058,3.127,1059,2.065,1060,2.065,1061,4.943,1062,4.943,1063,4.759,1064,2.065,1065,3.127,1066,2.065,1067,2.065,1068,2.065]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":654,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0800200c9a66",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0x3",{"_index":657,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":658,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":610,"title":{},"body":{"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":839,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["10000",{"_index":398,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["14",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15/32",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":653,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["1h",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":960,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":966,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":456,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":459,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":957,"title":{},"body":{"license.html":{}}}],["23",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":462,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":988,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":467,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":473,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":477,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":481,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":485,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":489,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4h",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":645,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":987,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5/10",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":499,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":505,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":508,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":513,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":516,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":520,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6h",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_notif",{"_index":625,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":479,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":702,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":510,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":802,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":746,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":390,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{}}}],["add(notificationinst",{"_index":627,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":494,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":267,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["adduser(organizationid",{"_index":276,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["agre",{"_index":968,"title":{},"body":{"license.html":{}}}],["alert",{"_index":631,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":701,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":911,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["apach",{"_index":959,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":782,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["appmodul",{"_index":87,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":932,"title":{},"body":{"index.html":{}}}],["assest",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["attent",{"_index":678,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authent",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":157,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":944,"title":{},"body":{"index.html":{}}}],["automat",{"_index":926,"title":{},"body":{"index.html":{}}}],["avail",{"_index":345,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":336,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.app",{"_index":359,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":368,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":354,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":363,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":355,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":361,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":357,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":364,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":366,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":205,"title":{"interfaces/Backend.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":571,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:110",{"_index":584,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":572,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:122",{"_index":578,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:129",{"_index":575,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":580,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:37",{"_index":581,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:51",{"_index":579,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:62",{"_index":576,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:69",{"_index":577,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:76",{"_index":573,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:83",{"_index":574,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:94",{"_index":583,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":98,"title":{"injectables/BackendService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":972,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":600,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":683,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":650,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":594,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":379,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["brows",{"_index":985,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":931,"title":{},"body":{"index.html":{}}}],["button",{"_index":428,"title":{},"body":{"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":787,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":788,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":794,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonsav",{"_index":416,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["buttonsmodul",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":648,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["carouselmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":376,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["chang",{"_index":297,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changes.newclusterdescript",{"_index":618,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":616,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":620,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["charact",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":790,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":792,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":698,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":749,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clean",{"_index":763,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":913,"title":{},"body":{"index.html":{}}}],["click",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":916,"title":{},"body":{"index.html":{}}}],["close",{"_index":411,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":320,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":415,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":414,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":413,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":423,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:23",{"_index":425,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":430,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":432,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:29",{"_index":429,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:30",{"_index":420,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:33",{"_index":424,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:52",{"_index":421,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:55",{"_index":422,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/edit",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterdescript",{"_index":417,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":299,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":317,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":418,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":419,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":928,"title":{},"body":{"index.html":{}}}],["command",{"_index":912,"title":{},"body":{"index.html":{}}}],["commun",{"_index":518,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":962,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":941,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":331,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":378,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":375,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":503,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["conflict",{"_index":487,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":468,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":486,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":460,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":478,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":517,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":490,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":500,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":463,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":521,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":482,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":457,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":388,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":514,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":474,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":760,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":400,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":664,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":480,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":408,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":964,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":956,"title":{},"body":{"license.html":{}}}],["core",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":827,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":322,"title":{},"body":{"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":476,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":488,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["danger",{"_index":681,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":737,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["data.email",{"_index":776,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["data.nam",{"_index":738,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["data.rol",{"_index":777,"title":{},"body":{"components/SidebarComponent.html":{}}}],["date",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["debug",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":63,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":663,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":801,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":268,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":279,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":88,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":923,"title":{},"body":{"index.html":{}}}],["develop",{"_index":826,"title":{},"body":{"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":808,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["direct",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":930,"title":{},"body":{"index.html":{}}}],["directori",{"_index":919,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":632,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":669,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":391,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":933,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":971,"title":{},"body":{"license.html":{}}}],["dn",{"_index":781,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":828,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["done",{"_index":674,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["due",{"_index":470,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":689,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["edg",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":340,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":66,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["email",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":811,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":501,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["entrycompon",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":316,"title":{},"body":{"injectables/BackendService.html":{}}}],["error.statu",{"_index":455,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":114,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["eventemitt",{"_index":692,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["except",{"_index":961,"title":{},"body":{"license.html":{}}}],["execut",{"_index":938,"title":{},"body":{"index.html":{}}}],["expect",{"_index":599,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":976,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjvc2vyswqioijqb2hulmrvzubtywlslmnvbsisik9yz2fuaxphdglvbklkijoimje0mzq2ntqzndm0myisilbyaw1pdgl2zxmiolsimcisijeilciyiiwimyjdlcjsb2xlbmftzsi6ik93bmvyiiwirxhwaxjlc0f0ijoxmjmzodu3mjcxmjc0m30",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":484,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":935,"title":{},"body":{"index.html":{}}}],["folder",{"_index":947,"title":{},"body":{"index.html":{}}}],["form",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuild",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":493,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":483,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":730,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":461,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["further",{"_index":950,"title":{},"body":{"index.html":{}}}],["gain",{"_index":522,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":509,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":511,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":905,"title":{"index.html":{},"license.html":{}},"body":{}}],["getclust",{"_index":269,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":282,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":708,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":270,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":284,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":271,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":286,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":272,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":288,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":273,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(userid",{"_index":290,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":465,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":953,"title":{},"body":{"index.html":{}}}],["good",{"_index":687,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":981,"title":{},"body":{"license.html":{}}}],["group",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["group_work",{"_index":780,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":156,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":640,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":507,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":447,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":449,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":452,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":446,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":451,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":448,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["head",{"_index":677,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":951,"title":{},"body":{"index.html":{}}}],["helper",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":948,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":925,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":965,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":450,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":914,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":639,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":910,"title":{},"body":{"index.html":{}}}],["icon",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":325,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":700,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":596,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":977,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":786,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":785,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":784,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:101",{"_index":797,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:20",{"_index":798,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":807,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":803,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":800,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":810,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":805,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":806,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":809,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":791,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":799,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:63",{"_index":796,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:82",{"_index":793,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:89",{"_index":795,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":319,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":435,"title":{},"body":{"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":740,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inject",{"_index":173,"title":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":694,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":915,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":324,"title":{},"body":{"interfaces/ClusterInfo.html":{}}}],["integr",{"_index":942,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":265,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":471,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["it'",{"_index":679,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":409,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":641,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johndoe@mail.com",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata",{"_index":818,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":735,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["json.stringifi",{"_index":595,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttoken.jwt",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(jwttokendata",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockclusterlist",{"_index":622,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":605,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":621,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist",{"_index":606,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["jwt",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":732,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwthelperservic",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwtjson",{"_index":817,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwtjson.rolenam",{"_index":820,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwtjson.userid",{"_index":819,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwttoken",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":940,"title":{},"body":{"index.html":{}}}],["key",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kf9ac17v9mwowmyjhhyc9gd8hgw6wrt6wwngduj1v4c",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":975,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":980,"title":{},"body":{"license.html":{}}}],["law",{"_index":967,"title":{},"body":{"license.html":{}}}],["lead",{"_index":764,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":498,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":943,"title":{},"body":{"index.html":{}}}],["licens",{"_index":955,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":983,"title":{},"body":{"license.html":{}}}],["line",{"_index":497,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":342,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":496,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":649,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":334,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":350,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":351,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":360,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":369,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":733,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":349,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":356,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":362,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":358,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":365,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":367,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":382,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":387,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":377,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":384,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":380,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":383,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":381,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":385,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":386,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":69,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":492,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":686,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":565,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":567,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":566,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":71,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":908,"title":{},"body":{"index.html":{}}}],["match",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":652,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":748,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["min",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":989,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":590,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":613,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":617,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":615,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].tag",{"_index":619,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":585,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":588,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":589,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":591,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":210,"title":{"injectables/MockupBackendService.html":{}},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":587,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":608,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.pop",{"_index":612,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":607,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":611,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo",{"_index":586,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserprofileinfo.email",{"_index":602,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.nam",{"_index":601,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.rol",{"_index":604,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":755,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":431,"title":{},"body":{"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":371,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["modul",{"_index":86,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":952,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":326,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":924,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":475,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":321,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":523,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":442,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":441,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":443,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["next",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":921,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":907,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["notif",{"_index":262,"title":{"interfaces/Notification.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":705,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":662,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":661,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":73,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":347,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":23,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":909,"title":{},"body":{"index.html":{}}}],["null",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":624,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":323,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":963,"title":{},"body":{"license.html":{}}}],["onclos",{"_index":629,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":633,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openuserinfo",{"_index":715,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":825,"title":{},"body":{"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":399,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":373,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":300,"title":{},"body":{"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":741,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":712,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":711,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_mock",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":753,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":75,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":278,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":713,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":691,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["overview",{"_index":986,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":824,"title":{},"body":{"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":879,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":491,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":335,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":343,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":344,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":333,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:129",{"_index":404,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":406,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:37",{"_index":401,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":405,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:46",{"_index":402,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:90",{"_index":403,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["payment",{"_index":756,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":464,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":982,"title":{},"body":{"license.html":{}}}],["persist",{"_index":370,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":779,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["platform",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":352,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":504,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":519,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":934,"title":{},"body":{"index.html":{}}}],["product",{"_index":936,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":337,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":918,"title":{},"body":{"index.html":{}}}],["promis",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["proxi",{"_index":512,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":949,"title":{},"body":{"index.html":{}}}],["r",{"_index":651,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":676,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":954,"title":{},"body":{"index.html":{}}}],["real",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":453,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":389,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":927,"title":{},"body":{"index.html":{}}}],["remov",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":693,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["replic",{"_index":598,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":917,"title":{},"body":{"index.html":{}}}],["request",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["requir",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":274,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":294,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":301,"title":{},"body":{"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["response(new",{"_index":593,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["responseopt",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["resset",{"_index":804,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":603,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["roles.t",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["root'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":920,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":327,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["save",{"_index":427,"title":{},"body":{"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":275,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(clusterid",{"_index":296,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":929,"title":{},"body":{"index.html":{}}}],["screen",{"_index":392,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":978,"title":{},"body":{"license.html":{}}}],["select",{"_index":372,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":922,"title":{},"body":{"index.html":{}}}],["server",{"_index":454,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["services/auth.servic",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":433,"title":{},"body":{"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["set",{"_index":495,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":630,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["sidebar",{"_index":338,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":759,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":758,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":79,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":582,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["softwar",{"_index":970,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":410,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":393,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":979,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/debug",{"_index":332,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/clust",{"_index":318,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":266,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":287,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":277,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":281,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":295,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:15",{"_index":298,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:16",{"_index":283,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":289,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":292,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":293,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":291,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":285,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/edit",{"_index":412,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":564,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":569,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":568,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":660,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":666,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":671,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":690,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":688,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":665,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":667,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":670,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":668,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":710,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:21",{"_index":722,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:25",{"_index":723,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:26",{"_index":725,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":726,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":727,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:33",{"_index":717,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:53",{"_index":719,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:79",{"_index":720,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:89",{"_index":718,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:99",{"_index":721,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:67",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":302,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:13",{"_index":311,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":312,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:19",{"_index":310,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:22",{"_index":307,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:25",{"_index":308,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:28",{"_index":304,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:31",{"_index":305,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:34",{"_index":313,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:37",{"_index":314,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":309,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:43",{"_index":306,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:9",{"_index":303,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/error",{"_index":445,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":570,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":623,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":703,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":704,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":709,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":706,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":707,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":757,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":767,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":769,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:25",{"_index":770,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":768,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":761,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:49",{"_index":765,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:70",{"_index":766,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":762,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":783,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":754,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":328,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(respons",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":724,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":714,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["substitut",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["succeed",{"_index":458,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":672,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":675,"title":{},"body":{"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["summari",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":680,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":506,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":984,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":374,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["syntax",{"_index":472,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["system",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabl",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":329,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":396,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":426,"title":{},"body":{"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":626,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":634,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":628,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":636,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":695,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":745,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":822,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":736,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":739,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(this.userid",{"_index":821,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getuserprofileinfo(userid",{"_index":775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":823,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.clusterid",{"_index":440,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.bsmodalref.hid",{"_index":444,"title":{},"body":{"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":815,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":816,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonsav",{"_index":439,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterdescript",{"_index":436,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":438,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":434,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":437,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":353,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":696,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":773,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.formbuilder.group",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(jwttoken.jwt",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":743,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":742,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":771,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":348,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":394,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":697,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":395,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":734,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":728,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":772,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.router.navig",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":729,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":812,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updateuserlist",{"_index":744,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":731,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":814,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":813,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["throw",{"_index":315,"title":{},"body":{"injectables/BackendService.html":{}}}],["time",{"_index":407,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timeout",{"_index":397,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/UserInfoComponent.html":{}}}],["todo",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["top",{"_index":699,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["total",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalclust",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":330,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":341,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":906,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":515,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":958,"title":{},"body":{"license.html":{}}}],["understand",{"_index":469,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":502,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":937,"title":{},"body":{"index.html":{}}}],["up",{"_index":346,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":945,"title":{},"body":{"index.html":{}}}],["updateuserlist",{"_index":716,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":466,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["us",{"_index":597,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":752,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":750,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.rol",{"_index":751,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user_id",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":280,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":339,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":81,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":789,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["userrol",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":747,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":592,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":637,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":642,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":655,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":659,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":638,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":833,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":946,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":939,"title":{},"body":{"index.html":{}}}],["view",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":682,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":974,"title":{},"body":{"license.html":{}}}],["well",{"_index":673,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":973,"title":{},"body":{"license.html":{}}}],["write",{"_index":969,"title":{},"body":{"license.html":{}}}],["x",{"_index":656,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.email).indexof(userid",{"_index":609,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(clusterid",{"_index":614,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":635,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":644,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":643,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":647,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":685,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":684,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":646,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    EditClusterComponent,\n    ResourcesComponent\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    EditClusterComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService }\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable, of } from 'rxjs';\nimport { ResponseOptions } from '@angular/http';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    let complete;\n    let jwtToken;\n    this.backend.login(email, password)\n      .subscribe(response => {\n        if (response && response._body) {\n          jwtToken = JSON.parse(response._body);\n          const jwtTokenData =  this.jwtHelper.decodeToken(jwtToken.jwt);\n          localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(jwtToken.jwt));\n          localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n          complete = jwtTokenData;\n        }\n      }, error => {\n        complete = error;\n      });\n      return of (complete);\n  }\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        this.router.navigate(['login']);\n      }, error => {\n        console.log(error); // TODO: substitute with notification service messaging system\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    // Resources\n    saveClusterChanges(clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getResourcesSummary(organizationId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClusters\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BackendService implements Backend {\n\n  constructor() { }\n\n  login(email: string, password: string): Observable {\n    throw new Error('Method not implemented.');\n  }\n  logout() {\n    throw new Error('Method not implemented.');\n  }\n  getUserProfileInfo(userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationInfo(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationUsers(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  addUser(organizationId: string, user: any) {\n    throw new Error('Method not implemented.');\n  }\n  deleteUser(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  resetPassword(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  saveClusterChanges(clusterId: string, changes: any) {\n    throw new Error('Method not implemented.');\n  }\n  getResourcesSummary(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getClusters(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/const/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:36\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Debug panel\n  \n  \n    \n      &times;\n    \n  \n\n\n\n  Backend control\n  \n    \n      \n      \n        {{item.name}}\n      \n      \n      \n        \n          Real\n        \n        \n          Mock\n        \n      \n    \n  \n  \n  Notifications\n  Spam test notification\n\n\n\n  \n    Close\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Debug panel              ×        Backend control                          {{item.name}}                                    Real                          Mock                        Notifications  Spam test notification      Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonSave\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonSave:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:23\n                            \n                        \n\n                \n                    \n                        Text for the save button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n                \n                    \n                        Models that hold cluster name, cluster description and cluster tags\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Text for the save button\n   */\n  buttonSave: string;\n  /**\n   * Models that hold cluster name, cluster description and cluster tags\n   */\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n      this.buttonSave = 'Save';\n  }\n\n  ngOnInit() {\n  }\n\n  saveClusterChanges() {\n    if (this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n      {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        {{buttonSave}}\n      \n    \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{clusterName}}              ×                                                                                                  {{buttonSave}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.router.navigate([\n          '/organization'\n        ]);\n      }, error => console.log(error));\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n          Nalej\n          \n              Log in\n              \n                  \n                  \n                      \n                        Email is required\n                        Email must be a valid email address\n                      \n                  \n                      \n                        Password is required\n                        Password must be at least 6 characters\n                      \n                  \n                  \n                    Log in\n                  \n                \n           \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Nalej                        Log in                                                                                                Email is required                        Email must be a valid email address                                                                                      Password is required                        Password must be at least 6 characters                                                                              Log in                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n\n  \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClusters\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserProfileInfo, mockUserList, mockOrganizationInfo,\n         mockResetPasword, mockClusterList, mockResourcesSummary  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        jwt: mockJwtToken\n      }),\n      status: 200\n    })));\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        name: mockUserProfileInfo.name,\n        email: mockUserProfileInfo.email,\n        role: mockUserProfileInfo.role\n      }),\n      status: 200\n    })));\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })));\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList),\n      status: 200\n    })));\n  }\n\n  addUser(organizationId: string, user: any) {\n    mockUserList.push(user);\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  deleteUser(organizationId: string, userId: string) {\n    // const index = mockUserList.map(x => x.email).indexOf(userId);\n    // if (index !== -1) {\n    //   mockUserList.splice(index, 1);\n    // }\n    mockUserList.pop();\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(clusterId: string, changes: any) {\n      const index = mockClusterList.map(x => x.id).indexOf(clusterId);\n  if (index !== -1) {\n    mockClusterList[index].name = changes.newClusterName;\n    mockClusterList[index].description = changes.newClusterDescription;\n    mockClusterList[index].tags = changes.newClusterTags;\n  }\n  return of (new Response(new ResponseOptions({\n    status: 200\n  })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })));\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:25\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockUserProfileInfo } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).OrganizationId;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.organizationName = data.name;\n            }\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.users = data;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo() {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  addUser() {\n    this.backend.addUser(this.organizationId, mockUserProfileInfo)\n      .subscribe(response => {\n        this.notificationsService.add({\n          message: 'User added successfully'\n        });\n        this.updateUserList();\n      });\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n        if (response && response._body) {\n          const data = JSON.parse(response._body);\n          this.users = data;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        Members\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role}}\n              {{user.email}}\n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      Subscription\n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                Members                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                    {{user.name}}              {{user.role}}              {{user.email}}                                                                    edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                          Subscription              check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userId;\n      if (userId !== null) {\n        this.backend.getUserProfileInfo(userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.name = data.name;\n              this.email = data.email;\n              this.role = data.role;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Nalej\n      \n        \n          \n            \n                person\n            \n            {{name}}\n            {{role}}\n            {{email}}\n          \n        \n      \n      \n        \n          group_work\n          Organization\n          >\n        \n      \n      \n        \n          dns\n          Resources\n          >\n        \n      \n      \n        \n          apps\n          Applications\n          >\n        \n      \n      \n        \n          Logout\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nalej                                                    person                        {{name}}            {{role}}            {{email}}                                                group_work          Organization          >                                      dns          Resources          >                                      apps          Applications          >                                      Logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'Info User';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const jwtJson = JSON.parse(jwtData);\n      this.userId = jwtJson.UserId;\n      this.role = jwtJson.Rolename;\n      if (this.userId !== null) {\n        this.backend.getUserProfileInfo(this.userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.userName = data.name;\n              this.userId = data.email;\n            }\n          });\n      }\n    }\n  }\n\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                46 %\n                (15/32)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserProfileInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            mockUserProfileInfo   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  editcluster: 'Edit Cluster'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    clusterEditMock: 'cluster_edit_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster2',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '2',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster3',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '3',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster4',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '4',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster5',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '5',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Error',\n        tags: 'ny, edge',\n        multitenant: 'No'\n    },\n    {\n        name: 'Cluster6',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '6',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster7',\n        id: '0800200c9a66',\n        totalNodes: '10',\n        runningNodes: '7',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJVc2VySWQiOiJqb2huLmRvZUBtYWlsLmNvbSIsIk9yZ2FuaXphdGlvbklkIjoiMjE0MzQ2NTQzNDM0MyIsIlByaW1pdGl2ZXMiOlsiMCIsIjEiLCIyIiwiMyJdLCJSb2xlbmFtZSI6Ik93bmVyIiwiRXhwaXJlc0F0IjoxMjMzODU3MjcxMjc0M30' +\n    '.kF9ac17V9mWoWMYjhHyc9GD8hGw6wRT6wwNgdUJ1v4c'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      },\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    totalClusters: mockClusterList.length,\n    totalNodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserProfileInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'John Doe',\n    email: 'john.doe@mail.com',\n    role: 'Owner'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
