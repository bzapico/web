var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.225,1,0.751]],["body/components/AppComponent.html",[0,0.409,1,1.314,2,0.403,3,0.308,4,1.262,5,1.262,6,1.262,7,0.205,8,2.82,9,1.004,10,1.666,11,1.262,12,1.997,13,1.546,14,2.228,15,1.496,16,4.464,17,1.496,18,4.464,19,0.308,20,1.004,21,3.294,22,2.765,23,1.823,24,4.352,25,0.807,26,1.767,27,0.717,28,2.82,29,3.294,30,0.879,31,4.464,32,0.69,33,0.039,34,0.53,35,0.562,36,0.484,37,2.789,38,3.417,39,0.549,40,1.004,41,2.373,42,3.417,43,0.902,44,1.262,45,1.705,46,1.603,47,3.417,48,0.652,49,0.552,50,1.145,51,1.9,52,1.538,53,0.308,54,0.484,55,0.852,56,1.039,57,1.649,58,1.649,59,1.496,60,1.947,61,1.262,62,1.262,63,0.768,64,1.039,65,1.262,66,0.852,67,1.262,68,0.852,69,1.262,70,0.852,71,1.262,72,0.852,73,1.262,74,0.852,75,1.262,76,0.852,77,1.262,78,0.852,79,0.549,80,1.262,81,0.027,82,0.027]],["title/modules/AppModule.html",[83,1.675,84,1.881]],["body/modules/AppModule.html",[1,1.453,2,0.258,3,0.258,7,0.171,33,0.039,48,0.759,49,0.354,50,1.726,51,1.591,53,0.443,54,0.405,56,0.87,63,1.252,64,0.87,66,1.453,68,1.328,70,1.328,72,1.328,74,1.328,76,1.328,78,1.388,79,0.459,81,0.024,82,0.024,83,2.203,84,3.85,85,1.787,86,3.751,87,2.57,88,3.485,89,2.362,90,2.362,91,2.362,92,2.362,93,2.362,94,2.398,95,1.62,96,3.27,97,2.033,98,1.591,99,2.861,100,3.962,101,3.962,102,3.27,103,2.033,104,3.962,105,2.861,106,3.962,107,2.362,108,1.787,109,3.962,110,3.27,111,2.475,112,2.861,113,2.861,114,3.229,115,2.861,116,2.861,117,1.288,118,2.033,119,2.861,120,2.861,121,2.861,122,2.861,123,2.861,124,2.861,125,2.861,126,2.861,127,2.861,128,2.861,129,3.962,130,3.962,131,2.033,132,2.861,133,2.033,134,1.428,135,3.962,136,2.362,137,3.962,138,1.787,139,3.962,140,1.591,141,1.787,142,2.362,143,2.861,144,2.861,145,2.861,146,2.861,147,2.861,148,2.861,149,2.861,150,2.861]],["title/guards/AuthGuard.html",[151,2.14,152,2.486]],["body/guards/AuthGuard.html",[2,0.338,3,0.338,7,0.224,9,0.841,14,1.867,19,0.338,20,0.841,25,0.855,27,0.76,30,0.76,32,0.956,33,0.039,34,0.504,35,0.504,36,0.67,39,0.834,48,0.696,49,0.463,53,0.338,54,0.53,55,0.933,81,0.029,82,0.029,140,2.081,151,2.659,152,3.907,153,3.743,154,3.907,155,5.628,156,3.743,157,4.084,158,3.743,159,3.743,160,5.456,161,4.286,162,5.456,163,3.743,164,1.304,165,2.887,166,4.734,167,3.363,168,1.064,169,1.867,170,1.138,171,1.382,172,1.138,173,1.382,174,4.286,175,2.659,176,2.362,177,2.081,178,3.089,179,1.254,180,1.031,181,3.907,182,3.089,183,2.362,184,3.089,185,3.743,186,2.338,187,3.089,188,2.081,189,3.743,190,3.743,191,3.089,192,1.684,193,1.254]],["title/injectables/AuthService.html",[94,1.356,168,0.677]],["body/injectables/AuthService.html",[2,0.243,3,0.243,7,0.161,19,0.243,20,0.854,25,0.687,27,0.61,30,0.84,32,0.768,33,0.039,34,0.405,35,0.509,36,0.538,39,0.84,40,0.606,43,1.142,48,0.69,49,0.333,53,0.243,54,0.382,55,1.097,79,0.863,81,0.023,82,0.023,94,1.71,95,1.668,98,1.499,138,1.684,140,1.499,154,3.945,157,3.818,165,2.448,167,2.7,168,0.99,169,1.345,170,0.82,171,0.996,172,1.155,173,0.996,174,4.16,175,1.915,176,2.609,178,2.225,179,0.903,180,1.213,181,3.945,182,2.225,183,2.196,184,2.225,187,2.225,191,2.225,192,1.213,193,0.903,194,2.225,195,1.548,196,3.148,197,3.137,198,3.945,199,5.229,200,1.575,201,4.78,202,1.765,203,2.908,204,2.696,205,1.765,206,3.8,207,4.402,208,2.696,209,4.78,210,2.374,211,1.793,212,3.8,213,3.633,214,3.137,215,2.374,216,2.681,217,2.696,218,3.396,219,1.947,220,2.113,221,1.71,222,2.696,223,2.696,224,2.385,225,1.098,226,1.896,227,2.225,228,1.404,229,1.915,230,0.996,231,1.499,232,1.213,233,1.896,234,2.113,235,3.945,236,2.696,237,1.896,238,1.213,239,1.499,240,1.499,241,3.8,242,2.696,243,2.696,244,2.696,245,2.696,246,2.696,247,2.448,248,2.696,249,2.696,250,1.915,251,2.225,252,2.696,253,2.696,254,1.915,255,2.696,256,2.696,257,0.996,258,1.098,259,2.696]],["title/interfaces/Backend.html",[200,0.83,260,0.83]],["body/interfaces/Backend.html",[2,0.314,3,0.314,7,0.208,19,0.314,25,0.816,30,0.944,32,1.176,33,0.038,34,0.62,35,0.62,36,0.824,39,0.944,43,1.268,48,0.43,53,0.314,79,0.805,81,0.028,82,0.028,165,2.788,169,1.734,200,1.244,202,1.667,203,2.951,215,2.819,216,2.502,219,1.415,260,1.244,261,2.868,262,2.819,263,2.819,264,3.207,265,3.207,266,3.207,267,3.207,268,2.819,269,3.207,270,3.475,271,3.059,272,3.207,273,2.864,274,3.475,275,3.207,276,3.475,277,1.415,278,3.207,279,3.475,280,3.207,281,3.475,282,3.207,283,3.475,284,3.475,285,3.475,286,3.207,287,3.475]],["title/injectables/BackendService.html",[95,0.916,168,0.677]],["body/injectables/BackendService.html",[2,0.277,3,0.277,7,0.184,9,1.305,14,1.532,19,0.277,25,0.751,27,0.757,30,0.932,32,1.144,33,0.039,34,0.603,35,0.603,36,0.802,39,0.922,40,1.273,43,1.259,48,0.583,49,0.379,53,0.277,54,0.435,79,0.757,81,0.026,82,0.026,95,1.264,165,2.621,168,1.06,169,1.532,177,1.707,179,1.923,200,1.146,202,1.535,203,2.809,215,2.597,216,2.352,219,1.25,225,1.25,262,2.597,263,2.597,264,2.954,265,2.954,266,2.954,267,2.954,268,2.597,269,2.954,271,2.936,272,2.954,273,2.777,275,2.954,277,1.25,278,2.954,280,2.954,282,2.954,286,2.954,288,2.534,289,3.069,290,3.069,291,3.069,292,3.069,293,3.069,294,3.069,295,3.069,296,3.069,297,3.069,298,3.069,299,5.739,300,5.739]],["title/interfaces/ClusterInfo.html",[260,0.83,277,1.227]],["body/interfaces/ClusterInfo.html",[2,0.447,3,0.363,7,0.241,19,0.363,20,1.113,30,0.645,33,0.038,34,0.596,35,0.653,36,0.701,43,1.269,53,0.363,81,0.03,82,0.03,195,2.341,260,1.478,277,2.016,301,3.317,302,3.317,303,3.516,304,2.855,305,4.018,306,2.234,307,4.018,308,2.067,309,3.976,310,3.495,311,3.495,312,3.976]],["title/interfaces/ComponentMockOption.html",[260,0.83,313,1.881]],["body/interfaces/ComponentMockOption.html",[0,0.379,2,0.402,3,0.248,7,0.165,9,0.619,10,1.292,12,1.292,13,1.063,15,0.922,17,0.922,19,0.248,20,0.867,22,1.53,23,1.467,26,0.922,27,0.442,33,0.039,34,0.622,35,0.474,36,0.63,40,0.619,41,2.003,43,1.064,44,1.016,45,1.924,48,0.596,49,0.34,50,0.922,51,1.53,52,1.239,53,0.402,54,0.39,55,0.686,63,0.619,64,1.544,79,0.442,81,0.024,82,0.024,117,1.239,164,0.758,170,0.837,171,1.016,172,1.172,173,1.016,179,0.922,180,0.758,192,2.686,193,1.903,195,1.121,202,1.424,220,1.53,228,2.17,229,1.955,234,1.53,250,1.955,257,1.781,258,1.121,260,1.329,306,2.475,308,1.016,313,3.013,314,1.719,315,1.719,316,2.534,317,2.78,318,1.719,319,1.736,320,1.924,321,2.409,322,2.409,323,1.955,324,0.837,325,1.373,326,2.272,327,2.272,328,2.409,329,1.719,330,1.719,331,2.272,332,2.74,333,1.373,334,2.74,335,2.272,336,4.553,337,3.183,338,3.183,339,1.955,340,3.183,341,1.955,342,3.183,343,2.272,344,3.183,345,2.272,346,3.183,347,3.183,348,1.955,349,3.183,350,1.955,351,3.183,352,3.183,353,1.955,354,2.272,355,1.955,356,2.272,357,3.919,358,2.272,359,4.553,360,3.919,361,2.272,362,2.272,363,2.272,364,2.272,365,2.272,366,2.272,367,2.272,368,2.272,369,1.955,370,1.53,371,2.272,372,2.272,373,2.272,374,1.719,375,2.272,376,1.955,377,1.719,378,2.272]],["title/components/DebugPanelComponent.html",[0,0.225,63,0.677]],["body/components/DebugPanelComponent.html",[0,0.415,1,0.552,2,0.393,3,0.2,4,0.817,5,0.817,6,0.817,7,0.132,9,0.741,10,1.318,11,0.817,12,1.862,13,1.346,15,1.104,17,1.104,19,0.2,20,0.741,22,2.188,23,1.615,25,0.595,26,1.46,27,0.529,30,0.812,32,0.666,33,0.039,34,0.608,35,0.496,36,0.692,39,0.632,40,0.98,41,2.469,43,0.666,44,1.216,45,2.175,46,1.001,48,0.539,49,0.274,50,0.742,51,1.23,52,0.996,53,0.355,54,0.313,55,0.552,56,0.673,57,1.216,58,1.216,59,1.104,60,1.61,61,0.817,62,0.817,63,0.98,64,1.644,65,0.817,66,0.552,67,0.817,68,0.552,69,0.817,70,0.552,71,0.817,72,0.552,73,0.817,74,0.552,75,0.817,76,0.552,77,0.817,78,0.552,79,0.529,80,0.817,81,0.02,82,0.02,117,2.34,164,0.61,170,0.673,171,0.817,172,1.196,173,0.817,179,1.104,180,0.61,192,2.605,193,1.812,195,0.901,200,0.908,202,1.216,220,1.831,228,2.109,229,1.572,232,1.482,234,1.23,250,2.34,257,1.962,258,0.901,260,0.908,306,2.188,308,0.817,313,3.051,314,3.247,315,1.382,316,2.437,317,2.91,318,1.382,319,1.482,320,1.643,321,2.057,322,2.057,323,1.572,324,0.673,325,1.104,326,2.719,327,2.719,328,2.457,329,2.057,330,2.722,331,1.827,332,2.34,333,1.104,334,2.34,335,1.827,336,4.291,337,2.719,338,2.719,339,1.572,340,2.719,341,1.572,342,2.719,343,1.827,344,2.719,345,1.827,346,2.719,347,2.719,348,1.572,349,2.719,350,1.572,351,3.248,352,3.248,353,2.34,354,2.719,355,1.572,356,1.827,357,3.693,358,1.827,359,4.291,360,3.693,361,1.827,362,1.827,363,1.827,364,1.827,365,1.827,366,1.827,367,1.827,368,1.827,369,1.572,370,1.831,371,2.719,372,2.719,373,3.597,374,1.382,375,1.827,376,2.795,377,1.382,378,1.827,379,3.294,380,1.827,381,3.294,382,2.213,383,2.213,384,2.213,385,2.213,386,2.213,387,1.572,388,3.294,389,3.294,390,3.294,391,1.482]],["title/injectables/ErrorHandlerService.html",[111,1.881,168,0.677]],["body/injectables/ErrorHandlerService.html",[2,0.284,3,0.284,7,0.189,9,0.952,19,0.284,25,0.863,27,0.767,30,0.68,32,0.637,33,0.039,34,0.336,35,0.336,36,0.446,39,0.506,40,0.952,44,1.164,48,0.523,49,0.39,53,0.284,54,0.446,59,1.056,79,0.767,81,0.026,82,0.026,98,1.753,110,3.493,111,2.643,136,2.602,161,2.602,164,0.868,168,1.074,188,1.753,195,1.284,198,3.493,218,4.1,230,1.164,234,1.753,235,2.602,238,1.419,247,3.116,254,2.239,304,2.239,320,2.112,324,0.958,328,1.969,329,1.969,355,2.239,357,4.277,360,4.295,387,2.239,392,3.944,393,2.602,394,4.232,395,3.152,396,4.232,397,5.107,398,3.152,399,3.493,400,4.778,401,4.92,402,3.152,403,2.602,404,3.152,405,3.152,406,3.152,407,3.152,408,4.232,409,3.152,410,3.152,411,3.152,412,3.152,413,3.152,414,3.152,415,4.232,416,3.152,417,4.232,418,4.232,419,3.152,420,3.152,421,3.152,422,3.152,423,2.239,424,3.152,425,3.152,426,4.232,427,3.152,428,3.152,429,4.232,430,3.152,431,3.152,432,3.152,433,3.152,434,3.152,435,4.232,436,3.152,437,3.152,438,2.602,439,3.152,440,3.152,441,2.602,442,3.152,443,2.602,444,1.969,445,2.602,446,3.152,447,3.152,448,3.152,449,3.152,450,2.602,451,3.152,452,3.152,453,2.602,454,3.152,455,3.152,456,3.152,457,3.152,458,3.152,459,3.152,460,3.152,461,3.152,462,4.232,463,3.152,464,3.152,465,3.152,466,3.152,467,3.152,468,3.152,469,3.152,470,3.152]],["title/components/LoginComponent.html",[0,0.225,66,0.751]],["body/components/LoginComponent.html",[0,0.377,1,0.673,2,0.343,3,0.244,4,0.997,5,0.997,6,0.997,7,0.162,9,0.855,10,1.476,11,0.997,12,1.916,13,1.441,15,1.275,17,1.275,19,0.244,20,0.855,21,2.987,25,0.687,26,1.603,27,0.611,29,2.987,30,0.84,32,0.545,33,0.039,34,0.469,35,0.469,36,0.382,37,2.751,39,0.707,40,0.99,41,2.152,46,1.454,48,0.647,49,0.334,50,0.904,53,0.244,54,0.382,55,1.192,56,0.821,57,1.405,58,1.405,59,1.275,60,1.766,61,0.997,62,0.997,63,0.855,64,1.59,65,0.997,66,1.192,67,0.997,68,0.673,69,0.997,70,0.673,71,0.997,72,0.673,73,0.997,74,0.673,75,0.997,76,0.673,77,0.997,78,0.673,79,0.433,80,0.997,81,0.023,82,0.023,87,1.347,94,2.419,117,1.215,118,1.918,131,1.918,133,1.918,140,1.501,157,3.819,176,1.898,196,2.987,202,2.027,210,2.376,211,1.549,213,3.14,214,3.636,216,2.516,219,2.189,221,2.152,224,1.898,230,1.766,237,1.347,247,1.501,251,3.948,254,1.918,317,2.987,319,1.215,334,2.702,391,1.215,423,3.398,441,3.14,471,2.228,472,3.804,473,3.804,474,4.782,475,4.782,476,3.948,477,2.699,478,5.231,479,3.804,480,2.699,481,2.699,482,3.804,483,3.804,484,1.898,485,3.804,486,3.14,487,3.804,488,3.14,489,2.699,490,2.987,491,2.376,492,2.376,493,4.782,494,2.699,495,3.804,496,3.804,497,3.14,498,2.702,499,2.699,500,2.699,501,3.804,502,2.699,503,2.699,504,2.699,505,2.699,506,2.699,507,1.918,508,2.228,509,1.918,510,3.14,511,3.804]],["title/components/MainComponent.html",[0,0.225,68,0.751]],["body/components/MainComponent.html",[0,0.423,1,0.954,2,0.433,3,0.345,4,1.413,5,1.413,6,1.413,7,0.229,9,1.079,10,1.758,11,1.413,12,2.042,13,1.515,15,1.609,17,1.609,19,0.345,25,0.867,26,1.843,27,0.842,30,0.771,33,0.038,34,0.511,39,0.614,40,0.86,46,1.672,48,0.473,49,0.473,53,0.345,54,0.542,56,1.163,57,1.773,58,1.773,59,1.609,60,2.031,61,1.413,62,1.413,63,0.86,64,1.163,65,1.413,66,0.954,67,1.413,68,1.371,69,1.413,70,0.954,71,1.413,72,0.954,73,1.413,74,0.954,75,1.413,76,0.954,77,1.413,78,0.954,79,0.614,80,1.413,81,0.03,82,0.03,164,1.054,324,1.163,325,1.909,512,3.158,513,4.8,514,4.8,515,4.8,516,3.826,517,3.826]],["title/injectables/MockupBackendService.html",[168,0.677,205,1.112]],["body/injectables/MockupBackendService.html",[2,0.383,3,0.227,7,0.151,9,0.566,14,1.257,19,0.383,25,0.654,27,0.681,30,0.895,32,1.089,33,0.039,34,0.585,35,0.574,36,0.763,39,0.952,43,1.251,48,0.607,49,0.311,53,0.227,54,0.357,79,0.882,81,0.022,82,0.022,138,1.574,165,2.358,168,0.953,169,1.257,176,1.257,177,1.401,179,1.84,180,0.694,195,1.475,200,1.277,202,1.712,203,2.843,205,1.338,215,2.262,216,2.551,218,3.294,219,2,220,2.578,221,1.63,225,1.026,227,4.6,234,2.358,238,1.134,262,2.262,263,2.262,264,2.573,265,2.573,266,2.573,267,2.573,268,2.262,269,2.573,271,2.731,272,2.573,273,2.69,275,2.573,277,1.026,278,2.573,280,2.573,282,2.573,286,2.573,311,3.429,321,2.262,403,4.532,518,4.656,519,2.08,520,2.519,521,2.519,522,2.519,523,2.519,524,2.519,525,2.519,526,2.519,527,5.113,528,3.622,529,2.573,530,3.622,531,3.622,532,3.622,533,2.519,534,2.519,535,2.519,536,2.573,537,1.574,538,1.574,539,1.574,540,2.573,541,1.79,542,1.574,543,5.49,544,5.113,545,3.622,546,2.519,547,2.519,548,1.401,549,2.519,550,2.519,551,2.519,552,2.519,553,2.519,554,2.519,555,2.519,556,1.807,557,2.519,558,2.519]],["title/interfaces/Notification.html",[257,1.112,260,0.83]],["body/interfaces/Notification.html",[2,0.319,3,0.319,7,0.211,14,1.761,19,0.456,20,1.025,23,1.073,27,0.567,33,0.039,35,0.622,36,0.816,39,0.811,43,1.192,48,0.436,49,0.436,53,0.412,54,0.5,55,0.88,81,0.028,82,0.028,164,0.973,168,1.025,177,1.963,180,1.256,186,2.205,188,1.963,210,2.205,257,2.042,258,2.175,260,1.256,308,1.972,316,1.761,324,1.073,370,1.963,377,3.335,391,1.589,484,1.761,556,2.275,559,2.508,560,3.589,561,2.914,562,3.764,563,2.914,564,2.914,565,2.508,566,2.508,567,2.508,568,2.508,569,2.508,570,2.914,571,2.914,572,2.914,573,3.764,574,2.914,575,2.914,576,2.914,577,2.914,578,2.914,579,2.914,580,2.914,581,2.914,582,2.914,583,2.914,584,3.764,585,2.508,586,2.914,587,4.17,588,2.914,589,2.508,590,1.761,591,2.914,592,2.914,593,2.914,594,2.914,595,2.914]],["title/components/NotificationsComponent.html",[0,0.225,70,0.751]],["body/components/NotificationsComponent.html",[0,0.366,1,0.622,2,0.46,3,0.225,4,0.921,5,0.921,6,0.921,7,0.149,9,0.808,10,1.413,11,0.921,12,1.887,13,1.404,15,1.205,17,1.205,19,0.225,20,0.808,22,2.344,23,1.597,25,0.65,26,1.546,27,0.577,30,0.863,32,0.727,33,0.039,34,0.492,35,0.6,36,0.722,39,0.677,40,1.1,44,1.328,45,1.794,46,1.093,48,0.687,49,0.308,52,1.123,53,0.225,54,0.353,55,1.051,56,0.758,57,1.704,58,1.328,59,1.205,60,1.704,61,0.921,62,0.921,63,0.561,64,0.758,65,0.921,66,0.622,67,0.921,68,0.622,69,0.921,70,1.15,71,0.921,72,0.622,73,0.921,74,0.622,75,0.921,76,0.622,77,0.921,78,0.622,79,0.401,80,0.921,81,0.022,82,0.022,95,1.635,97,3.279,134,1.245,164,0.687,170,0.758,171,0.921,172,0.758,173,0.921,180,0.687,188,2.566,193,1.413,197,2.968,200,1.568,205,1.94,211,1.465,220,1.999,225,1.016,226,1.245,228,1.328,232,1.618,233,1.794,257,2.053,258,2.19,304,2.555,324,0.758,329,2.882,330,2.246,332,1.772,391,1.618,399,2.968,484,1.794,497,3.809,565,2.555,566,2.555,567,3.891,568,3.82,569,2.555,585,1.772,590,1.794,596,2.059,597,3.596,598,3.596,599,4.614,600,2.494,601,2.494,602,2.494,603,2.494,604,2.494,605,2.059,606,2.494,607,2.494,608,3.596,609,3.596,610,3.596,611,2.968,612,3.596,613,3.596,614,3.596,615,3.596,616,3.596,617,3.596,618,3.596,619,3.596,620,3.596,621,3.596,622,3.596,623,3.596,624,2.494,625,2.968,626,2.494,627,2.494,628,2.494,629,1.387,630,2.494,631,2.494,632,3.596,633,2.494,634,2.494,635,3.596,636,3.596,637,3.596,638,3.596]],["title/injectables/NotificationsService.html",[23,0.916,168,0.677]],["body/injectables/NotificationsService.html",[2,0.298,3,0.298,7,0.198,14,1.649,19,0.442,20,0.982,23,1.328,25,0.789,27,0.786,30,0.893,32,0.883,33,0.039,34,0.465,35,0.521,36,0.737,39,0.893,40,0.982,43,0.989,48,0.409,49,0.409,53,0.394,54,0.468,55,1.22,81,0.027,82,0.027,164,0.911,168,1.1,177,1.838,180,1.204,186,2.729,188,2.429,210,2.065,257,2.151,258,1.346,260,0.911,308,1.221,316,2.18,324,1.005,370,2.894,377,2.065,391,1.966,484,2.18,556,2.18,559,2.348,560,2.348,561,4.297,562,3.606,563,3.606,564,2.728,565,3.698,566,3.104,567,3.104,568,3.104,569,3.104,570,2.728,571,2.728,572,2.728,573,4.297,574,3.606,575,3.606,576,3.606,577,3.606,578,4.297,579,2.728,580,2.728,581,2.728,582,2.728,583,2.728,584,3.606,585,2.348,586,2.728,587,4.039,588,2.728,589,2.348,590,1.649,591,2.728,592,2.728,593,2.728,594,2.728,595,2.728,605,2.728,639,4.368,640,4.368,641,3.305,642,3.305,643,3.305,644,3.305,645,3.305,646,3.305]],["title/components/OrganizationComponent.html",[0,0.225,72,0.751]],["body/components/OrganizationComponent.html",[0,0.394,1,0.535,2,0.436,3,0.194,4,0.793,5,0.793,6,0.793,7,0.129,9,0.724,10,1.295,11,0.793,12,1.85,13,1.183,15,1.079,17,1.079,19,0.194,20,0.724,21,2.682,23,1.523,25,0.582,26,1.439,27,0.517,28,1.772,29,2.682,30,0.875,32,0.434,33,0.039,34,0.534,35,0.561,36,0.304,37,2.011,39,0.689,40,0.965,41,1.932,43,1.084,46,0.979,48,0.651,49,0.265,50,0.719,52,0.966,53,0.194,54,0.304,55,1.07,56,0.653,57,1.189,58,1.189,59,1.079,60,1.586,61,0.793,62,0.793,63,0.483,64,0.653,65,0.793,66,0.535,67,0.793,68,0.535,69,0.793,70,0.535,71,0.793,72,1.07,73,0.793,74,0.535,75,0.793,76,0.535,77,0.793,78,0.803,79,0.951,80,0.793,81,0.02,82,0.02,87,1.071,95,1.566,134,1.071,141,1.341,142,1.772,164,0.592,170,0.653,171,0.793,172,0.653,173,0.793,179,1.079,180,1.331,183,2.295,193,0.719,196,2.011,200,1.501,205,1.903,211,1.874,219,1.312,221,1.932,224,2.142,225,0.874,226,1.071,228,1.427,230,0.793,231,1.194,232,0.966,233,1.607,237,2.142,238,1.739,239,2.149,240,2.149,258,0.874,262,2.682,271,2.387,308,1.189,316,1.607,319,2.174,324,0.653,325,1.071,333,1.071,339,1.525,369,2.288,370,2.387,374,1.341,391,0.966,484,1.607,490,2.011,491,2.011,492,2.011,498,2.288,507,1.525,509,1.525,537,2.011,542,1.341,548,1.791,590,1.607,611,1.772,629,1.194,647,1.772,648,3.22,649,3.22,650,4.134,651,4.83,652,4.293,653,4.293,654,3.22,655,2.147,656,2.147,657,2.147,658,2.147,659,2.147,660,2.147,661,2.011,662,5.269,663,2.147,664,2.147,665,2.147,666,3.864,667,2.147,668,3.864,669,3.864,670,1.791,671,1.341,672,3.544,673,2.147,674,2.147,675,2.873,676,1.341,677,3.22,678,3.22,679,2.147,680,2.147,681,2.147,682,3.22,683,2.147,684,3.864,685,3.22,686,3.22,687,2.658,688,3.22,689,3.22,690,3.22,691,2.288,692,3.22,693,2.288,694,3.22,695,3.22,696,2.658]],["title/components/ResourcesComponent.html",[0,0.225,74,0.751]],["body/components/ResourcesComponent.html",[0,0.334,1,0.392,2,0.228,3,0.142,4,0.581,5,0.581,6,0.581,7,0.094,9,0.568,10,1.062,11,0.581,12,1.684,13,1.171,15,0.847,17,0.847,19,0.142,20,0.568,23,1.358,25,0.457,26,1.217,27,0.406,30,0.937,32,0.318,33,0.039,34,0.554,35,0.605,36,0.563,39,0.406,40,0.568,43,1.163,44,2.073,45,2.783,46,0.769,48,0.574,49,0.194,50,0.527,52,0.708,53,0.142,54,0.223,55,0.79,56,0.478,57,0.934,58,0.934,59,0.847,60,1.341,61,0.581,62,0.581,63,0.354,64,0.478,65,0.581,66,0.392,67,0.581,68,0.392,69,0.581,70,0.392,71,0.581,72,0.392,73,0.581,74,0.905,75,0.581,76,0.392,77,0.581,78,0.392,79,0.253,80,0.581,81,0.016,82,0.016,88,2.58,95,1.358,108,2.485,134,0.785,170,0.478,171,0.581,172,0.478,173,0.581,180,0.874,183,1.812,192,2.213,193,1.743,195,1.479,200,1.385,205,1.715,211,0.641,221,1.634,224,1.262,225,0.641,226,0.785,228,1.341,230,0.581,231,0.875,232,0.708,233,1.262,237,0.785,238,0.708,239,0.875,240,0.875,247,1.406,277,1.479,303,4.193,306,1.406,308,1.341,309,2.58,310,3.563,311,2.654,312,1.796,320,1.812,333,2.228,341,1.118,444,1.579,490,1.579,491,1.579,492,1.579,510,3.507,542,0.983,556,2.12,560,1.796,590,2.228,629,0.875,661,1.579,670,1.406,671,0.983,675,1.579,676,0.983,687,2.087,691,3.019,697,1.298,698,3.17,699,2.528,700,2.528,701,2.528,702,2.528,703,2.528,704,2.528,705,3.631,706,3.631,707,2.997,708,3.631,709,3.631,710,3.631,711,3.631,712,3.631,713,3.631,714,3.631,715,3.631,716,3.631,717,3.019,718,3.019,719,3.631,720,3.631,721,3.631,722,3.631,723,3.631,724,3.631,725,3.631,726,3.631,727,3.631,728,3.631,729,3.631,730,1.298,731,2.528,732,1.573,733,1.573,734,1.573,735,1.573,736,1.573,737,1.573,738,2.528,739,1.573,740,1.573,741,1.573,742,1.573,743,1.573,744,1.573,745,2.528,746,2.528,747,2.528,748,1.573,749,3.904,750,2.528,751,2.528,752,1.573,753,1.573,754,1.573,755,2.528,756,1.573,757,1.573,758,2.528,759,1.573,760,2.528,761,1.573,762,2.528,763,1.573,764,1.573,765,1.573,766,1.573,767,1.573,768,1.573,769,1.573,770,1.573,771,1.573,772,2.528,773,3.173,774,2.528,775,2.528,776,2.528,777,2.528,778,2.528,779,2.528,780,2.528,781,1.573,782,2.528,783,1.573,784,1.573,785,1.573,786,1.573,787,1.573,788,1.573,789,1.573,790,1.573,791,2.528,792,2.528,793,5.274,794,2.528,795,2.087,796,2.087,797,1.796,798,2.528,799,2.528,800,1.796,801,2.528,802,2.528,803,2.528,804,2.528,805,2.528,806,2.528,807,2.528,808,2.528]],["title/components/SidebarComponent.html",[0,0.225,76,0.751]],["body/components/SidebarComponent.html",[0,0.36,1,0.598,2,0.316,3,0.217,4,0.887,5,0.887,6,0.887,7,0.144,9,0.786,10,1.383,11,0.887,12,1.893,13,1.386,15,1.172,17,1.172,19,0.217,20,0.786,21,2.831,25,0.632,26,1.519,27,0.562,29,2.831,30,0.871,32,0.485,33,0.039,34,0.595,35,0.536,36,0.34,37,2.577,39,0.662,40,0.928,41,2.04,43,1.096,44,1.524,46,1.529,48,0.658,49,0.297,50,0.804,53,0.217,54,0.34,55,0.872,56,0.73,57,1.292,58,1.292,59,1.172,60,1.674,61,0.887,62,0.887,63,0.786,64,1.529,65,0.887,66,0.598,67,0.887,68,0.598,69,0.887,70,0.598,71,0.887,72,0.598,73,0.887,74,0.598,75,0.887,76,1.13,77,0.887,78,0.598,79,0.662,80,0.887,81,0.022,82,0.022,87,1.198,94,2.04,95,1.578,117,1.08,118,1.706,133,1.706,134,1.198,164,0.661,170,0.73,171,0.887,172,0.73,173,0.887,180,1.249,183,2.262,193,0.804,196,2.184,200,1.539,202,1.292,203,2.796,205,1.965,211,0.978,219,2.167,221,2.04,224,2.262,225,0.978,226,1.198,228,1.524,230,0.887,231,1.335,232,1.08,233,1.745,237,1.198,238,1.08,239,1.335,240,1.335,273,1.745,317,2.831,319,1.574,320,1.745,322,2.831,324,0.73,325,1.198,333,2.059,348,1.706,391,1.08,423,2.485,438,2.887,476,3.741,486,3.405,490,2.831,491,2.184,492,2.184,498,2.485,507,1.706,508,1.981,509,1.706,548,2.958,629,1.335,661,2.184,670,1.945,671,1.499,675,1.499,676,1.499,730,1.981,773,2.931,809,1.981,810,3.497,811,3.497,812,3.497,813,2.4,814,3.497,815,3.497,816,2.4,817,2.4,818,2.4,819,2.4,820,2.4,821,2.4,822,3.497,823,2.887,824,3.497,825,2.4,826,2.4,827,1.981,828,2.4,829,2.4,830,2.887,831,3.497,832,3.497,833,2.887]],["title/components/UserInfoComponent.html",[0,0.225,78,0.751]],["body/components/UserInfoComponent.html",[0,0.337,1,0.513,2,0.407,3,0.186,4,0.759,5,0.759,6,0.759,7,0.123,9,0.701,10,1.261,11,0.759,12,1.832,13,1.157,15,1.045,17,1.045,19,0.186,20,0.701,22,2.093,23,1.501,24,4.197,25,0.563,26,1.408,27,0.501,30,0.905,32,0.63,33,0.039,34,0.542,35,0.575,36,0.441,39,0.763,40,0.846,41,2.428,43,1.195,44,1.151,46,0.948,48,0.628,49,0.254,50,0.689,51,1.143,52,0.925,53,0.186,54,0.291,55,0.938,56,0.625,57,1.151,58,1.151,59,1.045,60,1.551,61,0.759,62,0.759,63,0.462,64,0.625,65,0.759,66,0.513,67,0.759,68,0.513,69,0.759,70,0.513,71,0.759,72,0.513,73,0.759,74,0.513,75,0.759,76,0.513,77,0.759,78,1.047,79,0.912,80,0.759,81,0.019,82,0.019,95,1.546,134,1.026,141,3.549,164,0.567,167,1.461,170,0.625,171,0.759,172,0.625,173,0.759,179,0.689,180,1.157,183,2.537,192,0.925,193,1.045,200,1.486,205,1.878,211,0.838,216,2.096,221,1.403,224,1.555,225,0.838,226,1.026,228,1.39,230,0.759,231,1.143,232,0.925,233,1.555,237,1.878,238,0.925,239,1.733,240,1.143,258,1.27,263,2.624,268,2.624,271,2.336,273,2.096,308,1.151,319,1.403,324,0.625,325,1.026,333,1.555,350,1.461,353,2.215,374,1.947,380,1.697,387,1.461,484,2.096,538,1.284,539,1.284,542,1.284,548,2.827,629,1.143,650,3.467,661,1.947,670,1.733,671,1.284,672,2.573,675,1.284,676,1.284,691,2.215,773,2.215,823,2.573,827,1.697,830,2.573,834,4.69,835,1.697,836,3.117,837,3.117,838,4.751,839,4.751,840,4.2,841,3.117,842,3.117,843,3.117,844,2.056,845,3.117,846,2.056,847,2.056,848,2.056,849,2.056,850,2.056,851,2.056,852,4.2,853,4.2,854,4.2,855,2.056,856,3.764,857,2.056,858,2.056,859,2.056,860,3.117,861,2.056,862,2.056,863,3.117,864,2.056,865,3.117,866,5.206,867,2.056,868,2.056,869,2.056,870,2.056,871,2.056,872,2.056,873,2.056,874,2.056,875,3.117,876,2.056,877,2.573,878,2.573,879,2.215]],["title/coverage.html",[880,3.388]],["body/coverage.html",[0,0.436,1,0.829,7,0.199,8,2.745,23,1.011,33,0.039,35,0.354,63,0.748,66,0.829,68,0.829,70,0.829,72,0.829,74,0.829,76,0.829,78,0.829,81,0.027,82,0.027,94,1.497,95,1.011,111,2.077,114,2.362,117,2.209,141,2.077,168,1.219,170,1.011,172,1.011,179,1.114,194,2.745,200,0.916,205,1.228,257,1.228,260,1.438,261,2.745,277,1.354,288,2.745,301,2.745,302,2.745,313,2.077,314,3.065,315,3.065,318,2.077,392,2.745,393,2.745,471,2.745,512,2.745,518,2.745,519,2.745,536,2.362,537,2.077,538,2.077,539,2.077,540,2.362,541,2.362,559,3.116,590,3.024,596,2.745,647,2.745,697,2.745,717,2.362,718,2.362,800,3.707,809,2.745,834,2.745,835,2.745,880,2.745,881,2.745,882,3.325,883,3.325,884,3.325,885,2.745,886,4.288,887,5.887,888,3.325,889,3.325,890,4.907,891,4.385,892,3.325,893,3.325,894,2.745,895,2.745,896,2.745,897,2.745,898,2.745,899,5.217,900,3.325,901,3.325,902,3.325,903,3.325,904,3.325,905,3.325,906,3.325,907,3.325,908,3.325,909,3.325,910,3.325,911,3.325,912,3.325,913,3.325,914,4.385,915,3.325,916,3.325,917,3.325,918,3.325,919,3.325,920,4.758,921,2.745,922,3.62,923,2.745,924,3.325,925,3.325]],["title/dependencies.html",[85,2.261,926,2.079]],["body/dependencies.html",[33,0.039,49,0.519,50,1.407,81,0.031,82,0.031,85,2.623,87,2.537,102,4.196,103,3.612,107,3.466,108,2.623,131,2.984,138,2.623,140,2.335,169,2.095,175,2.984,176,2.537,625,3.466,927,4.199,928,6.079,929,4.199,930,4.199,931,4.199,932,4.199,933,4.199,934,4.199,935,4.199,936,5.083,937,4.199,938,4.199,939,4.199,940,4.199,941,4.199,942,4.199,943,4.199,944,4.199,945,4.199,946,4.199,947,4.199,948,5.083,949,4.199,950,4.199,951,4.199]],["title/index.html",[19,0.227,693,1.789,952,2.079]],["body/index.html",[0,0.395,3,0.351,7,0.233,13,1.071,33,0.03,34,0.414,46,1.474,81,0.03,82,0.03,98,2.161,179,1.302,186,3.454,211,1.583,230,1.435,310,2.427,328,2.427,376,3.753,401,4.36,444,2.427,488,3.207,529,3.929,696,4.001,749,4.182,879,2.761,881,4.565,926,3.207,953,3.886,954,3.886,955,5.282,956,3.886,957,5.53,958,3.886,959,5.282,960,3.886,961,4.847,962,3.886,963,3.886,964,4.847,965,4.847,966,5.803,967,4.847,968,3.886,969,3.886,970,3.886,971,3.886,972,3.886,973,3.886,974,3.886,975,3.886,976,5.691,977,3.886,978,3.886,979,3.886,980,3.886,981,3.207,982,4.847,983,3.886,984,3.886,985,3.886,986,4.847,987,3.886,988,3.886,989,3.886,990,4.847,991,3.207,992,3.886,993,3.886,994,3.886,995,3.886,996,5.282,997,3.886,998,3.886,999,3.886]],["title/license.html",[693,1.789,952,2.079,1000,2.079]],["body/license.html",[7,0.266,33,0.032,46,1.35,81,0.032,82,0.032,230,1.64,450,3.666,529,3.156,833,3.666,991,3.666,1000,5.032,1001,4.441,1002,4.441,1003,5.599,1004,4.441,1005,4.441,1006,4.441,1007,4.441,1008,4.441,1009,4.441,1010,4.441,1011,4.441,1012,4.441,1013,4.441,1014,4.441,1015,4.441,1016,5.257,1017,4.441,1018,4.441,1019,4.441,1020,4.441,1021,4.441,1022,4.441,1023,4.441,1024,4.441,1025,4.441,1026,4.441,1027,4.441,1028,4.441]],["title/modules.html",[83,2.282]],["body/modules.html",[33,0.034,81,0.034,82,0.034,83,2.683,84,3.014,103,3.428,453,3.983,1029,4.825,1030,4.825]],["title/overview.html",[1031,3.388]],["body/overview.html",[0,0.296,1,1.473,33,0.038,53,0.358,56,1.204,63,1.198,66,1.473,68,1.328,70,1.328,72,1.328,74,1.328,76,1.328,78,1.328,81,0.03,82,0.03,83,2.727,84,3.927,85,2.474,86,3.27,87,1.977,88,2.815,89,3.27,90,3.27,91,3.27,92,3.27,93,3.27,94,2.398,95,1.62,96,4.049,97,2.815,98,2.203,151,2.815,168,0.891,260,1.092,556,2.448,796,3.27,797,2.815,1031,3.27,1032,3.961]],["title/miscellaneous/variables.html",[886,2.572,1033,2.079]],["body/miscellaneous/variables.html",[2,0.201,13,0.912,19,0.201,33,0.039,34,0.636,35,0.624,43,0.669,44,2.095,45,2.969,79,0.532,81,0.02,82,0.02,108,1.392,114,2.807,117,1.003,164,0.614,170,1.201,172,1.007,176,1.652,192,1.003,193,1.11,195,1.995,202,1.223,219,2.065,228,1.459,247,1.841,257,1.223,273,1.652,277,1.349,303,3.701,306,3.155,308,1.808,309,3.479,310,3.253,311,3.059,312,3.479,314,1.392,315,2.068,316,1.652,318,2.468,319,1.49,320,1.652,321,2.068,322,2.068,323,1.583,324,0.677,330,1.392,443,1.839,444,1.392,445,1.839,536,2.807,537,2.468,538,2.468,539,2.468,540,2.807,541,2.807,548,2.896,556,1.112,589,1.583,670,1.239,707,2.733,717,2.807,718,2.807,749,3.602,795,1.839,797,1.583,800,2.807,877,4.393,878,2.733,879,2.352,885,1.839,886,1.583,894,1.839,895,2.733,896,1.839,897,2.733,898,3.261,920,1.839,921,1.839,922,4.042,923,1.839,981,2.733,1033,1.839,1034,2.228,1035,2.228,1036,2.228,1037,2.228,1038,5.209,1039,2.228,1040,2.228,1041,2.228,1042,2.228,1043,2.228,1044,2.228,1045,2.228,1046,2.228,1047,2.228,1048,2.228,1049,2.228,1050,2.228,1051,2.228,1052,2.228,1053,2.228,1054,2.228,1055,2.228,1056,2.228,1057,4.897,1058,4.897,1059,4.673,1060,5.563,1061,4.897,1062,4.897,1063,2.228,1064,2.228,1065,2.228,1066,2.228,1067,2.228,1068,2.228,1069,2.228,1070,5.07,1071,2.228,1072,5.07,1073,2.228,1074,2.228,1075,2.228,1076,2.228,1077,2.228,1078,2.228,1079,2.228,1080,2.228,1081,2.228,1082,2.228,1083,2.228,1084,3.95,1085,2.228,1086,3.95,1087,2.228,1088,2.228,1089,2.228,1090,2.228,1091,5.07,1092,5.07,1093,4.897,1094,2.228,1095,3.311,1096,2.228,1097,2.228,1098,2.228]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":590,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"coverage.html":{}}}],["0.0",{"_index":758,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["0.8.26",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":750,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["00ff00",{"_index":751,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["0800200c9a66",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":746,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["0x3",{"_index":593,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":594,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":556,"title":{},"body":{"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/ResourcesComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":800,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["10000",{"_index":378,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["11",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":792,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["14",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":589,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":794,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["2.0",{"_index":1005,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1011,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":403,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":406,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1002,"title":{},"body":{"license.html":{}}}],["23",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":795,"title":{},"body":{"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":409,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":796,"title":{},"body":{"components/ResourcesComponent.html":{},"overview.html":{}}}],["4.1.3",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":414,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":420,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":424,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":428,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":432,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":436,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["44",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4h",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":581,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":797,"title":{},"body":{"components/ResourcesComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5/10",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":793,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["50",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":446,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":452,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":455,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":460,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":463,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":467,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{},"components/ResourcesComponent.html":{}}}],["6.1.10",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["6/31",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":798,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["6/7",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6h",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":747,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["96",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_notif",{"_index":561,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":426,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":639,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":457,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":854,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":684,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":370,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{}}}],["add(notificationinst",{"_index":563,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":441,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":262,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["adduser(organizationid",{"_index":269,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["agre",{"_index":1013,"title":{},"body":{"license.html":{}}}],["alert",{"_index":567,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":638,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":957,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["apach",{"_index":1004,"title":{},"body":{"license.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":833,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["appmodul",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsmock",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":977,"title":{},"body":{"index.html":{}}}],["assest",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["attent",{"_index":614,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["auth",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authent",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":152,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":94,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":989,"title":{},"body":{"index.html":{}}}],["automat",{"_index":971,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":705,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["avail",{"_index":328,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":318,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.app",{"_index":342,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":337,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":346,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":338,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":344,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":340,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":347,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":349,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backend",{"_index":200,"title":{"interfaces/Backend.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":519,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:10",{"_index":520,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:20",{"_index":533,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:31",{"_index":534,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:40",{"_index":526,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:51",{"_index":524,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:58",{"_index":525,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:64",{"_index":523,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:70",{"_index":521,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:76",{"_index":522,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:86",{"_index":535,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":95,"title":{"injectables/BackendService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1017,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":532,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["better",{"_index":619,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bitwis",{"_index":586,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":544,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/carousel",{"_index":771,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["bootstrap/dropdown",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["break",{"_index":360,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["brows",{"_index":1030,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":976,"title":{},"body":{"index.html":{}}}],["button",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":838,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":839,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":845,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":584,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["carouselconfig",{"_index":698,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["carouselmodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":357,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["chang",{"_index":696,"title":{},"body":{"components/OrganizationComponent.html":{},"index.html":{}}}],["charact",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/ResourcesComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":841,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":843,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":635,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":687,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{}}}],["clean",{"_index":814,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":959,"title":{},"body":{"index.html":{}}}],["click",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":962,"title":{},"body":{"index.html":{}}}],["close",{"_index":391,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":303,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster.descript",{"_index":804,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.id",{"_index":802,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.multiten",{"_index":808,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.nam",{"_index":801,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.nod",{"_index":803,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.statu",{"_index":806,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.tag",{"_index":807,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster.typ",{"_index":805,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["cluster1",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["clusterdescript",{"_index":706,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["clusterid",{"_index":707,"title":{},"body":{"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["clusterinfo",{"_index":277,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"injectables/MockupBackendService.html":{},"components/ResourcesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clustermultiten",{"_index":708,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["clusternam",{"_index":709,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["clusternod",{"_index":710,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["clusterstatu",{"_index":711,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["clustertyp",{"_index":712,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["code",{"_index":973,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":713,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["command",{"_index":958,"title":{},"body":{"index.html":{}}}],["commun",{"_index":465,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1007,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":986,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":313,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":359,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":356,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":450,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["conflict",{"_index":434,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":415,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":433,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":407,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":425,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":464,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":437,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":447,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":410,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":468,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":429,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":404,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":368,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":461,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":421,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":730,"title":{},"body":{"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":380,"title":{},"body":{"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":600,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{}}}],["content",{"_index":427,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":388,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1009,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1001,"title":{},"body":{"license.html":{}}}],["core",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":880,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":305,"title":{},"body":{"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":423,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":435,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["customcolor",{"_index":714,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["danger",{"_index":617,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":675,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["data.descript",{"_index":787,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["data.email",{"_index":827,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["data.id",{"_index":785,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["data.multiten",{"_index":790,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["data.nam",{"_index":676,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["data.nod",{"_index":786,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["data.rol",{"_index":828,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data.statu",{"_index":789,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["data.typ",{"_index":788,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["date",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["debug",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":63,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultnotif",{"_index":599,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":853,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":263,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":272,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":85,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":968,"title":{},"body":{"index.html":{}}}],["develop",{"_index":879,"title":{},"body":{"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":860,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["direct",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":975,"title":{},"body":{"index.html":{}}}],["directori",{"_index":965,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":568,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":605,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":371,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":978,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1016,"title":{},"body":{"license.html":{}}}],["dn",{"_index":832,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":881,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":745,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["done",{"_index":610,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doughnut",{"_index":715,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["due",{"_index":417,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":625,"title":{},"body":{"components/NotificationsComponent.html":{},"dependencies.html":{}}}],["edg",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":691,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{}}}],["editclust",{"_index":729,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":863,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":448,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["entrycompon",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":300,"title":{},"body":{"injectables/BackendService.html":{}}}],["error.statu",{"_index":402,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":111,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["eventemitt",{"_index":628,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["except",{"_index":1006,"title":{},"body":{"license.html":{}}}],["execut",{"_index":983,"title":{},"body":{"index.html":{}}}],["expect",{"_index":531,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1021,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjvc2vyswqioijqb2hulmrvzubtywlslmnvbsisik9yz2fuaxphdglvbklkijoimje0mzq2ntqzndm0myisilbyaw1pdgl2zxmiolsimcisijeilciyiiwimyjdlcjsb2xlbmftzsi6ik93bmvyiiwirxhwaxjlc0f0ijoxmjmzodu3mjcxmjc0m30",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fake",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":431,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":980,"title":{},"body":{"index.html":{}}}],["folder",{"_index":992,"title":{},"body":{"index.html":{}}}],["form",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuild",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":440,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":430,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":668,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":408,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["further",{"_index":995,"title":{},"body":{"index.html":{}}}],["gain",{"_index":469,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":456,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":458,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":952,"title":{"index.html":{},"license.html":{}},"body":{}}],["getclusterslist",{"_index":264,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterslist(clusterinfo",{"_index":275,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":645,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":265,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":278,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":266,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":280,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":267,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(userid",{"_index":282,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":412,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":998,"title":{},"body":{"index.html":{}}}],["good",{"_index":623,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["govern",{"_index":1026,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":716,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["group",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["group_work",{"_index":831,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":151,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":576,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":454,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":394,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":396,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":399,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":393,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":398,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":395,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["head",{"_index":613,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["help",{"_index":996,"title":{},"body":{"index.html":{}}}],["helper",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":993,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":970,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1010,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":397,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":960,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":575,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":956,"title":{},"body":{"index.html":{}}}],["icon",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":308,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":637,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":528,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1022,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info.compon",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":837,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":836,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":835,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:101",{"_index":848,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:20",{"_index":849,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":859,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":855,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:32",{"_index":851,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":862,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:37",{"_index":857,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:38",{"_index":858,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":861,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:40",{"_index":842,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":850,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:63",{"_index":847,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:82",{"_index":844,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:89",{"_index":846,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":302,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/us",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["inform",{"_index":738,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["initi",{"_index":773,"title":{},"body":{"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":678,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inject",{"_index":168,"title":{"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":631,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":961,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":307,"title":{},"body":{"interfaces/ClusterInfo.html":{}}}],["integr",{"_index":987,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":260,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":700,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["invalid",{"_index":418,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["it'",{"_index":615,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["item.nam",{"_index":389,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":577,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["johndoe@mail.com",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata",{"_index":870,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["json.parse(jwtdata).clusterinfo",{"_index":783,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":673,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":825,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["json.stringifi",{"_index":545,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttoken.jwt",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(jwttokendata",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockclusterlist",{"_index":552,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":550,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist",{"_index":551,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["jwt",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":670,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwthelperservic",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwtjson",{"_index":869,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwtjson.rolenam",{"_index":872,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwtjson.userid",{"_index":871,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["jwttoken",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":985,"title":{},"body":{"index.html":{}}}],["key",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kf9ac17v9mwowmyjhhyc9gd8hgw6wrt6wwngduj1v4c",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":1020,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":1025,"title":{},"body":{"license.html":{}}}],["law",{"_index":1012,"title":{},"body":{"license.html":{}}}],["lead",{"_index":815,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":445,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":988,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1000,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1028,"title":{},"body":{"license.html":{}}}],["line",{"_index":444,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ResourcesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":325,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":443,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":585,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":316,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":333,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":334,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":343,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":671,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":332,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":339,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":345,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":341,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/ResourcesComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":348,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":350,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":363,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":358,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":365,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":361,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":364,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":362,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":366,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":367,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":66,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":439,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["look",{"_index":622,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["main",{"_index":513,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":515,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":514,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":68,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":954,"title":{},"body":{"index.html":{}}}],["match",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":588,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":686,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["min",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1033,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":717,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":541,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockjwttoken",{"_index":536,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":718,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":539,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":540,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":205,"title":{"injectables/MockupBackendService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":538,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":554,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.pop",{"_index":558,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":553,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":557,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo",{"_index":537,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserprofileinfo.email",{"_index":547,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.nam",{"_index":546,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserprofileinfo.rol",{"_index":549,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":694,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":661,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":352,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["modul",{"_index":83,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":997,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":309,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":969,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":422,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":304,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["network",{"_index":470,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["new_password_1234",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":966,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":310,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/ResourcesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nopaus",{"_index":701,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["notif",{"_index":257,"title":{"interfaces/Notification.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":642,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":598,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":597,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":70,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":330,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":23,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":955,"title":{},"body":{"index.html":{}}}],["null",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":560,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/ResourcesComponent.html":{}}}],["ny",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":306,"title":{},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":781,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["observ",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1008,"title":{},"body":{"license.html":{}}}],["onclos",{"_index":565,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":569,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openuserinfo",{"_index":652,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":878,"title":{},"body":{"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":379,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":354,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":762,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["organ",{"_index":319,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":679,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":649,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":648,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_mock",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":692,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":72,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":271,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":650,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":627,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["overview",{"_index":1031,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":877,"title":{},"body":{"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":926,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":438,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":317,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":326,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":327,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":315,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:121",{"_index":384,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:35",{"_index":386,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":381,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":385,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:45",{"_index":382,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:85",{"_index":383,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["payment",{"_index":695,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":411,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1027,"title":{},"body":{"license.html":{}}}],["persist",{"_index":351,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":830,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pie",{"_index":755,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["platform",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":335,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["predefin",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":451,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":466,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":979,"title":{},"body":{"index.html":{}}}],["product",{"_index":981,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":321,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":964,"title":{},"body":{"index.html":{}}}],["promis",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/ResourcesComponent.html":{},"overview.html":{}}}],["providedin",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["proxi",{"_index":459,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":994,"title":{},"body":{"index.html":{}}}],["r",{"_index":587,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":719,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["reactiveformsmodul",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":612,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["readm",{"_index":999,"title":{},"body":{"index.html":{}}}],["real",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":400,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":720,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["regist",{"_index":369,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":972,"title":{},"body":{"index.html":{}}}],["remov",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["renam",{"_index":630,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["replic",{"_index":530,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":963,"title":{},"body":{"index.html":{}}}],["request",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["requir",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsComponent.html":{},"overview.html":{}}}],["resetpassword",{"_index":268,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":286,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":320,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources.component.html",{"_index":704,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":703,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources/resources.compon",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":74,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["response(new",{"_index":543,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["responseopt",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["resset",{"_index":856,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":548,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["roles.t",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["root'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":749,"title":{},"body":{"components/ResourcesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["scaffold",{"_index":974,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":721,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["screen",{"_index":372,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1023,"title":{},"body":{"license.html":{}}}],["select",{"_index":353,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":967,"title":{},"body":{"index.html":{}}}],["server",{"_index":401,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["services/auth.servic",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":629,"title":{},"body":{"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{}}}],["set",{"_index":442,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":566,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":722,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showind",{"_index":702,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showreflabel",{"_index":723,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showreflin",{"_index":724,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showxaxi",{"_index":725,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showxaxislabel",{"_index":726,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showyaxi",{"_index":727,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["showyaxislabel",{"_index":728,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["sidebar",{"_index":322,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":811,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":810,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":76,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simul",{"_index":527,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["softwar",{"_index":1015,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":390,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":373,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1024,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/debug",{"_index":314,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/clust",{"_index":301,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":261,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":270,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":274,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":287,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:4",{"_index":284,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:5",{"_index":285,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":283,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:7",{"_index":279,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:8",{"_index":281,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":276,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/guards/auth.guard.t",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":512,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":517,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":516,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":596,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":602,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":607,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:25",{"_index":626,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:29",{"_index":624,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":601,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:58",{"_index":603,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:65",{"_index":606,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:68",{"_index":604,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":647,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:100",{"_index":658,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:21",{"_index":659,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:25",{"_index":660,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:26",{"_index":663,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":664,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":665,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:33",{"_index":654,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:53",{"_index":656,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:79",{"_index":657,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:90",{"_index":655,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":697,"title":{},"body":{"components/ResourcesComponent.html":{},"coverage.html":{}}}],["src/app/resources/resources.component.ts:116",{"_index":733,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:141",{"_index":732,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:29",{"_index":734,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:33",{"_index":737,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:37",{"_index":736,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:38",{"_index":740,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:39",{"_index":741,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:40",{"_index":735,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:41",{"_index":744,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:42",{"_index":743,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:43",{"_index":739,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:44",{"_index":742,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:49",{"_index":754,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:50",{"_index":753,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:51",{"_index":748,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:58",{"_index":767,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:59",{"_index":769,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:60",{"_index":768,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:61",{"_index":770,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:62",{"_index":764,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:63",{"_index":766,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:64",{"_index":765,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:65",{"_index":763,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:66",{"_index":759,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:67",{"_index":761,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:73",{"_index":752,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:83",{"_index":756,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:84",{"_index":757,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/resources/resources.component.ts:85",{"_index":731,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/services/auth.service.t",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:67",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:82",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":288,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:13",{"_index":296,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":297,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:19",{"_index":295,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:22",{"_index":293,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:25",{"_index":294,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:28",{"_index":292,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:31",{"_index":290,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:34",{"_index":291,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:37",{"_index":298,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:9",{"_index":289,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/error",{"_index":392,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":518,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":559,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":640,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:25",{"_index":641,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:32",{"_index":646,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":643,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":644,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":809,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":818,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":820,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:25",{"_index":821,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":819,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":812,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:49",{"_index":816,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:70",{"_index":817,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":813,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":834,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":693,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":311,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/MockupBackendService.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(respons",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":662,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":651,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["substitut",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["succeed",{"_index":405,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["success",{"_index":608,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successfulli",{"_index":611,"title":{},"body":{"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["summari",{"_index":791,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["super",{"_index":616,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["support",{"_index":453,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1029,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":355,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["syntax",{"_index":419,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["system",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabl",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":312,"title":{},"body":{"interfaces/ClusterInfo.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":376,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":852,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":562,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":570,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":564,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":572,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":632,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":829,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":683,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":874,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getclusterslist(this.clusterinfo",{"_index":784,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":674,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":677,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(this.userid",{"_index":873,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getuserprofileinfo(userid",{"_index":826,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":876,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.bsmodalref.hid",{"_index":875,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":867,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":868,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":780,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusterdescript",{"_index":776,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusterid",{"_index":774,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusterinfo",{"_index":782,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clustermultiten",{"_index":779,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusternam",{"_index":772,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusternod",{"_index":775,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clusterstatu",{"_index":778,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.clustertyp",{"_index":777,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["this.components.push",{"_index":336,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.defaultnotif",{"_index":633,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.email",{"_index":824,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.formbuilder.group",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.jwthelp",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(jwttoken.jwt",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":681,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":680,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":822,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":331,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":374,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":634,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":375,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":672,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":666,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":823,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.router.navig",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.subscriptiontyp",{"_index":667,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":864,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.updateuserlist",{"_index":682,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":669,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":866,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":865,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["throw",{"_index":299,"title":{},"body":{"injectables/BackendService.html":{}}}],["time",{"_index":387,"title":{},"body":{"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":799,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["timeout",{"_index":377,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["titl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/UserInfoComponent.html":{}}}],["todo",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["top",{"_index":636,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":324,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":953,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":462,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1003,"title":{},"body":{"license.html":{}}}],["understand",{"_index":416,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":449,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":982,"title":{},"body":{"index.html":{}}}],["up",{"_index":329,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":990,"title":{},"body":{"index.html":{}}}],["updateuserlist",{"_index":653,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":413,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["us",{"_index":529,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":690,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":688,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.rol",{"_index":689,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["userid",{"_index":273,"title":{},"body":{"interfaces/Backend.html":{},"injectables/BackendService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":323,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo_mock",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":78,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":840,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["userrol",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":685,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["usevalu",{"_index":699,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["utils/mock",{"_index":542,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":573,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":578,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":591,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":595,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":574,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourcesComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":886,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":991,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":984,"title":{},"body":{"index.html":{}}}],["view",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BackendService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/ResourcesComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warn",{"_index":618,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["warranti",{"_index":1019,"title":{},"body":{"license.html":{}}}],["well",{"_index":609,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["without",{"_index":1018,"title":{},"body":{"license.html":{}}}],["write",{"_index":1014,"title":{},"body":{"license.html":{}}}],["x",{"_index":592,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.email).indexof(userid",{"_index":555,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":571,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":760,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["xxxx",{"_index":580,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":579,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":583,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["you'r",{"_index":621,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yourself",{"_index":620,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["yxxx",{"_index":582,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DebugPanelComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { ResourcesComponent } from './resources/resources.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService }\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable, of } from 'rxjs';\nimport { ResponseOptions } from '@angular/http';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    let complete;\n    let jwtToken;\n    this.backend.login(email, password)\n      .subscribe(response => {\n        if (response && response._body) {\n          jwtToken = JSON.parse(response._body);\n          const jwtTokenData =  this.jwtHelper.decodeToken(jwtToken.jwt);\n          localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(jwtToken.jwt));\n          localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n          complete = jwtTokenData;\n        }\n      }, error => {\n        complete = error;\n      });\n      return of (complete);\n  }\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        this.router.navigate(['login']);\n      }, error => {\n        console.log(error); // TODO: substitute with notification service messaging system\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getClustersList\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClustersList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClustersList(clusterInfo: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterInfo\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n    login(email: string, password: string): Observable;\n    logout();\n    getUserProfileInfo(userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    getClustersList(clusterInfo: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClustersList\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClustersList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClustersList(clusterInfo: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterInfo\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/backend.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BackendService implements Backend {\n\n  constructor() { }\n\n  login(email: string, password: string): Observable {\n    throw new Error('Method not implemented.');\n  }\n  logout() {\n    throw new Error('Method not implemented.');\n  }\n  getUserProfileInfo(userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationInfo(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getOrganizationUsers(organizationId: string) {\n    throw new Error('Method not implemented.');\n  }\n  getClustersList(clusterInfo: string) {\n    throw new Error('Method not implemented.');\n  }\n  addUser(organizationId: string, user: any) {\n    throw new Error('Method not implemented.');\n  }\n  deleteUser(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n  resetPassword(organizationId: string, userId: string) {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/const/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        nodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  nodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:35\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Debug panel\n  \n  \n    \n      &times;\n    \n  \n\n\n\n  Backend control\n  \n    \n      \n      \n        {{item.name}}\n      \n      \n      \n        \n          Real\n        \n        \n          Mock\n        \n      \n    \n  \n  \n  Notifications\n  Spam test notification\n\n\n\n  \n    Close\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Debug panel              ×        Backend control                          {{item.name}}                                    Real                          Mock                        Notifications  Spam test notification      Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.router.navigate([\n          '/organization'\n        ]);\n      }, error => console.log(error));\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n          Nalej\n          \n              Log in\n              \n                  \n                  \n                      \n                        Email is required\n                        Email must be a valid email address\n                      \n                  \n                      \n                        Password is required\n                        Password must be at least 6 characters\n                      \n                  \n                  \n                    Log in\n                  \n                \n           \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Nalej                        Log in                                                                                                Email is required                        Email must be a valid email address                                                                                      Password is required                        Password must be at least 6 characters                                                                              Log in                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n\n\n  \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getClustersList\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClustersList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClustersList(clusterInfo: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterInfo\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Simulates get profile info\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the user identificator - used to replicate expected backend behavior\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Simulates the login request\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\nimport { mockJwtToken, mockUserProfileInfo, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        jwt: mockJwtToken\n      }),\n      status: 200\n    })));\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        name: mockUserProfileInfo.name,\n        email: mockUserProfileInfo.email,\n        role: mockUserProfileInfo.role\n      }),\n      status: 200\n    })));\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })));\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList),\n      status: 200\n    })));\n  }\n  getClustersList(clusterInfo: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n  addUser(organizationId: string, user: any) {\n    mockUserList.push(user);\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n  deleteUser(organizationId: string, userId: string) {\n    // const index = mockUserList.map(x => x.email).indexOf(userId);\n    // if (index !== -1) {\n    //   mockUserList.splice(index, 1);\n    // }\n    mockUserList.pop();\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                defaultNotifications\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultNotifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:29\n                            \n                        \n\n                \n                    \n                        Dynamic HTML in notifications\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n  /**\n   * Dynamic HTML in notifications\n   */\n  defaultNotifications: any[] = [\n    {\n      type: 'success',\n      message: `Well done! You successfully read this important alert message.`\n    },\n    {\n      type: 'info',\n      message: `Heads up! This alert needs your attention, but it's not super important.`\n    },\n    {\n      type: 'danger',\n      message: `Warning! Better check yourself, you're not looking too good.`\n    }\n  ];\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  reset(): void {\n    this.alerts = this.defaultNotifications;\n  }\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:32\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:25\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockUserProfileInfo } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).OrganizationId;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.organizationName = data.name;\n            }\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.users = data;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo() {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  addUser() {\n    this.backend.addUser(this.organizationId, mockUserProfileInfo)\n      .subscribe(response => {\n        this.notificationsService.add({\n          message: 'User added successfully'\n        });\n        this.updateUserList();\n      });\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n        if (response && response._body) {\n          const data = JSON.parse(response._body);\n          this.users = data;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        Members\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role}}\n              {{user.email}}\n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      Subscription\n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                Members                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                    {{user.name}}              {{user.role}}              {{user.email}}                                                                    edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                          Subscription              check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/resources/resources.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: CarouselConfig, useValue: {\n        interval: , noPause: false, showIndicators: true\n    } }\n                \n            \n\n\n            \n                selector\n                app-resources\n            \n\n            \n                styleUrls\n                resources.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterInfo\n                            \n                            \n                                clusterMultitenant\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterNodes\n                            \n                            \n                                clusters\n                            \n                            \n                                clusterStatus\n                            \n                            \n                                clusterType\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editCluster\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resources/resources.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editCluster\n                            \n                            \n                        \n                    \n                \n                \n                    \neditCluster()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the edit cluster component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:29\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:37\n                            \n                        \n\n                \n                    \n                        Models that hold cluster ID, name, nodes, description, type, status and multitenant\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterInfo:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:33\n                            \n                        \n\n                \n                    \n                        Cluster information\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterMultitenant\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterMultitenant:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterNodes:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterStatus:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:49\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:58\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/resources/resources.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { CarouselConfig } from 'ngx-bootstrap/carousel';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss'],\n   providers: [\n    { provide:\n      CarouselConfig,\n      useValue: {\n        interval: 0,\n        noPause: false,\n        showIndicators: true\n      }\n    }\n  ]\n})\nexport class ResourcesComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n   /**\n   * Cluster information\n   */\n  clusterInfo: string;\n  /**\n   * Models that hold cluster ID, name, nodes, description, type, status and multitenant\n   */\n  clusterId: string;\n  clusterName: string;\n  clusterNodes: string;\n  clusterDescription: string;\n  clusterType: string;\n  clusterStatus: string;\n  clusterMultitenant: string;\n  clusters: any[];\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n];\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.resourcesMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.clusterName = 'Loading ...'; // Default initialization\n    this.clusterId = 'Loading ...'; // Default initialization\n    this.clusterNodes = 'Loading ...'; // Default initialization\n    this.clusterDescription = 'Loading ...'; // Default initialization\n    this.clusterType = 'Loading ...'; // Default initialization\n    this.clusterStatus = 'Loading ...'; // Default initialization\n    this.clusterMultitenant = 'Loading ...'; // Default initialization\n    this.clusters = [];\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n       this.clusterInfo = JSON.parse(jwtData).ClusterInfo;\n      if (this.clusterInfo !== null) {\n        this.backend.getClustersList(this.clusterInfo)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.clusters = data;\n              this.clusterName = data.name;\n              this.clusterId = data.id;\n              this.clusterNodes = data.nodes;\n              this.clusterDescription = data.description;\n              this.clusterType = data.type;\n              this.clusterStatus = data.status;\n              this.clusterMultitenant = data.multitenant;\n            }\n          });\n      }\n    }\n  }\n  /**\n   * Opens the modal view that holds the edit cluster component\n   */\n  editCluster() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n  \n  \n    \n      \n        Summary\n      \n      \n        \n          \n            6\n          \n          Cluster\n        \n        \n          \n            12\n          \n          Nodes\n        \n      \n    \n  \n  \n  \n    \n      \n        Clusters\n        6 clusters\n      \n      \n      \n        \n          \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 1\n            \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 2\n            \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 3\n            \n          \n        \n        \n          \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 4\n            \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 5\n            \n            \n              \n                \n                \n                5/6\n              \n              All nodes running\n              Cluster 6\n            \n          \n        \n      \n      \n      \n          \n            \n              \n                \n                  \n                  \n                  6/6\n                \n                \n                  All nodes running\n                  Cluster 1\n                \n              \n            \n          \n          \n            \n              \n                \n                  \n                  \n                  5/6\n                \n                \n                  All nodes running\n                  Cluster 1\n                \n              \n            \n          \n        \n    \n  \n  \n  \n    \n      \n        Node status timeline\n      \n      \n        \n          \n          \n          \n        \n        \n          100%\n          0%\n          \n      \n    \n  \n\n\n\n  \n    \n      \n        Clusters\n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                ID\n              \n              \n                Nodes\n              \n              \n                Description\n              \n              \n                Types\n              \n              \n                Status\n              \n              \n                Tags\n              \n              \n                Multitenant\n              \n              \n                Edit\n              \n            \n          \n          \n            \n              {{cluster.name}}\n              {{cluster.id}}\n              {{cluster.nodes}}  \n              {{cluster.description}}\n              {{cluster.type}}\n              \n                {{cluster.status}}\n              \n              {{cluster.tags}}\n              {{cluster.multitenant}}\n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                        Summary                                          6                    Cluster                                      12                    Nodes                                          Clusters        6 clusters                                                                                                              5/6                            All nodes running              Cluster 1                                                                                      5/6                            All nodes running              Cluster 2                                                                                      5/6                            All nodes running              Cluster 3                                                                                                                          5/6                            All nodes running              Cluster 4                                                                                      5/6                            All nodes running              Cluster 5                                                                                      5/6                            All nodes running              Cluster 6                                                                                                                                                          6/6                                                  All nodes running                  Cluster 1                                                                                                                                                              5/6                                                  All nodes running                  Cluster 1                                                                                        Node status timeline                                                                            100%          0%                                          Clusters                     0\" class=\"table\">                                                    Name                                            ID                                            Nodes                                            Description                                            Types                                            Status                                            Tags                                            Multitenant                                            Edit                                                                        {{cluster.name}}              {{cluster.id}}              {{cluster.nodes}}                {{cluster.description}}              {{cluster.type}}                              {{cluster.status}}                            {{cluster.tags}}              {{cluster.multitenant}}                                                                    edit                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userId;\n      if (userId !== null) {\n        this.backend.getUserProfileInfo(userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.name = data.name;\n              this.email = data.email;\n              this.role = data.role;\n            }\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Nalej\n      \n        \n          \n            \n                person\n            \n            {{name}}\n            {{role}}\n            {{email}}\n          \n        \n      \n      \n        \n          group_work\n          Organization\n          >\n        \n      \n      \n        \n          dns\n          Resources\n          >\n        \n      \n      \n        \n          apps\n          Applications\n          >\n        \n      \n      \n        \n          Logout\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nalej                                                    person                        {{name}}            {{role}}            {{email}}                                                group_work          Organization          >                                      dns          Resources          >                                      apps          Applications          >                                      Logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:32\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'Info User';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const jwtJson = JSON.parse(jwtData);\n      this.userId = jwtJson.UserId;\n      this.role = jwtJson.Rolename;\n      if (this.userId !== null) {\n        this.backend.getUserProfileInfo(this.userId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.userName = data.name;\n              this.userId = data.email;\n            }\n          });\n      }\n    }\n  }\n\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted'\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                19 %\n                (6/31)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserProfileInfo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            mockUserProfileInfo   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'userId',\n    userInfoMock: 'userInfo_mock',\n    clusterId: 'clusterId',\n    clusterInfo: 'clusterInfo'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Running',\n        'value': 5\n    },\n    {\n        'name': 'Error',\n        'value': 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '10',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '10',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '10',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '10',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    },\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '8',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Error',\n        tags: 'ny, edge',\n        multitenant: 'No'\n    },\n    {\n        name: 'Cluster1',\n        id: '0800200c9a66',\n        nodes: '10',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJVc2VySWQiOiJqb2huLmRvZUBtYWlsLmNvbSIsIk9yZ2FuaXphdGlvbklkIjoiMjE0MzQ2NTQzNDM0MyIsIlByaW1pdGl2ZXMiOlsiMCIsIjEiLCIyIiwiMyJdLCJSb2xlbmFtZSI6Ik93bmVyIiwiRXhwaXJlc0F0IjoxMjMzODU3MjcxMjc0M30' +\n    '.kF9ac17V9mWoWMYjhHyc9GD8hGw6wRT6wwNgdUJ1v4c'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      },\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'johndoe@mail.com',\n        role: 'Owner'\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserProfileInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'John Doe',\n    email: 'john.doe@mail.com',\n    role: 'Owner'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
