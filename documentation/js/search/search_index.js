var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.046,1,0.627]],["body/components/AddUserComponent.html",[0,0.073,1,0.918,2,0.286,3,0.194,4,0.662,5,0.662,6,0.662,7,0.137,8,5.152,9,3.992,10,1.767,11,0.699,12,1.073,13,0.662,14,1.56,15,1.049,16,1.049,17,0.934,18,0.902,19,2.997,20,0.902,21,2.997,22,0.165,23,0.581,24,1.364,25,1.605,26,1.742,27,3.939,28,2.223,29,1.773,30,2.232,31,4.71,32,2.749,33,2.497,34,0.581,35,1.736,36,2.997,37,2.611,38,3.584,39,1.185,40,0.474,41,1.286,42,1.526,43,1.526,44,1.261,45,0.809,46,2.028,47,0.895,48,0.032,49,0.609,50,0.609,51,0.665,52,3.584,53,2.425,54,1.464,55,1.436,56,1.51,57,3.934,58,2.611,59,2.789,60,0.838,61,0.918,62,2.997,63,2.425,64,2.434,65,2.962,66,3.565,67,2.611,68,2.425,69,1.367,70,2.611,71,2.611,72,3.832,73,1.773,74,1.636,75,3.584,76,2.425,77,2.611,78,1.415,79,2.425,80,2.028,81,2.425,82,0.562,83,0.913,84,2.322,85,1.745,86,2.322,87,1.185,88,2.028,89,1.924,90,2.611,91,2.997,92,1.349,93,2.092,94,2.611,95,2.997,96,2.611,97,2.322,98,1.01,99,2.028,100,2.425,101,1.149,102,0.902,103,0.902,104,2.028,105,2.028,106,2.425,107,2.425,108,0.571,109,0.255,110,0.777,111,0.61,112,0.777,113,0.842,114,0.913,115,0.842,116,0.777,117,0.562,118,0.662,119,0.562,120,0.662,121,0.194,122,0.287,123,0.759,124,3.939,125,1.481,126,0.831,127,1.164,128,1.767,129,0.662,130,0.913,131,0.777,132,1.245,133,1.773,134,2.425,135,2.425,136,3.584,137,1.767,138,2.425,139,0.913,140,2.425,141,1.767,142,2.028,143,2.425,144,2.763,145,1.767,146,1.767,147,1.767,148,2.425,149,2.425,150,1.286,151,2.092,152,2.092,153,1.9,154,2.322,155,0.562,156,0.979,157,0.979,158,0.902,159,1.286,160,0.662,161,0.979,162,0.473,163,0.662,164,0.473,165,0.662,166,0.473,167,0.662,168,0.473,169,0.979,170,0.432,171,0.562,172,0.662,173,0.473,174,0.763,175,0.473,176,0.473,177,0.662,178,0.473,179,0.83,180,0.662,181,0.473,182,0.662,183,0.473,184,0.662,185,0.516,186,0.662,187,0.473,188,0.662,189,0.473,190,0.662,191,0.017,192,0.017]],["title/components/AppComponent.html",[0,0.046,162,0.627]],["body/components/AppComponent.html",[0,0.086,1,0.743,2,0.391,3,0.304,4,1.04,5,1.04,6,1.04,7,0.215,11,0.955,12,1.363,13,1.04,14,1.65,15,1.14,16,0.678,17,0.559,18,1.233,20,1.233,22,0.259,23,0.794,25,2.039,26,1.692,34,0.794,39,1.439,40,0.648,44,1.491,45,0.783,47,0.678,48,0.032,49,0.569,50,0.6,51,0.504,60,0.559,61,0.955,82,0.882,83,1.434,98,0.794,108,0.6,109,0.514,111,0.958,116,1.221,121,0.304,122,0.451,123,0.678,155,0.882,156,1.338,157,1.338,158,1.233,159,1.561,160,1.04,161,1.338,162,1.115,163,1.04,164,0.743,165,1.04,166,0.743,167,1.04,168,0.743,169,1.338,170,0.678,171,0.882,172,1.04,173,0.743,174,1.043,175,0.743,176,0.743,177,1.04,178,0.743,179,1.325,180,1.04,181,0.743,182,1.04,183,0.743,184,1.04,185,0.81,186,1.04,187,0.743,188,1.04,189,0.743,190,1.04,191,0.023,192,0.023,193,3.184,194,2.597,195,4.899,196,4.899,197,3.031,198,3.031,199,2.774,200,3.337,201,4.899,202,2.859,203,3.808,204,3.808,205,3.808,206,2.223]],["title/modules/AppModule.html",[207,1.876,208,2.082]],["body/modules/AppModule.html",[1,1.154,2,0.241,3,0.241,7,0.17,9,1.953,15,0.537,16,0.537,17,0.443,42,1.546,48,0.032,108,0.695,109,0.316,111,1.425,112,1.753,113,1.047,121,0.416,122,0.357,155,0.698,162,1.21,164,1.104,166,1.154,168,1.104,170,1.055,171,0.698,173,1.154,174,0.892,175,1.154,176,1.21,178,1.104,181,1.104,183,1.104,185,1.205,187,1.104,189,1.154,191,0.02,192,0.02,206,1.759,207,2.445,208,4.318,209,1.953,210,4.027,211,4.352,212,2.521,213,2.521,214,2.521,215,2.521,216,2.521,217,2.741,218,2.741,219,3.504,220,2.196,221,1.759,222,3.014,223,4.189,224,4.189,225,3.504,226,2.196,227,4.189,228,3.014,229,4.189,230,2.521,231,1.759,232,4.189,233,3.504,234,2.715,235,3.014,236,3.014,237,3.508,238,3.014,239,3.014,240,1.46,241,2.196,242,3.014,243,3.014,244,3.014,245,3.014,246,3.014,247,3.014,248,3.014,249,3.014,250,3.014,251,3.014,252,4.189,253,4.189,254,2.196,255,3.014,256,2.196,257,4.189,258,2.521,259,3.014,260,3.014,261,4.189,262,2.196,263,4.189,264,1.759,265,1.953,266,3.052,267,3.014,268,2.196,269,3.014,270,3.014,271,3.052,272,1.759,273,1.953,274,3.014,275,3.014,276,2.196,277,2.196,278,3.014,279,3.014,280,3.014,281,3.014,282,3.014,283,3.014,284,3.014]],["title/components/ApplicationsComponent.html",[0,0.046,164,0.627]],["body/components/ApplicationsComponent.html",[0,0.08,1,0.417,2,0.43,3,0.171,4,0.584,5,0.584,6,0.584,7,0.121,11,0.636,12,0.995,13,0.584,14,1.539,15,1.124,16,0.381,17,0.649,18,0.821,20,0.821,22,0.145,23,0.529,24,1.324,26,1.309,29,1.665,34,0.529,39,1.113,40,0.431,42,1.469,43,1.469,44,1.209,45,0.832,47,0.581,48,0.032,49,0.623,50,0.628,51,0.664,54,0.873,56,1.418,59,2.344,60,0.479,61,0.636,69,0.685,73,1.889,74,1.743,82,1.386,83,2.328,84,1.385,85,1.914,86,1.385,87,1.439,89,1.332,92,0.805,93,1.903,97,1.385,98,0.94,101,1.418,102,0.821,103,1.263,108,0.579,109,0.224,110,0.685,111,0.995,112,0.685,113,0.743,114,0.805,115,0.743,116,0.685,117,0.495,118,0.584,119,0.495,120,0.584,121,0.171,122,0.253,123,0.788,125,1.536,126,0.862,127,1.207,129,1.079,130,0.805,131,0.685,132,1.133,139,0.805,155,0.495,156,0.89,157,0.89,158,0.821,159,1.207,160,0.584,161,0.89,162,0.417,163,0.584,164,0.862,165,0.584,166,0.636,167,0.584,168,0.417,169,0.89,170,0.381,171,0.495,172,0.584,173,0.417,174,0.694,175,0.417,176,0.417,177,0.584,178,0.417,179,0.755,180,0.584,181,0.417,182,0.584,183,0.417,184,0.584,185,0.455,186,0.584,187,0.417,188,0.584,189,0.417,190,0.584,191,0.015,192,0.015,197,2.344,199,1.557,200,2.581,202,1.903,231,3.045,266,1.557,273,1.385,285,1.788,286,2.141,287,3.261,288,3.261,289,3.698,290,3.698,291,3.698,292,3.698,293,3.698,294,3.655,295,3.655,296,4.421,297,4.421,298,4.421,299,4.421,300,4.421,301,4.421,302,4.421,303,4.421,304,4.421,305,4.421,306,3.261,307,3.261,308,2.138,309,3.261,310,2.138,311,2.113,312,1.903,313,2.138,314,1.806,315,1.729,316,2.138,317,2.727,318,2.727,319,2.727,320,2.138,321,2.865,322,2.727,323,1.903,324,2.727,325,2.138,326,2.138,327,2.138,328,2.375,329,2.138,330,2.727,331,2.727,332,2.138,333,2.138,334,2.228,335,1.903,336,2.138,337,3.221,338,2.113,339,3.261,340,2.138,341,3.261,342,2.141,343,2.138,344,3.261,345,2.138,346,2.138,347,2.138,348,2.138,349,2.138,350,1.903,351,2.138,352,2.138,353,2.138,354,1.385,355,0.584,356,0.538,357,0.95,358,3.261,359,3.261,360,3.261,361,3.261,362,3.261,363,3.261,364,1.557,365,1.133,366,3.261,367,1.788,368,1.248,369,1.903,370,1.385,371,2.095,372,1.385,373,1.557,374,2.879,375,2.138,376,1.248,377,1.557,378,1.788,379,2.375,380,1.788,381,2.138,382,2.138,383,2.138,384,2.138,385,2.138,386,2.138,387,1.385,388,2.138,389,1.557,390,1.385,391,1.385,392,1.788,393,2.727,394,4.421,395,3.261,396,1.903,397,1.729,398,2.727,399,2.375,400,1.729,401,2.727,402,3.261,403,3.261,404,3.261,405,3.261,406,3.261,407,3.261]],["title/components/AppsInfoComponent.html",[0,0.046,166,0.627]],["body/components/AppsInfoComponent.html",[0,0.078,1,0.562,2,0.407,3,0.23,4,0.787,5,0.787,6,0.787,7,0.163,11,0.791,12,1.183,13,0.787,14,1.598,15,1.163,16,0.513,17,0.423,18,1.022,20,1.022,22,0.196,23,0.658,24,1.413,25,1.769,26,1.805,34,0.658,39,1.284,40,0.537,41,1.527,42,1.598,43,1.598,44,1.328,45,0.807,47,0.513,48,0.032,49,0.652,50,0.633,51,0.381,56,1.877,60,0.423,61,0.562,69,0.924,74,1.41,82,1.246,87,0.725,89,1.658,92,1.528,98,1.044,101,1.301,102,1.022,103,1.473,108,0.602,109,0.302,110,0.924,111,0.725,112,0.924,113,1.001,114,1.085,115,1.001,116,0.924,117,0.667,118,0.787,119,0.667,120,0.787,121,0.23,122,0.341,123,0.837,125,1.001,126,0.562,127,1.283,129,0.787,130,1.085,131,0.924,132,1.41,155,0.667,156,1.108,157,1.108,158,1.022,159,1.393,160,0.787,161,1.108,162,0.562,163,0.787,164,0.562,165,0.787,166,0.995,167,0.787,168,0.562,169,1.108,170,0.513,171,0.667,172,0.787,173,0.562,174,0.864,175,0.562,176,0.562,177,0.787,178,0.562,179,0.94,180,0.787,181,0.562,182,0.787,183,0.562,184,0.787,185,0.613,186,0.787,187,0.562,188,0.787,189,0.562,190,0.787,191,0.019,192,0.019,198,3.103,273,3.989,286,1.395,334,2.478,337,4.265,365,2.851,400,3.313,408,5.149,409,2.099,410,3.394,411,3.394,412,4.059,413,2.881,414,2.881,415,2.881,416,2.881,417,2.409,418,2.881,419,2.881,420,2.881,421,2.881,422,2.957,423,1.867,424,2.409,425,2.409,426,2.409,427,2.389,428,2.881,429,2.881,430,2.881,431,2.881,432,2.957,433,3.394,434,4.059,435,2.957]],["title/guards/AuthGuard.html",[436,2.341,437,2.687]],["body/guards/AuthGuard.html",[2,0.338,3,0.338,7,0.24,11,0.826,22,0.288,23,0.687,34,0.849,40,0.693,45,0.693,47,0.933,48,0.032,49,0.55,50,0.55,51,0.693,55,1.157,60,0.835,78,3.058,85,1.471,87,1.066,108,0.641,109,0.445,117,0.981,118,1.157,119,0.981,120,1.157,121,0.338,122,0.501,123,0.755,125,1.82,126,0.826,191,0.025,192,0.025,194,2.246,264,2.473,356,1.319,436,3.086,437,4.382,438,4.236,439,3.817,440,6.108,441,4.236,442,4.533,443,4.236,444,4.236,445,5.944,446,4.758,447,5.944,448,4.236,449,3.686,450,5.24,451,1.431,452,2.246,453,4.144,454,2.745,455,3.058,456,2.473,457,3.543,458,4.382,459,3.543,460,3.543,461,4.236,462,2.473,463,3.543,464,2.473,465,4.236,466,4.236,467,3.543]],["title/injectables/AuthService.html",[217,1.556,451,0.877]],["body/injectables/AuthService.html",[2,0.262,3,0.262,7,0.186,17,0.872,22,0.223,23,0.72,24,1.447,28,2.303,30,2.581,34,0.72,40,0.588,42,1.65,43,1.473,45,0.769,47,0.791,48,0.032,49,0.466,50,0.566,51,0.588,54,2.204,55,0.897,56,1.424,60,0.887,61,0.64,69,1.614,74,1.874,77,3.236,78,2.593,85,1.141,87,0.826,90,2.392,98,1.004,101,1.424,108,0.643,109,0.345,110,1.053,115,1.543,117,0.761,118,0.897,119,1.029,120,0.897,121,0.262,122,0.389,123,0.897,125,1.749,126,0.982,127,1.213,129,0.897,130,1.236,131,1.053,132,1.543,133,1.673,139,1.236,191,0.021,192,0.021,217,2.152,221,1.917,264,1.917,334,2.396,376,2.593,439,3.93,442,4.327,449,3.263,451,1.375,452,1.741,453,4.106,454,2.128,455,3.391,457,2.746,458,3.715,459,2.746,460,2.746,463,2.746,467,2.746,468,2.746,469,3.715,470,4.512,471,5.81,472,5.395,473,2.504,474,3.765,475,3.284,476,4.443,477,5.035,478,3.284,479,5.395,480,2.152,481,4.443,482,3.668,483,2.392,484,3.284,485,2.355,486,3.284,487,3.284,488,2.746,489,2.746,490,2.392,491,3.284,492,3.284,493,4.443,494,2.746,495,2.746,496,2.746,497,3.284,498,3.284,499,3.284,500,3.284,501,3.284,502,3.284,503,3.284,504,3.284,505,2.128,506,2.746,507,3.284,508,3.284,509,3.284]],["title/interfaces/Backend.html",[24,0.744,510,1.03]],["body/interfaces/Backend.html",[2,0.269,3,0.269,7,0.19,17,0.749,22,0.229,24,1.046,28,1.375,29,2.379,30,2.264,34,0.732,35,2.187,45,0.853,47,1.144,48,0.032,49,0.674,50,0.674,51,0.849,60,0.947,64,2.834,98,1.094,102,0.847,108,0.353,121,0.269,191,0.021,192,0.021,286,1.63,449,3.303,452,1.784,473,2.264,474,3.531,483,3.29,510,1.448,511,2.814,512,3.29,513,4.557,514,3.777,515,3.777,516,3.777,517,3.777,518,3.777,519,3.777,520,3.777,521,3.29,522,3.29,523,3.29,524,3.777,525,3.365,526,3.777,527,2.981,528,3.365,529,4.557,530,3.365,531,3.365,532,3.777,533,3.365,534,3.683,535,3.777,536,3.365,537,3.777,538,3.365,539,3.777,540,3.365,541,3.777,542,3.365,543,3.777,544,3.365,545,3.777,546,3.365,547,3.365,548,3.365,549,3.777,550,3.365,551,3.777,552,3.365,553,3.777,554,3.365,555,1.375]],["title/components/ClusterComponent.html",[0,0.046,168,0.627]],["body/components/ClusterComponent.html",[0,0.075,1,0.404,2,0.347,3,0.166,4,0.566,5,0.566,6,0.566,7,0.117,11,0.621,12,0.976,13,0.566,14,1.521,15,1.011,16,0.369,17,0.639,18,0.801,20,0.801,22,0.141,23,0.516,24,1.314,26,1.288,29,1.638,34,0.516,39,1.095,40,0.421,42,1.409,43,1.454,44,1.196,45,0.814,47,0.567,48,0.032,49,0.586,50,0.639,51,0.576,54,1.777,56,0.665,59,2.896,60,0.689,61,0.621,69,0.665,73,2.099,74,1.721,82,1.088,83,2.099,87,1.182,89,2.025,97,1.343,98,0.803,101,1.589,102,0.801,103,1.341,108,0.559,109,0.218,110,0.665,111,1.182,112,0.665,113,0.72,114,0.78,115,0.72,116,0.665,117,0.48,118,0.566,119,0.898,120,0.566,121,0.166,122,0.245,123,0.691,125,1.511,126,0.915,127,1.188,129,1.409,130,0.78,131,0.665,132,1.106,133,1.199,139,1.46,155,0.48,156,0.869,157,0.869,158,0.801,159,1.188,160,0.566,161,0.869,162,0.404,163,0.566,164,0.404,165,0.566,166,0.404,167,0.566,168,0.848,169,0.869,170,0.369,171,0.48,172,0.566,173,0.404,174,0.678,175,0.404,176,0.404,177,0.566,178,0.404,179,0.738,180,0.566,181,0.404,182,0.566,183,0.404,184,0.566,185,0.441,186,0.566,187,0.404,188,0.566,189,0.404,190,0.566,191,0.015,192,0.015,197,2.306,231,3.311,289,3.638,290,3.638,291,3.638,292,3.638,293,3.638,314,2.109,315,2.824,317,2.663,318,2.663,319,2.663,321,3.54,322,2.663,323,1.859,324,2.663,328,3.61,330,2.663,331,4.145,334,1.414,335,1.859,338,3.887,342,2.107,354,1.343,365,1.099,367,1.733,368,1.21,369,1.859,370,1.343,371,1.688,372,1.343,373,1.51,374,2.825,376,2.263,377,2.825,378,3.243,393,2.663,396,1.859,397,1.688,400,2.627,427,1.414,435,2.32,462,1.859,534,2.819,555,1.301,556,1.733,557,3.702,558,2.663,559,2.663,560,4.351,561,4.956,562,3.61,563,3.61,564,4.043,565,4.351,566,3.184,567,4.351,568,1.733,569,3.184,570,3.184,571,4.745,572,2.073,573,3.184,574,3.184,575,3.184,576,3.184,577,2.073,578,2.073,579,3.42,580,1.859,581,2.663,582,2.073,583,2.073,584,2.073,585,2.073,586,2.073,587,2.073,588,4.351,589,2.073,590,2.073,591,2.073,592,2.073,593,2.073,594,2.073,595,2.073,596,2.073,597,2.073,598,1.51,599,2.073,600,3.184,601,3.184,602,3.184,603,3.184,604,2.073,605,2.073,606,2.073,607,2.073,608,2.073,609,2.073,610,2.073,611,2.627,612,2.663,613,2.32,614,3.184,615,3.184,616,3.184,617,2.32,618,2.663,619,2.663,620,1.859,621,3.184,622,3.184,623,3.184,624,3.184,625,3.184]],["title/interfaces/ClusterInfo.html",[510,1.03,626,2.341]],["body/interfaces/ClusterInfo.html",[2,0.43,3,0.354,7,0.25,22,0.301,23,0.873,45,0.586,48,0.031,49,0.634,50,0.692,51,0.712,56,1.983,73,1.667,98,1.091,103,1.519,121,0.354,142,3.703,191,0.026,192,0.026,397,3.2,400,3.2,432,3.226,510,1.86,557,3.143,617,4.397,626,3.922,627,3.703,628,3.703,629,3.703,630,5.048,631,5.048]],["title/interfaces/ComponentMockOption.html",[510,1.03,632,2.082]],["body/interfaces/ComponentMockOption.html",[0,0.08,2,0.39,3,0.247,7,0.175,11,0.602,12,1.072,14,1.072,15,0.759,16,0.759,17,0.716,18,0.777,20,0.777,22,0.21,23,0.691,25,1.163,26,1.444,35,1.496,39,0.777,40,0.409,44,1.218,48,0.032,49,0.67,50,0.512,51,0.645,55,0.843,56,0.99,61,0.602,73,1.836,82,0.716,83,1.604,85,2.264,87,1.58,98,0.925,102,1.072,103,0.777,108,0.552,109,0.324,111,0.777,116,0.99,117,0.716,118,0.843,119,0.987,120,0.843,121,0.39,122,0.366,123,0.55,126,0.602,127,1.749,128,2.25,133,1.163,170,0.55,171,1.278,174,0.657,191,0.02,192,0.02,206,1.803,240,1.496,314,2.254,315,2.259,355,0.843,356,0.777,357,1.372,364,2.25,368,2.487,396,1.803,423,2.002,427,1.372,473,1.893,485,1.638,490,2.25,505,2.002,510,1.686,555,1.741,598,2.25,632,3.407,633,2.002,634,2.002,635,3.161,636,2.002,637,2.487,638,2.336,639,2.761,640,2.25,641,2.25,642,3.104,643,2.583,644,2.583,645,2.002,646,2.002,647,2.583,648,3.104,649,2.583,650,5.168,651,3.563,652,3.563,653,2.25,654,3.563,655,3.563,656,3.563,657,2.583,658,3.563,659,3.563,660,2.25,661,3.563,662,3.563,663,2.25,664,3.563,665,2.25,666,3.563,667,3.563,668,2.761,669,2.25,670,2.583,671,2.002,672,2.583,673,4.004,674,2.583,675,5.168,676,4.004,677,2.583,678,2.583,679,2.583,680,2.583,681,2.583,682,2.583,683,2.583,684,2.583,685,2.583,686,2.583,687,2.583,688,2.583,689,2.583,690,2.583,691,1.803,692,2.583,693,1.372,694,2.25,695,1.496,696,1.803]],["title/components/DebugPanelComponent.html",[0,0.046,170,0.572]],["body/components/DebugPanelComponent.html",[0,0.087,1,0.493,2,0.384,3,0.202,4,0.691,5,0.691,6,0.691,7,0.143,11,0.721,12,1.1,13,0.691,14,1.578,15,1.058,16,0.856,17,0.706,18,0.93,20,0.93,22,0.172,23,0.599,24,0.856,25,1.645,26,1.758,34,0.599,35,1.225,39,1.21,40,0.489,41,1.341,44,1.336,45,0.73,47,0.658,48,0.032,49,0.658,50,0.537,51,0.706,55,1.009,56,0.811,60,0.642,61,0.937,73,1.645,82,0.856,83,1.809,85,2.219,87,1.527,92,1.392,98,0.599,102,0.93,103,0.637,108,0.505,109,0.266,111,0.637,116,0.811,117,0.586,118,0.691,119,1.012,120,0.691,121,0.349,122,0.299,123,0.45,126,0.493,127,1.712,128,1.842,131,1.185,133,0.952,150,1.341,155,0.586,156,1.009,157,1.009,158,0.93,159,1.312,160,0.691,161,1.009,162,0.493,163,0.691,164,0.493,165,0.691,166,0.493,167,0.691,168,0.493,169,1.009,170,0.856,171,1.358,172,0.691,173,0.493,174,0.93,175,0.493,176,0.493,177,0.691,178,0.493,179,0.856,180,0.691,181,0.493,182,0.691,183,0.493,184,0.691,185,0.538,186,0.691,187,0.493,188,0.691,189,0.493,190,0.691,191,0.018,192,0.018,206,1.476,240,2.738,314,2.182,315,2.316,355,0.691,356,0.637,357,1.123,364,1.842,368,2.157,396,1.476,423,1.639,427,1.123,473,1.642,485,1.96,490,1.842,505,2.395,510,1.185,555,1.51,598,1.842,632,3.46,633,3.664,634,1.639,635,3.313,636,1.639,637,2.157,638,2.562,639,2.395,640,1.842,641,1.842,642,2.693,643,3.091,644,3.091,645,2.395,646,3.114,647,2.115,648,2.693,649,2.115,650,4.968,651,3.091,652,3.091,653,1.842,654,3.091,655,3.091,656,3.091,657,2.115,658,3.091,659,3.091,660,1.842,661,3.091,662,3.091,663,1.842,664,3.091,665,1.842,666,3.091,667,3.654,668,2.831,669,2.693,670,3.091,671,1.639,672,2.115,673,3.849,674,2.115,675,4.968,676,3.849,677,2.115,678,2.115,679,2.115,680,2.115,681,2.115,682,2.115,683,2.115,684,2.115,685,2.115,686,2.115,687,2.115,688,3.091,689,3.091,690,4.019,691,1.476,692,2.115,693,1.123,694,3.183,695,1.225,696,1.476,697,3.696,698,3.696,699,2.529,700,2.529,701,2.529,702,2.529,703,2.529,704,3.696,705,3.696,706,3.696]],["title/components/EditClusterComponent.html",[0,0.046,173,0.627]],["body/components/EditClusterComponent.html",[0,0.076,1,0.529,2,0.311,3,0.217,4,0.741,5,0.741,6,0.741,7,0.153,11,0.758,12,1.144,13,0.741,14,1.593,15,1.045,16,0.483,17,0.398,18,0.979,20,0.979,22,0.184,23,0.631,24,1.396,25,1.712,26,1.784,29,1.87,34,0.631,37,2.834,39,1.25,40,0.515,41,1.438,42,1.574,43,1.574,44,1.305,45,0.797,47,0.81,48,0.032,49,0.592,50,0.605,51,0.601,54,1.589,56,1.592,57,3.858,59,2.062,60,0.668,61,0.887,64,2.202,67,2.834,69,1.458,70,2.834,71,2.834,72,3.985,73,1.87,74,1.9,82,1.15,87,0.683,89,1.589,98,1.01,101,1.247,102,0.979,103,1.25,108,0.592,109,0.285,110,0.87,111,0.683,112,0.87,113,0.942,114,1.022,115,0.942,116,0.87,117,0.629,118,0.741,119,0.629,120,0.741,121,0.217,122,0.321,123,0.81,125,1.579,126,0.758,127,1.242,129,0.741,130,1.022,131,0.87,132,1.351,133,1.464,139,1.022,144,2.946,145,1.977,146,1.977,147,1.977,150,1.438,154,3.218,155,0.629,156,1.062,157,1.062,158,0.979,159,1.356,160,0.741,161,1.062,162,0.529,163,0.741,164,0.529,165,0.741,166,0.529,167,0.741,168,0.529,169,1.062,170,0.483,171,0.629,172,0.741,173,0.968,174,1.283,175,0.529,176,0.529,177,0.741,178,0.529,179,0.901,180,0.741,181,0.529,182,0.741,183,0.529,184,0.741,185,0.577,186,0.741,187,0.529,188,0.741,189,0.529,190,0.741,191,0.018,192,0.018,268,4.436,355,0.741,356,0.683,357,1.205,365,2.633,371,1.438,400,2.062,427,2.206,522,2.834,534,3.218,557,3.289,558,3.253,559,3.253,665,1.977,668,2.52,691,1.584,693,1.205,695,1.314,696,1.584,707,4.436,708,2.269,709,4.966,710,5.471,711,4.966,712,3.89,713,2.713,714,2.713,715,3.89,716,2.713,717,2.713,718,2.713,719,2.713,720,2.713,721,2.713,722,2.713,723,4.547,724,3.89,725,3.89,726,4.547,727,2.713,728,2.713,729,2.713,730,2.713]],["title/components/EditUserComponent.html",[0,0.046,175,0.627]],["body/components/EditUserComponent.html",[0,0.073,1,0.485,2,0.292,3,0.199,4,0.679,5,0.679,6,0.679,7,0.141,10,1.812,11,0.712,12,1.089,13,0.679,14,1.566,15,1.054,16,0.443,17,0.896,18,0.919,19,3.053,20,0.919,21,3.053,22,0.169,23,0.592,24,1.371,25,1.629,26,1.752,28,2.241,29,1.795,30,1.622,32,2.782,33,2.527,34,0.592,36,3.053,37,2.66,39,1.2,40,0.483,41,1.318,42,1.537,43,1.537,44,1.271,45,0.813,46,2.08,47,0.904,48,0.032,49,0.613,50,0.613,51,0.672,54,1.492,55,1.302,56,1.387,57,3.646,59,1.936,60,0.806,61,0.93,62,3.053,64,2.459,65,3.174,66,3.618,67,2.66,69,1.628,70,3.473,71,2.66,72,3.867,73,1.795,74,1.844,78,2.782,80,2.08,85,1.268,87,1.089,88,3.053,89,1.492,98,1.014,99,2.08,101,1.528,102,0.919,103,0.919,104,2.08,105,2.08,108,0.576,109,0.261,110,0.797,111,0.626,112,0.797,113,0.864,114,0.936,115,0.864,116,0.797,117,0.576,118,0.679,119,0.576,120,0.679,121,0.199,122,0.294,123,0.771,124,3.618,125,1.268,126,0.712,127,1.181,129,0.679,130,0.936,131,0.797,132,1.268,133,1.629,137,1.812,139,0.936,144,2.803,145,1.812,146,1.812,147,1.812,150,1.318,151,2.131,152,2.131,153,1.936,154,3.089,155,0.576,156,0.997,157,0.997,158,0.919,159,1.302,160,0.679,161,0.997,162,0.485,163,0.679,164,0.485,165,0.679,166,0.485,167,0.679,168,0.485,169,0.997,170,0.443,171,0.576,172,0.679,173,0.485,174,1.222,175,0.93,176,0.485,177,0.679,178,0.485,179,0.846,180,0.679,181,0.485,182,0.679,183,0.485,184,0.679,185,0.529,186,0.679,187,0.485,188,0.679,189,0.485,190,0.679,191,0.017,192,0.017,198,2.983,272,3.61,397,1.936,422,2.66,523,2.66,527,2.309,580,2.131,663,1.812,668,2.366,691,1.451,693,1.105,695,1.204,696,1.451,707,4.506,731,4.767,732,3.053,733,2.487,734,3.053,735,2.487,736,3.053,737,2.487,738,2.487,739,3.651,740,2.487,741,3.651,742,2.487,743,2.487,744,2.487,745,3.651,746,3.053,747,2.487,748,3.053]],["title/injectables/ErrorHandlerService.html",[234,2.082,451,0.877]],["body/injectables/ErrorHandlerService.html",[2,0.294,3,0.294,7,0.208,11,0.934,17,0.782,22,0.25,34,0.864,40,0.705,45,0.634,47,0.655,48,0.032,49,0.386,50,0.386,51,0.487,54,2.559,56,1.179,60,0.54,61,0.934,82,0.852,96,2.679,108,0.503,109,0.386,121,0.294,122,0.435,129,1.004,133,1.385,150,1.95,158,0.926,191,0.023,192,0.023,221,2.147,233,4.006,234,3.104,258,3.076,315,1.95,323,3.566,350,2.147,355,1.004,356,0.926,376,2.147,446,3.076,451,1.455,464,2.147,470,4.006,494,3.076,495,3.076,555,1.957,580,2.796,620,2.147,629,3.076,645,2.383,671,2.383,673,4.206,676,4.22,749,4.455,750,3.076,751,4.79,752,3.678,753,4.79,754,5.643,755,3.678,756,4.006,757,5.327,758,5.383,759,3.678,760,3.076,761,3.678,762,3.678,763,3.678,764,3.678,765,4.79,766,3.678,767,3.678,768,3.678,769,3.678,770,3.076,771,3.678,772,4.79,773,3.678,774,4.79,775,4.79,776,3.678,777,3.678,778,3.678,779,3.678,780,3.076,781,3.678,782,4.79,783,4.79,784,3.678,785,3.678,786,3.678,787,3.678,788,3.678,789,3.678,790,3.678,791,3.678,792,3.076,793,3.678,794,3.678,795,2.679,796,3.678,797,2.679,798,2.679,799,3.678,800,3.678,801,3.678,802,3.076,803,3.678,804,3.678,805,3.076,806,3.678,807,3.678,808,3.678,809,3.678,810,3.678,811,3.678,812,3.678,813,3.678,814,4.79,815,3.678,816,3.678,817,3.678,818,3.678,819,3.678,820,3.678,821,3.678,822,3.678,823,3.678]],["title/components/LoginComponent.html",[0,0.046,176,0.627]],["body/components/LoginComponent.html",[0,0.078,1,0.565,2,0.325,3,0.231,4,0.791,5,0.791,6,0.791,7,0.164,11,0.795,12,1.186,13,0.791,14,1.599,15,1.088,16,0.516,17,0.425,18,1.026,20,1.026,22,0.197,23,0.661,26,1.514,28,2.346,30,2.551,34,0.661,39,1.287,40,0.539,45,0.76,47,0.516,48,0.032,49,0.495,50,0.537,51,0.383,55,0.791,57,2.64,58,2.968,60,0.692,61,0.919,69,1.306,74,1.415,77,3.434,82,0.671,92,1.091,93,2.378,94,2.968,98,0.829,101,1.792,102,0.729,108,0.603,109,0.304,111,0.729,112,0.929,121,0.231,122,0.343,123,0.911,126,0.795,129,1.397,139,1.091,151,1.691,152,1.691,153,1.536,155,0.671,156,1.113,157,1.113,158,1.026,159,1.397,160,0.791,161,1.113,162,0.565,163,0.791,164,0.565,165,0.791,166,0.565,167,0.791,168,0.565,169,1.113,170,0.726,171,1.295,172,0.791,173,0.565,174,0.867,175,0.565,176,0.997,177,0.791,178,0.565,179,1.185,180,0.791,181,0.565,182,0.791,183,0.565,184,0.791,185,0.617,186,0.791,187,0.565,188,0.791,189,0.565,190,0.791,191,0.019,192,0.019,197,2.711,200,2.985,202,2.751,217,2.781,240,1.403,241,2.11,254,2.11,256,2.11,264,1.691,286,1.973,311,3.314,312,2.378,323,2.751,334,2.272,335,2.378,368,2.378,387,1.877,390,1.877,391,1.877,401,3.408,439,2.11,442,4.183,453,3.434,454,1.877,455,2.751,473,2.604,480,1.973,482,2.968,496,2.423,506,4.277,555,1.184,620,2.985,635,3.314,671,1.877,673,3.054,676,3.054,693,1.81,795,2.968,824,2.423,825,4.075,826,4.075,827,5.114,828,5.114,829,5.114,830,4.277,831,2.897,832,5.59,833,4.075,834,2.897,835,2.897,836,4.075,837,2.16,838,4.075,839,3.408,840,4.075,841,3.408,842,2.897,843,5.114,844,2.897,845,2.897,846,2.897,847,2.897,848,4.075,849,2.897,850,2.897,851,4.713,852,2.897,853,2.897,854,2.897,855,2.897,856,2.897,857,5.114,858,2.897,859,2.423,860,2.423,861,2.968,862,4.075,863,4.075,864,4.075]],["title/components/MainComponent.html",[0,0.046,178,0.627]],["body/components/MainComponent.html",[0,0.088,1,0.812,2,0.414,3,0.332,4,1.137,5,1.137,6,1.137,7,0.235,11,1.011,12,1.421,13,1.137,14,1.668,15,1.141,16,0.742,17,0.611,18,1.305,20,1.305,22,0.283,34,0.84,39,1.487,40,0.747,45,0.686,48,0.032,49,0.544,60,0.611,61,0.812,108,0.437,109,0.437,121,0.332,122,0.493,155,0.964,156,1.415,157,1.415,158,1.305,159,1.613,160,1.137,161,1.415,162,0.812,163,1.137,164,0.812,165,1.137,166,0.812,167,1.137,168,0.812,169,1.415,170,0.742,171,0.964,172,1.137,173,0.812,174,1.103,175,0.812,176,0.812,177,1.137,178,1.152,179,1.368,180,1.137,181,0.812,182,1.137,183,0.812,184,1.137,185,0.886,186,1.137,187,0.812,188,1.137,189,0.812,190,1.137,191,0.025,192,0.025,355,1.137,356,1.048,357,1.849,865,3.481,866,5.183,867,5.183,868,5.183,869,4.163,870,4.163]],["title/injectables/MockupBackendService.html",[43,0.877,451,0.877]],["body/injectables/MockupBackendService.html",[2,0.265,3,0.174,7,0.123,11,0.426,15,0.389,17,0.895,22,0.391,24,1.113,28,1.635,29,2.163,30,2.334,34,0.537,35,1.604,40,0.53,43,0.904,45,0.801,47,1.061,48,0.032,49,0.625,50,0.625,51,0.788,54,1.635,55,1.626,60,0.943,64,2.449,98,1.076,101,0.7,102,0.834,108,0.531,109,0.229,110,0.7,121,0.174,122,0.258,126,0.937,133,1.809,141,2.413,154,2.594,191,0.016,192,0.016,194,1.157,220,2.413,262,1.59,314,1.635,350,1.274,354,1.414,355,0.596,356,0.549,376,1.274,397,3.21,449,2.594,451,1.093,452,1.157,456,1.274,473,2.134,474,3.277,482,1.59,483,2.413,485,2.369,488,1.825,489,1.825,512,2.413,513,2.77,514,2.77,515,2.77,516,2.77,517,2.77,518,2.77,519,2.77,520,2.77,521,2.413,522,2.413,523,2.413,524,2.77,526,2.77,527,2.782,529,2.77,532,2.77,534,3.277,535,2.77,537,2.77,539,2.77,541,2.77,543,2.77,545,2.77,549,2.77,551,2.77,553,2.77,555,1.353,557,2.608,564,2.146,611,2.681,637,1.274,760,5.024,780,1.825,797,1.59,798,1.59,871,5.099,872,1.825,873,2.183,874,2.183,875,6.135,876,2.77,877,2.183,878,2.77,879,2.183,880,3.312,881,2.183,882,2.77,883,2.183,884,2.183,885,2.183,886,2.183,887,2.183,888,2.183,889,2.183,890,2.183,891,2.183,892,2.183,893,2.183,894,6.096,895,2.413,896,2.146,897,1.414,898,2.413,899,1.59,900,1.59,901,1.59,902,1.59,903,6.054,904,5.745,905,3.312,906,1.825,907,2.183,908,2.183,909,2.183,910,2.183,911,2.183,912,5.544,913,5.544,914,5.544,915,4.003,916,3.256,917,4.003,918,4.003,919,4.003,920,4.469,921,3.312,922,2.183,923,2.183,924,3.312,925,2.183,926,2.183,927,2.183,928,2.183,929,1.825,930,2.183,931,2.183,932,1.825,933,3.312,934,2.183,935,2.183,936,2.183,937,2.183,938,2.183,939,2.183,940,2.183,941,2.183,942,2.183,943,3.312,944,2.183,945,2.183]],["title/interfaces/Notification.html",[510,1.03,638,1.427]],["body/interfaces/Notification.html",[2,0.323,3,0.323,7,0.228,16,0.72,22,0.378,23,0.825,40,0.534,44,0.936,48,0.032,50,0.663,51,0.826,60,0.818,92,1.521,98,1.033,103,1.471,108,0.424,109,0.424,121,0.406,122,0.478,123,0.72,126,0.992,191,0.024,192,0.024,194,2.141,314,1.65,338,3.607,342,1.956,355,1.103,356,1.017,451,1.389,456,2.358,462,2.358,464,2.358,480,1.956,510,1.631,611,2.696,638,2.675,693,2.596,695,2.83,837,2.141,946,2.942,947,3.378,948,4.254,949,3.378,950,3.378,951,2.942,952,2.942,953,2.942,954,2.942,955,2.942,956,3.378,957,3.378,958,3.378,959,4.254,960,3.378,961,3.378,962,3.378,963,3.378,964,3.378,965,3.378,966,3.378,967,3.378,968,3.378,969,3.378,970,4.254,971,2.942,972,3.378,973,4.656,974,3.378,975,2.942,976,3.378,977,3.378,978,3.378,979,3.378,980,3.378]],["title/components/NotificationsComponent.html",[0,0.046,181,0.627]],["body/components/NotificationsComponent.html",[0,0.082,1,0.642,2,0.431,3,0.263,4,0.899,5,0.899,6,0.899,7,0.186,11,0.868,12,1.269,13,0.899,14,1.625,15,1.113,16,0.587,17,0.484,18,1.121,20,1.121,22,0.224,23,0.722,24,1.459,25,1.899,34,0.722,39,1.36,40,0.589,42,1.651,43,1.623,44,1.377,45,0.769,47,0.793,48,0.032,49,0.567,50,0.567,51,0.769,58,3.935,60,0.654,61,0.983,82,0.763,83,1.24,87,1.269,92,1.676,108,0.611,109,0.346,110,1.056,113,1.144,114,1.24,115,1.144,116,1.056,117,0.763,118,0.899,119,0.763,120,0.899,121,0.263,122,0.39,123,0.898,126,0.642,127,1.216,131,1.427,132,1.546,155,0.763,156,1.216,157,1.216,158,1.121,159,1.475,160,0.899,161,1.216,162,0.642,163,0.899,164,0.642,165,0.899,166,0.642,167,0.899,168,0.642,169,1.216,170,0.587,171,0.763,172,0.899,173,0.642,174,0.947,175,0.642,176,0.642,177,0.899,178,0.642,179,1.031,180,0.899,181,1.053,182,0.899,183,0.642,184,0.899,185,0.701,186,0.899,187,0.642,188,0.899,189,0.642,190,0.899,191,0.021,192,0.021,342,2.156,355,0.899,356,0.829,373,3.243,464,3.153,469,3.723,485,2.36,638,2.686,645,2.885,646,2.885,648,2.4,756,3.723,837,2.36,951,3.243,952,3.243,953,4.11,954,4.405,955,3.243,971,2.4,981,2.755,982,4.452,983,4.452,984,3.294,985,4.452,986,3.294,987,3.294,988,3.294,989,2.755,990,3.294,991,2.755,992,2.755,993,3.294,994,3.294,995,3.294,996,3.294,997,4.452,998,4.452,999,4.452]],["title/injectables/NotificationsService.html",[44,0.744,451,0.877]],["body/injectables/NotificationsService.html",[2,0.306,3,0.306,7,0.216,16,1.02,22,0.369,23,0.797,34,0.797,40,0.718,44,1.138,45,0.802,47,0.875,48,0.032,49,0.516,50,0.57,51,0.758,60,0.89,61,0.958,92,1.85,98,0.88,103,0.963,108,0.402,109,0.402,121,0.392,122,0.453,123,0.967,126,0.958,191,0.023,192,0.023,194,2.029,314,2.008,338,2.479,342,1.853,355,1.045,356,0.963,451,1.482,456,2.233,462,2.868,464,2.868,480,1.853,510,1.227,611,2.605,638,2.802,693,1.7,695,1.853,837,2.605,946,2.788,947,4.791,948,4.11,949,4.11,950,3.2,951,4.173,952,3.58,953,3.58,954,3.58,955,3.58,956,3.2,957,3.2,958,3.2,959,4.791,960,4.11,961,4.11,962,4.11,963,4.11,964,4.791,965,3.2,966,3.2,967,3.2,968,3.2,969,3.2,970,4.11,971,2.788,972,3.2,973,4.54,974,3.2,975,2.788,976,3.2,977,3.2,978,3.2,979,3.2,980,3.2,989,3.2,1000,4.914,1001,4.914,1002,3.826,1003,3.826,1004,3.826,1005,3.826,1006,3.826,1007,3.826]],["title/components/OrganizationComponent.html",[0,0.046,183,0.627]],["body/components/OrganizationComponent.html",[0,0.086,1,0.663,2,0.437,3,0.18,4,0.617,5,0.617,6,0.617,7,0.128,9,1.463,11,0.663,12,1.029,13,0.617,14,1.552,15,0.997,16,0.975,17,0.946,18,0.855,20,0.855,22,0.154,23,0.551,24,1.342,26,1.346,27,3.803,28,1.389,29,1.929,32,1.984,33,1.197,34,0.551,35,2.202,39,1.144,40,0.45,42,1.494,43,1.494,44,1.232,45,0.785,47,0.728,48,0.032,49,0.588,50,0.599,51,0.541,55,0.928,60,0.716,61,0.951,64,1.646,65,2.167,69,1.563,73,1.28,74,1.579,82,0.523,83,0.85,84,3.16,85,1.694,86,3.16,87,0.568,89,1.858,90,2.476,91,2.843,92,1.836,93,3.193,94,2.476,95,2.843,96,2.476,97,2.202,98,0.951,101,1.754,102,1.29,103,0.855,108,0.608,109,0.237,110,0.724,111,0.568,112,0.724,113,0.784,114,0.85,115,0.784,116,0.724,117,0.523,118,0.617,119,0.523,120,0.617,121,0.18,122,0.267,123,0.869,125,1.694,126,0.951,127,1.116,129,0.617,130,0.85,131,0.724,132,1.181,139,1.712,141,3.312,155,0.523,156,0.928,157,0.928,158,0.855,159,1.242,160,0.617,161,0.928,162,0.44,163,0.617,164,0.44,165,0.617,166,0.44,167,0.617,168,0.44,169,0.928,170,0.402,171,0.523,172,0.617,173,0.44,174,1.164,175,0.663,176,0.44,177,0.617,178,0.44,179,0.787,180,0.617,181,0.44,182,0.617,183,0.887,184,0.617,185,0.481,186,0.617,187,0.44,188,0.617,189,0.663,190,0.617,191,0.019,192,0.016,197,2.411,198,1.197,199,1.645,200,2.654,202,1.984,218,2.202,265,1.463,266,1.645,271,2.476,272,1.318,276,1.645,277,1.645,311,3.32,312,2.991,314,1.389,334,1.51,335,1.984,342,1.646,355,0.617,356,0.568,357,1.003,369,1.984,370,1.463,371,2.716,372,1.463,379,3.733,380,1.889,387,2.648,389,3.552,390,2.648,391,2.648,392,3.418,396,1.984,427,1.003,527,1.646,618,2.843,653,1.645,837,1.802,876,2.843,929,3.803,932,3.803,1008,1.889,1009,3.399,1010,3.399,1011,4.575,1012,5.124,1013,2.843,1014,3.399,1015,4.547,1016,3.418,1017,2.258,1018,2.258,1019,2.258,1020,3.399,1021,2.258,1022,3.399,1023,2.258,1024,2.258,1025,2.258,1026,2.258,1027,2.258,1028,2.258,1029,5.597,1030,2.258,1031,2.258,1032,2.258,1033,4.547,1034,2.258,1035,4.087,1036,4.547,1037,2.258,1038,1.889,1039,4.087,1040,4.087,1041,2.258,1042,2.258,1043,1.889,1044,2.258,1045,3.399,1046,3.399,1047,3.399,1048,2.476,1049,3.399,1050,3.399]],["title/components/SidebarComponent.html",[0,0.046,187,0.627]],["body/components/SidebarComponent.html",[0,0.079,1,0.48,2,0.379,3,0.196,4,0.672,5,0.672,6,0.672,7,0.139,11,0.706,12,1.082,13,0.672,14,1.572,15,1.052,16,0.438,17,0.841,18,0.911,20,0.911,22,0.167,23,0.587,24,1.368,26,1.403,28,2.292,29,2.058,32,1.435,33,1.304,34,0.587,39,1.193,40,0.479,42,1.493,43,1.532,45,0.798,47,0.645,48,0.032,49,0.627,50,0.589,51,0.479,54,1.48,60,0.742,61,0.986,65,2.974,69,0.788,74,1.647,82,0.996,84,1.594,85,0.854,86,1.594,87,0.619,89,1.937,92,1.363,93,3.086,98,1.007,101,1.799,102,0.911,103,0.911,108,0.611,109,0.258,110,0.788,111,0.619,112,0.788,113,0.854,114,0.926,115,0.854,117,0.57,118,0.672,119,0.57,120,0.672,121,0.196,122,0.291,123,0.766,125,1.756,126,0.925,127,1.174,129,0.672,130,0.926,131,0.788,132,1.258,139,0.926,155,0.57,156,0.989,157,0.989,158,0.911,159,1.295,160,0.672,161,0.989,162,0.48,163,0.672,164,0.48,165,0.672,166,0.48,167,0.672,168,0.48,169,0.989,170,0.645,171,1.225,172,0.672,173,0.48,174,1.125,175,0.706,176,0.48,177,0.672,178,0.48,179,1.225,180,0.672,181,0.48,182,0.672,183,0.48,184,0.672,185,0.523,186,0.672,187,0.925,188,0.672,189,0.48,190,0.672,191,0.017,192,0.017,197,2.514,198,1.304,200,2.768,202,2.509,217,2.296,218,2.296,240,1.191,241,1.792,256,1.792,271,1.792,272,1.435,276,1.792,277,1.792,286,1.754,311,3.426,312,3.086,334,1.609,335,2.114,355,0.672,356,0.619,357,1.092,365,2.279,369,2.114,370,1.594,371,1.92,372,1.594,379,2.638,387,2.347,389,1.792,390,2.347,391,2.347,426,3.595,427,1.909,473,1.609,474,3.426,527,2.893,555,1.48,568,2.057,579,3.454,580,2.114,581,3.029,620,2.114,635,3.073,637,2.95,639,3.073,660,1.792,792,3.029,830,3.966,839,3.595,859,2.057,860,2.057,991,2.057,992,2.057,1013,3.966,1016,3.595,1038,2.057,1043,2.057,1051,2.057,1052,3.621,1053,3.621,1054,3.621,1055,3.621,1056,2.459,1057,3.621,1058,3.621,1059,2.459,1060,2.459,1061,2.459,1062,3.621,1063,2.459,1064,2.459,1065,2.459,1066,2.459,1067,2.459,1068,2.459,1069,2.459,1070,3.595,1071,4.298,1072,2.459,1073,3.621,1074,2.459,1075,2.459,1076,2.459,1077,2.459,1078,2.459,1079,2.459,1080,3.029,1081,3.621,1082,3.621]],["title/injectables/UpdateEventsService.html",[218,1.556,451,0.877]],["body/injectables/UpdateEventsService.html",[2,0.384,3,0.384,7,0.272,22,0.327,23,0.917,40,0.795,45,0.748,48,0.032,55,1.545,82,1.114,83,1.811,108,0.594,109,0.505,121,0.384,122,0.569,191,0.027,192,0.027,194,2.55,218,2.74,451,1.641,452,2.55,456,2.808,1083,5.026,1084,4.023,1085,6.203,1086,5.657,1087,6.01]],["title/components/UserInfoComponent.html",[0,0.046,189,0.627]],["body/components/UserInfoComponent.html",[0,0.074,1,0.488,2,0.406,3,0.2,4,0.683,5,0.683,6,0.683,7,0.141,11,0.715,12,1.092,13,0.683,14,1.575,15,1.024,16,0.445,17,0.931,18,0.923,20,0.923,22,0.17,23,0.594,24,1.373,25,1.634,26,1.754,29,1.8,30,2.362,32,2.79,34,0.594,39,1.203,40,0.485,41,1.326,42,1.539,43,1.539,44,1.273,45,0.814,47,0.653,48,0.032,49,0.592,50,0.622,51,0.485,55,0.683,60,0.781,61,0.846,65,3.099,69,1.392,74,1.273,78,1.46,82,0.849,85,0.869,87,0.923,89,1.498,98,1.038,101,1.175,102,0.923,103,0.923,108,0.592,109,0.263,110,0.802,111,0.629,113,0.869,114,0.941,115,0.869,116,0.802,117,0.579,118,0.683,119,0.579,120,0.683,121,0.2,122,0.296,123,0.773,125,1.768,126,0.488,127,1.185,129,0.683,130,0.941,131,0.802,132,1.273,133,0.941,139,1.38,144,2.375,150,1.326,151,2.14,152,2.14,153,1.944,155,0.579,156,1.001,157,1.001,158,0.923,159,1.305,160,0.683,161,1.001,162,0.488,163,0.683,164,0.488,165,0.683,166,0.488,167,0.683,168,0.488,169,1.001,170,0.445,171,0.579,172,0.683,173,0.488,174,1.017,175,0.488,176,0.488,177,0.683,178,0.488,179,0.849,180,0.683,181,0.488,182,0.683,183,0.488,184,0.683,185,0.532,186,0.683,187,0.488,188,0.683,189,0.932,190,0.683,191,0.017,192,0.017,198,2.988,206,1.46,265,4.011,354,1.62,355,0.683,356,0.629,357,1.111,365,1.944,371,1.944,377,1.822,409,1.822,410,3.066,411,3.066,417,2.091,422,2.671,423,1.62,424,2.091,427,1.628,512,3.482,521,3.482,527,2.465,580,2.14,669,2.671,691,2.14,693,1.628,695,1.775,696,2.14,732,3.066,734,3.066,736,3.066,746,4.448,748,2.091,837,2.534,878,4.596,896,1.62,897,1.62,1011,3.997,1070,2.091,1080,3.066,1088,5.177,1089,5.318,1090,5.318,1091,3.666,1092,2.501,1093,2.501,1094,4.78,1095,4.78,1096,2.501,1097,2.501,1098,5.089,1099,2.501,1100,2.501,1101,2.501,1102,4.78,1103,4.78,1104,2.501,1105,2.501,1106,2.501,1107,2.501,1108,2.501,1109,3.666,1110,2.501,1111,2.501,1112,2.501,1113,2.501]],["title/coverage.html",[1114,3.661]],["body/coverage.html",[0,0.093,1,0.668,7,0.194,8,2.867,9,2.221,10,3.331,24,0.794,33,1.817,42,0.936,43,0.936,44,0.794,48,0.032,50,0.36,55,0.936,117,0.794,119,0.794,162,0.668,164,0.668,166,0.668,168,0.668,170,0.611,173,0.668,175,0.668,176,0.668,178,0.668,181,0.668,183,0.668,185,0.729,187,0.668,189,0.668,191,0.022,192,0.022,193,2.867,217,1.66,218,1.66,234,2.221,237,2.497,240,2.492,265,2.221,268,2.497,272,2.001,273,2.221,285,2.867,294,2.497,295,2.497,342,3.087,399,4.667,408,2.867,409,3.331,451,1.606,468,2.867,480,2.215,510,1.76,511,2.867,556,2.867,562,2.497,563,2.497,626,2.497,627,2.867,628,2.867,632,2.221,633,3.334,634,3.334,636,2.221,638,1.523,707,3.331,708,2.867,749,2.867,750,2.867,824,2.867,865,2.867,871,2.867,872,2.867,895,2.497,896,2.221,897,2.221,898,2.497,899,2.497,900,2.497,901,2.497,902,2.497,946,3.331,981,2.867,1008,2.867,1051,2.867,1083,2.867,1084,2.867,1088,2.867,1114,2.867,1115,2.867,1116,3.428,1117,3.428,1118,3.428,1119,3.428,1120,3.428,1121,2.867,1122,4.763,1123,6.101,1124,3.428,1125,3.428,1126,3.428,1127,3.428,1128,3.428,1129,3.428,1130,3.428,1131,3.428,1132,5.145,1133,4.573,1134,2.867,1135,2.867,1136,2.867,1137,2.867,1138,6.407,1139,3.428,1140,2.867,1141,3.428,1142,3.428,1143,5.719,1144,4.573,1145,3.428,1146,3.428,1147,4.573,1148,3.428,1149,3.428,1150,3.428,1151,3.428,1152,3.428,1153,3.428,1154,3.428,1155,3.428,1156,3.824,1157,3.428,1158,2.867,1159,3.428,1160,3.428,1161,3.428,1162,3.428,1163,3.428,1164,3.428,1165,5.331,1166,2.867,1167,3.331,1168,3.331,1169,3.824,1170,3.331,1171,3.428,1172,3.428]],["title/dependencies.html",[209,2.503,1173,2.247]],["body/dependencies.html",[48,0.032,109,0.488,111,1.169,112,1.777,191,0.026,192,0.026,209,3.01,225,4.635,226,4.037,230,3.885,231,2.712,254,3.384,262,3.384,264,2.712,452,2.463,454,3.01,455,3.235,1174,4.646,1175,6.52,1176,4.646,1177,4.646,1178,4.646,1179,4.646,1180,4.646,1181,4.646,1182,4.646,1183,4.646,1184,5.542,1185,4.646,1186,4.646,1187,4.646,1188,4.646,1189,4.646,1190,4.646,1191,4.646,1192,4.646,1193,4.646,1194,4.646,1195,4.646,1196,5.542,1197,4.646,1198,4.646,1199,4.646]],["title/miscellaneous/functions.html",[480,1.871,1200,1.741]],["body/miscellaneous/functions.html",[22,0.348,48,0.028,191,0.028,192,0.028,480,2.478,1167,3.728,1168,4.732,1170,3.728,1200,3.316,1201,4.28,1202,4.28]],["title/index.html",[22,0.183,1048,1.958,1203,2.247]],["body/index.html",[0,0.083,3,0.349,7,0.247,15,0.778,48,0.025,49,0.458,55,1.192,64,2.585,69,1.4,129,1.192,153,2.315,179,1.237,191,0.025,192,0.025,221,2.549,315,2.315,321,4.113,350,2.549,462,3.506,564,2.829,579,3.889,694,4.2,758,4.822,841,3.652,916,4.376,1115,5.023,1173,3.652,1204,4.366,1205,4.366,1206,5.766,1207,4.366,1208,6.006,1209,4.366,1210,5.766,1211,4.366,1212,5.338,1213,4.366,1214,4.366,1215,5.338,1216,5.338,1217,6.268,1218,5.338,1219,4.366,1220,4.366,1221,4.366,1222,4.366,1223,4.366,1224,4.366,1225,4.366,1226,4.366,1227,6.161,1228,4.366,1229,4.366,1230,4.366,1231,4.366,1232,3.652,1233,5.338,1234,4.366,1235,4.366,1236,4.366,1237,5.338,1238,4.366,1239,4.366,1240,4.366,1241,3.652,1242,4.366,1243,4.366,1244,4.366,1245,4.366,1246,5.766,1247,4.366,1248,4.366,1249,4.366]],["title/license.html",[1048,1.958,1203,2.247,1250,2.247]],["body/license.html",[7,0.274,48,0.027,129,1.326,179,1.125,191,0.027,192,0.027,286,2.351,802,4.06,916,3.537,1241,4.06,1250,5.459,1251,4.855,1252,4.855,1253,6.033,1254,4.855,1255,4.855,1256,4.855,1257,4.855,1258,4.855,1259,4.855,1260,4.855,1261,4.855,1262,4.855,1263,4.855,1264,4.855,1265,4.855,1266,5.688,1267,4.855,1268,4.855,1269,4.855,1270,4.855,1271,4.855,1272,4.855,1273,4.855,1274,4.855,1275,4.855,1276,4.855,1277,4.855,1278,4.855]],["title/modules.html",[207,2.555]],["body/modules.html",[48,0.028,191,0.028,192,0.028,207,3.021,208,3.354,226,3.771,805,4.329,1279,5.177,1280,5.177]],["title/overview.html",[1281,3.661]],["body/overview.html",[0,0.061,1,1.103,42,1.545,48,0.032,112,1.342,121,0.334,155,0.97,162,1.227,164,1.103,166,1.103,168,1.103,170,1.008,173,1.103,175,1.103,176,1.227,178,1.103,181,1.103,183,1.103,185,1.204,187,1.103,189,1.103,191,0.025,192,0.025,207,3.035,208,4.379,209,2.712,210,3.5,211,3.5,212,3.5,213,3.5,214,3.5,215,3.5,216,3.5,217,2.74,218,2.74,219,4.349,220,3.049,221,2.443,436,3.049,451,1.143,510,1.342,611,2.757,613,3.049,861,3.049,1281,3.5,1282,3.5]],["title/miscellaneous/variables.html",[1122,2.814,1200,1.741]],["body/miscellaneous/variables.html",[2,0.226,15,0.929,16,0.317,17,0.642,22,0.121,25,1.065,28,1.992,30,0.791,33,1.865,35,0.862,48,0.032,49,0.677,50,0.627,55,0.486,56,1.868,59,0.944,65,0.944,73,2.147,82,1.392,83,2.404,85,0.619,87,0.712,98,0.458,102,0.885,103,1.435,117,0.815,119,0.655,123,0.869,127,1.537,137,3.553,151,3.042,152,1.651,153,1.499,174,0.379,191,0.013,192,0.013,231,1.651,237,2.563,240,0.862,286,1.37,294,2.563,295,2.563,312,1.039,314,1.785,321,3.993,323,2.551,328,1.297,334,1.941,337,3.184,350,1.039,355,0.486,356,0.448,369,1.039,374,1.297,397,3.185,398,1.489,399,3.184,400,3.023,425,1.489,432,3.184,433,3.655,435,4.155,455,1.651,473,1.256,485,0.944,505,1.154,527,0.862,555,1.437,557,3.367,562,2.563,563,2.563,564,2.596,571,1.489,611,1.865,612,2.942,613,2.06,617,3.971,619,4.359,620,2.953,630,1.489,631,1.489,633,1.154,634,1.833,636,2.279,637,1.651,638,1.256,639,1.833,640,1.297,641,1.297,642,2.06,646,1.154,770,1.489,795,1.297,797,1.297,798,1.297,861,1.297,882,1.489,895,2.563,896,2.279,897,2.279,898,2.563,899,2.563,900,2.563,901,2.563,902,2.563,906,1.489,975,2.06,1121,1.489,1122,1.297,1134,1.489,1135,2.365,1136,1.489,1137,2.365,1140,4.708,1156,1.489,1158,2.942,1165,1.489,1166,2.942,1167,1.297,1168,1.297,1169,4.078,1170,1.297,1200,1.154,1201,1.489,1202,1.489,1232,2.365,1282,1.489,1283,1.781,1284,1.781,1285,1.781,1286,5.629,1287,1.781,1288,1.781,1289,1.781,1290,1.781,1291,2.828,1292,2.828,1293,1.781,1294,1.781,1295,1.781,1296,1.781,1297,1.781,1298,1.781,1299,1.781,1300,1.781,1301,1.781,1302,1.781,1303,1.781,1304,1.781,1305,1.781,1306,1.781,1307,1.781,1308,1.781,1309,1.781,1310,1.781,1311,1.781,1312,1.781,1313,1.781,1314,1.781,1315,1.781,1316,1.781,1317,1.781,1318,1.781,1319,2.828,1320,2.828,1321,2.828,1322,5.703,1323,2.828,1324,5.703,1325,2.828,1326,2.828,1327,2.828,1328,2.828,1329,2.828,1330,3.518,1331,2.828,1332,4.006,1333,2.828,1334,2.828,1335,2.828,1336,2.828,1337,1.781,1338,2.828,1339,4.37,1340,4.006,1341,2.828,1342,2.828,1343,1.781,1344,3.518,1345,6.348,1346,6.136,1347,2.828,1348,2.828,1349,1.781,1350,2.828,1351,2.828,1352,2.828,1353,4.652,1354,2.828,1355,5.341,1356,5.341,1357,5.341,1358,5.341,1359,5.341,1360,5.341,1361,5.341,1362,5.451,1363,5.341,1364,5.341,1365,5.341,1366,1.781,1367,1.781,1368,1.781,1369,1.781,1370,1.781,1371,2.828,1372,1.781,1373,2.828,1374,1.781,1375,1.781,1376,2.828,1377,1.781,1378,1.781,1379,2.828,1380,1.781,1381,1.781,1382,1.781,1383,1.781,1384,1.781,1385,1.781,1386,1.781,1387,1.781,1388,1.781,1389,1.781,1390,1.781,1391,1.781,1392,4.006,1393,1.781,1394,1.781,1395,1.781,1396,2.828,1397,1.781,1398,1.781,1399,1.781,1400,1.781,1401,2.828,1402,1.781,1403,1.781,1404,1.781,1405,1.781,1406,1.781,1407,1.781,1408,1.781,1409,1.781,1410,1.781,1411,1.781,1412,1.781,1413,1.781,1414,1.781,1415,1.781,1416,1.781,1417,2.828,1418,1.781,1419,1.781,1420,1.781]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":342,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0\">email",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0",{"_index":339,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["0.8.26",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":322,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["00ff00",{"_index":324,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["018e42cf",{"_index":907,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["0800200c9a61",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a70",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":318,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["0x3",{"_index":978,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":979,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":611,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["10/20",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":399,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":696,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["11/17",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["123456789",{"_index":434,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["13/21",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1282,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":975,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/33",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1255,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1261,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":395,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["200",{"_index":760,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["201",{"_index":763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1252,"title":{},"body":{"license.html":{}}}],["21321321321",{"_index":616,"title":{},"body":{"components/ClusterComponent.html":{}}}],["23",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":766,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31404/v1",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3tb",{"_index":615,"title":{},"body":{"components/ClusterComponent.html":{}}}],["4",{"_index":613,"title":{},"body":{"components/ClusterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":393,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["40",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":771,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":780,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["404",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":786,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":790,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4798",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b4c",{"_index":909,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["4h",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":967,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":612,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["5/8",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":804,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":807,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":812,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":815,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":819,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6c54334d6947",{"_index":911,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["6h",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7/14",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7ad1a7a8",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/14",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["8/25",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["8804",{"_index":910,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["9",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["9071",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":319,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["96",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9acb",{"_index":908,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["_notif",{"_index":947,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":782,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":1000,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":809,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1103,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":876,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":949,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":795,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["adduser(organizationid",{"_index":524,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1263,"title":{},"body":{"license.html":{}}}],["alert",{"_index":953,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":999,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":335,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":926,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["angular",{"_index":1208,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":574,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1254,"title":{},"body":{"license.html":{}}}],["api",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_url",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.appconfigur",{"_index":385,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.appdescript",{"_index":383,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.appid",{"_index":382,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.appnam",{"_index":381,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.appservic",{"_index":386,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.apptyp",{"_index":384,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.compon",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["app.configur",{"_index":406,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.descript",{"_index":404,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.id",{"_index":403,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.nam",{"_index":402,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.rout",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["app.servic",{"_index":407,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["app.tag",{"_index":405,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appcompon",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfigur",{"_index":362,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appdescript",{"_index":360,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appic",{"_index":880,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["appid",{"_index":359,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applic",{"_index":286,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Backend.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications.component.html",{"_index":288,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications.component.scss",{"_index":287,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["applications/applications.compon",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":164,"title":{"components/ApplicationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnam",{"_index":358,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["apps_mock",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appservic",{"_index":363,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["appsinfocompon",{"_index":166,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appsmock",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptyp",{"_index":361,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["array",{"_index":575,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1228,"title":{},"body":{"index.html":{}}}],["assest",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":330,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["auth",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":437,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":217,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1240,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1222,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":289,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["avail",{"_index":315,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["availablecompon",{"_index":636,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":666,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":654,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backdrop",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["backend",{"_index":24,"title":{"interfaces/Backend.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":872,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["backend.service.ts:112",{"_index":877,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:12",{"_index":873,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:125",{"_index":891,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:136",{"_index":893,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:159",{"_index":892,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:171",{"_index":887,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:181",{"_index":883,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:198",{"_index":879,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:208",{"_index":884,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:218",{"_index":881,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:26",{"_index":889,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:41",{"_index":890,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:55",{"_index":888,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:67",{"_index":885,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:77",{"_index":886,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backend.service.ts:90",{"_index":874,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["backendservic",{"_index":42,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1267,"title":{},"body":{"license.html":{}}}],["befor",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["behavior",{"_index":919,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["bitwis",{"_index":972,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["bodi",{"_index":904,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["boolean",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":676,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1227,"title":{},"body":{"index.html":{}}}],["button",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1089,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":1090,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":736,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":970,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["carouselmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":673,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["celia",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changes.newclusterdescript",{"_index":939,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclusternam",{"_index":937,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changes.newclustertag",{"_index":941,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["changesonuserlist",{"_index":1085,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":732,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":734,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":997,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":618,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":1057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1210,"title":{},"body":{"index.html":{}}}],["click",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["clone",{"_index":1213,"title":{},"body":{"index.html":{}}}],["close",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":557,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":559,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":558,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":708,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":717,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":722,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":720,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":721,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":719,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":712,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":718,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":714,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":716,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:77",{"_index":713,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster10",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster8",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster9",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_id",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_typ",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":168,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":560,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":709,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":534,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["clusterinfo",{"_index":626,"title":{"interfaces/ClusterInfo.html":{}},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clusternam",{"_index":710,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":561,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":711,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1224,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":290,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["command",{"_index":1209,"title":{},"body":{"index.html":{}}}],["commun",{"_index":817,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":788,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1257,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1237,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":632,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":675,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":672,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":802,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["configur",{"_index":337,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1095,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":789,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":787,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":764,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":781,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":816,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":791,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":799,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":820,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":783,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":687,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":813,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":778,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":823,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":568,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":984,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{}}}],["control",{"_index":704,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1259,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1251,"title":{},"body":{"license.html":{}}}],["core",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":588,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":1114,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":614,"title":{},"body":{"components/ClusterComponent.html":{}}}],["creat",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":620,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":580,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":291,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["darbi",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["data['totalclust",{"_index":605,"title":{},"body":{"components/ClusterComponent.html":{}}}],["data['totalnod",{"_index":606,"title":{},"body":{"components/ClusterComponent.html":{}}}],["date",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dave",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davesmith@mail.com",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":170,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definitions/const/loc",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":878,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":512,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["deleteuser(organizationid",{"_index":526,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["depend",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":394,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["descript",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":882,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":1219,"title":{},"body":{"index.html":{}}}],["develop",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":422,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1226,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1216,"title":{},"body":{"index.html":{}}}],["discard",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":954,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":989,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":688,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1229,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1266,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1082,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1115,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":317,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["doughnut",{"_index":292,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["due",{"_index":774,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["e456908fad13",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e4b1",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edg",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":642,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":173,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":175,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ellen",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellen.martin@mail.com",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":1109,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":800,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["engin",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":323,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error.statu",{"_index":759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.statustext",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorhandl",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":234,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":992,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1084,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1086,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1256,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1234,"title":{},"body":{"index.html":{}}}],["expect",{"_index":918,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["expiraci",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1271,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhy2nlc3miolsit1jhil0simv4cci6mtu0mji4njg2mywiawf0ijoxntqymjc2mdyzlcjpc3mioijhdxroecisimp0asi6iji1ota5zdnkltjlodmtndlmmc04zmqzltflymzintyxmtnhmsisim5izii6ije1ndiynzywnjmilcjvcmdhbml6yxrpb25jrci6ijdhzdfhn2e4lwu0yjetndc5oc05mdcxlwu0nty5mdhmywqxmyisinjvbguioijpd25lciisinvzzxjjrci6impvag4uzg9lqg1hawwuy29tin0",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":741,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":785,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1231,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1242,"title":{},"body":{"index.html":{}}}],["form",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":794,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":784,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":480,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1245,"title":{},"body":{"index.html":{}}}],["gain",{"_index":821,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":808,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":810,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":566,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":570,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1203,"title":{"index.html":{},"license.html":{}},"body":{}}],["getapp",{"_index":513,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getapps(organizationid",{"_index":529,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getbaseurl",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getclust",{"_index":515,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail",{"_index":514,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusterdetail(clusterid",{"_index":532,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getclusters(organizationid",{"_index":535,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnod",{"_index":516,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnodes(clusterid",{"_index":537,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getnotif",{"_index":1006,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getorganizationinfo",{"_index":517,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationinfo(organizationid",{"_index":539,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationus",{"_index":518,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getorganizationusers(organizationid",{"_index":541,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummari",{"_index":519,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getresourcessummary(organizationid",{"_index":543,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo",{"_index":520,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["getuserprofileinfo(organizationid",{"_index":545,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["given",{"_index":769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1248,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1276,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":293,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["group",{"_index":401,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{}}}],["group_work",{"_index":1081,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":436,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":962,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":806,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":756,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":750,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":755,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["hardcod",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":1246,"title":{},"body":{"index.html":{}}}],["helper",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1243,"title":{},"body":{"index.html":{}}}],["http://192.168.99.100",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1221,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1260,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1211,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":961,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1207,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":998,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identif",{"_index":915,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["identifi",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["ignorebackdropclick",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["ik63rhhqhztqrk7dgiewcew0vrk",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1272,"title":{},"body":{"license.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["incorrect",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":411,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":410,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":409,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:18",{"_index":414,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1099,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:23",{"_index":421,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:25",{"_index":1106,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:28",{"_index":419,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:29",{"_index":418,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:30",{"_index":417,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:31",{"_index":420,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":416,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:33",{"_index":412,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1101,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":415,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1108,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1104,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1105,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1107,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":1091,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:47",{"_index":1100,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":413,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:66",{"_index":1096,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:72",{"_index":1092,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1093,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:99",{"_index":1097,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":628,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/app",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":365,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":379,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate.userid",{"_index":1074,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":451,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":994,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1212,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":432,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1238,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":510,"title":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/Backend.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":775,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":619,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["item.nam",{"_index":705,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":963,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh.peterson@mail.com",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":573,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":372,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1072,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(response._bodi",{"_index":378,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["json.stringifi",{"_index":905,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(jwttokendata",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(mockappslist",{"_index":944,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockclusterlist",{"_index":943,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mocknodelist",{"_index":945,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockorganizationinfo",{"_index":923,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockresourcessummari",{"_index":942,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(mockuserlist[index",{"_index":922,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["json.stringify(respons",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":369,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1236,"title":{},"body":{"index.html":{}}}],["key",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1270,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":435,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":1275,"title":{},"body":{"license.html":{}}}],["law",{"_index":1262,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":798,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1239,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1250,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1278,"title":{},"body":{"license.html":{}}}],["line",{"_index":350,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":357,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":797,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":971,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":314,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":427,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["local",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorag",{"_index":368,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":364,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":370,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":648,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":598,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":423,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":686,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":679,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":685,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":674,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":681,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":677,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":680,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":678,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":682,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":684,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":683,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.reload",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["login.component.html",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":176,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":793,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":866,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":868,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":867,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":178,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1205,"title":{},"body":{"index.html":{}}}],["map",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["map(respons",{"_index":913,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["martin",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":974,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecoz_udyimldug",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1046,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":693,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikeslashis@mail.com",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1200,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":294,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":295,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappslist",{"_index":901,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":562,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":899,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockclusterlist.map(x",{"_index":934,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].descript",{"_index":938,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].label",{"_index":940,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockclusterlist[index].nam",{"_index":936,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockjwttoken",{"_index":895,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":902,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":563,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":897,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":898,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":900,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":43,"title":{"injectables/MockupBackendService.html":{}},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":896,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserlist.map(x",{"_index":920,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.push(us",{"_index":925,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist.splice(index",{"_index":927,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].email",{"_index":930,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].nam",{"_index":928,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["mockuserlist[index].role_nam",{"_index":931,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["modal",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":1049,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":668,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":207,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":433,"title":{},"body":{"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1247,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":617,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nativedock",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navig",{"_index":1220,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":779,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":629,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{}}}],["network",{"_index":822,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":729,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":728,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":730,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["next",{"_index":356,"title":{},"body":{"components/ApplicationsComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1217,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":564,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":623,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":621,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":622,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":625,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":624,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":565,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":638,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":1003,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":983,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":982,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":181,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":646,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":44,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1206,"title":{},"body":{"index.html":{}}}],["null",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":338,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":367,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["observ",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["obtain",{"_index":1258,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":933,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["on",{"_index":581,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":951,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":955,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":311,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openappsinfo",{"_index":306,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["openappsinfo(app",{"_index":309,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["opendebugpanel",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":1020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":1014,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["optionchang",{"_index":697,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":670,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["ordin",{"_index":344,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["organ",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":380,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":1009,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization_mock",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":1047,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":183,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":991,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["overview",{"_index":1281,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1173,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":792,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":635,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":643,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":644,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":634,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:100",{"_index":700,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:145",{"_index":701,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:38",{"_index":703,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":698,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:42",{"_index":702,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:48",{"_index":699,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["password).pipe(map(respons",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirm",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":1050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":768,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1277,"title":{},"body":{"license.html":{}}}],["persist",{"_index":667,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1080,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["peterson",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pie",{"_index":328,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":912,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["platform",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["predefin",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":803,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":818,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1230,"title":{},"body":{"index.html":{}}}],["product",{"_index":1232,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1215,"title":{},"body":{"index.html":{}}}],["promis",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":811,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1244,"title":{},"body":{"index.html":{}}}],["r",{"_index":973,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["rangefillopac",{"_index":296,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["reactiveformsmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1249,"title":{},"body":{"index.html":{}}}],["real",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["referencelin",{"_index":297,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["refresh_token",{"_index":906,"title":{},"body":{"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regist",{"_index":396,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["reload",{"_index":1223,"title":{},"body":{"index.html":{}}}],["remov",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/OrganizationComponent.html":{}}}],["renam",{"_index":993,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":331,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{}}}],["replic",{"_index":917,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["repositori",{"_index":1214,"title":{},"body":{"index.html":{}}}],["request",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{}}}],["requir",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"injectables/MockupBackendService.html":{},"overview.html":{}}}],["resetpassword",{"_index":521,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["resetpassword(organizationid",{"_index":549,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["resourc",{"_index":555,"title":{},"body":{"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":185,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":376,"title":{},"body":{"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/MockupBackendService.html":{}}}],["response(new",{"_index":903,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response._bodi",{"_index":377,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["response.email",{"_index":1077,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.json",{"_index":914,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["response.nam",{"_index":1038,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":1078,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["responseopt",{"_index":894,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["resset",{"_index":1098,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":191,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["role_nam",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":731,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":321,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["running_nod",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["runningnod",{"_index":630,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MockupBackendService.html":{}}}],["sara",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saradoe@mail.com",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchang",{"_index":522,"title":{},"body":{"interfaces/Backend.html":{},"components/EditClusterComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveclusterchanges(form",{"_index":715,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(organizationid",{"_index":551,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchang",{"_index":523,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{}}}],["saveuserchanges(f",{"_index":739,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(organizationid",{"_index":553,"title":{},"body":{"interfaces/Backend.html":{},"injectables/MockupBackendService.html":{}}}],["scaffold",{"_index":1225,"title":{},"body":{"index.html":{}}}],["schemetyp",{"_index":298,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["screen",{"_index":689,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1273,"title":{},"body":{"license.html":{}}}],["select",{"_index":669,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1218,"title":{},"body":{"index.html":{}}}],["server",{"_index":758,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":334,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":796,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":952,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showgridlin",{"_index":299,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflabel",{"_index":300,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showreflin",{"_index":301,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxi",{"_index":302,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showxaxislabel",{"_index":303,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxi",{"_index":304,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["showyaxislabel",{"_index":305,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["sidebar",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1052,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":187,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sig",{"_index":425,"title":{},"body":{"components/AppsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["simul",{"_index":875,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["slashi",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smith",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":1265,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":706,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":690,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1274,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../backend.service.t",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1201,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1202,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":408,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":285,"title":{},"body":{"components/ApplicationsComponent.html":{},"coverage.html":{}}}],["src/app/applications/applications.component.ts:112",{"_index":308,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:133",{"_index":310,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:21",{"_index":316,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:26",{"_index":336,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:37",{"_index":313,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:42",{"_index":333,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:47",{"_index":327,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:48",{"_index":326,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:49",{"_index":320,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:52",{"_index":325,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:66",{"_index":349,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:67",{"_index":352,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:68",{"_index":351,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:69",{"_index":353,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:70",{"_index":346,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:71",{"_index":348,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:72",{"_index":347,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:73",{"_index":345,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:74",{"_index":340,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:75",{"_index":343,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:85",{"_index":329,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:86",{"_index":332,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/applications/applications.component.ts:87",{"_index":307,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":556,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:113",{"_index":577,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:145",{"_index":572,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:160",{"_index":578,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:19",{"_index":583,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:24",{"_index":597,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:29",{"_index":585,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:34",{"_index":584,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:39",{"_index":586,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:44",{"_index":595,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:49",{"_index":596,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:54",{"_index":587,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:59",{"_index":592,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:60",{"_index":591,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":589,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:64",{"_index":590,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:78",{"_index":593,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:79",{"_index":594,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:80",{"_index":582,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":569,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":633,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/loc",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":511,"title":{},"body":{"interfaces/Backend.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.ts:10",{"_index":540,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:11",{"_index":542,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:12",{"_index":525,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:13",{"_index":528,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:14",{"_index":550,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:15",{"_index":554,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:17",{"_index":552,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:18",{"_index":536,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:19",{"_index":538,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:20",{"_index":544,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:22",{"_index":531,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:23",{"_index":533,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:4",{"_index":530,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:6",{"_index":547,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:7",{"_index":548,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/backend.ts:9",{"_index":546,"title":{},"body":{"interfaces/Backend.html":{}}}],["src/app/definitions/interfaces/clust",{"_index":627,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":707,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:86",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":865,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":870,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":869,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":981,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":986,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":990,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":985,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":987,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":988,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:107",{"_index":1021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:124",{"_index":1018,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:135",{"_index":1024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":1025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:27",{"_index":1028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":1030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1032,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:35",{"_index":1027,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:39",{"_index":1026,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:42",{"_index":1017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:63",{"_index":1019,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:91",{"_index":1023,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/error",{"_index":749,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":871,"title":{},"body":{"injectables/MockupBackendService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":946,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":1001,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":1002,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":1007,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":1004,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":1005,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1083,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1051,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:104",{"_index":1063,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:116",{"_index":1056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":1064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:28",{"_index":1066,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1068,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1065,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:35",{"_index":1069,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:41",{"_index":1055,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:62",{"_index":1059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:76",{"_index":1060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:85",{"_index":1061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1088,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1048,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":389,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["statu",{"_index":397,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":609,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":576,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1087,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(respons",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":1029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["succeed",{"_index":762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{}}}],["summari",{"_index":374,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":805,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":671,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":776,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":400,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":694,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1102,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":948,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":956,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":950,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":958,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":995,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.app",{"_index":366,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.auth.logout",{"_index":1079,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1112,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getapps(this.organizationid",{"_index":375,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.backend.getclusterdetail(this.clusterid",{"_index":608,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.clusterid",{"_index":610,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1037,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1039,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":604,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1076,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":1113,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":727,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":747,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1110,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":1111,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":599,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":603,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":724,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":726,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":723,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":602,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":725,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.configur",{"_index":430,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":1071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.errormessag",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.id",{"_index":428,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loginform",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":387,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":390,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":391,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1044,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(appsinfocompon",{"_index":388,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1043,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":426,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/SidebarComponent.html":{}}}],["this.nod",{"_index":600,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":601,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":647,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":691,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":996,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":692,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":371,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1070,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":745,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.servic",{"_index":431,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.subscriptiontyp",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.tag",{"_index":429,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.titl",{"_index":424,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":607,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1073,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1075,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":392,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.us",{"_index":1036,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":746,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":748,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["time",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":398,"title":{},"body":{"components/ApplicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":695,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["token",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{}}}],["tooltipmodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":373,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":571,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["total_clust",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total_nod",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalnod",{"_index":631,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["toth",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth.c@mail.com",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":355,"title":{},"body":{"components/ApplicationsComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"injectables/MockupBackendService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1204,"title":{},"body":{"index.html":{}}}],["unabl",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":814,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1253,"title":{},"body":{"license.html":{}}}],["understand",{"_index":773,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":801,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1233,"title":{},"body":{"index.html":{}}}],["up",{"_index":645,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":579,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":218,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updatenodeslist",{"_index":567,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateprofileus",{"_index":1054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1062,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1094,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":770,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":916,"title":{},"body":{"injectables/MockupBackendService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"interfaces/Backend.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"injectables/MockupBackendService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:105",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:18",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":743,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":744,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":742,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:39",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:52",{"_index":738,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:55",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:60",{"_index":737,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:62",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:75",{"_index":735,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:80",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:85",{"_index":733,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:93",{"_index":740,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:97",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":929,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":932,"title":{},"body":{"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":527,"title":{},"body":{"interfaces/Backend.html":{},"components/EditUserComponent.html":{},"injectables/MockupBackendService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":189,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":354,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"injectables/MockupBackendService.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":959,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":964,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":976,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":980,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":960,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":1122,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1241,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1235,"title":{},"body":{"index.html":{}}}],["view",{"_index":312,"title":{},"body":{"components/ApplicationsComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ApplicationsComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1269,"title":{},"body":{"license.html":{}}}],["without",{"_index":1268,"title":{},"body":{"license.html":{}}}],["write",{"_index":1264,"title":{},"body":{"license.html":{}}}],["x",{"_index":977,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.cluster_id).indexof(clusterid",{"_index":935,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(user.email",{"_index":924,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.email).indexof(userid",{"_index":921,"title":{},"body":{"injectables/MockupBackendService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":957,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xline",{"_index":341,"title":{},"body":{"components/ApplicationsComponent.html":{}}}],["xxxx",{"_index":966,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":965,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":969,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["yxxx",{"_index":968,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n\n\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role_name: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        this.notificationsService.add({message: user.email + ' created successfully'});\n        this.bsModalRef.hide();\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApplicationsComponent.html":{"url":"components/ApplicationsComponent.html","title":"component - ApplicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApplicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/applications/applications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                applications\n            \n\n            \n                styleUrls\n                applications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./applications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apps\n                            \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockAppChart\n                            \n                            \n                                mockAppPieChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                rangeFillOpacity\n                            \n                            \n                                referenceLines\n                            \n                            \n                                schemeType\n                            \n                            \n                                showGridLines\n                            \n                            \n                                showRefLabels\n                            \n                            \n                                showRefLines\n                            \n                            \n                                showXAxis\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxis\n                            \n                            \n                                showYAxisLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAppsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/applications/applications.component.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAppsInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenAppsInfo(app: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the apps info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apps:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of available apps\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:47\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:85\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID, name, id, description, type, configuration and services\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangeFillOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeFillOpacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceLines:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ordinal'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGridLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showGridLines:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRefLines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showRefLines:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:66\n                            \n                        \n\n                \n                    \n                        Line Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showXAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showXAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxis:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showYAxisLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showYAxisLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/applications/applications.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { mockAppChart, mockAppPieChart } from '../utils/mocks';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { AppsInfoComponent } from '../apps-info/apps-info.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID, name, id, description, type, configuration and services\n   */\n  organizationId: string;\n  // appName: string;\n  // appId: string;\n  // appDescription: string;\n  // appType: string;\n  // appConfiguration: string;\n  // appServices: string;\n\n  /**\n   * List of available apps\n   */\n  apps: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * Line Chart options\n   */\n  showXAxis = true;\n  showYAxis = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  showGridLines = false;\n  showRefLines = true;\n  showRefLabels = true;\n  schemeType = 'ordinal';\n  rangeFillOpacity = 0.0;\n  referenceLines = [\n    {\n      name: 'xline',\n      value: 0\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockAppChart: any;\n  mockAppPieChart: any;\n  autoScale: any;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.apps = [];\n\n  /**\n   * Mocked Charts\n   */\n  Object.assign(this, {mockAppPieChart, mockAppChart});\n  }\n\n  ngOnInit() {\n      // Get User data from localStorage\n      const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n      if (jwtData !== null) {\n        this.organizationId = JSON.parse(jwtData).OrganizationId;\n        if (this.organizationId !== null) {\n          // Requests top card summary data\n          this.backend.getApps(this.organizationId)\n          .subscribe(response => {\n            if (response && response._body) {\n              const data = JSON.parse(response._body);\n              this.apps = data;\n            }\n          });\n        }\n      }\n    }\n\n  /**\n   * Opens the modal view that holds the apps info component\n   */\n  openAppsInfo(app) {\n    const initialState = {\n      organizatinoId: this.organizationId,\n      appName: app.appName,\n      appId: app.appId,\n      appDescription: app.appDescription,\n      appType: app.appType,\n      appConfiguration: app.appConfiguration,\n      appServices: app.appServices\n    };\n\n    this.modalRef = this.modalService.show(AppsInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    // this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n}\n\n    \n\n    \n        \n\n    \n      Application\n    \n  \n  \n    \n    \n      \n        \n          SUMMARY\n        \n        \n          \n            \n              \n                \n                \n                4/5\n              \n              Apps running\n              DEPLOYED\n            \n          \n          \n            \n              20\n            \n            REGISTERED\n          \n        \n      \n    \n    \n    \n      \n        \n          APP STATUS TIMELINE\n        \n        \n          \n            \n            \n            \n          \n          \n            100%\n            0%\n            \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          DEPLOYED APP LIST\n        \n        \n          \n            \n              \n                \n                  Name\n                \n                \n                  ID\n                \n                \n                  Description\n                \n                \n                  Tags\n                \n                \n                  Configuration\n                \n                \n                  Service Groups\n                \n                \n                  Info\n                \n              \n            \n            \n              \n                {{app.name}}\n                {{app.id}}\n                {{app.description}}  \n                {{app.tags}}\n                {{app.configuration}}\n                \n                {{app.service}}\n                \n                  \n                    \n                      i\n                    \n                  \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Application                                        SUMMARY                                                                                                    4/5                            Apps running              DEPLOYED                                                          20                        REGISTERED                                                            APP STATUS TIMELINE                                                                                              100%            0%                                                                DEPLOYED APP LIST                                                                                      Name                                                  ID                                                  Description                                                  Tags                                                  Configuration                                                  Service Groups                                                  Info                                                                                    {{app.name}}                {{app.id}}                {{app.description}}                  {{app.tags}}                {{app.configuration}}                                {{app.service}}                                                                            i                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApplicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                configuration\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                service\n                            \n                            \n                                tags\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold app name, organization id, app description, app tags, app configuration, app service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:23\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold app name, organization id, app description, app tags, app configuration, app service\n   */\n  name: string;\n  id: string;\n  description: string;\n  tags: string;\n  configuration: string;\n  service: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'SIG Application';\n    this.name = 'Loading ...'; // Default initialization\n    this.id = 'Loading ...'; // Default initialization\n    this.tags = 'Loading ...'; // Default initialization\n    this.configuration = 'Loading ...'; // Default initialization\n    this.service = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n  \n  \n  \n  \n    \n\n    \n    \n    \n      \n        \n          \n            Name\n          \n          {{name}}\n        \n        \n          \n            Description\n          \n          Instance of MongoDB \n        \n        \n          \n            Id\n          \n          123456789\n        \n        \n          \n            Configuration\n          \n          Kubernetes\n        \n        \n          \n            Tags\n          \n          Tags, tag, tags\n        \n      \n    \n  \n  \n    \n      Close\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}                                                            Name                    {{name}}                                      Description                    Instance of MongoDB                                       Id                    123456789                                      Configuration                    Kubernetes                                      Tags                    Tags, tag, tags                                Close        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Backend.html":{"url":"interfaces/Backend.html","title":"interface - Backend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Backend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/backend.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addUser\n                                \n                                \n                                    deleteUser\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getApps\n                                \n                                \n                                    getClusterDetail\n                                \n                                \n                                    getClusters\n                                \n                                \n                                    getNodes\n                                \n                                \n                                    getOrganizationInfo\n                                \n                                \n                                    getOrganizationUsers\n                                \n                                \n                                    getResourcesSummary\n                                \n                                \n                                    getUserProfileInfo\n                                \n                                \n                                    login\n                                \n                                \n                                    logout\n                                \n                                \n                                    resetPassword\n                                \n                                \n                                    saveClusterChanges\n                                \n                                \n                                    saveUserChanges\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/definitions/interfaces/backend.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Backend {\n  getApps(organizationId: string): any;\n    // Login\n    login(email: string, password: string): Observable;\n    logout();\n    // Organization\n    getUserProfileInfo(organizationId: string, userId: string);\n    getOrganizationInfo(organizationId: string);\n    getOrganizationUsers(organizationId: string);\n    addUser(organizationId: string, user: any);\n    deleteUser(organizationId: string, userId: string);\n    resetPassword(organizationId: string, userId: string);\n    saveUserChanges(organizationId: string, changes: any);\n    // Resources\n    saveClusterChanges(organizationId: string, clusterId: string, changes: any);\n    getClusters(organizationId: string);\n    getNodes(clusterId: string);\n    getResourcesSummary(organizationId: string);\n    // Applications\n    getApps(organizationId: string);\n    getClusterDetail(clusterId: string);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:54\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:59\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:78\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:49\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: any[];\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.resourcesMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = [];\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).OrganizationId;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n         .subscribe(response => {\n           if (response && response._body) {\n             const data = JSON.parse(response._body);\n             this.clustersCount = data['totalClusters'];\n             this.nodesCount = data['totalNodes'];\n           }\n         });\n         this.updateNodesList();\n       }\n     }\n    //  this.backend.getClusterDetail(this.clusterId)\n    //  .subscribe(response => {\n    //    if (response && response._body) {\n    //      const data = JSON.parse(response._body);\n    //      this.clusterData = data;\n    //    }\n    //  });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.clusterId)\n    .subscribe(response => {\n      if (response && response._body) {\n        const data = JSON.parse(response._body);\n        this.nodes = data;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        CLUSTER 1\n        5 available\n      \n      \n        \n          \n            \n              \n              \n              4/5\n            \n            4 nodes \n            NODES\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n            \n              {{clustersCount}}\n            \n            CPU LOAD\n          \n          \n            \n              3Tb\n            \n            STORAGE\n          \n        \n        \n          \n            \n              \n                id\n              \n              21321321321\n            \n            \n              \n                types\n              \n              Kubernetes \n            \n            \n              \n                Tags\n              \n              Tags\n            \n            \n              \n                Multitenant\n              \n              All\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > CLUSTER 1 > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      CLUSTER 1        5 available                                                                                    4/5                        4 nodes             NODES                                              SUMMARY CLUSTER 1                                                        {{clustersCount}}                        CPU LOAD                                              3Tb                        STORAGE                                                                              id                            21321321321                                                      types                            Kubernetes                                                       Tags                            Tags                                                      Multitenant                            All                                                                                    CLUSTER                                 > CLUSTER 1 >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        multitenant\n                                \n                                \n                                        name\n                                \n                                \n                                        runningNodes\n                                \n                                \n                                        status\n                                \n                                \n                                        tags\n                                \n                                \n                                        totalNodes\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runningNodes\n                                    \n                                \n                                \n                                    \n                                        runningNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNodes\n                                    \n                                \n                                \n                                    \n                                        totalNodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name: string;\n  id?: string;\n  totalNodes: string;\n  runningNodes: string;\n  description: string;\n  status: string;\n  type: string;\n  tags: string;\n  multitenant: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n    Backend control\n    \n      \n        \n        \n          {{item.name}}\n        \n        \n        \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                    Backend control                                    {{item.name}}                                              Real                                Mock                                    Notifications    Spam test notification                Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error message\n   */\n  errorMessage: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessage = '';\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessage = '';\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.errorMessage = error.statusText;\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                0\">Email or password incorrect\n                \n                \n                Log in\n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                    0\">Email or password incorrect                                                Log in                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockupBackendService.html":{"url":"injectables/MockupBackendService.html","title":"injectable - MockupBackendService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockupBackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mockup-backend.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getApps\n                            \n                            \n                                getClusterDetail\n                            \n                            \n                                getClusters\n                            \n                            \n                                getNodes\n                            \n                            \n                                getOrganizationInfo\n                            \n                            \n                                getOrganizationUsers\n                            \n                            \n                                getResourcesSummary\n                            \n                            \n                                getUserProfileInfo\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resetPassword\n                            \n                            \n                                saveClusterChanges\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mockup-backend.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Simulates adding a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Simulates delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApps\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApps(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:198\n                            \n                        \n\n\n                \n                    \n                            \nAppications\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusterDetail(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:218\n                            \n                        \n\n\n                \n                    \n                            Simulates get cluster details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClusters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClusters(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNodes(clusterId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:208\n                            \n                        \n\n\n                \n                    \n                            Simulates get nodes list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationInfo(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOrganizationUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOrganizationUsers(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourcesSummary(organizationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserProfileInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserProfileInfo(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            \nOrganization\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            \nLogin\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Simulates the logout request\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(organizationId: string, userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Simulates reset password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(organizationId: string, clusterId: string, changes: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:159\n                            \n                        \n\n\n                \n                    \n                            \nResources\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changes\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(organizationId: string, user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/mockup-backend.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Simulates save user changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { Response, ResponseOptions } from '@angular/http';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { mockJwtToken, mockUserList, mockOrganizationInfo, mockResetPasword, mockClusterList, mockResourcesSummary, mockAppsList, mockNodeList  } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockupBackendService implements Backend {\n\n  constructor() {\n  }\n\n  /********************\n   * Login\n   ********************/\n\n  /**\n   * Simulates the login request\n   * @param email String containing the user email\n   * @param password String that holds the user password\n   */\n  login(email: string, password: string): Observable {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({\n        token: mockJwtToken,\n        refresh_token: '018e42cf-9acb-4b4c-8804-6c54334d6947'\n      }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n  /**\n   * Simulates the logout request\n   */\n  logout() {\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /********************\n   * Organization\n   ********************/\n\n  /**\n   * Simulates get profile info\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  getUserProfileInfo(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {}\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockUserList[index]),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationInfo(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockOrganizationInfo),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getOrganizationUsers(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify({ users: mockUserList }),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /**\n  * Simulates adding a user\n  */\n  addUser(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index === -1) {\n      mockUserList.push(user);\n      return of (new Response(new ResponseOptions({\n        status: 200\n      }))).pipe(\n        map(response => response.json())\n      );\n    } else {\n      return of (new Response(new ResponseOptions({\n        status: 403,\n        body: user.email + ' is already in use'\n      }))).pipe(\n        map(response => response.json())\n      );\n    }\n  }\n\n  /**\n  * Simulates delete user\n  */\n  deleteUser(organizationId: string, userId: string) {\n    const index = mockUserList.map(x => x.email).indexOf(userId);\n    if (index !== -1) {\n      mockUserList.splice(index, 1);\n    }\n    return of (new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  /**\n  * Simulates reset password\n  */\n  resetPassword(organizationId: string, userId: string) {\n    return of (new Response(new ResponseOptions({\n      body: mockResetPasword,\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates save user changes\n   * @param userId String containing the user identificator - used to replicate expected backend behavior\n   */\n  saveUserChanges(organizationId: string, user: any) {\n    const index = mockUserList.map(x => x.email).indexOf(user.email);\n    if (index !== -1) {\n      mockUserList[index].name = user.name;\n      mockUserList[index].email = user.email;\n      mockUserList[index].role_name = user.role_name;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    }))).pipe(\n      map(response => response.json())\n    );\n  }\n\n\n  /********************\n   * Resources\n   ********************/\n\n  /**\n   * Simulates save cluster changes\n   * @param clusterId String containing the cluster identificator - used to replicate expected backend behavior\n   */\n  saveClusterChanges(organizationId: string, clusterId: string, changes: any) {\n    const index = mockClusterList.map(x => x.cluster_id).indexOf(clusterId);\n    if (index !== -1) {\n      mockClusterList[index].name = changes.newClusterName;\n      mockClusterList[index].description = changes.newClusterDescription;\n      mockClusterList[index].labels = changes.newClusterTags;\n    }\n    return of(new Response(new ResponseOptions({\n      status: 200\n    })));\n  }\n\n  getResourcesSummary(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockResourcesSummary),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  getClusters(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })))\n    .pipe(\n      map(response => response.json())\n    );\n  }\n\n  /********************\n   * Appications\n   ********************/\n\n  /**\n   * Simulates get apps list\n   */\n  getApps(organizationId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockAppsList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get nodes list\n   */\n  getNodes(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockNodeList),\n      status: 200\n    })));\n  }\n\n  /**\n   * Simulates get cluster details\n   */\n  getClusterDetail(clusterId: string) {\n    return of (new Response(new ResponseOptions({\n      body: JSON.stringify(mockClusterList),\n      status: 200\n    })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                config\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: 'static',\n    ignoreBackdropClick: false\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:39\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:35\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:27\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n    /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: 'static',\n    ignoreBackdropClick: false\n  };\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n        this.backend.getOrganizationUsers(this.organizationId)\n          .subscribe(response => {\n              this.users = response.users;\n          });\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n\n    };\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n\n  }\n\n  updateUserList() {\n    if (this.organizationId != null) {\n      this.backend.getOrganizationUsers(this.organizationId)\n      .subscribe(response => {\n          this.users = response.users;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                             Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      this.updateService.changesOnUserList.next();\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:35\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:30\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                32 %\n                (8/25)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                61 %\n                (13/21)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                48 %\n                (16/33)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../backend.service.ts)\n                        \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/backend.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + ':31404/v1/'\n                        \n                    \n\n                \n                    \n                        URL of the public API\n\n                    \n                \n\n            \n        \n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: getBaseUrl\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // hardcoded local environment API ip address\n  apiUrl: 'http://192.168.99.100'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n    refreshToken: 'refresh_token'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Assets Application',\n        id: '0800200c9a61',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'SIG Application',\n        id: '0800200c9a62',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Engine App',\n        id: '0800200c9a63',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a64',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'NativeDocker',\n        service: 'Running',\n    },\n    {\n        name: 'Darby App',\n        id: '0800200c9a65',\n        description: 'Instance of MongoDB',\n        tags: 'ny, edge',\n        configuration: 'Kubernetes',\n        service: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a61',\n        name: 'Cluster1',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '1',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a62',\n        name: 'Cluster2',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '2',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a63',\n        name: 'Cluster3',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '3',\n        cluster_type: 'Kubernetes',\n        status: 'Error',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a64',\n        name: 'Cluster4',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '4',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a65',\n        name: 'Cluster5',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '5',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a66',\n        name: 'Cluster6',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '6',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a67',\n        name: 'Cluster7',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '7',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a68',\n        name: 'Cluster8',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '8',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a69',\n        name: 'Cluster9',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '9',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a70',\n        name: 'Cluster10',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '10',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJhY2Nlc3MiOlsiT1JHIl0sImV4cCI6MTU0MjI4Njg2MywiaWF0IjoxNTQyMjc2MDYzLCJpc3MiOiJhdXRoeCIsImp0aSI6IjI1OTA5ZDNkLTJlODMtNDlmMC04ZmQzLTFlYmZiNTYxMTNhMSIsIm5iZiI6IjE1NDIyNzYwNjMiLCJvcmdhbml6YXRpb25JRCI6IjdhZDFhN2E4LWU0YjEtNDc5OC05MDcxLWU0NTY5MDhmYWQxMyIsInJvbGUiOiJPd25lciIsInVzZXJJRCI6ImpvaG4uZG9lQG1haWwuY29tIn0' +\n    '.MeCoZ_UdYiMlduG-ik63rHHqHztQrK7dgIEWceW0VRk'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    total_clusters: mockClusterList.length,\n    total_nodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Celia Toth',\n        email: 'toth.c@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Sara Doe',\n        email: 'saradoe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Dave Smith',\n        email: 'davesmith@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'john.doe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Ellen Martin',\n        email: 'ellen.martin@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Josh Peterson',\n        email: 'josh.peterson@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Mike Slashis',\n        email: 'mikeslashis@mail.com',\n        role_name: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
