var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.017,1,0.59]],["body/components/AddUserComponent.html",[0,0.026,1,0.863,2,0.318,3,0.215,4,0.646,5,0.646,6,0.646,7,0.152,8,4.97,9,3.81,10,1.695,11,0.724,12,1.038,13,0.646,14,1.509,15,1.078,16,0.974,17,1.052,18,0.873,19,2.892,20,0.873,21,2.892,22,0.183,23,0.532,24,1.713,25,1.479,26,1.713,27,3.8,28,2.475,29,2.142,30,2.516,31,4.571,32,2.61,33,2.358,34,0.657,35,1.986,36,2.892,37,2.505,38,3.479,39,1.147,40,0.475,41,1.214,42,1.488,43,1.775,44,1.325,45,0.811,46,1.957,47,1.016,48,0.035,49,0.68,50,0.68,51,0.747,52,3.479,53,2.354,54,1.358,55,1.401,56,1.497,57,3.755,58,2.505,59,2.392,60,0.944,61,0.863,62,2.892,63,2.354,64,2.785,65,2.797,66,3.44,67,2.505,68,2.354,69,1.355,70,2.505,71,2.505,72,3.677,73,1.953,74,1.634,75,3.479,76,2.354,77,2.505,78,1.006,79,2.354,80,1.957,81,2.354,82,0.539,83,1.006,84,2.505,85,1.463,86,2.505,87,1.046,88,1.957,89,1.953,90,2.892,91,3.479,92,1.358,93,2.217,94,2.892,95,3.479,96,2.892,97,2.892,98,1.142,99,1.957,100,2.354,101,1.243,102,1.043,103,0.955,104,1.957,105,1.957,106,2.354,107,2.354,108,0.638,109,0.249,110,0.841,111,0.591,112,0.771,113,0.841,114,0.919,115,0.841,116,0.841,117,0.539,118,0.646,119,0.539,120,0.646,121,0.215,122,0.284,123,0.705,124,3.8,125,1.479,126,0.862,127,1.136,128,1.695,129,0.646,130,0.919,131,0.771,132,1.243,133,1.785,134,2.354,135,2.354,136,3.479,137,1.695,138,2.354,139,1.006,140,2.354,141,1.957,142,1.957,143,2.354,144,2.637,145,1.695,146,1.695,147,1.695,148,2.354,149,2.354,150,1.214,151,1.986,152,1.986,153,1.794,154,2.505,155,0.539,156,0.955,157,0.955,158,0.873,159,1.255,160,0.646,161,0.955,162,0.444,163,0.646,164,0.49,165,0.646,166,0.444,167,0.646,168,0.444,169,0.955,170,0.401,171,0.539,172,0.646,173,0.444,174,0.724,175,0.444,176,0.444,177,0.646,178,0.444,179,0.796,180,0.646,181,0.444,182,0.646,183,0.444,184,0.646,185,0.49,186,0.646,187,0.444,188,0.646,189,0.444,190,0.646,191,0.019,192,0.019]],["title/components/AppComponent.html",[0,0.017,162,0.59]],["body/components/AppComponent.html",[0,0.031,1,0.698,2,0.435,3,0.338,4,1.014,5,1.014,6,1.014,7,0.238,11,0.99,12,1.319,13,1.014,14,1.596,15,1.172,16,0.63,17,0.63,18,1.193,20,1.193,22,0.287,23,0.728,25,1.879,26,1.664,34,0.898,39,1.392,40,0.649,44,1.567,45,0.784,47,0.77,48,0.035,49,0.635,50,0.67,51,0.566,60,0.63,61,0.898,82,0.846,83,1.579,98,0.898,108,0.67,109,0.503,111,0.927,116,1.321,121,0.338,122,0.447,123,0.63,155,0.846,156,1.305,157,1.305,158,1.193,159,1.523,160,1.014,161,1.305,162,1.048,163,1.014,164,0.77,165,1.014,166,0.698,167,1.014,168,0.698,169,1.305,170,0.63,171,0.846,172,1.014,173,0.698,174,0.99,175,0.698,176,0.698,177,1.014,178,0.698,179,1.27,180,1.014,181,0.698,182,1.014,183,0.698,184,1.014,185,0.77,186,1.014,187,0.698,188,1.014,189,0.698,190,1.014,191,0.026,192,0.026,193,3.072,194,2.452,195,4.754,196,4.754,197,3.168,198,2.862,199,3.072,200,3.536,201,4.754,202,3.03,203,3.696,204,3.696,205,3.696,206,2.11]],["title/modules/AppModule.html",[207,1.785,208,1.993]],["body/modules/AppModule.html",[1,1.085,2,0.268,3,0.268,7,0.189,9,1.864,15,0.552,16,0.499,17,0.499,42,1.508,48,0.035,108,0.776,109,0.31,111,1.378,112,1.738,113,1.046,121,0.462,122,0.354,155,0.67,162,1.137,164,1.144,166,1.085,168,1.037,170,0.979,171,0.67,173,1.085,174,0.847,175,1.085,176,1.137,178,1.037,181,1.037,183,1.037,185,1.144,187,1.037,189,1.085,191,0.022,192,0.022,206,1.671,207,2.322,208,4.12,209,1.864,210,3.885,211,4.198,212,2.432,213,2.432,214,2.432,215,2.432,216,2.432,217,2.574,218,2.574,219,3.38,220,2.432,221,1.671,222,2.926,223,4.066,224,4.066,225,3.38,226,2.107,227,4.066,228,2.926,229,4.066,230,2.432,231,1.864,232,4.066,233,3.38,234,2.591,235,2.926,236,2.926,237,2.978,238,2.926,239,2.926,240,1.371,241,2.107,242,2.926,243,2.926,244,2.926,245,2.926,246,2.926,247,2.926,248,2.926,249,2.926,250,2.926,251,2.926,252,4.066,253,4.066,254,2.107,255,2.926,256,2.107,257,4.066,258,2.432,259,2.926,260,2.926,261,4.066,262,2.432,263,4.066,264,1.509,265,1.864,266,3.38,267,2.926,268,2.107,269,2.926,270,2.926,271,2.928,272,1.671,273,2.107,274,2.926,275,2.926,276,2.107,277,2.107,278,2.926,279,2.926,280,2.926,281,2.926,282,2.926,283,2.926,284,2.926]],["title/components/AppsInfoComponent.html",[0,0.017,166,0.59]],["body/components/AppsInfoComponent.html",[0,0.028,1,0.527,2,0.477,3,0.255,4,0.766,5,0.766,6,0.766,7,0.18,11,0.819,12,1.143,13,0.766,14,1.546,15,1.199,16,0.476,17,0.476,18,0.987,20,0.987,22,0.217,23,0.602,24,1.774,25,1.629,26,1.774,34,0.743,39,1.241,40,0.537,41,1.44,42,1.559,43,1.859,45,0.816,47,0.581,48,0.035,49,0.727,50,0.737,51,0.427,56,1.916,60,0.476,61,0.527,69,0.914,74,1.406,82,1.239,87,0.639,89,1.681,92,1.536,98,1.189,101,1.406,102,1.18,103,1.606,108,0.654,109,0.295,110,0.998,111,0.7,112,0.914,113,0.998,114,1.09,115,0.998,117,0.639,118,0.766,119,0.639,120,0.766,121,0.255,122,0.337,123,0.671,125,0.998,126,0.581,127,1.251,129,0.766,130,1.09,131,0.914,132,1.406,155,0.639,156,1.08,157,1.08,158,0.987,159,1.358,160,0.766,161,1.08,162,0.527,163,0.766,164,0.581,165,0.766,166,0.934,167,0.766,168,0.527,169,1.08,170,0.476,171,0.639,172,0.766,173,0.527,174,0.819,175,0.527,176,0.527,177,0.766,178,0.527,179,0.9,180,0.766,181,0.527,182,0.766,183,0.527,184,0.766,185,0.581,186,0.766,187,0.527,188,0.766,189,0.527,190,0.766,191,0.021,192,0.021,198,2.929,273,4.336,285,5.005,286,2.01,287,3.271,288,3.271,289,5.851,290,2.536,291,3.729,292,3.934,293,2.791,294,2.791,295,2.791,296,2.791,297,2.791,298,2.791,299,2.791,300,2.32,301,2.791,302,2.833,303,2.791,304,2.01,305,2.32,306,2.32,307,2.113,308,2.791,309,2.791,310,2.791,311,2.791,312,2.791,313,2.791]],["title/guards/AuthGuard.html",[314,2.252,315,2.599]],["body/guards/AuthGuard.html",[2,0.376,3,0.376,7,0.265,11,0.856,22,0.319,23,0.629,34,0.96,40,0.694,45,0.694,47,1.059,48,0.035,49,0.614,50,0.614,51,0.778,55,1.128,60,0.941,78,2.172,85,1.233,87,0.941,108,0.716,109,0.435,117,0.941,118,1.128,119,0.941,120,1.128,121,0.376,122,0.497,123,0.701,125,1.818,126,0.856,191,0.027,192,0.027,194,2.121,264,2.121,314,2.961,315,4.227,316,4.111,317,3.662,318,5.927,319,4.111,320,4.349,321,4.111,322,4.111,323,5.768,324,4.589,325,5.768,326,4.111,327,1.396,328,4.589,329,5.085,330,1.525,331,2.62,332,3.976,333,2.62,334,2.903,335,2.62,336,3.418,337,4.227,338,3.418,339,3.418,340,4.111,341,2.347,342,3.418,343,2.347,344,4.111,345,4.111,346,3.418]],["title/injectables/AuthService.html",[217,1.465,330,0.938]],["body/injectables/AuthService.html",[2,0.291,3,0.291,7,0.206,17,0.983,22,0.248,23,0.66,24,1.818,28,2.563,30,2.908,34,0.814,40,0.589,42,1.609,43,1.714,45,0.77,47,0.898,48,0.035,49,0.521,50,0.633,51,0.66,54,2.044,55,0.875,56,1.412,60,0.999,61,0.602,69,1.6,74,1.871,77,3.105,78,1.842,85,0.956,87,0.729,90,2.649,98,1.134,101,1.541,108,0.718,109,0.337,110,1.139,115,1.541,117,0.729,118,0.875,119,0.987,120,0.875,121,0.291,122,0.385,123,0.833,125,1.747,126,1.017,127,1.183,129,0.875,130,1.245,131,1.044,132,1.541,133,1.684,139,1.362,191,0.023,192,0.023,217,2.02,221,1.82,264,1.644,290,2.453,317,3.771,320,4.152,328,4.062,330,1.465,331,2.031,332,3.939,333,2.031,334,3.219,336,2.649,337,3.584,338,2.649,339,2.649,342,2.649,346,2.649,347,2.649,348,3.584,349,4.352,350,5.638,351,5.235,352,2.821,353,4.687,354,3.187,355,4.312,356,4.886,357,3.187,358,5.235,359,2.02,360,4.312,361,4.062,362,3.187,363,3.187,364,2.462,365,3.187,366,3.187,367,3.187,368,3.187,369,2.295,370,3.187,371,3.187,372,4.312,373,2.649,374,2.649,375,3.584,376,2.649,377,3.187,378,3.187,379,3.187,380,3.187,381,3.187,382,3.187,383,3.187,384,3.187,385,2.031,386,2.649,387,3.187,388,3.187,389,3.187]],["title/components/ClusterComponent.html",[0,0.017,168,0.59]],["body/components/ClusterComponent.html",[0,0.027,1,0.374,2,0.414,3,0.181,4,0.544,5,0.544,6,0.544,7,0.128,11,0.636,12,0.936,13,0.544,14,1.468,15,1.036,16,0.338,17,0.714,18,0.767,20,0.767,22,0.154,23,0.468,24,1.645,26,1.257,29,1.964,34,0.577,39,1.051,40,0.417,42,1.368,43,1.685,44,1.25,45,0.818,47,0.636,48,0.035,49,0.651,50,0.716,51,0.641,54,1.636,56,0.649,59,2.241,60,0.772,61,0.577,69,0.649,73,2.303,74,1.709,78,1.593,82,1.036,83,2.303,85,0.595,87,1.094,89,2.043,97,1.648,98,0.941,101,1.709,102,0.917,103,1.449,108,0.651,109,0.21,110,0.709,111,1.136,112,0.649,113,0.709,114,0.774,115,0.709,116,0.709,117,0.454,118,0.544,119,0.454,120,0.544,121,0.181,122,0.24,123,0.714,125,1.498,126,0.636,127,1.15,129,1.368,130,0.774,131,0.649,132,1.093,133,1.194,155,0.454,156,0.839,157,0.839,158,0.767,159,1.15,160,0.544,161,0.839,162,0.374,163,0.544,164,0.413,165,0.544,166,0.374,167,0.544,168,0.791,169,0.839,170,0.338,171,0.454,172,0.544,173,0.374,174,0.636,175,0.374,176,0.374,177,0.544,178,0.374,179,0.7,180,0.544,181,0.374,182,0.544,183,0.374,184,0.544,185,0.413,186,0.544,187,0.374,188,0.544,189,0.374,190,0.544,191,0.016,192,0.016,197,2.393,231,3.496,237,2.376,264,1.023,290,1.432,291,2.67,307,1.194,308,1.023,341,1.745,390,1.648,391,3.14,392,2.541,393,2.541,394,4.19,395,4.19,396,3.484,397,4.19,398,4.19,399,4.19,400,4.19,401,4.19,402,3.484,403,3.444,404,3.444,405,4.334,406,4.19,407,3.056,408,4.19,409,1.648,410,4.19,411,3.056,412,3.056,413,4.214,414,4.56,415,1.983,416,3.056,417,3.975,418,4.782,419,3.951,420,3.056,421,3.056,422,3.056,423,1.983,424,1.983,425,2.884,426,2.335,427,2.467,428,1.577,429,2.201,430,1.983,431,1.983,432,2.67,433,1.983,434,1.983,435,1.983,436,1.983,437,4.19,438,3.056,439,3.056,440,3.056,441,1.983,442,3.056,443,1.948,444,3.056,445,1.983,446,1.983,447,1.983,448,1.983,449,2.467,450,1.983,451,3.056,452,1.983,453,1.948,454,1.983,455,1.983,456,1.983,457,1.648,458,1.983,459,1.428,460,3.1,461,1.983,462,3.056,463,3.056,464,2.162,465,3.056,466,3.056,467,1.983,468,1.983,469,3.1,470,1.983,471,1.983,472,1.264,473,1.948,474,1.428,475,1.745,476,1.428,477,1.648,478,3.1,479,1.983,480,1.983,481,1.983,482,1.983,483,1.983,484,1.983,485,1.983,486,1.983,487,1.983,488,1.983,489,1.983,490,1.432,491,4.19,492,3.056,493,1.745,494,4.19,495,3.056,496,3.056,497,3.056,498,3.056,499,2.201,500,3.056,501,2.541,502,2.541,503,1.745,504,3.056,505,3.056,506,3.056,507,3.056,508,3.056,509,1.745]],["title/interfaces/ClusterInfo.html",[432,1.993,510,1.118]],["body/interfaces/ClusterInfo.html",[2,0.471,3,0.384,7,0.271,22,0.327,23,0.789,45,0.574,48,0.034,49,0.702,50,0.756,51,0.988,56,1.953,73,1.795,98,1.231,121,0.384,142,3.493,191,0.028,192,0.028,391,2.659,432,3.284,449,2.998,499,4.186,510,1.993,511,3.493,512,3.493,513,3.493,514,3.493,515,4.832,516,4.832,517,4.832,518,4.832,519,4.832]],["title/interfaces/ComponentMockOption.html",[510,1.118,520,1.993]],["body/interfaces/ComponentMockOption.html",[0,0.029,2,0.429,3,0.269,7,0.19,11,0.613,12,1.024,14,1.024,15,0.771,16,0.696,17,0.799,18,0.738,20,0.738,22,0.229,23,0.625,25,1.052,26,1.406,35,1.68,39,0.738,40,0.402,44,1.27,48,0.035,49,0.749,50,0.566,51,0.718,55,0.808,56,0.964,61,0.556,73,2.003,82,0.674,83,1.744,85,1.902,87,1.399,98,1.039,102,1.224,103,0.808,108,0.612,109,0.311,111,0.738,116,1.052,117,0.674,118,0.808,119,0.934,120,0.808,121,0.429,122,0.356,123,0.502,126,0.613,127,1.709,128,2.119,133,1.149,170,0.502,171,1.217,174,0.613,191,0.022,192,0.022,206,1.68,240,1.379,304,2.119,307,1.149,327,0.808,352,2.106,364,1.68,369,2.119,385,1.875,391,2.106,426,2.492,427,2.106,459,2.119,472,2.601,490,1.913,509,1.68,510,1.81,520,3.226,521,1.875,522,1.875,523,2.987,524,1.875,525,2.601,526,2.163,527,2.601,528,2.119,529,2.119,530,2.94,531,0.883,532,1.379,533,2.446,534,2.446,535,1.875,536,1.875,537,2.446,538,2.94,539,2.446,540,5.011,541,3.394,542,3.394,543,2.119,544,3.394,545,2.446,546,3.394,547,3.394,548,3.394,549,2.446,550,3.394,551,3.394,552,2.119,553,3.394,554,2.119,555,3.394,556,2.119,557,3.394,558,2.119,559,3.394,560,3.394,561,2.601,562,2.119,563,2.446,564,1.875,565,2.446,566,3.841,567,2.446,568,5.011,569,3.841,570,2.446,571,2.446,572,2.446,573,2.446,574,2.446,575,2.446,576,2.446,577,2.446,578,2.446,579,2.446,580,2.446,581,2.446,582,2.446,583,2.446,584,2.446,585,1.68,586,2.446,587,1.257,588,2.119,589,1.379,590,1.68]],["title/components/DebugPanelComponent.html",[0,0.017,170,0.533]],["body/components/DebugPanelComponent.html",[0,0.031,1,0.456,2,0.423,3,0.221,4,0.664,5,0.664,6,0.664,7,0.156,11,0.739,12,1.054,13,0.664,14,1.523,15,1.085,16,0.789,17,0.789,18,0.89,20,0.89,22,0.188,23,0.543,24,1.064,25,1.502,26,1.723,34,0.67,35,1.38,39,1.162,40,0.484,41,1.247,44,1.399,45,0.727,47,0.739,48,0.035,49,0.737,50,0.596,51,0.789,55,0.974,56,0.792,60,0.716,61,0.874,73,1.796,82,0.812,83,1.978,85,1.867,87,1.355,92,1.385,98,0.67,102,1.064,103,0.664,108,0.559,109,0.256,111,0.607,116,0.864,117,0.553,118,0.664,119,0.962,120,0.664,121,0.384,122,0.292,123,0.412,126,0.503,127,1.674,128,1.741,131,1.162,133,0.944,150,1.247,155,0.553,156,0.974,157,0.974,158,0.89,159,1.271,160,0.664,161,0.974,162,0.456,163,0.664,164,0.503,165,0.664,166,0.456,167,0.664,168,0.456,169,0.974,170,0.789,171,1.297,172,0.664,173,0.456,174,0.875,175,0.456,176,0.456,177,0.664,178,0.456,179,0.812,180,0.664,181,0.456,182,0.664,183,0.456,184,0.664,185,0.503,186,0.664,187,0.456,188,0.664,189,0.456,190,0.664,191,0.019,192,0.019,206,1.38,240,2.56,304,1.741,307,0.944,327,0.664,352,1.83,364,2.026,369,1.741,385,2.261,391,1.83,426,2.415,427,2.168,459,1.741,472,2.261,490,1.662,509,1.38,510,1.268,520,3.284,521,3.482,522,1.541,523,3.142,524,1.541,525,2.261,526,2.382,527,2.261,528,1.741,529,1.741,530,2.555,531,0.725,532,1.133,533,2.949,534,2.949,535,2.261,536,2.95,537,2.01,538,2.555,539,2.01,540,4.832,541,2.949,542,2.949,543,1.741,544,2.949,545,2.01,546,2.949,547,2.949,548,2.949,549,2.01,550,2.949,551,2.949,552,1.741,553,2.949,554,1.741,555,2.949,556,1.741,557,2.949,558,1.741,559,2.949,560,3.494,561,2.678,562,2.555,563,2.949,564,1.541,565,2.01,566,3.704,567,2.01,568,4.832,569,3.704,570,2.01,571,2.01,572,2.01,573,2.01,574,2.01,575,2.01,576,2.01,577,2.01,578,2.01,579,2.01,580,2.01,581,2.01,582,2.949,583,2.949,584,3.849,585,1.38,586,2.01,587,1.033,588,3.027,589,1.133,590,1.38,591,3.548,592,3.548,593,2.417,594,2.417,595,2.417,596,2.417,597,2.417,598,3.548,599,3.548,600,3.548]],["title/components/EditClusterComponent.html",[0,0.017,173,0.59]],["body/components/EditClusterComponent.html",[0,0.027,1,0.497,2,0.345,3,0.241,4,0.723,5,0.723,6,0.723,7,0.17,11,0.786,12,1.107,13,0.723,14,1.541,15,1.075,16,0.449,17,0.449,18,0.947,20,0.947,22,0.205,23,0.578,24,1.754,25,1.577,26,1.754,29,2.258,34,0.713,37,2.719,39,1.209,40,0.516,41,1.358,42,1.535,43,1.831,44,1.372,45,0.799,47,0.919,48,0.035,49,0.661,50,0.676,51,0.675,54,1.474,56,1.578,57,3.682,59,1.769,60,0.752,61,0.833,64,2.519,67,2.719,69,1.445,70,2.719,71,2.719,72,3.824,73,2.059,74,1.898,82,1.103,87,0.603,89,1.613,98,1.142,101,1.349,102,1.132,103,1.323,108,0.661,109,0.279,110,0.941,111,0.661,112,0.862,113,0.941,114,1.028,115,0.941,116,0.941,117,0.603,118,0.723,119,0.603,120,0.723,121,0.241,122,0.318,123,0.752,125,1.577,126,0.786,127,1.211,129,0.723,130,1.028,131,0.862,132,1.349,133,1.474,139,1.125,144,2.812,145,1.897,146,1.897,147,1.897,150,1.358,154,3.471,155,0.603,156,1.036,157,1.036,158,0.947,159,1.323,160,0.723,161,1.036,162,0.497,163,0.723,164,0.548,165,0.723,166,0.497,167,0.723,168,0.497,169,1.036,170,0.449,171,0.603,172,0.723,173,0.91,174,1.218,175,0.497,176,0.497,177,0.723,178,0.497,179,0.864,180,0.723,181,0.497,182,0.723,183,0.497,184,0.723,185,0.548,186,0.723,187,0.497,188,0.723,189,0.497,190,0.723,191,0.02,192,0.02,268,4.256,291,2.406,307,1.882,308,2.486,327,0.723,391,2.82,392,3.138,393,3.138,396,4.007,469,3.668,475,1.504,531,0.79,532,1.234,558,1.897,561,2.406,585,1.504,587,1.125,589,1.234,590,1.504,601,4.256,602,2.189,603,4.819,604,5.309,605,4.819,606,3.775,607,3.775,608,2.634,609,2.634,610,3.775,611,2.634,612,2.634,613,2.634,614,2.634,615,2.634,616,2.634,617,2.634,618,4.413,619,3.775,620,3.775,621,2.634,622,2.634,623,2.634,624,2.634]],["title/components/EditUserComponent.html",[0,0.017,175,0.59]],["body/components/EditUserComponent.html",[0,0.026,1,0.456,2,0.324,3,0.221,4,0.663,5,0.663,6,0.663,7,0.156,10,1.738,11,0.738,12,1.053,13,0.663,14,1.515,15,1.084,16,0.411,17,1.009,18,0.889,19,2.946,20,0.889,21,2.946,22,0.188,23,0.542,24,1.722,25,1.501,26,1.722,28,2.495,29,2.168,30,1.828,32,2.642,33,2.386,34,0.669,36,2.946,37,2.552,39,1.161,40,0.484,41,1.245,42,1.499,43,1.788,44,1.336,45,0.814,46,2.007,47,1.026,48,0.035,49,0.685,50,0.685,51,0.754,54,1.384,55,1.27,56,1.375,57,3.48,59,1.66,60,0.907,61,0.873,62,2.946,64,2.814,65,2.997,66,3.491,67,2.552,69,1.614,70,3.332,71,2.552,72,3.71,73,1.977,74,1.841,78,1.977,80,2.007,85,1.063,87,0.961,88,2.946,89,1.514,98,1.146,99,2.007,101,1.654,102,1.063,103,0.973,104,2.007,105,2.007,108,0.643,109,0.255,110,0.863,111,0.606,112,0.79,113,0.863,114,0.943,115,0.863,116,0.863,117,0.552,118,0.663,119,0.552,120,0.663,121,0.221,122,0.292,123,0.716,124,3.491,125,1.267,126,0.738,127,1.153,129,0.663,130,0.943,131,0.79,132,1.267,133,1.64,137,1.738,139,1.031,144,2.676,145,1.738,146,1.738,147,1.738,150,1.245,151,2.023,152,2.023,153,1.828,154,3.332,155,0.552,156,0.973,157,0.973,158,0.889,159,1.27,160,0.663,161,0.973,162,0.456,163,0.663,164,0.503,165,0.663,166,0.456,167,0.663,168,0.456,169,0.973,170,0.411,171,0.552,172,0.663,173,0.456,174,1.16,175,0.873,176,0.456,177,0.663,178,0.456,179,0.811,180,0.663,181,0.456,182,0.663,183,0.456,184,0.663,185,0.503,186,0.663,187,0.456,188,0.663,189,0.456,190,0.663,191,0.019,192,0.019,198,2.817,272,3.427,302,2.552,428,1.828,449,1.828,556,1.738,561,2.258,585,1.378,587,1.031,589,1.131,590,1.378,601,4.323,625,4.627,626,2.642,627,2.946,628,3.544,629,2.414,630,2.946,631,2.414,632,2.946,633,2.414,634,2.414,635,3.544,636,2.414,637,3.544,638,2.414,639,2.414,640,2.414,641,3.544,642,2.946,643,2.414,644,2.946]],["title/injectables/ErrorHandlerService.html",[234,1.993,330,0.938]],["body/injectables/ErrorHandlerService.html",[2,0.326,3,0.326,7,0.23,11,0.968,17,0.881,22,0.277,34,0.976,40,0.706,45,0.635,47,0.743,48,0.035,49,0.431,50,0.431,51,0.546,54,2.373,56,1.169,60,0.608,61,0.878,82,0.817,96,2.967,108,0.562,109,0.378,121,0.326,122,0.431,129,0.98,133,1.394,150,1.841,158,0.896,191,0.025,192,0.025,221,2.038,233,3.864,234,2.962,258,2.967,324,2.967,327,0.98,330,1.55,343,2.038,349,3.864,373,2.967,374,2.967,375,2.967,427,1.841,428,2.398,443,3.778,490,2.178,503,2.038,513,2.967,531,1.07,535,2.275,564,2.275,566,4.014,569,4.028,645,4.298,646,2.967,647,4.649,648,3.569,649,4.649,650,5.476,651,3.569,652,3.864,653,5.169,654,5.193,655,3.569,656,3.569,657,3.569,658,3.569,659,3.569,660,3.569,661,4.649,662,3.569,663,3.569,664,3.569,665,3.569,666,2.967,667,3.569,668,4.649,669,3.569,670,4.649,671,4.649,672,3.569,673,3.569,674,3.569,675,3.569,676,3.569,677,3.569,678,4.649,679,4.649,680,3.569,681,3.569,682,3.569,683,3.569,684,3.569,685,3.569,686,3.569,687,3.569,688,2.967,689,3.569,690,3.569,691,2.571,692,3.569,693,2.967,694,2.571,695,2.967,696,3.569,697,3.569,698,3.569,699,2.967,700,3.569,701,3.569,702,2.967,703,3.569,704,3.569,705,3.569,706,3.569,707,3.569,708,3.569,709,3.569,710,3.569,711,4.649,712,3.569,713,3.569,714,3.569,715,3.569,716,3.569,717,3.569,718,3.569,719,3.569,720,3.569]],["title/components/LoginComponent.html",[0,0.017,176,0.59]],["body/components/LoginComponent.html",[0,0.028,1,0.515,2,0.354,3,0.25,4,0.749,5,0.749,6,0.749,7,0.176,11,0.806,12,1.129,13,0.749,14,1.541,15,1.112,16,0.465,17,0.465,18,0.971,20,0.971,22,0.212,23,0.593,26,1.469,28,2.589,30,2.85,34,0.731,39,1.229,40,0.529,45,0.771,47,0.568,48,0.035,49,0.544,50,0.625,51,0.418,54,1.512,55,0.749,57,2.467,58,2.788,59,1.814,60,0.767,61,0.85,69,1.268,74,1.384,77,3.241,78,1.923,82,0.624,85,1.161,87,0.624,92,1.065,93,2.467,94,3.218,98,0.925,101,1.92,102,0.818,108,0.668,109,0.289,111,0.685,112,0.893,121,0.25,122,0.33,123,0.835,126,0.806,129,1.344,139,1.166,151,1.558,152,1.558,153,1.407,155,0.624,156,1.063,157,1.063,158,0.971,159,1.344,160,0.749,161,1.063,162,0.515,163,0.749,164,0.568,165,0.749,166,0.515,167,0.749,168,0.515,169,1.063,170,0.66,171,1.229,172,0.749,173,0.515,174,0.806,175,0.515,176,0.925,177,0.749,178,0.515,179,1.121,180,0.749,181,0.515,182,0.749,183,0.515,184,0.749,185,0.568,186,0.749,187,0.515,188,0.749,189,0.515,190,0.749,191,0.021,192,0.021,197,2.796,200,3.121,202,2.867,217,2.589,240,1.278,241,1.965,254,1.965,256,1.965,264,1.407,290,2.295,307,1.512,317,1.965,320,3.979,332,3.241,333,1.739,334,2.569,352,3.004,359,1.814,361,3.218,376,2.268,386,4.071,443,2.867,449,1.997,453,2.467,472,2.467,490,1.278,503,2.796,523,3.121,564,1.739,566,2.867,569,2.867,587,1.654,691,2.788,721,2.268,722,3.871,723,3.871,724,4.897,725,4.897,726,4.897,727,4.897,728,4.071,729,2.728,730,5.372,731,3.871,732,2.728,733,2.728,734,3.871,735,1.997,736,3.871,737,3.218,738,3.871,739,3.218,740,2.728,741,3.527,742,2.467,743,2.728,744,4.897,745,2.728,746,3.218,747,2.728,748,2.728,749,2.728,750,3.871,751,2.728,752,2.728,753,4.5,754,4.5,755,2.728,756,2.728,757,2.728,758,2.728,759,2.728,760,4.897,761,2.467,762,2.728,763,1.965,764,2.268,765,1.965,766,1.965,767,2.268,768,2.788,769,3.871,770,3.871,771,3.871]],["title/components/MainComponent.html",[0,0.017,178,0.59]],["body/components/MainComponent.html",[0,0.032,1,0.763,2,0.46,3,0.369,4,1.109,5,1.109,6,1.109,7,0.261,11,1.047,12,1.374,13,1.109,14,1.613,15,1.173,16,0.689,17,0.689,18,1.262,20,1.262,22,0.314,34,0.95,39,1.438,40,0.748,45,0.687,48,0.035,49,0.608,60,0.689,61,0.763,108,0.488,109,0.428,121,0.369,122,0.488,155,0.925,156,1.381,157,1.381,158,1.262,159,1.573,160,1.109,161,1.381,162,0.763,163,1.109,164,0.841,165,1.109,166,0.763,167,1.109,168,0.763,169,1.381,170,0.689,171,0.925,172,1.109,173,0.763,174,1.047,175,0.763,176,0.763,177,1.109,178,1.082,179,1.312,180,1.109,181,0.763,182,1.109,183,0.763,184,1.109,185,0.841,186,1.109,187,0.763,188,1.109,189,0.763,190,1.109,191,0.027,192,0.027,327,1.109,531,1.212,532,1.893,772,3.359,773,5.03,774,5.03,775,5.03,776,4.04,777,4.04]],["title/interfaces/Notification.html",[510,1.118,526,1.336]],["body/interfaces/Notification.html",[2,0.359,3,0.359,7,0.253,16,0.668,22,0.42,23,0.756,40,0.535,44,0.983,48,0.035,50,0.74,51,0.927,60,0.921,92,1.531,98,1.167,103,1.557,108,0.474,109,0.415,121,0.451,122,0.474,123,0.668,126,1.028,191,0.027,192,0.027,194,2.022,327,1.076,330,1.48,335,2.498,341,2.238,343,2.238,359,1.837,413,3.891,426,1.837,464,2.022,493,2.818,510,1.764,526,2.497,531,1.176,587,2.423,589,2.657,735,2.022,778,2.823,779,3.259,780,4.103,781,3.259,782,3.259,783,2.823,784,2.823,785,2.823,786,2.823,787,2.823,788,3.259,789,3.259,790,3.259,791,4.103,792,3.259,793,3.259,794,3.259,795,3.259,796,3.259,797,3.259,798,3.259,799,3.259,800,3.259,801,3.259,802,4.103,803,2.823,804,3.259,805,4.491,806,3.259,807,2.823,808,3.259,809,3.259,810,3.259,811,3.259,812,3.259]],["title/components/NotificationsComponent.html",[0,0.017,181,0.59]],["body/components/NotificationsComponent.html",[0,0.029,1,0.604,2,0.479,3,0.292,4,0.878,5,0.878,6,0.878,7,0.206,11,0.9,12,1.228,13,0.878,14,1.571,15,1.145,16,0.545,17,0.545,18,1.084,20,1.084,22,0.248,23,0.661,24,1.833,25,1.75,34,0.816,39,1.315,40,0.59,42,1.611,43,1.889,44,1.447,45,0.771,47,0.9,48,0.035,49,0.633,50,0.633,51,0.864,58,3.775,60,0.736,61,0.924,82,0.732,83,1.366,87,1.12,92,1.687,108,0.682,109,0.338,110,1.143,113,1.143,114,1.249,115,1.143,116,1.143,117,0.732,118,0.878,119,0.732,120,0.878,121,0.292,122,0.386,123,0.834,126,0.666,127,1.186,131,1.415,132,1.545,155,0.732,156,1.186,157,1.186,158,1.084,159,1.439,160,0.878,161,1.186,162,0.604,163,0.878,164,0.666,165,0.878,166,0.604,167,0.878,168,0.604,169,1.186,170,0.545,171,0.732,172,0.878,173,0.604,174,0.9,175,0.604,176,0.604,177,0.878,178,0.604,179,0.989,180,0.878,181,0.99,182,0.878,183,0.604,184,0.878,185,0.666,186,0.878,187,0.604,188,0.878,189,0.604,190,0.878,191,0.023,192,0.023,327,0.878,343,2.993,348,3.592,364,2.467,464,2.229,477,3.592,526,2.507,531,0.959,535,2.753,536,2.753,538,2.303,652,3.592,735,2.229,783,3.112,784,3.112,785,3.944,786,4.226,787,3.112,803,2.303,813,2.658,814,4.321,815,4.321,816,3.197,817,4.321,818,3.197,819,3.197,820,3.197,821,2.658,822,3.197,823,2.658,824,2.658,825,3.197,826,3.197,827,3.197,828,3.197,829,4.321,830,4.321,831,4.321]],["title/injectables/NotificationsService.html",[44,0.785,330,0.938]],["body/injectables/NotificationsService.html",[2,0.34,3,0.34,7,0.239,16,0.948,22,0.409,23,0.73,34,0.9,40,0.719,44,1.197,45,0.803,47,0.993,48,0.035,49,0.576,50,0.637,51,0.851,60,1.003,61,0.9,92,1.862,98,0.995,103,1.019,108,0.449,109,0.393,121,0.436,122,0.449,123,0.898,126,0.993,191,0.026,192,0.026,194,1.916,327,1.019,330,1.58,335,2.366,341,2.723,343,2.723,359,1.74,413,2.675,426,2.235,464,1.916,493,2.723,510,1.328,526,2.616,531,1.114,587,1.587,589,1.74,735,2.46,778,2.675,779,4.621,780,3.965,781,3.965,782,3.087,783,4.004,784,3.435,785,3.435,786,3.435,787,3.435,788,3.087,789,3.087,790,3.087,791,4.621,792,3.965,793,3.965,794,3.965,795,3.965,796,4.621,797,3.087,798,3.087,799,3.087,800,3.087,801,3.087,802,3.965,803,2.675,804,3.087,805,4.38,806,3.087,807,2.675,808,3.087,809,3.087,810,3.087,811,3.087,812,3.087,821,3.087,832,4.769,833,4.769,834,3.714,835,3.714,836,3.714,837,3.714,838,3.714,839,3.714]],["title/components/OrganizationComponent.html",[0,0.017,183,0.59]],["body/components/OrganizationComponent.html",[0,0.031,1,0.622,2,0.485,3,0.2,4,0.6,5,0.6,6,0.6,7,0.141,9,1.394,11,0.686,12,0.994,13,0.6,14,1.501,15,1.025,16,0.904,17,1.067,18,0.826,20,0.826,22,0.17,23,0.504,24,1.685,26,1.322,28,1.543,29,2.328,32,1.881,33,1.128,34,0.622,35,2.517,39,1.106,40,0.45,42,1.456,43,1.737,44,1.294,45,0.786,47,0.825,48,0.035,49,0.656,50,0.668,51,0.606,54,1.547,55,0.904,59,1.543,60,0.806,61,0.893,64,1.881,65,2.043,69,1.548,74,1.576,78,1.692,82,0.501,84,2.853,85,1.322,86,2.853,87,0.754,89,1.407,92,1.547,93,3.166,98,1.075,101,1.897,102,1.49,103,0.904,108,0.679,109,0.231,110,0.782,111,0.549,112,0.716,113,0.782,114,0.854,115,0.782,116,0.782,117,0.501,118,0.6,119,0.501,120,0.6,121,0.2,122,0.264,123,0.806,125,1.576,126,0.985,127,1.087,129,0.6,130,0.854,131,0.716,132,1.177,139,1.692,141,3.665,155,0.501,156,0.904,157,0.904,158,0.826,159,1.21,160,0.6,161,0.904,162,0.413,163,0.6,164,0.455,165,0.6,166,0.413,167,0.6,168,0.413,169,0.904,170,0.373,171,0.501,172,0.6,173,0.413,174,1.105,175,0.622,176,0.413,177,0.6,178,0.413,179,0.754,180,0.6,181,0.413,182,0.6,183,0.832,184,0.6,185,0.455,186,0.6,187,0.413,188,0.6,189,0.622,190,0.6,191,0.021,192,0.018,197,2.517,198,1.128,199,1.818,200,2.809,202,2.099,218,2.065,265,1.394,266,1.818,271,2.372,272,1.249,276,1.575,277,1.575,290,1.543,307,1.547,308,1.128,327,0.6,402,3.665,425,3.013,426,2.215,427,1.699,428,1.699,429,2.372,449,1.699,453,2.099,460,3.293,464,1.699,473,2.099,474,1.575,475,2.7,476,1.575,501,2.738,509,1.881,531,0.656,532,1.025,543,1.575,626,1.881,735,1.699,741,3.578,742,3.166,763,2.853,765,2.853,766,2.853,840,1.818,841,3.294,842,3.294,843,4.411,844,4.969,845,2.738,846,3.294,847,4.408,848,3.293,849,3.294,850,2.187,851,2.187,852,3.294,853,2.187,854,3.294,855,2.187,856,2.187,857,2.187,858,2.187,859,2.187,860,5.429,861,2.187,862,2.187,863,2.187,864,4.408,865,2.187,866,3.961,867,4.408,868,2.187,869,1.818,870,4.408,871,2.187,872,3.294,873,3.294,874,4.13,875,2.187,876,4.408,877,4.408,878,2.187,879,3.293,880,1.818,881,2.187,882,2.187,883,3.294,884,3.294,885,3.294,886,2.372,887,3.294,888,3.294,889,3.294]],["title/components/SidebarComponent.html",[0,0.017,187,0.59]],["body/components/SidebarComponent.html",[0,0.028,1,0.451,2,0.421,3,0.218,4,0.655,5,0.655,6,0.655,7,0.154,11,0.732,12,1.047,13,0.655,14,1.52,15,1.082,16,0.407,17,0.947,18,0.882,20,0.882,22,0.185,23,0.538,24,1.718,26,1.38,28,2.551,29,2.486,32,1.363,33,1.231,34,0.664,39,1.155,40,0.48,42,1.456,43,1.783,45,0.8,47,0.732,48,0.035,49,0.7,50,0.658,51,0.538,54,1.373,60,0.836,61,0.926,65,2.808,69,0.782,74,1.645,82,0.955,84,1.719,85,0.716,86,1.719,87,0.546,89,1.966,92,1.373,93,3.27,98,1.138,101,1.946,102,1.054,103,0.965,108,0.683,109,0.253,110,0.853,111,0.599,112,0.782,113,0.853,114,0.932,115,0.853,117,0.546,118,0.655,119,0.546,120,0.655,121,0.218,122,0.288,123,0.711,125,1.754,126,0.958,127,1.145,129,0.655,130,0.932,131,0.782,132,1.256,139,1.02,155,0.546,156,0.965,157,0.965,158,0.882,159,1.263,160,0.655,161,0.965,162,0.451,163,0.655,164,0.497,165,0.655,166,0.451,167,0.655,168,0.451,169,0.965,170,0.599,171,1.174,172,0.655,173,0.451,174,1.068,175,0.664,176,0.451,177,0.655,178,0.451,179,1.174,180,0.655,181,0.451,182,0.655,183,0.451,184,0.655,185,0.497,186,0.655,187,0.869,188,0.655,189,0.451,190,0.655,191,0.019,192,0.019,197,2.628,198,1.231,200,2.933,202,2.658,217,2.156,218,2.156,240,1.119,241,1.719,256,1.719,271,1.719,272,1.363,276,1.719,277,1.719,290,1.647,306,3.468,307,1.629,308,2.152,327,0.655,352,1.813,353,4.266,409,1.984,425,2.933,428,1.813,429,2.531,453,2.24,473,2.24,474,1.719,475,2.007,476,1.719,490,1.647,503,2.007,523,2.933,525,3.126,527,2.933,531,0.716,532,1.119,552,1.719,626,3.31,688,2.922,728,3.826,737,3.468,741,3.695,742,3.27,761,2.24,763,2.531,764,1.984,765,2.531,766,2.531,767,1.984,823,1.984,824,1.984,845,3.826,848,3.468,869,1.984,874,2.922,879,1.984,880,1.984,890,1.984,891,3.515,892,3.515,893,3.515,894,3.515,895,2.387,896,3.515,897,3.515,898,2.387,899,2.387,900,2.387,901,3.515,902,2.387,903,2.387,904,2.387,905,2.387,906,2.387,907,2.387,908,2.387,909,3.468,910,4.172,911,2.387,912,3.515,913,2.387,914,2.387,915,2.387,916,2.387,917,2.387,918,2.387,919,2.922,920,3.515,921,3.515]],["title/injectables/UpdateEventsService.html",[218,1.465,330,0.938]],["body/injectables/UpdateEventsService.html",[2,0.427,3,0.427,7,0.301,22,0.363,23,0.84,40,0.796,45,0.75,48,0.035,55,1.507,82,1.068,83,1.994,108,0.663,109,0.494,121,0.427,122,0.564,191,0.029,192,0.029,194,2.408,218,2.572,330,1.749,331,2.975,335,2.975,922,4.848,923,3.88,924,6.02,925,5.49,926,5.832]],["title/components/UserInfoComponent.html",[0,0.017,189,0.59]],["body/components/UserInfoComponent.html",[0,0.027,1,0.458,2,0.452,3,0.222,4,0.666,5,0.666,6,0.666,7,0.157,11,0.741,12,1.057,13,0.666,14,1.524,15,1.054,16,0.414,17,1.049,18,0.893,20,0.893,22,0.189,23,0.545,24,1.725,25,1.506,26,1.725,29,2.174,30,2.662,32,2.649,34,0.672,39,1.164,40,0.486,41,1.252,42,1.501,43,1.791,44,1.338,45,0.815,47,0.741,48,0.035,49,0.661,50,0.695,51,0.545,55,0.666,60,0.88,61,0.795,65,2.926,69,1.379,74,1.272,78,1.037,82,0.814,85,0.728,87,0.814,89,1.52,98,1.173,101,1.272,102,1.067,103,0.977,108,0.661,109,0.257,110,0.868,111,0.609,113,0.868,114,0.948,115,0.868,116,0.868,117,0.556,118,0.666,119,0.556,120,0.666,121,0.222,122,0.293,123,0.718,125,1.766,126,0.505,127,1.156,129,0.666,130,0.948,131,0.795,132,1.272,133,0.948,139,1.52,144,2.267,150,1.252,151,2.032,152,2.032,153,1.835,155,0.556,156,0.977,157,0.977,158,0.893,159,1.273,160,0.666,161,0.977,162,0.458,163,0.666,164,0.505,165,0.666,166,0.458,167,0.666,168,0.458,169,0.977,170,0.414,171,0.556,172,0.666,173,0.458,174,0.966,175,0.458,176,0.458,177,0.666,178,0.458,179,0.814,180,0.666,181,0.458,182,0.666,183,0.458,184,0.666,185,0.505,186,0.666,187,0.458,188,0.666,189,0.876,190,0.666,191,0.019,192,0.019,198,2.821,206,1.386,265,3.828,286,1.748,287,2.958,288,2.958,300,2.018,302,2.563,305,2.018,307,1.39,308,1.835,327,0.666,428,1.835,457,2.018,475,2.032,531,0.728,532,1.137,554,1.748,562,2.563,585,2.032,587,1.52,589,1.667,590,2.032,626,2.82,627,2.958,630,2.958,632,2.958,642,4.291,644,2.018,735,2.393,843,3.856,909,2.018,919,2.958,927,4.994,928,5.162,929,5.162,930,4.639,931,4.639,932,3.558,933,2.427,934,2.427,935,4.639,936,4.639,937,5.333,938,2.427,939,2.427,940,4.939,941,2.427,942,2.427,943,2.427,944,4.639,945,4.639,946,2.427,947,2.427,948,2.427,949,2.427,950,2.427,951,3.558,952,1.748,953,1.748,954,2.427,955,2.427,956,2.427,957,2.427,958,2.427]],["title/coverage.html",[959,3.538]],["body/coverage.html",[0,0.034,1,0.624,7,0.213,8,2.748,9,2.106,10,3.182,24,0.991,33,1.705,42,0.907,43,1.082,44,0.829,48,0.035,50,0.399,55,0.907,117,0.756,119,0.756,162,0.624,164,0.688,166,0.624,168,0.624,170,0.563,173,0.624,175,0.624,176,0.624,178,0.624,181,0.624,183,0.624,185,0.688,187,0.624,189,0.624,191,0.024,192,0.024,193,2.748,217,1.549,218,1.549,234,2.106,237,2.106,240,2.332,265,2.106,268,2.38,272,1.887,273,2.38,285,2.748,286,3.182,330,1.709,347,2.748,359,2.07,390,2.748,403,2.38,404,2.38,432,2.106,464,3.188,510,1.899,511,2.748,512,2.748,520,2.106,521,3.172,522,3.172,524,2.106,526,1.412,601,3.182,602,2.748,645,2.748,646,2.748,721,2.748,772,2.748,778,3.182,813,2.748,840,2.748,890,2.748,922,2.748,923,2.748,927,2.748,952,2.38,953,2.38,959,2.748,960,2.748,961,3.305,962,3.305,963,3.305,964,3.305,965,3.305,966,2.748,967,4.577,968,5.912,969,3.305,970,5.538,971,3.305,972,2.748,973,3.305,974,3.305,975,3.305,976,3.305,977,3.305,978,4.977,979,4.418,980,2.748,981,2.748,982,2.748,983,2.748,984,5.188,985,6.24,986,3.305,987,3.305,988,2.748,989,3.305,990,3.305,991,4.418,992,2.748,993,3.305,994,4.418,995,3.305,996,3.305,997,4.418,998,4.418,999,3.305,1000,3.305,1001,3.305,1002,3.305,1003,3.673,1004,3.305,1005,3.305,1006,2.748,1007,3.305,1008,3.305,1009,3.305,1010,3.305,1011,3.305,1012,3.305,1013,5.164,1014,2.748,1015,2.748,1016,2.748,1017,2.748,1018,2.748,1019,2.748,1020,2.748,1021,2.748,1022,2.748,1023,2.748,1024,3.182,1025,3.182,1026,3.673,1027,3.182,1028,3.305,1029,3.305]],["title/dependencies.html",[209,2.395,1030,2.175]],["body/dependencies.html",[48,0.035,109,0.477,111,1.131,112,1.761,191,0.029,192,0.029,209,2.873,225,4.471,226,3.873,230,3.748,231,2.873,254,3.247,262,3.748,264,2.325,331,2.873,333,2.873,334,3.071,1031,4.508,1032,6.327,1033,4.508,1034,4.508,1035,4.508,1036,4.508,1037,4.508,1038,4.508,1039,4.508,1040,4.508,1041,5.378,1042,4.508,1043,4.508,1044,4.508,1045,4.508,1046,4.508,1047,4.508,1048,4.508,1049,4.508,1050,4.508,1051,4.508,1052,4.508,1053,5.378,1054,4.508,1055,4.508,1056,4.508]],["title/miscellaneous/functions.html",[359,1.761,1057,1.668]],["body/miscellaneous/functions.html",[22,0.386,48,0.031,191,0.031,192,0.031,359,2.327,1024,3.577,1025,4.54,1027,3.577,1057,3.164,1058,4.128,1059,4.128]],["title/index.html",[22,0.203,886,1.885,1060,2.175]],["body/index.html",[0,0.03,3,0.388,7,0.273,15,0.8,48,0.028,49,0.512,55,1.163,64,2.958,69,1.388,129,1.163,153,2.186,179,1.186,191,0.028,192,0.028,221,2.42,341,3.328,405,3.052,419,4.436,425,3.301,427,2.186,588,4.03,654,4.652,694,3.052,739,3.523,960,4.846,1030,3.523,1061,3.523,1062,4.238,1063,5.595,1064,4.238,1065,5.829,1066,4.238,1067,5.595,1068,4.238,1069,5.18,1070,4.238,1071,4.238,1072,5.18,1073,5.18,1074,6.083,1075,5.18,1076,4.238,1077,4.238,1078,4.238,1079,4.238,1080,4.238,1081,4.238,1082,4.238,1083,4.846,1084,4.238,1085,5.978,1086,4.238,1087,4.238,1088,4.238,1089,4.238,1090,3.523,1091,5.18,1092,4.238,1093,4.238,1094,4.238,1095,5.18,1096,4.238,1097,4.238,1098,4.238,1099,3.523,1100,4.238,1101,4.238,1102,4.238,1103,4.238,1104,5.595,1105,4.238,1106,4.238,1107,4.238]],["title/license.html",[886,1.885,1060,2.175,1108,2.175]],["body/license.html",[7,0.304,48,0.03,129,1.293,179,1.078,191,0.03,192,0.03,699,3.917,761,3.002,1083,3.917,1099,3.917,1108,5.266,1109,4.711,1110,4.711,1111,5.854,1112,4.711,1113,4.711,1114,4.711,1115,4.711,1116,4.711,1117,4.711,1118,4.711,1119,4.711,1120,4.711,1121,4.711,1122,4.711,1123,4.711,1124,5.52,1125,4.711,1126,4.711,1127,4.711,1128,4.711,1129,4.711,1130,4.711,1131,4.711,1132,4.711,1133,4.711,1134,4.711,1135,4.711,1136,4.711]],["title/modules.html",[207,2.43]],["body/modules.html",[48,0.031,191,0.031,192,0.031,207,2.868,208,3.201,226,3.618,702,4.176,1137,5.023,1138,5.023]],["title/overview.html",[1139,3.538]],["body/overview.html",[0,0.022,1,1.037,42,1.507,48,0.035,112,1.33,121,0.371,155,0.93,162,1.152,164,1.143,166,1.037,168,1.037,170,0.936,173,1.037,175,1.037,176,1.152,178,1.037,181,1.037,183,1.037,185,1.143,187,1.037,189,1.037,191,0.027,192,0.027,207,2.882,208,4.179,209,2.588,210,3.377,211,3.377,212,3.377,213,3.377,214,3.377,215,3.377,216,3.377,217,2.573,218,2.573,219,4.196,220,3.377,221,2.319,314,2.925,330,1.218,493,2.882,510,1.452,768,2.925,1139,3.377,1140,3.377,1141,3.377]],["title/miscellaneous/variables.html",[967,2.706,1057,1.668]],["body/miscellaneous/variables.html",[2,0.19,15,0.845,16,0.21,17,0.604,22,0.096,25,0.744,27,3.573,28,1.917,30,0.636,33,1.393,35,0.704,45,0.168,48,0.035,49,0.751,50,0.66,55,0.339,56,1.876,59,0.578,65,0.636,73,2.166,82,1.261,83,2.558,85,0.37,87,0.477,98,0.393,102,0.81,103,1.228,117,0.618,119,0.88,123,0.697,127,1.391,137,2.946,151,2.555,152,1.189,153,1.074,174,0.257,191,0.011,192,0.011,194,1.637,231,1.327,237,1.721,240,0.578,290,2.284,291,2.852,327,0.339,334,1.189,352,1.074,364,0.704,385,0.786,391,2.73,403,1.945,404,1.945,405,2.285,414,1.026,417,1.026,419,4.147,426,1.801,443,2.258,449,2.817,473,0.786,478,1.026,490,1.266,493,1.542,499,3.428,502,3.72,503,2.784,509,1.189,514,2.245,515,3.846,516,3.846,517,4.451,518,3.846,519,3.956,521,0.786,522,1.327,524,1.721,525,1.327,526,0.89,527,1.327,528,0.889,529,0.889,530,1.5,531,0.37,536,0.786,626,0.704,666,1.026,691,0.889,693,1.026,694,0.889,695,1.026,742,0.786,746,2.637,761,1.327,768,0.889,807,1.5,952,1.945,953,1.945,966,1.026,967,0.889,972,2.245,980,1.026,981,1.731,982,1.026,983,1.731,984,2.946,988,4.138,992,1.731,1003,1.026,1006,2.245,1013,1.026,1014,2.245,1015,2.245,1016,2.245,1017,2.245,1018,2.245,1019,2.245,1020,2.245,1021,2.245,1022,2.245,1023,2.245,1024,0.889,1025,0.889,1026,3.401,1027,0.889,1057,0.786,1058,1.026,1059,1.026,1061,1.731,1090,1.731,1140,1.026,1141,2.245,1142,1.234,1143,1.234,1144,1.234,1145,5.069,1146,1.234,1147,1.234,1148,1.234,1149,1.234,1150,2.082,1151,2.082,1152,1.234,1153,1.234,1154,1.234,1155,1.234,1156,1.234,1157,1.234,1158,1.234,1159,1.234,1160,1.234,1161,1.234,1162,1.234,1163,1.234,1164,1.234,1165,1.234,1166,1.234,1167,1.234,1168,1.234,1169,1.234,1170,1.234,1171,1.234,1172,1.234,1173,1.234,1174,1.234,1175,1.234,1176,1.234,1177,1.234,1178,1.234,1179,1.234,1180,1.234,1181,2.082,1182,2.082,1183,2.082,1184,5.069,1185,2.082,1186,5.069,1187,2.082,1188,2.082,1189,2.082,1190,2.082,1191,2.082,1192,3.544,1193,2.082,1194,2.082,1195,2.082,1196,2.082,1197,1.234,1198,2.082,1199,3.544,1200,3.173,1201,2.082,1202,2.082,1203,1.234,1204,3.173,1205,5.698,1206,5.698,1207,5.698,1208,5.698,1209,5.698,1210,5.698,1211,5.354,1212,3.173,1213,4.875,1214,2.082,1215,2.082,1216,3.173,1217,3.173,1218,4.875,1219,3.173,1220,4.875,1221,3.173,1222,4.875,1223,4.298,1224,4.298,1225,4.298,1226,4.298,1227,4.298,1228,4.298,1229,4.298,1230,4.298,1231,4.298,1232,4.298,1233,3.173,1234,3.173,1235,1.234,1236,1.234,1237,3.173,1238,4.875,1239,3.173,1240,3.173,1241,3.173,1242,3.173,1243,3.173,1244,3.173,1245,3.173,1246,3.173,1247,3.173,1248,3.173,1249,3.173,1250,2.082,1251,3.173,1252,1.234,1253,1.234,1254,3.173,1255,3.173,1256,2.701,1257,3.173,1258,3.173,1259,3.173,1260,1.234,1261,2.082,1262,3.173,1263,3.173,1264,4.298,1265,3.173,1266,3.173,1267,3.173,1268,3.173,1269,3.173,1270,3.173,1271,3.173,1272,3.173,1273,3.173,1274,3.173,1275,3.173,1276,3.173,1277,4.298,1278,3.173,1279,2.082,1280,2.082,1281,1.234,1282,1.234,1283,1.234,1284,2.082,1285,1.234,1286,1.234,1287,2.082,1288,3.173,1289,2.082,1290,2.082,1291,1.234,1292,1.234,1293,1.234,1294,2.082,1295,1.234,1296,1.234,1297,2.082,1298,3.173,1299,3.844,1300,1.234,1301,1.234,1302,1.234,1303,2.082,1304,1.234,1305,1.234,1306,2.082,1307,2.082,1308,1.234,1309,1.234,1310,5.81,1311,4.759,1312,5.41,1313,1.234,1314,1.234,1315,1.234,1316,1.234,1317,1.234,1318,2.082,1319,1.234,1320,2.082,1321,1.234,1322,1.234,1323,2.082,1324,1.234,1325,1.234,1326,2.082,1327,1.234,1328,1.234,1329,1.234,1330,1.234,1331,1.234,1332,1.234,1333,1.234,1334,1.234,1335,1.234,1336,1.234,1337,1.234,1338,1.234,1339,3.173,1340,1.234,1341,1.234,1342,2.082,1343,1.234,1344,1.234,1345,1.234,1346,1.234,1347,1.234,1348,1.234,1349,1.234,1350,2.082,1351,1.234,1352,1.234,1353,1.234,1354,1.234,1355,2.082,1356,1.234,1357,1.234,1358,1.234,1359,1.234,1360,1.234,1361,1.234,1362,1.234,1363,1.234,1364,1.234,1365,1.234,1366,1.234,1367,1.234,1368,1.234,1369,1.234,1370,1.234,1371,2.082,1372,1.234,1373,1.234,1374,1.234]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":464,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0\">email",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.8.26",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":442,"title":{},"body":{"components/ClusterComponent.html":{}}}],["00ff00",{"_index":444,"title":{},"body":{"components/ClusterComponent.html":{}}}],["0800200c9a61",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a62",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a63",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a64",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a65",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a66",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a67",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a68",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a69",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0800200c9a70",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0937ff",{"_index":439,"title":{},"body":{"components/ClusterComponent.html":{}}}],["0x3",{"_index":810,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":811,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":493,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100.022.0125",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0126",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0127",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0128",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100.022.0129",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10000",{"_index":590,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["12312",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1234",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14/22",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1140,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":807,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["16/20",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["16143613421",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16143613422",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/34",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["18/23",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["18/36",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["1h",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0",{"_index":1113,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1119,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":656,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["201",{"_index":659,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1110,"title":{},"body":{"license.html":{}}}],["23",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["23422",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2h",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":662,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["31404/v1",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3h",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1141,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.3",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":667,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":673,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":676,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":682,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":686,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["4300",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4798",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4h",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xxx",{"_index":799,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":701,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":704,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":709,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":716,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["57",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["5h",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.1.10",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6h",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7/16",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["79",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7ad1a7a8",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8/14",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["9071",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["949494",{"_index":440,"title":{},"body":{"components/ClusterComponent.html":{}}}],["96",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_notif",{"_index":779,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["access",{"_index":678,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["access_nam",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessor",{"_index":832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":706,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":945,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedrout",{"_index":410,"title":{},"body":{"components/ClusterComponent.html":{}}}],["activatedroutesnapshot",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":887,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["add(notificationinst",{"_index":781,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["add_user_mock",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["address",{"_index":691,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["addus",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["adduser(form",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addusercompon",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addusermock",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agre",{"_index":1121,"title":{},"body":{"license.html":{}}}],["alert",{"_index":785,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert.messag",{"_index":831,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":453,"title":{},"body":{"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":1065,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anonym",{"_index":420,"title":{},"body":{"components/ClusterComponent.html":{}}}],["apach",{"_index":1112,"title":{},"body":{"license.html":{}}}],["api",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_url",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["app_descriptor_id",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_descriptor_id_2",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_descriptor_id_3",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_descriptor_id_4",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_descriptor_id_5",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_instance_id",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_instance_id_2",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_instance_id_3",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_instance_id_4",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_instance_id_5",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcompon",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applications'},{'nam",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications/applications.compon",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":208,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps_mock",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appsinfocompon",{"_index":166,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appsmock",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":421,"title":{},"body":{"components/ClusterComponent.html":{}}}],["artifact",{"_index":1086,"title":{},"body":{"index.html":{}}}],["assest",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["asset",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":451,"title":{},"body":{"components/ClusterComponent.html":{}}}],["auth",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["auth_servic",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_service1",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_service2",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_service3",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":315,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":217,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autom",{"_index":1098,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1079,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":394,"title":{},"body":{"components/ClusterComponent.html":{}}}],["avail",{"_index":427,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":524,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablecomponents.addus",{"_index":559,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":547,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":546,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":557,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":541,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":550,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":542,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":548,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":544,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":551,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":555,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":553,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["backdrop",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["backend",{"_index":24,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["backendservic",{"_index":42,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1125,"title":{},"body":{"license.html":{}}}],["befor",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["bitwis",{"_index":804,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["boolean",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":569,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1138,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["build",{"_index":1085,"title":{},"body":{"index.html":{}}}],["button",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":928,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonressetpassword",{"_index":929,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":632,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":802,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/ClusterComponent.html":{}}}],["carouselmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":566,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["cassandra",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["celia",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["changerol",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changesonuserlist",{"_index":924,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ClusterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkuserrol",{"_index":627,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":630,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":829,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":501,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["clean",{"_index":896,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1067,"title":{},"body":{"index.html":{}}}],["click",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["clone",{"_index":1070,"title":{},"body":{"index.html":{}}}],["close",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["cluster",{"_index":391,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'nam",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":393,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":392,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":602,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":612,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":617,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":615,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":616,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":614,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":607,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":613,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":609,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":611,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:77",{"_index":608,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster1",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster10",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster2",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster3",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster4",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster5",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster6",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster7",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster8",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster9",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_edit_mock",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_id",{"_index":515,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["cluster_mock",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_typ",{"_index":516,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["clustercompon",{"_index":168,"title":{"components/ClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdata",{"_index":395,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.cluster_id",{"_index":496,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.cluster_typ",{"_index":497,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.label",{"_index":498,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.multiten",{"_index":500,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.nam",{"_index":491,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.running_nod",{"_index":494,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.statu",{"_index":492,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdata.total_nod",{"_index":495,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusterdescript",{"_index":603,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustereditmock",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterid",{"_index":396,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["clusterinfo",{"_index":432,"title":{"interfaces/ClusterInfo.html":{}},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["clustermock",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusternam",{"_index":604,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterscount",{"_index":397,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clustertag",{"_index":605,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1081,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":398,"title":{},"body":{"components/ClusterComponent.html":{}}}],["command",{"_index":1066,"title":{},"body":{"index.html":{}}}],["commun",{"_index":714,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":684,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1115,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1095,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":520,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":568,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":565,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":699,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":289,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["configuration_opt",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":936,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["conflict",{"_index":685,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":668,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":683,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":660,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":677,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":713,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":687,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":696,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":663,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":679,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":657,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":581,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":674,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(summari",{"_index":481,"title":{},"body":{"components/ClusterComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":409,"title":{},"body":{"components/ClusterComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":41,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":816,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["control",{"_index":598,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["convert",{"_index":471,"title":{},"body":{"components/ClusterComponent.html":{}}}],["copi",{"_index":1117,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1109,"title":{},"body":{"license.html":{}}}],["core",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":437,"title":{},"body":{"components/ClusterComponent.html":{}}}],["coverag",{"_index":959,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ClusterInfo.html":{}}}],["credenti",{"_index":503,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":428,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["customcolor",{"_index":399,"title":{},"body":{"components/ClusterComponent.html":{}}}],["dashboard",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["databas",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dave",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["davesmith@mail.com",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":170,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["definitions/const/loc",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/clust",{"_index":458,"title":{},"body":{"components/ClusterComponent.html":{}}}],["delet",{"_index":937,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":930,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["depend",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy_aft",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descript",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["design",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["detail",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":1076,"title":{},"body":{"index.html":{}}}],["develop",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["device_group",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_group1",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_group2",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_group3",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":302,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1084,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1073,"title":{},"body":{"index.html":{}}}],["discard",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":786,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":821,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":582,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1087,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1124,"title":{},"body":{"license.html":{}}}],["dn",{"_index":921,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":960,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":438,"title":{},"body":{"components/ClusterComponent.html":{}}}],["doughnut",{"_index":400,"title":{},"body":{"components/ClusterComponent.html":{}}}],["due",{"_index":670,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["e456908fad13",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e4b1",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edg",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["editclust",{"_index":530,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["editclustercompon",{"_index":173,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":175,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ellen",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellen.martin@mail.com",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["email/id",{"_index":951,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["encount",{"_index":697,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["entrycompon",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment_vari",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":443,"title":{},"body":{"components/ClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["error.statu",{"_index":655,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.statustext",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorhandl",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":234,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":824,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":923,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":925,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1114,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1092,"title":{},"body":{"index.html":{}}}],["expiraci",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["exposed_port",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":1129,"title":{},"body":{"license.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyjhy2nlc3miolsit1jhil0simv4cci6mtu0mji4njg2mywiawf0ijoxntqymjc2mdyzlcjpc3mioijhdxroecisimp0asi6iji1ota5zdnkltjlodmtndlmmc04zmqzltflymzintyxmtnhmsisim5izii6ije1ndiynzywnjmilcjvcmdhbml6yxrpb25jrci6ijdhzdfhn2e4lwu0yjetndc5oc05mdcxlwu0nty5mdhmywqxmyisinjvbguioijpd25lciisinvzzxjjrci6impvag4uzg9lqg1hawwuy29tin0",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":637,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":681,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["flag",{"_index":1089,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1100,"title":{},"body":{"index.html":{}}}],["form",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.dirti",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.valid",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.email",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.password",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.passwordconfirm",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formbuild",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":690,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":680,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":866,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":661,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":359,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1103,"title":{},"body":{"index.html":{}}}],["gain",{"_index":718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":705,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":707,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["generateclusterchartdata",{"_index":407,"title":{},"body":{"components/ClusterComponent.html":{}}}],["generateclusterchartdata(run",{"_index":412,"title":{},"body":{"components/ClusterComponent.html":{}}}],["get",{"_index":1060,"title":{"index.html":{},"license.html":{}},"body":{}}],["getbaseurl",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getnotif",{"_index":838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["given",{"_index":665,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1106,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1134,"title":{},"body":{"license.html":{}}}],["gradient",{"_index":401,"title":{},"body":{"components/ClusterComponent.html":{}}}],["grafana",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["great",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["group_2",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group_3",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group_4",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group_5",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group_work",{"_index":920,"title":{},"body":{"components/SidebarComponent.html":{}}}],["guard",{"_index":314,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":794,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":647,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":649,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":652,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":646,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":651,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":648,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["hardcod",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":1104,"title":{},"body":{"index.html":{}}}],["helper",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1101,"title":{},"body":{"index.html":{}}}],["http://192.168.99.100",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1078,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1118,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":650,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1068,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":793,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://urlofservice:8080",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com",{"_index":1064,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["id=\"alert",{"_index":830,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identifi",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["ignorebackdropclick",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["ik63rhhqhztqrk7dgiewcew0vrk",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imag",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1130,"title":{},"body":{"license.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["incorrect",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["info'},{'nam",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":288,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":287,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":286,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":294,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":941,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:22",{"_index":301,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:25",{"_index":948,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:27",{"_index":299,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:28",{"_index":298,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:29",{"_index":297,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:30",{"_index":300,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:31",{"_index":303,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":296,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:33",{"_index":292,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:35",{"_index":943,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:36",{"_index":295,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:40",{"_index":950,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:41",{"_index":946,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":947,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":949,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":932,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:47",{"_index":942,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":293,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:66",{"_index":938,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:72",{"_index":933,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:83",{"_index":934,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:99",{"_index":939,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.t",{"_index":512,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["info/app",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":308,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":874,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate.userid",{"_index":913,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":330,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":826,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1069,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":514,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["integr",{"_index":1096,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":510,"title":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":671,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["ip",{"_index":502,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["isauth",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["isformvalid",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{}}}],["isformvalid(form",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{}}}],["item.nam",{"_index":599,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":795,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["john",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john.doe@mail.com",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["josh.peterson@mail.com",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":416,"title":{},"body":{"components/ClusterComponent.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":476,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":911,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.stringify(jwttokendata",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(respons",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_data",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtdata",{"_index":473,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttokendata",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1094,"title":{},"body":{"index.html":{}}}],["key",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1128,"title":{},"body":{"license.html":{}}}],["kubernet",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lab1",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lab2",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lab3",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":517,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["label1",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label2",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label3",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":1133,"title":{},"body":{"license.html":{}}}],["law",{"_index":1120,"title":{},"body":{"license.html":{}}}],["lead",{"_index":897,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":695,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":1097,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1108,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1136,"title":{},"body":{"license.html":{}}}],["line",{"_index":694,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["line:compon",{"_index":532,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":693,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["line:no",{"_index":803,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["list",{"_index":426,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":307,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":402,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorag",{"_index":472,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":304,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":558,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":459,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":474,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":538,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":543,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":549,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":545,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":552,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":556,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":554,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":580,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":573,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":579,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":572,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":567,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":575,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":570,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":574,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":571,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":576,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":578,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":577,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.reload",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'nam",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["login_mock",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":176,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmock",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loginrequest",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["longer",{"_index":689,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":773,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":775,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":774,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":178,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manag",{"_index":1062,"title":{},"body":{"index.html":{}}}],["map",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["martin",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":806,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["max",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecoz_udyimldug",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":884,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":587,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mike",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikeslashis@mail.com",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1057,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["mockappchart",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockapppiechart",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockappsinstanceslist",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterchart",{"_index":403,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterdetail",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockclusterlist.length",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockjwttoken",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodelist",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocknodeschart",{"_index":404,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockorganizationinfo",{"_index":952,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockregisteredappslist",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresetpasword",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockresourcessummari",{"_index":1023,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockup",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":43,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":953,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalmodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":888,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":561,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":207,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1105,"title":{},"body":{"index.html":{}}}],["multiten",{"_index":499,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["nalej",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":1077,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":675,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":513,"title":{},"body":{"interfaces/ClusterInfo.html":{},"injectables/ErrorHandlerService.html":{}}}],["network",{"_index":719,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password_1234",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["newclusterdescript",{"_index":623,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclusternam",{"_index":622,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newclustertag",{"_index":624,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["newrol",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["next",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1074,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["nike",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":405,"title":{},"body":{"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.credenti",{"_index":506,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.id",{"_index":504,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.ip",{"_index":505,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.statu",{"_index":508,"title":{},"body":{"components/ClusterComponent.html":{}}}],["node.tag",{"_index":507,"title":{},"body":{"components/ClusterComponent.html":{}}}],["nodescount",{"_index":406,"title":{},"body":{"components/ClusterComponent.html":{}}}],["noth",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["notif",{"_index":526,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationinst",{"_index":835,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":815,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":814,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications_mock",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationscompon",{"_index":181,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":536,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservic",{"_index":44,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["now",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1063,"title":{},"body":{"index.html":{}}}],["null",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["number",{"_index":413,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ny",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":467,"title":{},"body":{"components/ClusterComponent.html":{}}}],["observ",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1116,"title":{},"body":{"license.html":{}}}],["on",{"_index":429,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":783,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":787,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["opendebugpanel",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":845,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":852,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":846,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":854,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["option1",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option2",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option3",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optionchang",{"_index":591,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":563,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["organizatinoid",{"_index":875,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization'},{'nam",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":842,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":841,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization_mock",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclick",{"_index":885,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":183,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationmock",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationnam",{"_index":843,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["out",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":823,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{}}}],["overview",{"_index":1139,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":1030,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":688,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":523,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":533,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":534,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":522,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel.component.ts:104",{"_index":594,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:152",{"_index":595,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":597,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":592,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:43",{"_index":596,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:49",{"_index":593,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["params['clusterid",{"_index":470,"title":{},"body":{"components/ClusterComponent.html":{}}}],["password",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["password).pipe(map(respons",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirm",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{}}}],["payment",{"_index":889,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perman",{"_index":664,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1135,"title":{},"body":{"license.html":{}}}],["persist",{"_index":560,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":919,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["peterson",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pie",{"_index":417,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["policy_nam",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popul",{"_index":539,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["port",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possibl",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{}}}],["predefin",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevent",{"_index":700,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["problem",{"_index":715,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1088,"title":{},"body":{"index.html":{}}}],["product",{"_index":1090,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":525,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["profile_mock",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profilemock",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1072,"title":{},"body":{"index.html":{}}}],["promis",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":708,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["purpos",{"_index":1102,"title":{},"body":{"index.html":{}}}],["r",{"_index":805,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1107,"title":{},"body":{"index.html":{}}}],["real",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":653,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["recurs",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refer",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["refresh_token",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regist",{"_index":509,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["registered1",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registered2",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":1080,"title":{},"body":{"index.html":{}}}],["remov",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{}}}],["renam",{"_index":825,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":418,"title":{},"body":{"components/ClusterComponent.html":{}}}],["repositori",{"_index":1071,"title":{},"body":{"index.html":{}}}],["request",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requir",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":931,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["resourc",{"_index":490,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["resources'},{'nam",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["resources_mock",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resourcescompon",{"_index":185,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcesmock",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respons",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["response._bodi",{"_index":958,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["response.email",{"_index":916,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.nam",{"_index":869,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":917,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":873,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":882,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["resset",{"_index":940,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["result",{"_index":191,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["role_nam",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["roledirti",{"_index":625,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'nam",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rule",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule2",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule3",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule4",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule5",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule_id",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule_id_2",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule_id_3",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule_id_4",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule_id_5",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":419,"title":{},"body":{"components/ClusterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["running_nod",{"_index":518,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["runningnod",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxj",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["sara",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saradoe@mail.com",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["saveclusterchang",{"_index":606,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(form",{"_index":610,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveuserchang",{"_index":628,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(f",{"_index":635,"title":{},"body":{"components/EditUserComponent.html":{}}}],["scaffold",{"_index":1082,"title":{},"body":{"index.html":{}}}],["screen",{"_index":583,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1131,"title":{},"body":{"license.html":{}}}],["select",{"_index":562,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["seri",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serv",{"_index":1075,"title":{},"body":{"index.html":{}}}],["server",{"_index":654,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":290,"title":{},"body":{"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["service_group_id",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_group_id_2",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_group_id_3",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_group_id_4",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_group_id_5",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id_1",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id_2",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id_3",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id_4",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_id_5",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service_inst",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/auth.servic",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":692,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["show",{"_index":784,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["sidebar",{"_index":527,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar'},{'nam",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":892,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":891,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar_mock",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidebarcompon",{"_index":187,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmock",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slashi",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smith",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":1123,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["source_port",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source_service_id",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spam",{"_index":600,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":584,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["spec",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":1132,"title":{},"body":{"license.html":{}}}],["src/.../app.routing.t",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../backend.service.t",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1058,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mocks.t",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":285,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/applications/applications.component.t",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":390,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.ts:122",{"_index":423,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:152",{"_index":415,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:167",{"_index":424,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:21",{"_index":431,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:26",{"_index":456,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:31",{"_index":448,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:36",{"_index":434,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:41",{"_index":433,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:46",{"_index":435,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:51",{"_index":454,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:56",{"_index":455,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:61",{"_index":436,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:66",{"_index":447,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:67",{"_index":446,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:68",{"_index":441,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:71",{"_index":445,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:85",{"_index":450,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:86",{"_index":452,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:87",{"_index":430,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/cluster/cluster.component.ts:92",{"_index":411,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/debug",{"_index":521,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/loc",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/const/us",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/clust",{"_index":511,"title":{},"body":{"interfaces/ClusterInfo.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":601,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:15",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:94",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":772,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":777,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":776,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":813,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":818,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":822,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":817,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":819,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":820,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":840,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:106",{"_index":853,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:124",{"_index":850,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:137",{"_index":856,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":857,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":859,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":861,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":862,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":863,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:36",{"_index":858,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:41",{"_index":849,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:64",{"_index":851,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:89",{"_index":855,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/resources/resources.component.t",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/error",{"_index":645,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":778,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":834,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":839,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":836,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":922,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":890,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:104",{"_index":902,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:116",{"_index":895,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":903,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:28",{"_index":905,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":907,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":904,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:35",{"_index":908,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":906,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:41",{"_index":894,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:62",{"_index":898,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:76",{"_index":899,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:85",{"_index":900,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":927,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":886,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":879,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["statu",{"_index":449,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["status_nam",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["still",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":487,"title":{},"body":{"components/ClusterComponent.html":{}}}],["storag",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage_restriction_1",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage_restriction_2",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":422,"title":{},"body":{"components/ClusterComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":926,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(clust",{"_index":486,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscribe(nod",{"_index":489,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscribe(respons",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(summari",{"_index":480,"title":{},"body":{"components/ClusterComponent.html":{}}}],["subscript",{"_index":860,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":844,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["succeed",{"_index":658,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{}}}],["summari",{"_index":478,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["summary['total_clust",{"_index":482,"title":{},"body":{"components/ClusterComponent.html":{}}}],["summary['total_nod",{"_index":483,"title":{},"body":{"components/ClusterComponent.html":{}}}],["support",{"_index":702,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":564,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":672,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":291,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":588,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":944,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":780,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":788,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":782,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":790,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.alert",{"_index":827,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":918,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":956,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getclusterdetail(this.organizationid",{"_index":485,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getnodes(this.organizationid",{"_index":488,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":868,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":872,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getresourcessummary(this.organizationid",{"_index":479,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":915,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":957,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":621,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":643,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":954,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttonressetpassword",{"_index":955,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clust",{"_index":461,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdata",{"_index":466,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clusterdescript",{"_index":619,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":469,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":618,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterscount",{"_index":465,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.clustertag",{"_index":620,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.components.push",{"_index":540,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.configur",{"_index":312,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":910,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.errormessag",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.id",{"_index":309,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.loadeddata",{"_index":460,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":881,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":880,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":878,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":306,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/SidebarComponent.html":{}}}],["this.nod",{"_index":462,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.nodescount",{"_index":463,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.notificationsmock",{"_index":537,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":585,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":828,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":586,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":475,"title":{},"body":{"components/ClusterComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":864,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":909,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":641,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.route.params.subscribe(param",{"_index":468,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.router.navig",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.servic",{"_index":313,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.subscriptiontyp",{"_index":865,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.tag",{"_index":310,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.titl",{"_index":305,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.typ",{"_index":311,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.updatenodeslist",{"_index":484,"title":{},"body":{"components/ClusterComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":912,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":914,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":871,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":870,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.us",{"_index":867,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":642,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":644,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["time",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":589,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["token",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tooltipmodul",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":477,"title":{},"body":{"components/ClusterComponent.html":{},"components/NotificationsComponent.html":{}}}],["total",{"_index":414,"title":{},"body":{"components/ClusterComponent.html":{},"miscellaneous/variables.html":{}}}],["total_clust",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total_nod",{"_index":519,"title":{},"body":{"interfaces/ClusterInfo.html":{},"miscellaneous/variables.html":{}}}],["totalnod",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toth.c@mail.com",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":531,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterInfo.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type_nam",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/jwt",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1061,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unabl",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unavail",{"_index":711,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["under",{"_index":1111,"title":{},"body":{"license.html":{}}}],["understand",{"_index":669,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":698,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1091,"title":{},"body":{"index.html":{}}}],["up",{"_index":535,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":425,"title":{},"body":{"components/ClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":218,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updatenodeslist",{"_index":408,"title":{},"body":{"components/ClusterComponent.html":{}}}],["updateprofileus",{"_index":893,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":901,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":848,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":847,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":935,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":666,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":1083,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'nam",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":19,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:105",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:18",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:22",{"_index":639,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:27",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:29",{"_index":640,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":638,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:39",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:52",{"_index":634,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:55",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:60",{"_index":633,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:62",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:75",{"_index":631,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:80",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:85",{"_index":629,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:93",{"_index":636,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:97",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":876,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":877,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["user_edit_mock",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_info_mock",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useredit",{"_index":529,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["usereditmock",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":626,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":528,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["userinfocompon",{"_index":189,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfomock",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usernam",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":883,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":457,"title":{},"body":{"components/ClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":791,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":796,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":808,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":812,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":792,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"injectables/UpdateEventsService.html":{},"miscellaneous/variables.html":{}}}],["value1",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value2",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value3",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ClusterComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["var1",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var2",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var3",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variabl",{"_index":967,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1099,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1093,"title":{},"body":{"index.html":{}}}],["view",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ClusterComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1127,"title":{},"body":{"license.html":{}}}],["without",{"_index":1126,"title":{},"body":{"license.html":{}}}],["write",{"_index":1122,"title":{},"body":{"license.html":{}}}],["x",{"_index":809,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":789,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":798,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":797,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":801,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["yxxx",{"_index":800,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                changeRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                isFormValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFormValid(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:23\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n\n\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    const user = {\n      name: form.value.name,\n      email: form.value.email,\n      password: form.value.password,\n      role_name: this.userRole\n    };\n    this.backend.addUser(this.organizationId, user)\n      .subscribe(response => {\n        this.notificationsService.add({message: user.email + ' created successfully'});\n        this.bsModalRef.hide();\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  isFormValid(form) {\n    if (this.userRole === null) {\n      return false;\n    }\n\n    if (!form.valid) {\n      return false;\n    }\n\n    if (form.value.password !== form.value.passwordConfirm) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                        Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule} from '@swimlane/ngx-charts';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                configuration\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                service\n                            \n                            \n                                tags\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:17\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:27\n                            \n                        \n\n                \n                    \n                        Models that hold app name, organization id, app description, app tags, app configuration, app service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold app name, organization id, app description, app tags, app configuration, app service\n   */\n  name: string;\n  id: string;\n  description: string;\n  tags: string;\n  type: string;\n  configuration: string;\n  service: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'App info';\n    this.name = 'Loading ...'; // Default initialization\n    this.id = 'Loading ...'; // Default initialization\n    this.tags = 'Loading ...'; // Default initialization\n    this.type = 'Loading ...'; // Default initialization\n    this.configuration = 'Loading ...'; // Default initialization\n    this.service = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n  \n  \n  \n  \n    \n\n    \n    \n    \n      \n        \n          \n            Name\n          \n          {{name}}\n        \n        \n          \n            Description\n          \n          {{description}} \n        \n        \n          \n            Id\n          \n          {{id}}\n        \n        \n          \n            Configuration\n          \n          {{configuration}}\n        \n        \n          \n            Tags\n          \n          {{tags}}\n        \n      \n    \n  \n  \n    \n      Close\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}                                                            Name                    {{name}}                                      Description                    {{description}}                                       Id                    {{id}}                                      Configuration                    {{configuration}}                                      Tags                    {{tags}}                                Close        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken === null\n      // || this.jwtHelper.isTokenExpired(jwtToken) unable to generate a mockup jwt with the right expiracy date\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cluster/cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                styleUrls\n                cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoScale\n                            \n                            \n                                backend\n                            \n                            \n                                clusterData\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusters\n                            \n                            \n                                clustersCount\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customColors\n                            \n                            \n                                doughnut\n                            \n                            \n                                gradient\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockClusterChart\n                            \n                            \n                                mockNodesChart\n                            \n                            \n                                modalRef\n                            \n                            \n                                nodes\n                            \n                            \n                                nodesCount\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClusterChartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateNodesList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/cluster/cluster.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateClusterChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateClusterChartData(running: number, total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Generates the NGX-Chart required JSON object for pie chart rendering\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        running\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of running nodes in a cluster\n\n                                                        \n                                                \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Number of total nodes in a cluster\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    anonym array with the required object structure for pie chart rendering\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateNodesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateNodesList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available nodes to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterData:     ClusterInfo\n\n                    \n                \n                    \n                        \n                            Type :     ClusterInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:41\n                            \n                        \n\n                \n                    \n                        Model that hold cluster data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:36\n                            \n                        \n\n                \n                    \n                        Model that hold cluster ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:46\n                            \n                        \n\n                \n                    \n                        List of available clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clustersCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clustersCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:61\n                            \n                        \n\n                \n                    \n                        Count of total clusters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    domain: ['#0937FF', '#949494']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customColors:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doughnut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doughnut:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gradient:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:66\n                            \n                        \n\n                \n                    \n                        Pie Chart options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:31\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:85\n                            \n                        \n\n                \n                    \n                        NGX-Charts object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:92\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:51\n                            \n                        \n\n                \n                    \n                        List of available nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:56\n                            \n                        \n\n                \n                    \n                        Count of total nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cluster/cluster.component.ts:26\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockClusterChart, mockNodesChart } from '../utils/mocks';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClusterInfo } from '../definitions/interfaces/cluster-info';\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold cluster ID\n   */\n  clusterId: string;\n\n  /**\n   * Model that hold cluster data\n   */\n  clusterData: ClusterInfo;\n\n  /**\n   * List of available clusters\n   */\n  clusters: any[];\n\n  /**\n   * List of available nodes\n   */\n  nodes: any[];\n\n  /**\n   * Count of total nodes\n   */\n  nodesCount: number;\n\n  /**\n   * Count of total clusters\n   */\n  clustersCount: number;\n\n  /**\n   * Pie Chart options\n   */\n  gradient = true;\n  doughnut = true;\n  colorScheme = {\n    domain: ['#0937FF', '#949494']\n  };\n  customColors = [\n    {\n      name: 'Running',\n      value: '#0000ff'\n    },\n    {\n      name: 'error',\n      value: '#00ff00'\n    }\n  ];\n\n  /**\n   * NGX-Charts object-assign required object references (for rendering)\n   */\n  mockClusterChart: any;\n  mockNodesChart: any;\n  autoScale: any;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private route: ActivatedRoute\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.clusters = [];\n    this.nodes = [];\n    this.nodesCount = 0;\n    this.clustersCount = 0;\n    this.clusterData = {};\n\n  /**\n   * Mocked Charts\n   */\n    Object.assign(this, {mockClusterChart, mockNodesChart});\n   }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.clusterId = params['clusterId']; // (+) converts string 'id' to a number\n   });\n     // Get User data from localStorage\n     const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n     if (jwtData !== null) {\n       this.organizationId = JSON.parse(jwtData).organizationID;\n       if (this.organizationId !== null) {\n         // Requests top card summary data\n         this.backend.getResourcesSummary(this.organizationId)\n          .subscribe(summary => {\n            console.log(summary);\n            this.clustersCount = summary['total_clusters'];\n            this.nodesCount = summary['total_nodes'];\n          });\n         this.updateNodesList();\n       }\n     }\n     this.backend.getClusterDetail(this.organizationId, this.clusterId)\n      .subscribe(cluster => {\n        this.clusterData = cluster;\n      });\n  }\n   /**\n   * Generates the NGX-Chart required JSON object for pie chart rendering\n   * @param running Number of running nodes in a cluster\n   * @param total Number of total nodes in a cluster\n   * @returns anonym array with the required object structure for pie chart rendering\n   */\n  generateClusterChartData(running: number, total: number): any[] {\n    return [\n      {\n        name: 'Running',\n        value: running\n      },\n      {\n        name: 'Stopped',\n        value: total - running\n      }];\n    }\n\n   /**\n   * Requests an updated list of available nodes to update the current one\n   */\n  updateNodesList() {\n    // Requests an updated nodes list\n    this.backend.getNodes(this.organizationId, this.clusterId)\n    .subscribe(nodes => {\n      this.nodes = nodes;\n      if (!this.loadedData) {\n        this.loadedData = true;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Resources\n  \n\n\n\n  \n    \n      \n        {{clusterData.name}}\n        STATUS\n      \n      \n        \n          \n            {{clusterData.status}}\n          \n        \n    \n  \n  \n  \n    \n      \n        SUMMARY CLUSTER 1\n      \n      \n        \n          \n              \n                \n                \n                \n                  {{clusterData.running_nodes}}/\n                  {{clusterData.total_nodes}}\n                \n              \n              {{clusterData.running_nodes}} running\n              NODES\n             \n        \n        \n          \n            \n              \n                id\n              \n              {{clusterData.cluster_id}}\n            \n            \n              \n                types\n              \n              {{clusterData.cluster_type}} \n            \n            \n              \n                Tags\n              \n              {{clusterData.labels}}\n            \n            \n              \n                Multitenant\n              \n              {{clusterData.multitenant}}\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            CLUSTER\n          \n          \n             > {{clusterData.name}} > \n          \n          NODES\n        \n      \n      \n         0\" class=\"table\">\n          \n            \n              \n                ID\n              \n              \n                IP\n              \n              \n                Credentials\n              \n              \n                Tags\n              \n              \n                Status\n              \n            \n          \n          \n            \n              {{node.id}}\n              {{node.ip}}  \n              {{node.credentials}}\n              {{node.tags}}\n              \n              {{node.status}}\n            \n            \n          \n        \n        \n          There are not registered nodes in this cluster\n        \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Resources                      {{clusterData.name}}        STATUS                                          {{clusterData.status}}                                              SUMMARY CLUSTER 1                                                                                                              {{clusterData.running_nodes}}/                  {{clusterData.total_nodes}}                                            {{clusterData.running_nodes}} running              NODES                                                                                 id                            {{clusterData.cluster_id}}                                                      types                            {{clusterData.cluster_type}}                                                       Tags                            {{clusterData.labels}}                                                      Multitenant                            {{clusterData.multitenant}}                                                                                    CLUSTER                                 > {{clusterData.name}} >                     NODES                             0\" class=\"table\">                                                    ID                                            IP                                            Credentials                                            Tags                                            Status                                                                        {{node.id}}              {{node.ip}}                {{node.credentials}}              {{node.tags}}                            {{node.status}}                                                            There are not registered nodes in this cluster                                                                                                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterInfo.html":{"url":"interfaces/ClusterInfo.html","title":"interface - ClusterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClusterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster-info.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type\n                                    \n                                \n                                \n                                    \n                                        cluster_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant\n                                    \n                                \n                                \n                                    \n                                        multitenant:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ClusterInfo {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: string;\n  running_nodes?: string;\n  description?: string;\n  status?: string;\n  cluster_type?: string;\n  labels?: string;\n  multitenant?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n    Backend control\n    \n      \n        \n        \n          {{item.name}}\n        \n        \n        \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                    Backend control                                    {{item.name}}                                              Real                                Mock                                    Notifications    Spam test notification                Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        newClusterName: this.clusterName,\n        newClusterDescription: this.clusterDescription,\n        newClusterTags: this.clusterTags\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                                  Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:26\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:22\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Dialog title\n   */\n  title: string;\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                     Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error message\n   */\n  errorMessage: string;\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessage = '';\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessage = '';\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        this.errorMessage = error.statusText;\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        Nalej\n        \n            Log in\n            \n                \n                \n                    \n                    Email is required\n                    Email must be a valid email address\n                    \n                \n                    \n                    Password is required\n                    Password must be at least 6 characters\n                    \n                0\">Email or password incorrect\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Nalej                    Log in                                                                                    Email is required                    Email must be a valid email address                                                                            Password is required                    Password must be at least 6 characters                                    0\">Email or password incorrect                                                    Log in                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:36\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizatinoId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    });\n  }\n}\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n         0\"\n          class=\"table\">\n          \n            \n              \n                Name\n              \n              \n                Role\n              \n              \n                Email\n              \n              \n              \n              \n            \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n              \n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n        \n          There are not registered users in this organizationClick on \"add user\" button to start adding new users \n        \n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                     0\"          class=\"table\">                                                    Name                                            Role                                            Email                                                                                                                              {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                                                                                  edit                                                                                                There are not registered users in this organizationClick on \"add user\" button to start adding new users                                                                                                               Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      this.updateService.changesOnUserList.next();\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                buttonRessetPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, ressets the password\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:35\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonRessetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonRessetPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:30\n                            \n                        \n\n                \n                    \n                        Text for the resset password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:40\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the resset password action button\n   */\n  buttonRessetPassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonRessetPassword = 'Resset Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.deleteUser(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'User ' + this.userId + ' has been deleted',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   *  Upon confirmation, ressets the password\n   */\n  resetPassword() {\n    if (this.organizationId !== null && this.userId !== null) {\n      this.backend.resetPassword(this.organizationId, this.userId)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'Your new password is ' + response._body,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonRessetPassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonRessetPassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                50 %\n                (18/36)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                63 %\n                (14/22)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster-info.ts\n            \n            \n                interface\n            \n            \n                ClusterInfo\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                50 %\n                (17/34)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                78 %\n                (18/23)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsInstancesList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockRegisteredAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../backend.service.ts)\n                        \n                        \n                            AvailableComponents   (src/.../debug-panel.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LocalStorageKeys   (src/.../local-storage-keys.ts)\n                        \n                        \n                            mockAppChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppPieChart   (src/.../mocks.ts)\n                        \n                        \n                            mockAppsInstancesList   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterChart   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterDetail   (src/.../mocks.ts)\n                        \n                        \n                            mockClusterList   (src/.../mocks.ts)\n                        \n                        \n                            mockJwtToken   (src/.../mocks.ts)\n                        \n                        \n                            mockNodeList   (src/.../mocks.ts)\n                        \n                        \n                            mockNodesChart   (src/.../mocks.ts)\n                        \n                        \n                            mockOrganizationInfo   (src/.../mocks.ts)\n                        \n                        \n                            mockRegisteredAppsList   (src/.../mocks.ts)\n                        \n                        \n                            mockResetPasword   (src/.../mocks.ts)\n                        \n                        \n                            mockResourcesSummary   (src/.../mocks.ts)\n                        \n                        \n                            mockUserList   (src/.../mocks.ts)\n                        \n                        \n                            routes   (src/.../app.routing.ts)\n                        \n                        \n                            UserRoles   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/backend.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + ':31404/v1/'\n                        \n                    \n\n                \n                    \n                        URL of the public API\n\n                    \n                \n\n            \n        \n\n    src/app/debug-panel/debug-panel.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AvailableComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AvailableComponents:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: getBaseUrl\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // hardcoded local environment API ip address\n  apiUrl: 'http://192.168.99.100'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/local-storage-keys.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocalStorageKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LocalStorageKeys:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Mocked views\n    loginMock: 'login_mock',\n    organizationMock: 'organization_mock',\n    resourcesMock: 'resources_mock',\n    clusterMock: 'cluster_mock',\n    appsMock: 'apps_mock',\n    profileMock: 'profile_mock',\n    sidebarMock: 'sidebar_mock',\n    notificationsMock: 'notifications_mock',\n    userInfoMock: 'user_info_mock',\n    userEditMock: 'user_edit_mock',\n    clusterEditMock: 'cluster_edit_mock',\n    addUserMock: 'add_user_mock',\n\n    // Data\n    jwt: 'jwt',\n    jwtData: 'jwt_data',\n    userId: 'user_id',\n    refreshToken: 'refresh_token'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utils/mocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Apps Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 40,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 3,\n            'max': 15\n          },\n          {\n            'value': 23,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n      }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps status timeline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppPieChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppPieChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 4\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked Apps Pie Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockAppsInstancesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockAppsInstancesList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        app_descriptor_id: 'app_descriptor_id_2',\n        app_instance_id: '0800200c9a62',\n        name: 'UI - Tableau',\n        description: 'Instance of Tableau',\n        configuration_options: {\n            option1: 'value1',\n            option2: 'value2',\n            option3: 'value3'\n        },\n        environment_variables: {\n            var1: 'value1',\n            var2: 'value2',\n            var3: 'value3'\n        },\n        labels: {\n            lab1: 'label1',\n            lab2: 'label2',\n            lab3: 'label3'\n        },\n        rules: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_descriptor_id: 'app_descriptor_id_2',\n                rule_id: 'rule_id_2',\n                name: 'rule2',\n                source_service_id: 'service_id_1',\n                source_port: '1234',\n                access_name: 'root',\n                auth_services: [\n                    'auth_service1',\n                    'auth_service2',\n                    'auth_service3'\n                ],\n                device_groups: [\n                    'device_group1',\n                    'device_group2',\n                    'device_group3',\n                ],\n            }\n        ],\n        groups: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_2',\n                app_descriptor_id: 'app_descriptor_id_2',\n                service_group_id: 'service_group_id_2',\n                name: 'group_2',\n                description: 'Databases',\n                service_instances: [\n                    'service_id_1',\n                    'service_id_5'\n                ],\n                policy_name: 'recursive'\n            }\n        ],\n        services: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_2',\n                app_descriptor_id: 'app_descriptor_id_2',\n                service_id: 'service_id_2',\n                name: 'Service 2',\n                description: 'Great service',\n                type_name: 'DB',\n                image: 'https://urlofservice:8080/',\n                credentials: {},\n                specs: {},\n                storage: [\n                    'storage_restriction_1',\n                    'storage_restriction_2'\n                ],\n                exposed_ports: [\n                    '8080',\n                    '4300',\n                    '23422'\n                ],\n                environment_variables: {\n                    var1: 'value1',\n                    var2: 'value2',\n                    var3: 'value3'\n                },\n                configs: [\n                    {\n                        name: 'db config',\n                        port: '12312'\n                    }\n                ],\n                labels: {\n                    lab1: 'label1',\n                    lab2: 'label2',\n                    lab3: 'label3'\n                },\n                deploy_after: [\n                    'service_id_1'\n                ],\n                status_name: 'Running'\n            }\n        ],\n        status_name: 'Running',\n    },\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        app_descriptor_id: 'app_descriptor_id_3',\n        app_instance_id: '0800200c9a63',\n        name: 'UI - Grafana',\n        description: 'Grafana dashboard',\n        configuration_options: {\n            option1: 'value1',\n            option2: 'value2',\n            option3: 'value3'\n        },\n        environment_variables: {\n            var1: 'value1',\n            var2: 'value2',\n            var3: 'value3'\n        },\n        labels: {\n            lab1: 'label1',\n            lab2: 'label2',\n            lab3: 'label3'\n        },\n        rules: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_descriptor_id: 'app_descriptor_id_3',\n                rule_id: 'rule_id_3',\n                name: 'rule3',\n                source_service_id: 'service_id_1',\n                source_port: '1234',\n                access_name: 'root',\n                auth_services: [\n                    'auth_service1',\n                    'auth_service2',\n                    'auth_service3'\n                ],\n                device_groups: [\n                    'device_group1',\n                    'device_group2',\n                    'device_group3',\n                ],\n            }\n        ],\n        groups: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_3',\n                app_descriptor_id: 'app_descriptor_id_3',\n                service_group_id: 'service_group_id_3',\n                name: 'group_3',\n                description: 'Databases',\n                service_instances: [\n                    'service_id_1',\n                    'service_id_3'\n                ],\n                policy_name: 'recursive'\n            }\n        ],\n        services: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_3',\n                app_descriptor_id: 'app_descriptor_id_3',\n                service_id: 'service_id_3',\n                name: 'Service 3',\n                description: 'Great service',\n                type_name: 'DB',\n                image: 'https://urlofservice:8080/',\n                credentials: {},\n                specs: {},\n                storage: [\n                    'storage_restriction_1',\n                    'storage_restriction_2'\n                ],\n                exposed_ports: [\n                    '8080',\n                    '4300',\n                    '23422'\n                ],\n                environment_variables: {\n                    var1: 'value1',\n                    var2: 'value2',\n                    var3: 'value3'\n                },\n                configs: [\n                    {\n                        name: 'db config',\n                        port: '12312'\n                    }\n                ],\n                labels: {\n                    lab1: 'label1',\n                    lab2: 'label2',\n                    lab3: 'label3'\n                },\n                deploy_after: [\n                    'service_id_1'\n                ],\n                status_name: 'Running'\n            }\n        ],\n        status_name: 'Running',\n    },\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        app_descriptor_id: 'app_descriptor_id_4',\n        app_instance_id: '0800200c9a64',\n        name: 'Assets Application',\n        description: 'Instance of Cassandra',\n        configuration_options: {\n            option1: 'value1',\n            option2: 'value2',\n            option3: 'value3'\n        },\n        environment_variables: {\n            var1: 'value1',\n            var2: 'value2',\n            var3: 'value3'\n        },\n        labels: {\n            lab1: 'label1',\n            lab2: 'label2',\n            lab3: 'label3'\n        },\n        rules: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_descriptor_id: 'app_descriptor_id_4',\n                rule_id: 'rule_id_4',\n                name: 'rule4',\n                source_service_id: 'service_id_1',\n                source_port: '1234',\n                access_name: 'root',\n                auth_services: [\n                    'auth_service1',\n                    'auth_service2',\n                    'auth_service3'\n                ],\n                device_groups: [\n                    'device_group1',\n                    'device_group2',\n                    'device_group3',\n                ],\n            }\n        ],\n        groups: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_4',\n                app_descriptor_id: 'app_descriptor_id_4',\n                service_group_id: 'service_group_id_4',\n                name: 'group_4',\n                description: 'Databases',\n                service_instances: [\n                    'service_id_1',\n                    'service_id_4'\n                ],\n                policy_name: 'recursive'\n            }\n        ],\n        services: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_4',\n                app_descriptor_id: 'app_descriptor_id_4',\n                service_id: 'service_id_4',\n                name: 'Service 4',\n                description: 'Great service',\n                type_name: 'DB',\n                image: 'https://urlofservice:8080/',\n                credentials: {},\n                specs: {},\n                storage: [\n                    'storage_restriction_1',\n                    'storage_restriction_2'\n                ],\n                exposed_ports: [\n                    '8080',\n                    '4300',\n                    '23422'\n                ],\n                environment_variables: {\n                    var1: 'value1',\n                    var2: 'value2',\n                    var3: 'value3'\n                },\n                configs: [\n                    {\n                        name: 'db config',\n                        port: '12312'\n                    }\n                ],\n                labels: {\n                    lab1: 'label1',\n                    lab2: 'label2',\n                    lab3: 'label3'\n                },\n                deploy_after: [\n                    'service_id_1'\n                ],\n                status_name: 'Running'\n            }\n        ],\n        status_name: 'Running',\n    },\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        app_descriptor_id: 'app_descriptor_id_5',\n        app_instance_id: '0800200c9a65',\n        name: 'Assets Application',\n        description: 'Instance of MongoDB',\n        configuration_options: {\n            option1: 'value1',\n            option2: 'value2',\n            option3: 'value3'\n        },\n        environment_variables: {\n            var1: 'value1',\n            var2: 'value2',\n            var3: 'value3'\n        },\n        labels: {\n            lab1: 'label1',\n            lab2: 'label2',\n            lab3: 'label3'\n        },\n        rules: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_descriptor_id: 'app_descriptor_id_5',\n                rule_id: 'rule_id_5',\n                name: 'rule5',\n                source_service_id: 'service_id_1',\n                source_port: '1234',\n                access_name: 'root',\n                auth_services: [\n                    'auth_service1',\n                    'auth_service2',\n                    'auth_service3'\n                ],\n                device_groups: [\n                    'device_group1',\n                    'device_group2',\n                    'device_group3',\n                ],\n            }\n        ],\n        groups: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_5',\n                app_descriptor_id: 'app_descriptor_id_5',\n                service_group_id: 'service_group_id_5',\n                name: 'group_5',\n                description: 'Databases',\n                service_instances: [\n                    'service_id_1',\n                    'service_id_5'\n                ],\n                policy_name: 'recursive'\n            }\n        ],\n        services: [\n            {\n                organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n                app_instance_id: 'app_instance_id_5',\n                app_descriptor_id: 'app_descriptor_id_5',\n                service_id: 'service_id_5',\n                name: 'Service 5',\n                description: 'Great service',\n                type_name: 'DB',\n                image: 'https://urlofservice:8080/',\n                credentials: {},\n                specs: {},\n                storage: [\n                    'storage_restriction_1',\n                    'storage_restriction_2'\n                ],\n                exposed_ports: [\n                    '8080',\n                    '4300',\n                    '23422'\n                ],\n                environment_variables: {\n                    var1: 'value1',\n                    var2: 'value2',\n                    var3: 'value3'\n                },\n                configs: [\n                    {\n                        name: 'db config',\n                        port: '12312'\n                    }\n                ],\n                labels: {\n                    lab1: 'label1',\n                    lab2: 'label2',\n                    lab3: 'label3'\n                },\n                deploy_after: [\n                    'service_id_1'\n                ],\n                status_name: 'Running'\n            }\n        ],\n        status_name: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked App list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Running',\n        value: 5\n    },\n    {\n        name: 'Error',\n        value: 1\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters Chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterDetail:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Cluster1',\n        id: '0800200c9a61',\n        totalNodes: '10',\n        runningNodes: '1',\n        description: 'Ny Cluster',\n        type: 'Kubernetes',\n        status: 'Running',\n        tags: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters detail\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockClusterList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockClusterList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a61',\n        name: 'Cluster1',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '1',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a62',\n        name: 'Cluster2',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '2',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a63',\n        name: 'Cluster3',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '3',\n        cluster_type: 'Kubernetes',\n        status: 'Error',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a64',\n        name: 'Cluster4',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '4',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a65',\n        name: 'Cluster5',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '5',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a66',\n        name: 'Cluster6',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '6',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a67',\n        name: 'Cluster7',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '7',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a68',\n        name: 'Cluster8',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '8',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a69',\n        name: 'Cluster9',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '9',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }, {\n        organization_id: '7ad1a7a8-e4b1-4798-9071-e456908fad13',\n        cluster_id: '0800200c9a70',\n        name: 'Cluster10',\n        description: 'Ny Cluster',\n        total_nodes: '10',\n        running_nodes: '10',\n        cluster_type: 'Kubernetes',\n        status: 'Running',\n        labels: 'ny, edge',\n        multitenant: 'All'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked clusters list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockJwtToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockJwtToken:     \n\n                    \n                \n                    \n                        \n                            Default value : 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\n    // tslint:disable-next-line:max-line-length\n    '.eyJhY2Nlc3MiOlsiT1JHIl0sImV4cCI6MTU0MjI4Njg2MywiaWF0IjoxNTQyMjc2MDYzLCJpc3MiOiJhdXRoeCIsImp0aSI6IjI1OTA5ZDNkLTJlODMtNDlmMC04ZmQzLTFlYmZiNTYxMTNhMSIsIm5iZiI6IjE1NDIyNzYwNjMiLCJvcmdhbml6YXRpb25JRCI6IjdhZDFhN2E4LWU0YjEtNDc5OC05MDcxLWU0NTY5MDhmYWQxMyIsInJvbGUiOiJPd25lciIsInVzZXJJRCI6ImpvaG4uZG9lQG1haWwuY29tIn0' +\n    '.MeCoZ_UdYiMlduG-ik63rHHqHztQrK7dgIEWceW0VRk'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodeList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodeList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: '0800200c9a69',\n        ip: '100.022.0129',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a68',\n        ip: '100.022.0128',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a67',\n        ip: '100.022.0127',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a66',\n        ip: '100.022.0126',\n        credentials: 'Public',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Error',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    },\n    {\n        id: '0800200c9a65',\n        ip: '100.022.0125',\n        credentials: 'Private',\n        tags: 'ny, edge',\n        status: 'Running',\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockNodesChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockNodesChart:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        'name': 'Nodes Running',\n        'series': [\n          {\n            'value': 39,\n            'name': '-6h',\n            'min': 28,\n            'max': 49\n          },\n          {\n            'value': 79,\n            'name': '-5h',\n            'min': 66,\n            'max': 91\n          },\n          {\n            'value': 23,\n            'name': '-4h',\n            'min': 3,\n            'max': 14\n          },\n          {\n            'value': 96,\n            'name': '-3h',\n            'min': 76,\n            'max': 16\n          },\n          {\n            'value': 73,\n            'name': '-2h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': '-1h',\n            'min': 45,\n            'max': 100\n          },\n          {\n            'value': 73,\n            'name': 'now',\n            'min': 45,\n            'max': 100\n          }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked nodes list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockOrganizationInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockOrganizationInfo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Nike'\n}\n                        \n                    \n\n                \n                    \n                        Mocked organization info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockRegisteredAppsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockRegisteredAppsList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        app_descriptor_id: '16143613421',\n        name: 'Registered1',\n        description: 'Registered1 app description'\n    }, {\n        app_descriptor_id: '16143613422',\n        name: 'Registered2',\n        description: 'Registered app description'\n    }\n]\n                        \n                    \n\n                \n                    \n                        Mocked registered apps list (descriptors) - fields still not defined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResetPasword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResetPasword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NEW_PASSWORD_1234'\n                        \n                    \n\n                \n                    \n                        Mocked new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockResourcesSummary\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockResourcesSummary:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    total_clusters: mockClusterList.length,\n    total_nodes: mockClusterList.length * 10\n}\n                        \n                    \n\n                \n                    \n                        Mock resources summary containing total clusters and nodes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockUserList:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Celia Toth',\n        email: 'toth.c@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Sara Doe',\n        email: 'saradoe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Dave Smith',\n        email: 'davesmith@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'John Doe',\n        email: 'john.doe@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Ellen Martin',\n        email: 'ellen.martin@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Josh Peterson',\n        email: 'josh.peterson@mail.com',\n        role_name: 'Owner'\n    },\n    {\n        name: 'Mike Slashis',\n        email: 'mikeslashis@mail.com',\n        role_name: 'Owner'\n    },\n]\n                        \n                    \n\n                \n                    \n                        Mocked users list\n\n                    \n                \n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, { useHash: true })\n                        \n                    \n\n\n            \n        \n\n    src/app/definitions/const/user-roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserRoles:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    owner: 'Owner',\n    operator: 'Operator',\n    developer: 'Developer'\n}\n                        \n                    \n\n                \n                    \n                        Predefined user roles\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
