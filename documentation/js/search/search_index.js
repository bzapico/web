var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/pipes/AbbreviatePipe.html",[0,1.665,1,1.836]],["body/pipes/AbbreviatePipe.html",[0,2.982,1,3.037,2,0.355,3,0.302,4,0.202,5,3.557,6,1.042,7,0.623,8,5.24,9,0.725,10,3.094,11,4.374,12,1.086,13,0.528,14,4.262,15,5.164,16,3.377,17,1.515,18,3.037,19,2.111,20,5.24,21,1.394,22,4.941,23,5.24,24,3.037,25,3.815,26,5.919,27,5.919,28,5.24,29,3.803,30,0.798,31,0.033,32,0.468,33,0.591,34,1.134,35,2.111,36,2.299,37,0.656,38,0.468,39,4.374,40,0.411,41,0.302,42,0.468,43,0.798,44,1.232,45,0.981,46,4.262,47,2.47,48,5.24,49,4.262,50,2.043,51,4.262,52,4.374,53,0.026,54,0.026]],["title/components/AddUserComponent.html",[55,0.081,56,0.65]],["body/components/AddUserComponent.html",[2,0.252,3,0.138,4,0.092,6,0.476,7,0.618,9,0.515,12,1.069,13,0.74,16,1.254,17,1.389,18,2.784,19,1.219,21,1.114,25,1.254,29,1.412,30,0.939,31,0.033,32,0.634,33,0.695,34,1.278,35,0.784,37,0.854,38,0.569,40,0.187,41,0.138,42,0.214,43,0.567,44,1.389,45,0.695,47,1.128,50,1.45,53,0.015,54,0.015,55,0.116,56,0.859,57,0.563,58,0.563,59,0.563,60,5.018,61,3.875,62,1.412,63,0.988,64,1.589,65,1.262,66,1.038,67,1.149,68,0.805,69,2.526,70,0.805,71,2.526,72,0.187,73,0.466,74,1.741,75,1.375,76,1.741,77,4.188,78,2.485,79,3.04,80,1.838,81,2.525,82,4.188,83,2.428,84,2.428,85,1.95,86,2.196,87,2.526,88,2.196,89,1.95,90,2.196,91,1.114,92,0.466,93,1.023,94,1.499,95,1.768,96,1.334,97,1.946,98,3.026,99,1.946,100,1.219,101,3.346,102,1.95,103,2.108,104,0.931,105,2.196,106,1.946,107,2.196,108,2.196,109,2.526,110,1.946,111,1.174,112,2.799,113,3.099,114,2.196,115,3.04,116,1.946,117,2.393,118,1.95,119,1.946,120,1.166,121,1.59,122,1.95,123,3.096,124,1.838,125,1.552,126,2.196,127,1.946,128,1.754,129,2.657,130,1.032,131,1.389,132,2.196,133,1.59,134,2.196,135,2.152,136,3.865,137,1.946,138,1.624,139,1.946,140,0.563,141,1.754,142,1.032,143,1.754,144,0.988,145,1.946,146,1.687,147,2.526,148,3.026,149,1.032,150,1.59,151,2.526,152,3.026,153,2.196,154,3.026,155,1.946,156,1.624,157,1.624,158,1.121,159,1.032,160,0.95,161,1.946,162,1.624,163,1.946,164,1.946,165,0.721,166,0.518,167,0.664,168,0.721,169,0.784,170,0.721,171,0.721,172,0.518,173,0.563,174,0.518,175,0.563,176,1.128,177,0.762,178,3.496,179,1.121,180,1.166,181,1.412,182,0.784,183,0.664,184,1.121,185,3.293,186,3.293,187,1.991,188,1.946,189,1.946,190,1.624,191,1.624,192,1.946,193,0.784,194,1.624,195,1.624,196,1.624,197,2.152,198,1.254,199,1.254,200,1.128,201,1.624,202,1.624,203,2.526,204,1.946,205,1.412,206,1.412,207,1.412,208,2.695,209,1.412,210,1.254,211,1.254,212,1.946,213,1.946,214,1.412,215,1.946,216,1.254,217,1.946,218,2.196,219,1.412,220,1.412,221,1.412,222,1.412,223,0.933,224,1.95,225,1.754,226,1.59,227,2.196,228,1.95,229,0.476,230,0.875,231,0.805,232,1.211,233,0.563,234,0.875,235,0.399,236,0.563,237,0.436,238,0.563,239,0.399,240,0.563,241,0.399,242,0.563,243,0.436,244,0.875,245,0.364,246,0.476,247,0.563,248,0.399,249,0.74,250,0.399,251,0.399,252,0.563,253,0.399,254,0.74,255,0.563,256,0.399,257,0.563,258,0.399,259,0.563,260,0.436,261,0.563,262,0.399,263,0.563,264,0.399,265,0.563]],["title/components/AppComponent.html",[55,0.081,235,0.65]],["body/components/AppComponent.html",[2,0.398,3,0.26,4,0.174,6,0.897,7,0.581,9,0.811,12,0.811,13,0.72,21,1.268,30,0.687,31,0.033,32,0.616,33,0.509,35,1.478,37,0.565,38,0.616,40,0.459,41,0.26,42,0.403,43,0.892,53,0.024,54,0.024,55,0.148,56,0.753,57,1.061,58,1.061,59,1.061,63,1.408,64,1.727,65,1.424,66,0.687,67,0.687,68,1.268,70,1.268,72,0.354,73,0.734,75,1.961,76,1.76,91,1.491,92,0.734,96,1.689,104,0.978,111,0.897,140,1.061,166,0.976,171,1.359,177,0.753,229,0.897,230,1.378,231,1.268,232,1.621,233,1.061,234,1.378,235,1.15,236,1.061,237,0.823,238,1.061,239,0.753,240,1.061,241,0.753,242,1.061,243,0.823,244,1.378,245,0.687,246,0.897,247,1.061,248,0.753,249,1.165,250,0.753,251,0.753,252,1.061,253,0.753,254,1.37,255,1.061,256,0.753,257,1.061,258,0.753,259,1.061,260,0.823,261,1.061,262,0.753,263,1.061,264,0.753,265,1.061,266,3.063,267,2.763,268,4.766,269,4.766,270,3.613,271,2.946,272,2.663,273,2.946,274,4.766,275,2.505,276,3.669,277,3.669,278,3.669,279,2.127]],["title/modules/AppModule.html",[280,1.836,281,2.042]],["body/modules/AppModule.html",[1,3.165,2,0.229,3,0.195,4,0.13,31,0.033,38,0.719,40,0.265,41,0.353,42,0.302,53,0.019,54,0.019,56,1.178,61,1.772,65,0.617,66,0.515,67,0.515,94,1.579,111,0.672,166,1.453,167,1.791,168,1.019,176,1.594,229,0.672,235,1.243,237,1.224,239,1.178,241,1.178,243,1.224,245,1.075,246,0.672,248,1.178,249,0.957,250,1.178,251,1.243,253,1.12,256,1.12,258,1.12,260,1.224,262,1.12,264,1.178,279,1.594,280,2.27,281,4.253,282,1.772,283,3.807,284,4.149,285,2.295,286,2.295,287,2.295,288,2.295,289,2.295,290,3.165,291,2.617,292,2.617,293,3.269,294,2.295,295,1.594,296,2.75,297,3.916,298,3.916,299,3.269,300,1.996,301,3.916,302,2.75,303,3.916,304,3.269,305,2.295,306,3.916,307,1.996,308,3.916,309,3.269,310,2.524,311,2.75,312,2.75,313,3.807,314,2.75,315,2.75,316,1.445,317,1.996,318,2.75,319,2.75,320,2.75,321,2.75,322,2.75,323,2.75,324,2.75,325,2.75,326,2.75,327,2.75,328,3.916,329,3.916,330,2.75,331,1.996,332,3.916,333,2.295,334,2.75,335,2.75,336,3.916,337,2.295,338,3.916,339,1.445,340,1.772,341,3.269,342,2.75,343,1.996,344,2.75,345,2.75,346,2.842,347,1.594,348,1.996,349,2.75,350,2.75,351,1.996,352,1.996,353,1.594,354,1.996,355,2.75,356,2.75,357,2.75,358,2.75,359,2.75,360,2.75,361,2.75,362,2.75,363,2.75]],["title/interfaces/ApplicationInstance.html",[364,0.995,365,2.299]],["body/interfaces/ApplicationInstance.html",[2,0.359,3,0.306,4,0.204,7,0.652,12,1.121,13,0.534,31,0.032,32,0.713,34,1.621,41,0.306,53,0.026,54,0.026,72,0.415,73,0.812,103,1.89,146,1.735,364,1.79,365,3.828,366,3.595,367,3.595,368,2.496,369,3.126,370,5.94,371,5.94,372,5.94,373,5.94,374,4.312,375,4.312,376,5.94,377,4.959,378,3.122,379,4.959]],["title/components/AppsInfoComponent.html",[55,0.081,239,0.65]],["body/components/AppsInfoComponent.html",[2,0.382,3,0.218,4,0.094,6,0.486,7,0.63,9,0.524,10,3.076,12,0.987,13,0.765,16,1.984,18,1.784,19,1.24,21,0.819,24,2.809,30,0.705,31,0.033,32,0.673,33,0.7,34,0.819,35,1.24,36,1.351,37,0.706,38,0.573,40,0.192,41,0.141,42,0.218,43,0.576,44,0.89,45,0.705,53,0.015,54,0.015,55,0.117,56,0.408,57,0.575,58,0.575,59,0.575,63,1.002,64,1.595,65,1.367,66,0.372,67,0.372,68,0.819,70,0.819,72,0.192,73,0.474,74,1.751,75,1.395,76,1.751,80,1.859,91,1.127,92,0.474,93,1.045,94,1.51,95,1.781,103,1.859,104,0.632,111,0.486,120,0.625,124,2.516,125,1.57,131,1.089,140,0.575,142,1.445,144,1.127,146,1.707,149,1.05,158,1.57,159,1.445,160,1.801,165,0.737,166,1.002,167,0.678,168,0.737,169,0.801,170,0.737,172,0.529,173,0.575,174,0.529,175,1.089,177,0.632,179,1.395,180,1.182,182,0.801,183,0.678,184,1.14,229,0.486,230,0.89,231,0.819,232,1.225,233,0.575,234,0.89,235,0.408,236,0.575,237,0.446,238,0.575,239,0.87,240,0.575,241,0.408,242,0.575,243,0.446,244,0.89,245,0.372,246,0.486,247,0.575,248,0.408,249,0.752,250,0.408,251,0.408,252,0.575,253,0.408,254,0.752,255,0.575,256,0.408,257,0.575,258,0.408,259,0.575,260,0.446,261,0.575,262,0.408,263,0.575,264,0.408,265,0.575,271,2.744,307,2.733,348,4.501,369,4.162,374,2.234,375,1.444,377,2.569,378,2.744,380,5.176,381,1.444,382,2.569,383,2.569,384,4.237,385,4.237,386,4.237,387,4.237,388,4.237,389,4.237,390,4.237,391,4.237,392,4.237,393,3.537,394,4.237,395,4.237,396,4.237,397,2.656,398,4.237,399,3.078,400,3.078,401,3.078,402,1.989,403,3.078,404,1.989,405,3.078,406,3.078,407,2.569,408,3.078,409,1.989,410,2.234,411,3.078,412,2.873,413,1.989,414,1.989,415,1.989,416,1.989,417,1.989,418,1.989,419,1.989,420,1.66,421,1.989,422,1.989,423,1.618,424,1.989,425,1.989,426,1.351,427,3.124,428,1.989,429,3.078,430,3.078,431,3.078,432,1.989,433,1.989,434,1.989,435,1.66,436,2.234,437,1.989,438,1.989,439,3.078,440,1.66,441,2.569,442,1.444,443,1.444,444,2.182,445,3.142,446,1.66,447,1.989,448,1.989,449,1.989,450,1.989,451,1.989,452,1.989,453,1.989,454,1.989,455,1.989,456,1.989,457,1.989,458,1.989,459,1.989,460,1.989,461,1.989,462,1.989,463,2.569,464,3.078,465,3.078,466,1.989,467,1.045,468,1.989,469,1.989,470,1.989,471,1.989,472,1.989,473,3.764,474,3.764,475,1.989,476,1.989,477,1.989,478,1.989,479,1.989,480,1.989,481,1.989,482,1.989,483,1.989,484,1.989,485,3.078,486,3.078,487,3.078,488,3.078,489,3.078,490,3.078,491,3.078,492,2.569,493,3.078,494,3.078,495,3.078,496,3.078,497,3.078,498,2.569,499,2.569,500,3.078,501,3.078,502,3.078,503,3.078,504,3.078,505,4.237,506,3.078]],["title/guards/AuthGuard.html",[507,2.299,508,2.644]],["body/guards/AuthGuard.html",[2,0.312,3,0.266,4,0.178,7,0.531,9,0.822,13,0.599,17,1.083,30,0.904,31,0.033,32,0.531,33,0.67,37,0.9,38,0.658,40,0.361,41,0.266,42,0.411,43,0.701,45,0.904,53,0.024,54,0.024,67,0.904,72,0.361,73,0.577,92,0.744,112,3.244,120,1.679,142,1.823,144,0.996,172,0.996,173,1.083,174,0.996,175,1.083,177,0.769,179,1.981,225,2.171,226,1.969,267,2.171,339,1.969,368,2.171,412,2.315,442,2.719,507,2.719,508,4.032,509,3.745,510,3.506,511,5.847,512,3.745,513,3.859,514,3.745,515,3.745,516,5.649,517,4.463,518,5.649,519,3.745,520,1.517,521,4.463,522,4.83,523,1.517,524,2.414,525,3.881,526,2.414,527,2.414,528,4.032,529,2.414,530,3.126,531,4.463,532,3.126,533,3.506,534,3.745,535,3.126,536,3.745,537,3.745,538,3.745,539,3.745,540,3.126,541,4.032,542,5.649,543,4.83,544,1.969]],["title/injectables/AuthService.html",[291,1.518,523,0.995]],["body/injectables/AuthService.html",[2,0.264,3,0.224,4,0.15,7,0.474,9,0.735,12,1.038,13,0.707,17,0.914,19,1.739,30,0.808,31,0.033,32,0.58,33,0.598,34,1.148,37,0.916,38,0.662,40,0.305,41,0.224,42,0.347,44,1.248,45,0.92,53,0.021,54,0.021,67,1.093,72,0.305,73,0.665,74,1.933,78,2.649,81,2.999,92,0.665,94,1.719,95,1.801,100,2.127,104,0.649,117,2.782,120,1.543,125,1.956,131,0.914,142,1.078,144,0.841,147,2.638,158,1.599,165,1.171,170,1.599,172,0.841,173,0.914,174,1.148,175,0.914,177,1.008,179,1.821,180,1.355,182,1.273,183,1.078,184,1.599,193,1.273,291,2.069,295,1.832,339,1.661,378,2.775,407,2.638,412,2.069,510,3.833,513,3.764,521,4.102,523,1.543,524,2.037,525,4.012,526,2.037,527,3.678,530,2.638,531,3.602,532,2.638,540,2.638,545,2.638,546,3.602,547,4.408,548,5.705,549,5.28,550,3.204,551,4.762,552,3.161,553,4.316,554,4.914,555,3.161,556,5.28,557,2.069,558,4.316,559,4.102,560,3.161,561,3.161,562,3.161,563,3.161,564,3.161,565,3.161,566,2.294,567,3.161,568,3.161,569,4.316,570,2.638,571,2.638,572,3.602,573,2.638,574,3.161,575,3.161,576,3.161,577,3.161,578,3.161,579,3.161,580,3.161,581,3.161,582,2.294,583,2.638,584,3.161,585,3.161,586,3.161,587,3.161]],["title/components/ChangePasswordComponent.html",[55,0.081,241,0.65]],["body/components/ChangePasswordComponent.html",[2,0.267,3,0.149,4,0.099,6,0.512,7,0.583,9,0.545,12,1.068,13,0.733,17,0.926,18,2.868,19,1.754,21,1.159,25,2.064,29,1.52,30,0.926,31,0.033,32,0.637,33,0.686,34,1.248,37,0.855,38,0.583,40,0.202,41,0.149,42,0.23,43,0.6,44,1.357,45,0.728,47,1.214,50,1.535,53,0.016,54,0.016,55,0.12,56,0.43,57,0.606,58,0.606,59,0.606,63,1.034,64,1.608,65,1.284,66,0.392,67,1.057,68,0.852,70,0.852,72,0.202,73,0.493,74,1.773,75,1.441,76,1.773,78,1.004,79,3.161,80,1.911,81,3.178,86,2.325,88,2.325,89,2.064,90,2.325,91,1.159,92,0.493,93,1.101,94,1.535,95,1.811,96,1.37,100,1.29,101,3.397,102,2.064,103,1.911,104,0.894,105,2.325,107,2.325,108,2.325,111,1.446,114,2.325,115,3.737,117,2.064,118,2.064,120,1.221,121,1.683,122,2.064,123,3.189,124,1.405,125,1.613,126,2.325,128,1.856,129,2.835,130,1.485,131,1.357,132,2.325,133,1.683,134,2.325,135,2.254,136,3.95,144,0.557,146,1.29,158,1.613,159,1.092,160,1.368,165,0.776,166,0.557,167,0.714,168,0.776,169,0.844,170,0.776,171,0.776,172,0.557,173,0.606,174,0.557,175,0.606,176,1.214,177,0.798,179,0.776,180,1.221,182,0.844,183,0.714,184,1.186,185,3.406,186,3.161,187,1.911,190,1.748,193,0.844,194,1.748,196,1.748,197,2.254,198,1.35,199,1.35,200,1.214,206,1.52,207,1.52,208,2.325,209,1.52,210,2.064,211,2.064,214,1.52,218,2.325,219,1.52,220,1.52,221,1.52,222,1.52,223,1.004,227,2.325,228,2.807,229,0.512,230,0.926,231,0.852,232,1.259,233,0.606,234,0.926,235,0.43,236,0.606,237,0.47,238,0.606,239,0.43,240,0.606,241,0.894,242,0.606,243,0.47,244,0.926,245,0.392,246,0.512,247,0.606,248,0.43,249,0.783,250,0.43,251,0.43,252,0.606,253,0.43,254,0.783,255,0.606,256,0.43,257,0.606,258,0.43,259,0.606,260,0.47,261,0.606,262,0.43,263,0.606,264,0.43,265,0.606,353,3.457,588,4.978,589,1.748,590,3.203,591,3.203,592,4.355,593,4.355,594,2.524,595,3.203,596,3.203,597,2.095,598,2.095,599,2.095,600,2.095,601,2.095,602,3.203,603,2.095,604,2.095,605,2.095,606,2.095,607,2.095,608,2.095,609,2.095,610,2.095,611,2.095,612,3.203,613,1.52,614,2.095,615,2.095,616,2.095,617,1.748,618,1.35,619,2.095,620,2.095,621,2.095,622,2.095,623,2.095,624,2.095,625,2.095,626,2.095,627,2.095,628,2.095]],["title/interfaces/Cluster.html",[364,0.995,629,1.665]],["body/interfaces/Cluster.html",[2,0.435,3,0.301,4,0.201,7,0.649,12,1.125,13,0.525,16,2.731,24,3.581,31,0.032,32,0.7,33,0.912,34,1.614,41,0.301,53,0.026,54,0.026,72,0.408,73,0.804,124,1.859,364,1.777,369,3.075,375,4.288,379,4.931,410,3.075,629,3.105,630,3.536,631,5.907,632,5.907,633,5.907,634,5.907,635,5.907]],["title/interfaces/ComponentMockOption.html",[364,0.995,636,2.042]],["body/interfaces/ComponentMockOption.html",[2,0.379,3,0.193,4,0.129,7,0.687,12,0.954,17,1.125,19,1.098,31,0.033,32,0.499,33,0.629,34,0.725,35,2.109,36,2.297,38,0.544,40,0.263,41,0.322,42,0.299,43,0.51,44,1.125,45,0.51,53,0.019,54,0.019,55,0.139,63,1.035,64,1.035,65,0.873,66,0.729,67,0.85,68,0.725,70,0.725,72,0.263,73,0.599,75,1.01,76,1.426,85,1.757,91,0.725,92,0.42,96,1.317,104,0.559,121,1.433,124,1.992,130,0.93,140,0.788,142,2.188,144,1.635,159,1.327,160,0.856,166,0.725,171,1.01,172,0.725,173,0.788,174,1.035,175,0.788,177,0.559,180,1.987,181,1.979,216,1.757,245,0.51,246,1.28,249,0.666,279,1.58,316,1.433,364,1.555,423,2.046,426,1.196,443,1.979,520,0.856,544,2.046,550,2.256,566,1.979,582,1.979,629,2.046,636,3.191,637,1.979,638,1.979,639,2.926,640,1.979,641,2.825,642,2.373,643,2.825,644,2.276,645,2.276,646,3.249,647,0.93,648,1.307,649,2.276,650,2.276,651,1.757,652,1.979,653,1.979,654,2.276,655,2.825,656,3.789,657,2.276,658,3.295,659,2.276,660,5.048,661,3.249,662,3.249,663,1.979,664,3.249,665,2.276,666,3.249,667,2.276,668,3.249,669,3.249,670,2.276,671,3.249,672,3.249,673,1.979,674,3.249,675,1.979,676,3.249,677,1.979,678,3.249,679,1.979,680,3.249,681,5.129,682,2.276,683,2.276,684,2.276,685,3.789,686,3.249,687,3.249,688,3.249,689,3.249,690,3.249,691,3.249,692,3.249,693,3.249,694,3.249,695,3.249,696,3.249,697,3.249,698,2.509,699,2.276,700,1.757,701,2.276,702,3.898,703,5.048,704,3.898,705,2.276,706,1.979,707,2.276,708,2.276,709,2.276,710,1.58,711,2.276,712,1.979,713,1.307,714,1.58,715,2.276,716,2.276,717,2.276]],["title/components/DebugPanelComponent.html",[55,0.081,245,0.593]],["body/components/DebugPanelComponent.html",[2,0.367,3,0.152,4,0.102,6,0.523,7,0.677,9,0.554,12,0.806,13,0.692,17,1.274,19,1.312,21,0.867,30,0.825,31,0.033,32,0.548,33,0.741,34,0.867,35,2.206,36,2.19,37,0.73,38,0.484,40,0.206,41,0.28,42,0.235,43,0.61,44,0.942,45,0.401,53,0.016,54,0.016,55,0.15,56,0.439,57,0.619,58,0.619,59,0.619,63,1.049,64,1.623,65,1.291,66,0.825,67,0.825,68,0.867,70,0.867,72,0.206,73,0.502,74,1.383,75,1.46,76,1.783,85,1.38,91,1.172,92,0.502,93,1.126,96,1.457,104,1.024,111,0.523,121,1.712,124,1.73,130,0.73,140,0.942,142,2.133,144,1.566,149,1.111,159,1.111,160,0.673,166,0.57,171,0.793,172,0.57,173,0.619,174,1.049,175,0.619,177,0.439,180,1.965,181,1.554,183,1.502,216,2.099,223,1.026,229,0.523,230,0.942,231,0.867,232,1.274,233,0.619,234,0.942,235,0.439,236,0.619,237,0.48,238,0.619,239,0.439,240,0.619,241,0.439,242,0.619,243,0.48,244,0.942,245,0.825,246,1.365,247,0.619,248,0.439,249,0.964,250,0.439,251,0.439,252,0.619,253,0.439,254,0.796,255,0.619,256,0.439,257,0.619,258,0.439,259,0.619,260,0.48,261,0.619,262,0.439,263,0.619,264,0.439,265,0.619,279,1.241,316,2.984,364,1.023,423,2.072,426,0.94,443,1.554,520,0.673,544,1.712,550,1.888,566,1.554,582,2.364,629,1.712,636,3.217,637,4.121,638,1.554,639,3.054,640,1.554,641,2.364,642,2.625,643,2.364,644,1.787,645,1.787,646,2.719,647,0.73,648,1.026,649,2.719,650,2.719,651,2.099,652,3.197,653,3.623,654,1.787,655,2.364,656,3.29,657,1.787,658,2.861,659,1.787,660,4.805,661,2.719,662,2.719,663,1.554,664,2.719,665,1.787,666,2.719,667,1.787,668,2.719,669,2.719,670,1.787,671,2.719,672,2.719,673,1.554,674,2.719,675,1.554,676,2.719,677,1.554,678,2.719,679,1.554,680,2.719,681,4.957,682,2.719,683,1.787,684,1.787,685,3.677,686,2.719,687,2.719,688,2.719,689,2.719,690,2.719,691,2.719,692,2.719,693,2.719,694,2.719,695,2.719,696,2.719,697,2.719,698,2.541,699,2.719,700,1.38,701,1.787,702,3.711,703,4.805,704,3.711,705,1.787,706,1.554,707,2.719,708,2.719,709,3.677,710,1.241,711,1.787,712,2.861,713,1.026,714,1.241,715,2.719,716,2.719,717,1.787,718,3.257,719,3.257,720,3.257,721,3.257,722,2.141,723,2.141,724,2.141,725,2.141,726,2.141,727,2.141,728,2.141,729,2.141,730,3.257,731,3.257,732,3.257]],["title/components/EditClusterComponent.html",[55,0.081,248,0.65]],["body/components/EditClusterComponent.html",[2,0.31,3,0.182,4,0.121,6,0.626,7,0.619,9,0.633,12,1.042,13,0.732,21,0.989,30,0.82,31,0.033,32,0.619,33,0.607,34,1.359,37,0.675,38,0.604,40,0.247,41,0.182,42,0.281,43,0.696,44,1.075,45,0.696,53,0.018,54,0.018,55,0.13,56,0.525,57,0.74,58,0.74,59,0.74,63,1.165,64,1.664,65,1.308,66,0.479,67,0.479,68,0.989,70,0.989,72,0.247,73,0.573,74,1.856,75,1.623,76,1.856,80,2.11,89,2.397,91,1.279,92,0.573,93,1.345,94,1.629,95,1.921,96,1.463,100,1.498,101,3.381,103,1.632,104,0.899,111,1.175,118,2.397,120,1.376,121,1.954,122,2.397,123,3.434,124,2.11,125,1.974,129,1.226,130,1.268,131,0.74,140,1.39,144,0.681,146,1.498,158,1.378,159,1.268,160,1.51,165,0.948,166,0.681,167,0.873,168,0.948,169,1.031,170,0.948,171,0.948,172,0.681,173,0.74,174,0.681,175,0.74,177,0.899,179,1.623,180,1.376,182,1.031,183,0.873,184,1.378,193,1.031,197,2.787,198,1.649,199,1.649,200,1.483,223,1.226,228,3.099,229,0.626,230,1.075,231,0.989,232,1.39,233,0.74,234,1.075,235,0.525,236,0.74,237,0.574,238,0.74,239,0.525,240,0.74,241,0.525,242,0.74,243,0.574,244,1.075,245,0.479,246,0.626,247,0.74,248,0.987,249,1.445,250,0.525,251,0.525,252,0.74,253,0.525,254,0.909,255,0.74,256,0.525,257,0.74,258,0.525,259,0.74,260,0.574,261,0.74,262,0.525,263,0.74,264,0.525,265,0.74,343,4.337,426,2.11,444,2.787,467,1.345,492,3.104,520,0.804,618,1.649,629,2.89,647,0.873,648,1.226,679,1.857,698,2.397,710,2.155,713,1.782,714,2.155,733,4.337,734,2.136,735,3.718,736,3.718,737,4.808,738,4.808,739,5.328,740,4.808,741,3.718,742,3.718,743,2.559,744,2.559,745,3.718,746,2.559,747,2.559,748,2.559,749,2.559,750,2.559,751,2.559,752,2.559,753,4.38,754,3.718,755,2.559,756,4.38,757,2.559]],["title/components/EditUserComponent.html",[55,0.081,250,0.65]],["body/components/EditUserComponent.html",[2,0.275,3,0.155,4,0.103,6,0.533,7,0.616,9,0.562,12,1.035,13,0.749,17,1.285,21,0.878,30,0.894,31,0.033,32,0.626,33,0.662,34,1.06,37,0.828,38,0.59,40,0.21,41,0.155,42,0.239,43,0.618,44,1.152,45,0.746,53,0.016,54,0.016,55,0.133,56,0.447,57,0.63,58,0.63,59,0.63,62,1.581,63,1.06,64,1.618,65,1.296,66,0.408,67,1.106,68,0.878,69,2.755,70,0.878,71,2.755,72,0.21,73,0.508,74,1.79,75,1.476,76,1.871,78,2.501,80,2.095,81,2.825,83,2.576,84,2.576,87,2.755,89,2.127,91,1.182,92,0.508,94,1.554,95,1.833,96,1.388,100,1.329,101,3.116,103,1.448,104,0.98,109,2.755,111,1.429,112,3.037,113,3.325,118,2.127,120,1.5,121,2.336,122,2.127,123,3.238,124,1.95,125,1.991,130,0.743,131,0.63,138,1.819,141,1.263,142,1.359,143,1.263,144,1.06,146,1.329,149,0.743,150,2.336,156,1.819,157,1.819,158,1.861,159,1.125,160,1.036,162,1.819,165,0.807,166,0.58,167,0.743,168,0.807,169,0.878,170,0.807,171,0.807,172,0.58,173,0.63,174,0.58,175,0.63,177,0.912,178,3.325,179,1.223,180,1.251,182,0.878,183,0.743,184,1.223,191,1.819,193,0.878,197,2.576,198,1.404,199,1.404,200,1.263,223,1.044,224,2.127,225,1.913,226,1.735,228,2.864,229,0.533,230,0.954,231,0.878,232,1.285,233,0.63,234,0.954,235,0.447,236,0.63,237,0.489,238,0.63,239,0.447,240,0.63,241,0.677,242,0.63,243,0.489,244,0.954,245,0.408,246,0.533,247,0.63,248,0.447,249,1.394,250,0.912,251,0.447,252,0.63,253,0.447,254,0.807,255,0.63,256,0.447,257,0.63,258,0.447,259,0.63,260,0.489,261,0.63,262,0.447,263,0.63,264,0.447,265,0.63,271,2.825,272,1.581,273,2.336,275,1.735,347,3.526,353,1.263,354,1.581,397,1.735,412,2.13,427,2.127,436,2.395,467,1.145,594,2.768,613,2.892,677,1.581,698,2.127,710,1.263,713,1.044,714,1.263,733,4.416,758,3.709,759,4.444,760,2.755,761,3.709,762,3.3,763,3.3,764,2.179,765,2.755,766,2.179,767,1.913,768,2.755,769,2.179,770,2.179,771,2.179,772,1.913,773,3.3,774,2.179,775,3.3,776,2.179,777,2.755,778,2.179,779,2.179,780,2.179,781,2.179,782,3.3,783,2.179,784,2.755,785,2.127,786,1.819,787,1.819,788,1.404,789,1.819]],["title/injectables/ErrorHandlerService.html",[310,2.042,523,0.995]],["body/injectables/ErrorHandlerService.html",[2,0.297,3,0.253,4,0.169,7,0.391,9,0.888,13,0.579,30,0.667,31,0.033,32,0.391,33,0.493,34,0.947,37,0.548,38,0.513,40,0.343,41,0.253,42,0.391,43,0.875,44,1.029,53,0.023,54,0.023,67,0.977,72,0.343,92,0.804,100,2.488,104,0.959,129,2.884,131,1.029,140,1.029,153,2.584,205,2.584,223,1.706,231,0.947,295,2.064,309,3.901,310,3.012,333,2.972,410,2.584,423,1.871,517,2.972,520,1.118,523,1.639,535,2.972,541,3.901,544,2.456,547,3.901,570,2.972,571,2.972,572,2.972,647,1.214,651,2.295,653,2.584,700,2.295,702,4.133,704,4.147,767,2.709,790,4.355,791,2.972,792,4.673,793,3.56,794,4.673,795,5.54,796,3.56,797,3.901,798,5.217,799,5.305,800,3.56,801,3.56,802,3.56,803,3.56,804,3.56,805,3.56,806,4.673,807,3.56,808,3.56,809,3.56,810,3.56,811,3.56,812,4.673,813,3.56,814,4.673,815,4.673,816,3.56,817,3.56,818,3.56,819,3.56,820,2.584,821,3.56,822,3.56,823,2.295,824,4.673,825,3.56,826,3.56,827,3.56,828,3.56,829,3.56,830,3.56,831,3.56,832,3.56,833,2.972,834,3.56,835,3.56,836,3.56,837,2.972,838,2.972,839,3.56,840,3.56,841,3.56,842,2.972,843,3.56,844,3.56,845,2.972,846,3.56,847,3.56,848,3.56,849,3.56,850,3.56,851,3.56,852,3.56,853,3.56,854,4.673,855,3.56,856,3.56,857,3.56,858,3.56,859,3.56,860,3.56,861,3.56,862,3.56,863,3.56]],["title/components/LoginComponent.html",[55,0.081,251,0.65]],["body/components/LoginComponent.html",[2,0.28,3,0.158,4,0.106,6,0.545,7,0.557,9,0.572,12,1,13,0.71,17,0.645,18,2.938,19,1.353,21,1.196,25,1.437,30,0.842,31,0.033,32,0.595,33,0.623,34,1.075,37,0.869,38,0.578,40,0.215,41,0.158,42,0.245,43,0.629,44,1.168,45,0.629,47,1.292,50,1.61,53,0.017,54,0.017,55,0.123,56,0.457,57,0.645,58,0.645,59,0.645,63,1.075,64,1.624,65,1.302,66,0.417,67,0.903,68,0.893,70,0.893,72,0.215,73,0.517,76,1.412,78,1.61,79,3.263,81,1.172,86,2.437,88,2.437,90,2.437,91,1.196,92,0.517,100,1.353,101,2.938,102,2.164,103,2.224,104,0.923,105,2.437,107,2.437,108,2.437,111,0.545,114,2.437,115,3.818,117,2.898,120,1.055,125,1.244,126,2.437,128,1.946,129,2.868,130,1.533,131,1.3,132,2.437,133,1.765,134,2.932,135,1.946,136,4.096,140,0.645,142,1.145,144,0.593,149,0.76,150,1.765,151,2.803,158,1.878,159,0.76,166,0.593,167,0.76,176,1.292,177,0.923,185,3.679,186,2.932,187,1.773,193,0.898,201,1.861,202,1.861,203,2.803,205,1.618,206,1.618,207,1.618,208,2.437,209,1.618,210,1.437,211,1.437,218,2.437,219,1.618,220,1.618,221,1.618,222,1.618,224,1.437,225,1.292,226,1.172,227,2.437,229,0.545,230,0.971,231,0.893,232,1.3,233,0.645,234,0.971,235,0.457,236,0.645,237,0.5,238,0.645,239,0.457,240,0.645,241,0.457,242,0.645,243,0.5,244,0.971,245,0.629,246,1.239,247,0.645,248,0.457,249,0.821,250,0.457,251,0.923,252,0.645,253,0.457,254,1.099,255,0.645,256,0.457,257,0.645,258,0.457,259,0.645,260,0.5,261,0.645,262,0.457,263,0.645,264,0.457,265,0.645,270,2.898,273,2.363,275,2.123,291,2.521,316,1.172,317,1.618,331,1.618,339,1.172,368,1.946,374,2.437,378,2.363,397,1.765,412,1.936,426,1.474,427,2.164,510,1.618,513,3.39,525,2.932,526,1.437,527,2.604,544,1.172,550,3.271,557,1.61,559,2.803,573,1.861,583,3.753,617,1.861,618,1.437,639,2.898,658,2.437,700,1.437,702,2.604,704,2.604,772,2.606,820,3.263,864,1.861,865,3.358,866,3.358,867,4.496,868,4.496,869,4.496,870,3.753,871,2.229,872,5.068,873,3.358,874,2.229,875,2.229,876,2.229,877,2.229,878,2.229,879,3.358,880,1.765,881,3.358,882,2.803,883,3.358,884,2.803,885,2.229,886,2.229,887,2.229,888,2.229,889,2.437,890,2.229,891,2.229,892,2.229,893,3.358,894,2.229,895,2.229,896,4.04,897,2.229,898,2.229,899,2.229,900,2.229,901,2.229,902,4.496,903,2.229,904,2.229,905,2.229,906,2.229,907,2.229,908,1.618,909,1.861,910,1.618,911,1.618,912,1.861,913,2.229]],["title/components/MainComponent.html",[55,0.081,253,0.65]],["body/components/MainComponent.html",[2,0.421,3,0.285,4,0.191,6,0.982,7,0.555,9,0.86,13,0.626,21,1.344,31,0.033,37,0.619,38,0.441,40,0.387,41,0.285,42,0.441,43,0.946,53,0.025,54,0.025,55,0.152,56,0.824,57,1.162,58,1.162,59,1.162,63,1.47,64,1.746,65,1.426,66,0.752,67,0.752,68,1.344,70,1.344,72,0.387,91,1.542,92,0.851,104,0.824,111,0.982,229,0.982,230,1.461,231,1.344,232,1.676,233,1.162,234,1.461,235,0.824,236,1.162,237,0.901,238,1.162,239,0.824,240,1.162,241,0.824,242,1.162,243,0.901,244,1.461,245,0.752,246,0.982,247,1.162,248,0.824,249,1.235,250,0.824,251,0.824,252,1.162,253,1.19,254,1.417,255,1.162,256,0.824,257,1.162,258,0.824,259,1.162,260,0.901,261,1.162,262,0.824,263,1.162,264,0.824,265,1.162,520,1.262,647,1.37,648,1.926,914,3.354,915,5.051,916,5.051,917,5.051,918,4.018,919,4.018]],["title/interfaces/Notification.html",[364,0.995,642,1.518]],["body/interfaces/Notification.html",[2,0.328,3,0.279,4,0.186,12,1.071,24,3.17,31,0.033,32,0.684,33,0.854,36,1.724,37,0.842,38,0.432,40,0.379,41,0.353,42,0.432,45,0.933,50,2.388,53,0.025,54,0.025,66,0.736,72,0.527,73,0.767,92,0.605,96,1.045,130,1.961,133,2.066,149,1.34,160,1.806,177,0.806,187,1.724,267,2.278,364,1.564,520,1.234,523,1.564,529,2.533,557,1.884,642,2.844,647,1.34,713,2.756,823,2.533,880,2.066,920,2.853,921,3.28,922,4.158,923,3.28,924,3.28,925,2.853,926,2.853,927,2.853,928,2.853,929,3.28,930,3.28,931,3.28,932,2.853,933,4.158,934,3.28,935,3.28,936,3.28,937,3.28,938,3.28,939,3.28,940,3.28,941,3.28,942,3.28,943,3.28,944,4.158,945,2.853,946,3.28,947,4.565,948,3.28,949,2.853,950,3.28,951,3.28,952,3.28,953,3.28,954,3.28]],["title/components/NotificationsComponent.html",[55,0.081,256,0.65]],["body/components/NotificationsComponent.html",[2,0.44,3,0.224,4,0.15,6,0.771,7,0.579,9,0.733,13,0.706,19,1.736,21,1.146,30,0.807,31,0.033,32,0.579,33,0.79,35,1.27,37,0.664,38,0.626,40,0.304,41,0.224,42,0.346,43,0.807,45,0.59,53,0.021,54,0.021,55,0.141,56,0.647,57,0.912,58,0.912,59,0.912,63,1.306,64,1.7,65,1.391,66,0.59,67,0.59,68,1.146,70,1.146,72,0.304,73,0.664,74,1.948,75,1.818,91,1.403,92,0.664,94,1.718,95,1.99,96,1.553,102,3.4,104,1.007,111,0.771,128,1.828,133,2.265,140,0.912,144,1.306,149,1.47,165,1.168,168,1.168,169,1.27,170,1.168,171,1.168,172,0.839,173,0.912,174,0.839,175,0.912,177,1.007,180,1.353,183,1.47,184,1.596,187,1.891,229,0.771,230,1.246,231,1.146,232,1.525,233,0.912,234,1.246,235,0.647,236,0.912,237,0.707,238,0.912,239,0.647,240,0.912,241,0.647,242,0.912,243,0.707,244,1.246,245,0.59,246,0.771,247,0.912,248,0.647,249,1.053,250,0.647,251,0.647,252,0.912,253,0.647,254,1.053,255,0.912,256,1.083,257,0.912,258,0.647,259,0.912,260,0.707,261,0.912,262,0.647,263,0.912,264,0.647,265,0.912,520,0.99,546,3.597,642,2.848,647,1.076,651,2.778,652,3.128,655,2.289,797,3.597,823,3.4,880,2.265,925,3.128,926,4.009,927,4.313,928,3.128,945,2.289,955,2.633,956,4.309,957,4.309,958,3.154,959,4.309,960,3.154,961,3.154,962,3.154,963,2.633,964,3.154,965,2.633,966,3.154,967,3.154,968,3.154,969,3.154,970,4.309,971,4.309,972,4.309,973,4.309]],["title/injectables/NotificationsService.html",[96,0.843,523,0.995]],["body/injectables/NotificationsService.html",[2,0.31,3,0.263,4,0.176,7,0.527,9,0.817,12,0.906,13,0.74,24,2.151,30,0.899,31,0.033,32,0.585,33,0.78,36,2.107,37,0.92,38,0.408,40,0.358,41,0.341,42,0.408,45,0.899,50,2.302,53,0.024,54,0.024,66,1.054,72,0.513,73,0.74,92,0.82,96,1.278,104,0.985,130,1.266,133,2.524,149,1.638,160,1.166,177,1.092,187,1.629,267,2.151,364,1.166,520,1.166,523,1.672,529,2.392,557,1.779,642,2.984,647,1.266,713,1.779,823,3.095,880,2.524,920,2.694,921,4.699,922,4.009,923,4.009,924,3.098,925,4.086,926,3.486,927,3.486,928,3.486,929,3.098,930,3.098,931,3.098,932,3.486,933,4.699,934,4.009,935,4.009,936,4.009,937,4.009,938,4.699,939,3.098,940,3.098,941,3.098,942,3.098,943,3.098,944,4.009,945,2.694,946,3.098,947,4.444,948,3.098,949,2.694,950,3.098,951,3.098,952,3.098,953,3.098,954,3.098,963,3.098,974,4.802,975,4.802,976,3.712,977,3.712,978,3.712,979,3.712,980,3.712,981,3.712]],["title/components/OrganizationComponent.html",[55,0.081,258,0.65]],["body/components/OrganizationComponent.html",[2,0.44,3,0.146,4,0.098,6,0.503,7,0.595,9,0.538,12,1.003,13,0.724,17,0.914,21,0.841,30,0.72,31,0.033,32,0.618,33,0.533,36,2.043,37,0.717,38,0.618,40,0.198,41,0.146,42,0.226,43,0.592,45,0.872,53,0.019,54,0.016,55,0.147,56,0.649,57,0.595,58,0.595,59,0.595,61,1.327,63,1.023,64,1.614,65,1.239,66,0.989,67,1.188,68,0.841,70,0.841,72,0.198,73,0.487,74,1.766,76,1.355,78,1.515,80,2.245,83,1.832,84,1.193,85,2.782,91,1.148,92,0.487,94,1.527,95,1.801,96,1.361,100,1.875,103,1.387,104,0.955,111,0.94,112,2.022,120,1.462,125,1.599,129,1.515,130,1.078,131,0.595,135,1.832,140,0.595,141,2.23,142,1.472,143,2.23,144,1.023,146,1.273,149,1.312,150,2.583,158,2.048,159,1.676,160,0.993,165,0.763,166,0.548,167,0.702,168,0.763,169,0.829,170,0.763,171,0.763,172,0.548,173,0.595,174,0.548,175,0.595,177,0.955,179,1.599,180,1.208,182,0.829,183,0.702,184,1.171,187,1.387,193,1.55,195,3.602,229,0.503,230,0.914,231,0.841,232,1.248,233,0.595,234,0.914,235,0.422,236,0.595,237,0.462,238,0.595,239,0.422,240,0.595,241,0.422,242,0.595,243,0.462,244,0.914,245,0.385,246,0.503,247,0.595,248,0.422,249,1.291,250,0.649,251,0.422,252,0.595,253,0.422,254,0.773,255,0.595,256,0.422,257,0.595,258,0.886,259,0.595,260,0.462,261,0.595,262,0.422,263,0.595,264,0.649,265,0.595,270,2.782,271,1.082,272,1.494,273,2.268,275,1.661,292,2.068,340,1.327,341,1.718,346,2.294,347,1.193,351,1.494,352,1.494,378,1.661,393,3.602,397,2.583,412,1.844,423,1.661,426,1.688,427,2.037,444,1.193,445,3.602,467,2.447,520,0.647,533,2.294,594,1.832,647,0.702,648,0.987,663,1.494,706,2.294,767,1.832,772,2.848,785,3.167,788,2.48,880,1.661,889,2.294,908,2.792,910,2.792,911,2.792,982,1.718,983,3.16,984,3.16,985,4.407,986,4.914,987,4.914,988,2.638,989,3.16,990,4.315,991,3.211,992,3.16,993,2.059,994,2.059,995,3.16,996,2.059,997,3.16,998,2.059,999,2.059,1000,3.379,1001,2.059,1002,2.059,1003,2.059,1004,2.059,1005,5.415,1006,2.059,1007,3.16,1008,2.059,1009,2.059,1010,4.315,1011,2.059,1012,3.847,1013,4.315,1014,3.16,1015,1.718,1016,1.718,1017,2.059,1018,1.718,1019,4.315,1020,2.059,1021,3.16,1022,3.16,1023,4.315,1024,4.315,1025,2.059,1026,1.718,1027,2.059,1028,2.059,1029,2.059,1030,2.059,1031,3.16,1032,3.16,1033,3.16,1034,2.638,1035,3.16,1036,3.16,1037,2.294,1038,3.16,1039,3.16,1040,3.16]],["title/components/SidebarComponent.html",[55,0.081,262,0.65]],["body/components/SidebarComponent.html",[2,0.381,3,0.163,4,0.109,6,0.561,7,0.642,9,0.584,12,1.038,13,0.732,21,0.913,30,0.643,31,0.033,32,0.6,33,0.476,37,0.752,38,0.634,40,0.221,41,0.163,42,0.252,43,0.643,45,0.854,53,0.017,54,0.017,55,0.135,56,0.471,57,0.664,58,0.664,59,0.664,63,1.094,64,1.64,65,1.311,66,0.43,67,1.045,68,0.913,70,0.913,72,0.221,73,0.529,74,1.812,76,1.433,78,2.617,80,2.396,83,1.33,84,1.33,91,1.214,92,0.529,94,1.536,95,1.862,100,1.383,104,1.002,111,0.561,112,2.87,120,0.721,125,1.69,128,1.33,131,0.664,135,1.989,140,1.189,141,1.33,142,0.783,143,1.33,144,0.611,146,1.838,149,1.17,150,2.693,158,2.023,159,1.402,160,1.078,165,0.85,166,0.611,167,0.783,168,0.85,169,0.925,170,0.85,172,0.611,173,0.664,174,0.611,175,0.664,177,0.936,179,1.809,180,1.291,182,0.925,183,0.783,184,1.271,193,0.925,229,0.561,230,0.992,231,0.913,232,1.319,233,0.664,234,0.992,235,0.471,236,0.664,237,0.515,238,0.664,239,0.471,240,0.664,241,0.471,242,0.664,243,0.515,244,0.992,245,0.643,246,1.253,247,0.664,248,0.471,249,1.253,250,0.704,251,0.471,252,0.664,253,0.471,254,1.253,255,0.664,256,0.471,257,0.664,258,0.471,259,0.664,260,0.515,261,0.664,262,0.936,263,0.664,264,0.471,265,0.664,270,2.94,271,1.206,273,2.398,275,2.161,291,2.187,292,2.187,316,1.206,317,1.666,331,1.666,339,1.206,346,1.666,347,1.33,351,1.666,352,1.666,368,1.989,378,1.804,397,2.693,426,1.804,444,2.383,467,2.161,513,3.423,520,0.721,533,2.491,544,1.804,550,1.989,551,4.277,594,3.388,639,2.94,641,3.545,643,3.311,647,0.783,648,1.1,673,1.666,767,1.989,772,2.97,785,2.212,788,1.479,820,2.491,833,2.865,870,3.808,882,3.431,889,2.491,908,2.491,909,1.916,910,2.491,911,2.491,912,1.916,965,1.916,988,3.808,991,3.431,1000,3.311,1015,1.916,1016,1.916,1018,1.916,1026,1.916,1041,1.916,1042,3.432,1043,3.432,1044,3.432,1045,2.295,1046,3.432,1047,2.295,1048,3.432,1049,3.432,1050,2.295,1051,2.295,1052,2.295,1053,3.432,1054,2.295,1055,2.295,1056,2.295,1057,2.295,1058,2.295,1059,2.295,1060,2.295,1061,4.111,1062,3.431,1063,4.111,1064,2.295,1065,3.432,1066,2.295,1067,2.295,1068,2.295,1069,2.295,1070,2.295,1071,2.295,1072,2.295,1073,2.865,1074,3.432,1075,3.432]],["title/pipes/TruncatePipe.html",[0,1.665,290,1.836]],["body/pipes/TruncatePipe.html",[0,3.006,2,0.362,3,0.308,4,0.206,6,1.061,7,0.628,9,0.738,10,3.15,11,4.422,12,1.071,13,0.538,15,4.422,22,5.098,30,0.812,31,0.033,32,0.477,33,0.601,34,1.154,35,2.399,36,2.325,37,0.881,38,0.477,39,4.422,40,0.418,41,0.308,42,0.477,43,0.812,44,1.255,45,0.812,52,3.622,53,0.026,54,0.026,66,0.992,153,3.846,290,3.452,838,4.422,1076,3.622,1077,5.298,1078,4.339,1079,5.298,1080,5.298,1081,5.298,1082,5.298,1083,5.298,1084,5.298,1085,5.298,1086,4.422,1087,4.339,1088,4.339]],["title/injectables/UpdateEventsService.html",[292,1.518,523,0.995]],["body/injectables/UpdateEventsService.html",[2,0.395,3,0.336,4,0.224,13,0.691,17,1.614,31,0.032,35,1.906,38,0.613,40,0.456,41,0.336,42,0.52,53,0.028,54,0.028,72,0.456,73,0.86,92,0.914,140,1.368,267,2.743,292,2.675,523,1.864,524,3.05,529,3.05,1089,4.954,1090,3.95,1091,6.13,1092,5.58,1093,5.935]],["title/components/UserInfoComponent.html",[55,0.081,264,0.65]],["body/components/UserInfoComponent.html",[2,0.403,3,0.159,4,0.106,6,0.549,7,0.596,9,0.575,12,1.067,13,0.748,21,0.898,30,0.632,31,0.033,32,0.639,33,0.468,37,0.783,38,0.61,40,0.216,41,0.159,42,0.247,43,0.632,44,0.649,45,0.76,53,0.017,54,0.017,55,0.134,56,0.461,57,0.649,58,0.649,59,0.649,63,1.079,64,1.635,65,1.268,66,0.42,67,1.166,68,0.898,70,0.898,72,0.216,73,0.52,74,1.803,75,1.503,76,1.865,80,2.123,81,2.771,83,2.615,91,1.2,92,0.52,93,1.18,94,1.569,95,1.85,96,1.403,104,0.832,111,1.357,112,2.971,120,1.274,125,1.671,129,1.076,130,1.151,131,0.649,140,0.976,141,1.301,142,1.151,143,1.301,144,0.898,146,1.36,149,0.766,150,2.371,158,1.671,159,1.151,160,1.06,165,0.832,166,0.597,168,0.832,169,0.904,170,0.832,171,0.832,172,0.597,173,0.649,174,0.597,175,0.649,177,0.926,179,1.503,180,1.274,182,0.904,183,0.766,184,1.251,193,0.904,197,1.957,200,1.301,214,2.45,216,2.176,223,1.076,224,2.176,225,1.957,226,1.774,229,0.549,230,0.976,231,0.898,232,1.305,233,0.649,234,0.976,235,0.461,236,0.649,237,0.503,238,0.649,239,0.461,240,0.649,241,0.693,242,0.649,243,0.503,244,0.976,245,0.42,246,0.549,247,0.649,248,0.461,249,1.242,250,0.461,251,0.461,252,0.649,253,0.461,254,0.825,255,0.649,256,0.461,257,0.649,258,0.461,259,0.649,260,0.503,261,0.649,262,0.461,263,0.649,264,0.926,265,0.649,271,2.851,273,2.371,275,2.132,279,1.301,340,3.916,353,1.301,354,1.63,381,1.63,382,2.818,383,2.818,397,1.774,412,1.076,420,1.874,426,1.481,435,1.874,436,2.45,442,1.63,444,1.957,446,1.874,467,1.774,520,0.705,594,2.946,613,3.511,618,1.447,647,0.766,648,1.076,675,1.63,710,1.957,713,1.618,714,1.957,758,3.766,760,2.818,761,3.766,765,2.818,767,1.957,768,2.818,772,1.957,777,2.818,784,1.874,785,2.176,786,1.874,787,1.874,788,1.447,789,1.874,880,2.371,985,3.766,1062,1.874,1073,2.818,1086,3.766,1094,5.071,1095,5.082,1096,5.082,1097,4.512,1098,3.376,1099,2.245,1100,2.245,1101,3.376,1102,5.272,1103,2.245,1104,2.245,1105,2.245,1106,2.245,1107,4.512,1108,2.245,1109,2.245,1110,2.245,1111,2.245,1112,2.245,1113,2.245,1114,3.376,1115,1.874,1116,1.874,1117,2.245,1118,2.245,1119,3.376,1120,2.245,1121,2.245]],["title/coverage.html",[1122,3.607]],["body/coverage.html",[0,2.282,1,1.848,4,0.151,5,2.662,17,0.922,31,0.033,32,0.35,53,0.021,54,0.021,55,0.162,56,0.654,60,2.662,61,2.055,62,3.152,74,1.001,84,1.848,94,0.922,95,1.087,96,0.848,172,0.848,174,0.848,187,2.775,235,0.654,237,0.715,239,0.654,241,0.654,243,0.715,245,0.597,248,0.654,250,0.654,251,0.654,253,0.654,256,0.654,258,0.654,260,0.715,262,0.654,264,0.654,266,2.662,290,1.848,291,1.528,292,1.528,310,2.055,313,2.662,316,2.595,340,2.055,343,2.315,347,1.848,348,2.315,353,1.848,364,1.741,365,2.315,366,2.662,367,2.662,380,2.662,381,3.152,441,2.662,498,3.624,499,5.386,523,1.797,528,2.662,545,2.662,557,2.081,588,2.662,589,2.662,629,1.676,630,2.662,636,2.055,637,3.583,638,3.583,640,2.315,642,1.528,733,3.152,734,2.662,790,2.662,791,2.662,864,2.662,914,2.662,920,3.152,955,2.662,982,2.662,1034,2.662,1041,2.662,1076,2.662,1089,2.662,1090,2.662,1094,2.662,1115,2.662,1116,2.662,1122,2.662,1123,2.662,1124,3.189,1125,3.189,1126,3.189,1127,3.189,1128,3.189,1129,3.189,1130,6.108,1131,3.189,1132,4.342,1133,3.189,1134,3.189,1135,3.189,1136,4.342,1137,3.189,1138,3.189,1139,3.189,1140,3.189,1141,3.189,1142,3.189,1143,4.937,1144,4.342,1145,3.189,1146,3.189,1147,3.189,1148,3.189,1149,6.323,1150,6.323,1151,3.189,1152,3.189,1153,3.189,1154,3.189,1155,3.189,1156,3.189,1157,3.189,1158,3.189,1159,3.189,1160,3.189,1161,3.189,1162,4.342,1163,3.189,1164,3.189,1165,3.189,1166,3.189,1167,3.189,1168,3.189,1169,3.189,1170,3.189,1171,3.189,1172,4.342,1173,3.189,1174,3.189,1175,3.189,1176,3.189,1177,3.189,1178,3.189,1179,3.189,1180,3.189,1181,3.189,1182,3.189,1183,3.189,1184,3.189,1185,6.291,1186,3.189,1187,3.189,1188,3.189,1189,3.189,1190,3.189,1191,3.189,1192,3.189,1193,3.189,1194,3.189,1195,3.189,1196,3.624,1197,3.624,1198,3.624,1199,3.189]],["title/dependencies.html",[282,2.455,1200,2.208]],["body/dependencies.html",[31,0.033,40,0.434,53,0.027,54,0.027,166,1.2,167,1.849,176,2.614,282,2.906,299,4.526,300,3.936,304,4.526,305,3.764,307,3.273,337,3.764,339,2.37,440,3.764,524,2.906,526,2.906,527,3.495,1201,4.509,1202,6.437,1203,4.509,1204,4.509,1205,4.509,1206,4.509,1207,4.509,1208,4.509,1209,4.509,1210,4.509,1211,4.509,1212,5.423,1213,4.509,1214,4.509,1215,4.509,1216,4.509,1217,4.509,1218,4.509,1219,4.509,1220,4.509,1221,4.509,1222,4.509,1223,4.509,1224,4.509,1225,5.423,1226,4.509,1227,4.509,1228,4.509]],["title/miscellaneous/functions.html",[557,1.826,1229,2.208]],["body/miscellaneous/functions.html",[31,0.029,53,0.029,54,0.029,72,0.487,557,2.424,1196,4.221,1197,5.368,1198,4.221,1229,4.221,1230,5.056,1231,5.056]],["title/index.html",[72,0.255,1037,1.92,1232,2.208]],["body/index.html",[3,0.303,4,0.202,7,0.469,17,1.234,31,0.026,53,0.026,54,0.026,55,0.145,65,0.957,111,1.282,120,1.34,131,1.234,210,2.751,226,2.243,254,1.282,295,2.474,423,2.243,463,3.563,712,4.121,799,4.739,837,3.563,884,3.563,932,4.299,1000,3.807,1123,4.943,1200,3.563,1233,4.268,1234,4.268,1235,5.677,1236,4.268,1237,5.922,1238,4.268,1239,5.677,1240,4.268,1241,5.245,1242,4.268,1243,4.268,1244,5.245,1245,5.245,1246,6.269,1247,6.188,1248,5.245,1249,4.268,1250,4.268,1251,4.268,1252,4.268,1253,4.268,1254,4.268,1255,4.268,1256,4.943,1257,4.268,1258,6.079,1259,4.268,1260,4.268,1261,4.268,1262,4.268,1263,4.268,1264,5.245,1265,4.268,1266,4.268,1267,4.268,1268,5.245,1269,4.268,1270,4.268,1271,4.268,1272,3.563,1273,4.268,1274,4.268,1275,4.268,1276,4.268,1277,5.677,1278,4.268,1279,4.268]],["title/license.html",[1037,1.92,1232,2.208,1280,2.208]],["body/license.html",[4,0.227,31,0.028,53,0.028,54,0.028,131,1.382,254,1.168,368,2.77,842,3.989,1256,3.989,1272,3.989,1280,5.391,1281,4.779,1282,4.779,1283,5.96,1284,4.779,1285,4.779,1286,4.779,1287,4.779,1288,4.779,1289,4.779,1290,4.779,1291,4.779,1292,4.779,1293,4.779,1294,4.779,1295,4.779,1296,5.613,1297,4.779,1298,4.779,1299,4.779,1300,4.779,1301,4.779,1302,4.779,1303,4.779,1304,4.779,1305,4.779,1306,4.779,1307,4.779,1308,4.779]],["title/modules.html",[280,2.505]],["body/modules.html",[31,0.029,53,0.029,54,0.029,280,2.967,281,3.3,300,3.716,845,4.273,1309,5.119,1310,5.119]],["title/overview.html",[1311,3.607]],["body/overview.html",[0,2.085,1,3.184,31,0.033,41,0.282,47,2.3,50,2.402,53,0.025,54,0.025,55,0.101,56,1.127,94,1.588,167,1.353,211,2.557,229,0.97,235,1.266,237,1.232,239,1.127,241,1.127,243,1.232,245,1.028,248,1.127,250,1.127,251,1.266,253,1.127,256,1.127,258,1.127,260,1.232,262,1.127,264,1.127,280,2.905,281,4.316,282,2.557,283,3.312,284,3.312,285,3.312,286,3.312,287,3.312,288,3.312,289,3.312,290,3.184,291,2.633,292,2.633,293,4.183,294,3.312,295,2.3,364,1.246,507,2.88,523,1.246,949,2.88,1311,3.312,1312,3.968]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":187,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":952,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":953,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":50,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["1/1",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":714,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["13",{"_index":1087,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["16",{"_index":949,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["16/20",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":47,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1285,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1291,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":801,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["201",{"_index":804,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1282,"title":{},"body":{"license.html":{}}}],["21/23",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["23/41",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["23/44",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":458,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["3.0.1",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":807,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["33",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":457,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["36",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["4.1.3",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":811,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":817,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":821,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":827,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":831,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["4xxx",{"_index":941,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1312,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":844,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":847,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":852,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":855,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":859,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["52",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":211,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["6.1.10",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["6c86f7",{"_index":461,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["7",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":46,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["8/14",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["9/19",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["_notif",{"_index":921,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["abbrevi",{"_index":8,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["abbreviatepip",{"_index":1,"title":{"pipes/AbbreviatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["abbstr",{"_index":48,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["access",{"_index":541,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":974,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":849,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1107,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":265,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":1038,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["add(notificationinst",{"_index":923,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":205,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["adduser(form",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addusercompon",{"_index":56,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["agre",{"_index":1293,"title":{},"body":{"license.html":{}}}],["alert",{"_index":926,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert('unauthor",{"_index":543,"title":{},"body":{"guards/AuthGuard.html":{}}}],["alert.messag",{"_index":973,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["angular",{"_index":1237,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["apach",{"_index":1284,"title":{},"body":{"license.html":{}}}],["api_url",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["app.compon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["app_descriptor_id",{"_index":370,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["app_instance_id",{"_index":371,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["appcompon",{"_index":235,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":368,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["applicationinst",{"_index":365,"title":{"interfaces/ApplicationInstance.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["applications'},{'nam",{"_index":238,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications/applications.compon",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":237,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":281,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appsinfocompon",{"_index":239,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":18,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["array.foreach(el",{"_index":219,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostr",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostring(array",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["artifact",{"_index":1259,"title":{},"body":{"index.html":{}}}],["assest",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["assign",{"_index":430,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["auth",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":508,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":291,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autocent",{"_index":384,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["autom",{"_index":1271,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1252,"title":{},"body":{"index.html":{}}}],["autozoom",{"_index":385,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["avail",{"_index":423,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":640,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["availablecomponents.addus",{"_index":680,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":668,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":666,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":678,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":671,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":669,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":672,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":676,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":674,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["avoid",{"_index":466,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["backdrop",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["backendservic",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basi",{"_index":1297,"title":{},"body":{"license.html":{}}}],["befor",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["bitwis",{"_index":946,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":704,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1310,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bspasswordmodalref",{"_index":758,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["build",{"_index":1258,"title":{},"body":{"index.html":{}}}],["button",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonchangepassword",{"_index":1095,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1096,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":768,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":944,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capit",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["card",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{}}}],["carouselmodul",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":702,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["certain",{"_index":1082,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["chang",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["changeal",{"_index":718,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["changeall(newvalu",{"_index":682,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["changepasswordcompon",{"_index":241,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changerol",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changesonuserlist",{"_index":1091,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":25,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["chart",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["check",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkformfield",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkformfields(form",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkuserrol",{"_index":760,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":765,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":42,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":970,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["class=\"tabl",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clean",{"_index":1048,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1239,"title":{},"body":{"index.html":{}}}],["click",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["clone",{"_index":1242,"title":{},"body":{"index.html":{}}}],["close",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster",{"_index":629,"title":{"interfaces/Cluster.html":{}},"body":{"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster'},{'nam",{"_index":244,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":736,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":735,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":734,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":747,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":752,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":750,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":751,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":749,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":742,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":748,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":744,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":746,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:82",{"_index":743,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster_appmodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_id",{"_index":631,"title":{},"body":{"interfaces/Cluster.html":{}}}],["cluster_type_nam",{"_index":632,"title":{},"body":{"interfaces/Cluster.html":{}}}],["clustercompon",{"_index":243,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdescript",{"_index":737,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterid",{"_index":738,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusternam",{"_index":739,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":740,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1254,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":386,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["command",{"_index":1238,"title":{},"body":{"index.html":{}}}],["commun",{"_index":857,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complet",{"_index":829,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1287,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1268,"title":{},"body":{"index.html":{}}}],["compon",{"_index":55,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.mock",{"_index":684,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["component_templ",{"_index":233,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":636,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":703,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":701,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":842,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{}}}],["configur",{"_index":495,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["configuration_opt",{"_index":372,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["confirm",{"_index":214,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/UserInfoComponent.html":{}}}],["confirm('delet",{"_index":1120,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":199,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["confirmnewpassword",{"_index":592,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["conflict",{"_index":830,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('bad",{"_index":812,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":828,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":805,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":822,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":856,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":832,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":839,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":808,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":860,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":824,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":802,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":705,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":853,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":818,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":863,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":45,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":1045,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":958,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":19,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["control",{"_index":730,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1289,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1281,"title":{},"body":{"license.html":{}}}],["core",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":1122,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":16,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["credenti",{"_index":820,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":767,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["curv",{"_index":387,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["d",{"_index":486,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["d3",{"_index":440,"title":{},"body":{"components/AppsInfoComponent.html":{},"dependencies.html":{}}}],["data",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["debug",{"_index":246,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":245,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["defin",{"_index":13,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definit",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["definitions/const/loc",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":1102,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteconfirm",{"_index":1119,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":1097,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["depend",{"_index":282,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":34,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/TruncatePipe.html":{}}}],["descriptor",{"_index":490,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["design",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":1249,"title":{},"body":{"index.html":{}}}],["develop",{"_index":226,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["dialog",{"_index":436,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":231,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1257,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1245,"title":{},"body":{"index.html":{}}}],["discard",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":927,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":963,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":707,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1260,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1296,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1075,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1123,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":460,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["draggingen",{"_index":388,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["due",{"_index":814,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":249,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["editclust",{"_index":646,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["editclustercompon",{"_index":248,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":250,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":21,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["element.tolowercas",{"_index":220,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ellipsi",{"_index":1083,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["email",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["email/id",{"_index":1114,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{}}}],["enablezoom",{"_index":389,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["encount",{"_index":840,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["end",{"_index":1084,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["entrycompon",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":498,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["environment_vari",{"_index":373,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["error",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["error.error",{"_index":617,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error.error.messag",{"_index":618,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["error.error.message.charat(0).touppercas",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.message.slice(1",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statu",{"_index":800,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":310,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errorrespons",{"_index":1029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["errorresponse.error.messag",{"_index":1030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event",{"_index":716,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["eventemitt",{"_index":965,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1090,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1092,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1286,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1265,"title":{},"body":{"index.html":{}}}],["expiraci",{"_index":537,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":41,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1301,"title":{},"body":{"license.html":{}}}],["f",{"_index":775,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["find",{"_index":826,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["first",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["fix",{"_index":1035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["flag",{"_index":1262,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1273,"title":{},"body":{"index.html":{}}}],["form",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.confirmnewpassword.valu",{"_index":626,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.email.errors.email",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.controls.email.errors.pattern",{"_index":204,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.email.errors.requir",{"_index":202,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.email.invalid",{"_index":201,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.newpassword.errors.minlength",{"_index":623,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.errors.requir",{"_index":621,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.invalid",{"_index":620,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.valu",{"_index":625,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.password.errors.minlength",{"_index":209,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.errors.requir",{"_index":207,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.invalid",{"_index":206,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.valu",{"_index":212,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.passwordconfirm.valu",{"_index":213,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.dirti",{"_index":198,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.value.email",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.newpassword",{"_index":615,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.value.password",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["format",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(error",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(errormessages).msg",{"_index":227,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formbuild",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formgroupdirect",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":835,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":825,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1012,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fulfil",{"_index":806,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":557,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1276,"title":{},"body":{"index.html":{}}}],["gain",{"_index":861,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":848,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":850,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":932,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":1232,"title":{"index.html":{},"license.html":{}},"body":{}}],["getbaseurl",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnotif",{"_index":980,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["given",{"_index":810,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1278,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1306,"title":{},"body":{"license.html":{}}}],["graph",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"dependencies.html":{}}}],["graphdata",{"_index":390,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["grapho",{"_index":411,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group",{"_index":374,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/LoginComponent.html":{}}}],["group.nam",{"_index":506,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group_work",{"_index":1074,"title":{},"body":{"components/SidebarComponent.html":{}}}],["grpah",{"_index":429,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["guard",{"_index":507,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":936,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":846,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":792,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":794,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":797,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":791,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":796,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":793,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["height",{"_index":391,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["help",{"_index":1277,"title":{},"body":{"index.html":{}}}],["helper",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":230,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1274,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1251,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1290,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":795,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1240,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":935,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1236,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["id=\"alert",{"_index":972,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identifi",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["ignorebackdropclick",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["implement",{"_index":43,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1302,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":72,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["info'},{'nam",{"_index":240,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":383,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":382,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":381,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:106",{"_index":402,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:118",{"_index":1104,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:123",{"_index":409,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:150",{"_index":404,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:19",{"_index":415,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1105,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":425,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1112,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:29",{"_index":432,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1106,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:34",{"_index":424,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1108,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":422,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1113,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1109,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1110,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":435,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:45",{"_index":1111,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:49",{"_index":428,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:50",{"_index":1098,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:54",{"_index":434,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:55",{"_index":420,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":433,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:57",{"_index":418,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:58",{"_index":414,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:59",{"_index":413,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:60",{"_index":419,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:61",{"_index":417,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:62",{"_index":437,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:63",{"_index":438,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:64",{"_index":421,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:65",{"_index":401,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:68",{"_index":416,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1103,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1099,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1100,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info/app",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":444,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":785,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialstate.userid",{"_index":1066,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":523,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":967,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1241,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":369,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["instance.app_descriptor_id",{"_index":491,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.app_instance_id",{"_index":489,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.nam",{"_index":487,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rul",{"_index":476,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rules.foreach(rul",{"_index":477,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.services.foreach(servic",{"_index":472,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.status_nam",{"_index":488,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.t",{"_index":367,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["instanceid",{"_index":392,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["integr",{"_index":1269,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":364,"title":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":815,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["item.nam",{"_index":731,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["javascript",{"_index":937,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["js",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":1016,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":532,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwtdata",{"_index":534,"title":{},"body":{"guards/AuthGuard.html":{}}}],["json.stringify(jwttokendata",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(respons",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["jwtdata",{"_index":533,"title":{},"body":{"guards/AuthGuard.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["jwtdata.rol",{"_index":536,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwthelper",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":531,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken.token",{"_index":538,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendata",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1267,"title":{},"body":{"index.html":{}}}],["key",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["kind",{"_index":1300,"title":{},"body":{"license.html":{}}}],["label",{"_index":375,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["label[0",{"_index":493,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["label[1",{"_index":494,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["languag",{"_index":1305,"title":{},"body":{"license.html":{}}}],["last",{"_index":28,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["last_chunk_length",{"_index":27,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["law",{"_index":1292,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1049,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":229,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":838,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["letter",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["librari",{"_index":1270,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1280,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1308,"title":{},"body":{"license.html":{}}}],["line",{"_index":837,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["line:compon",{"_index":648,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":836,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["line:no",{"_index":945,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["link",{"_index":464,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linkedservic",{"_index":482,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["list",{"_index":36,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{}}}],["load",{"_index":426,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":393,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":181,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":443,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":679,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":667,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":1015,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.passwordmock",{"_index":611,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":670,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":673,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.url",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":677,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":675,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":697,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":690,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":696,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":689,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":686,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":692,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":687,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":691,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":688,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":693,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.url",{"_index":717,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":695,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":694,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["location.reload",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["login'},{'nam",{"_index":252,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":251,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequest",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["long",{"_index":1085,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["longer",{"_index":834,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":915,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":255,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":917,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":916,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":253,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1079,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["manag",{"_index":1234,"title":{},"body":{"index.html":{}}}],["map",{"_index":407,"title":{},"body":{"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{}}}],["match",{"_index":54,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":948,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["member",{"_index":1032,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["messag",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":6,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":9,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["miscellan",{"_index":1229,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mockappchart",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["mockapppiechart",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["mockappsinstanceslist",{"_index":441,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["mockclusterchart",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["mockclusterdetail",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["mockclusterlist",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["mockjwttoken",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["mocknodelist",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["mocknodeschart",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["mockorganizationinfo",{"_index":1115,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockregisteredappslist",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["mockresetpasword",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["mockresourcessummari",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["mockservicesgraph",{"_index":394,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["mockup",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":1116,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["modal",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modalmodul",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalservic",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mode",{"_index":1039,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":698,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":280,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":210,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["msg",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.length",{"_index":222,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.slice(0",{"_index":221,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["multitenant_support",{"_index":633,"title":{},"body":{"interfaces/Cluster.html":{}}}],["nalej",{"_index":254,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":7,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["navig",{"_index":1250,"title":{},"body":{"index.html":{}}}],["necessari",{"_index":819,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":410,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"injectables/ErrorHandlerService.html":{}}}],["network",{"_index":862,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":17,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"index.html":{}}}],["new_password",{"_index":614,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newpassword",{"_index":593,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newrol",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["newvalu",{"_index":681,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["next",{"_index":520,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["next.routeconfig.path",{"_index":542,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":1247,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":166,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["ngxchartsmodul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxgraphmodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":463,"title":{},"body":{"components/AppsInfoComponent.html":{},"index.html":{}}}],["node.label",{"_index":485,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["noth",{"_index":200,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["notif",{"_index":642,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notificationinst",{"_index":977,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":257,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":957,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":956,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscompon",{"_index":256,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["notificationsservic",{"_index":96,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["npm",{"_index":1235,"title":{},"body":{"index.html":{}}}],["null",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["num_total_char",{"_index":22,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["number",{"_index":24,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["object",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["object.entries(object",{"_index":484,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostr",{"_index":399,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostring(object",{"_index":403,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["observ",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1288,"title":{},"body":{"license.html":{}}}],["on",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":925,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":928,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":772,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["openchangepassword",{"_index":761,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["opendebugpanel",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":988,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":995,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":989,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":997,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":225,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["option[0",{"_index":496,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["option[1",{"_index":497,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["optionchang",{"_index":719,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":699,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization'},{'nam",{"_index":259,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":984,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":983,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":376,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["organizationclick",{"_index":1036,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":258,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationnam",{"_index":985,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["orient",{"_index":395,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["out",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{}}}],["overview",{"_index":1311,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":224,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["packag",{"_index":1200,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":833,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":639,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":247,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":638,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:106",{"_index":722,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":724,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:177",{"_index":725,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:185",{"_index":726,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":728,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":729,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:41",{"_index":721,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:44",{"_index":727,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":723,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["param",{"_index":44,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["pars",{"_index":405,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["password",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["password'},{'nam",{"_index":242,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password).pipe(map(respons",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["password.component.html",{"_index":591,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.scss",{"_index":590,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.t",{"_index":589,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:128",{"_index":600,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:151",{"_index":597,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:19",{"_index":604,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:24",{"_index":610,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:25",{"_index":609,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:26",{"_index":607,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":606,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:28",{"_index":608,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:33",{"_index":596,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:36",{"_index":605,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:50",{"_index":601,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:58",{"_index":603,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:79",{"_index":599,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:96",{"_index":598,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password/chang",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["passwordchang",{"_index":612,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["passwordconfirm",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{}}}],["past",{"_index":1081,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["payment",{"_index":1040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perform",{"_index":406,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["perman",{"_index":809,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1307,"title":{},"body":{"license.html":{}}}],["persist",{"_index":685,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1073,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pipe",{"_index":0,"title":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/abbreviate.pip",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/truncate.pip",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":39,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["platform",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["prevent",{"_index":843,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":858,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1261,"title":{},"body":{"index.html":{}}}],["product",{"_index":1263,"title":{},"body":{"index.html":{}}}],["profil",{"_index":641,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["project",{"_index":1244,"title":{},"body":{"index.html":{}}}],["promis",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":529,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":851,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":1275,"title":{},"body":{"index.html":{}}}],["r",{"_index":947,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1279,"title":{},"body":{"index.html":{}}}],["real",{"_index":183,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":798,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["refer",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":706,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["relat",{"_index":505,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["reload",{"_index":1253,"title":{},"body":{"index.html":{}}}],["remov",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{}}}],["renam",{"_index":966,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":431,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["repositori",{"_index":1243,"title":{},"body":{"index.html":{}}}],["request",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requesterror",{"_index":986,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["requir",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourc",{"_index":544,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["resources'},{'nam",{"_index":261,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcescompon",{"_index":260,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["response.email",{"_index":1070,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.nam",{"_index":1018,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.role_nam",{"_index":1071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":1028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["right",{"_index":823,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["role_nam",{"_index":191,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["roledirti",{"_index":759,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["root",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":236,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["router",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rule",{"_index":377,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{}}}],["rule.auth_servic",{"_index":478,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.auth_services.foreach(linkedservic",{"_index":479,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.nam",{"_index":503,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.rule_id",{"_index":504,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.source_service_id",{"_index":480,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["run",{"_index":1246,"title":{},"body":{"index.html":{}}}],["running_nod",{"_index":634,"title":{},"body":{"interfaces/Cluster.html":{}}}],["rxj",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":29,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["save",{"_index":228,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["saveclusterchang",{"_index":741,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(form",{"_index":745,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["savenewpassword",{"_index":595,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["savenewpassword(form",{"_index":602,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["saveuserchang",{"_index":762,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(f",{"_index":773,"title":{},"body":{"components/EditUserComponent.html":{}}}],["scaffold",{"_index":1255,"title":{},"body":{"index.html":{}}}],["screen",{"_index":708,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["see",{"_index":1303,"title":{},"body":{"license.html":{}}}],["select",{"_index":216,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["serv",{"_index":1248,"title":{},"body":{"index.html":{}}}],["server",{"_index":799,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":378,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["service.nam",{"_index":474,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.service_id",{"_index":473,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.status_nam",{"_index":502,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["services/auth.servic",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":535,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["shape",{"_index":439,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shape.curvebundl",{"_index":451,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shorten",{"_index":1080,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["show",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showlegend",{"_index":396,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["sidebar",{"_index":643,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":263,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1043,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1042,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcompon",{"_index":262,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slice",{"_index":15,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["softwar",{"_index":1295,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":732,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":709,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1304,"title":{},"body":{"license.html":{}}}],["src/.../environment.prod.t",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.t",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":380,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["src/app/applications/applications.component.t",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["src/app/chang",{"_index":588,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["src/app/debug",{"_index":637,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/const/us",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/appl",{"_index":366,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/cluster.t",{"_index":630,"title":{},"body":{"interfaces/Cluster.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":733,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:12",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:16",{"_index":519,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:107",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:131",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:154",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":914,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":919,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":918,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":955,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":960,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":964,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":959,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":961,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":962,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":982,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:112",{"_index":996,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:130",{"_index":993,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:143",{"_index":999,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:23",{"_index":1001,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:28",{"_index":1004,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1006,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1008,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":1009,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:36",{"_index":1002,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:41",{"_index":1003,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:46",{"_index":992,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:70",{"_index":994,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:95",{"_index":998,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pipes/abbreviate.pipe.t",{"_index":5,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/abbreviate.pipe.ts:13",{"_index":14,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["src/app/pipes/truncate.pipe.t",{"_index":1076,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.ts:12",{"_index":1078,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/resources/resources.component.t",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["src/app/services/error",{"_index":790,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":920,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":975,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":976,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":981,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":978,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":979,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1089,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1041,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:109",{"_index":1054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:121",{"_index":1047,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":1055,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:31",{"_index":1056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:37",{"_index":1058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:42",{"_index":1046,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:64",{"_index":1050,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":1051,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":1052,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1094,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.t",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1037,"title":{"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":788,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["statu",{"_index":427,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["status_nam",{"_index":379,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{}}}],["storag",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["store",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["styleurl",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1093,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(inst",{"_index":470,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["subscribe(respons",{"_index":193,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscript",{"_index":1005,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subscriptiontyp",{"_index":987,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subset",{"_index":20,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["succeed",{"_index":803,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":196,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["support",{"_index":845,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":700,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":816,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":492,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{}}}],["target",{"_index":481,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tb",{"_index":449,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["templat",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["test",{"_index":712,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1086,"title":{},"body":{"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":922,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":929,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":924,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":931,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.adduser(form",{"_index":217,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.alert",{"_index":968,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":1072,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.autocent",{"_index":453,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.autozoom",{"_index":452,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1121,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getappinstance(this.organizationid",{"_index":468,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1069,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.login(email",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":616,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":757,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":783,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":197,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref",{"_index":786,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref.content.closebtnnam",{"_index":789,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttonchangepassword",{"_index":1118,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1117,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clusterdescript",{"_index":754,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":756,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":753,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":755,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.colorschem",{"_index":459,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.components.foreach(compon",{"_index":683,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.components.push",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.curv",{"_index":450,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.draggingen",{"_index":455,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":1063,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.enablezoom",{"_index":454,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.errormessag",{"_index":185,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.length",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessages.push('a",{"_index":622,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('email",{"_index":203,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('new",{"_index":627,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('password",{"_index":208,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('th",{"_index":624,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('us",{"_index":215,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.errormessages.push(error.error.messag",{"_index":619,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages[0",{"_index":218,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.graphdata",{"_index":462,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.links.push(link",{"_index":483,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.nodes.push(nod",{"_index":475,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.inst",{"_index":465,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.instanceid",{"_index":469,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":530,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken.token",{"_index":539,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loadeddata",{"_index":445,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1027,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(changepasswordcompon",{"_index":787,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1026,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":654,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":710,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":194,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":969,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":711,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":467,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.orient",{"_index":448,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.requesterror",{"_index":1014,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1062,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":782,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":540,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.url",{"_index":1067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.savenewpassword(form",{"_index":628,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.showlegend",{"_index":447,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.subscriptiontyp",{"_index":1011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.titl",{"_index":446,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.tographdata(inst",{"_index":471,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1065,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1068,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1019,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.url",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.us",{"_index":1013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":613,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":784,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":178,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.view",{"_index":456,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["time",{"_index":223,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timeout",{"_index":713,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["tographdata",{"_index":400,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tographdata(inst",{"_index":408,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["token",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tooltipmodul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":971,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["total",{"_index":23,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["total_nod",{"_index":635,"title":{},"body":{"interfaces/Cluster.html":{}}}],["transform",{"_index":10,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"pipes/TruncatePipe.html":{}}}],["transform(valu",{"_index":11,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["truncat",{"_index":1077,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepip",{"_index":290,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslint:dis",{"_index":647,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["types/jwt",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1233,"title":{},"body":{"index.html":{}}}],["unavail",{"_index":854,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["undefin",{"_index":1007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["under",{"_index":1283,"title":{},"body":{"license.html":{}}}],["understand",{"_index":813,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":841,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1264,"title":{},"body":{"index.html":{}}}],["up",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":1000,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":292,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileus",{"_index":1044,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":991,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":990,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1101,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["urlchang",{"_index":720,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["urlchange($ev",{"_index":715,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["us",{"_index":1256,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user'},{'nam",{"_index":234,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:103",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:105",{"_index":774,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:111",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:125",{"_index":771,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:145",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:168",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:19",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:24",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:25",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:28",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:29",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:30",{"_index":781,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:32",{"_index":780,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":778,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:38",{"_index":779,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:40",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:42",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:43",{"_index":763,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":776,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:59",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:62",{"_index":770,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:66",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:69",{"_index":769,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:85",{"_index":766,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:86",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:96",{"_index":764,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.email",{"_index":195,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":1023,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":1024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["useredit",{"_index":645,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userid",{"_index":594,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userinfo",{"_index":644,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userinfocompon",{"_index":264,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["users.length",{"_index":1031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":442,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":933,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":938,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":950,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":954,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v4",{"_index":934,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":35,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{}}}],["value.length",{"_index":52,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["value.slice(0",{"_index":49,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.slice(value.length",{"_index":51,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.substring(0",{"_index":1088,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":232,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":499,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["variable[0",{"_index":500,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["variable[1",{"_index":501,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["version",{"_index":1272,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1266,"title":{},"body":{"index.html":{}}}],["view",{"_index":397,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["void",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1299,"title":{},"body":{"license.html":{}}}],["width",{"_index":398,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["window",{"_index":777,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["without",{"_index":1298,"title":{},"body":{"license.html":{}}}],["word",{"_index":26,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["write",{"_index":1294,"title":{},"body":{"license.html":{}}}],["x",{"_index":951,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":930,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":940,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":939,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":943,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["yxxx",{"_index":942,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/AbbreviatePipe.html":{"url":"pipes/AbbreviatePipe.html","title":"pipe - AbbreviatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AbbreviatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/abbreviate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        abbreviate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/abbreviate.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n                            Slice creates a new Array or String containing a subset (slice) of the elements.\nNUM_TOTAL_CHARS is the total number of characters of a word\nLAST_CHUNK_LENGTH is the last characters of the same word\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'abbreviate'\n})\nexport class AbbreviatePipe implements PipeTransform {\n/**\n  * Slice creates a new Array or String containing a subset (slice) of the elements.\n  * NUM_TOTAL_CHARS is the total number of characters of a word\n  * LAST_CHUNK_LENGTH is the last characters of the same word\n  * @param value is a list or a string to be sliced.\n*/\n  transform(value: string): string {\n    const NUM_TOTAL_CHARS = 8;\n    const LAST_CHUNK_LENGTH = NUM_TOTAL_CHARS - 2;\n    let abbstring;\n\n    abbstring = value.slice(0, 1) + '...' + value.slice(value.length - LAST_CHUNK_LENGTH, value.length);\n\n    if (value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                arrayToString\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  errorMessages: string[];\n\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.errorMessages = [];\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    if (this.errorMessages.length === 0) {\n      const user = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        role_name: this.userRole\n      };\n      this.backend.addUser(this.organizationId, user)\n        .subscribe(response => {\n          this.notificationsService.add({message: user.email + ' created successfully'});\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.pattern) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.password.value !== form.controls.passwordConfirm.value) {\n      this.errorMessages.push('Password and confirm password are not the same one');\n    }\n    if (!this.userRole) {\n      this.errorMessages.push('User role selection is required');\n    }\n\n    if (this.errorMessages.length === 0) {\n      this.addUser(form);\n    }\n  }\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n\n    \n    \n         0\">\n        {{formatValidationOutput(errorMessages).msg}}\n      \n    \n    \n\n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                   0\">        {{formatValidationOutput(errorMessages).msg}}                                    Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbbreviatePipe\n                            \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                TruncatePipe\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AbbreviatePipe } from './pipes/abbreviate.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n    ChangePasswordComponent,\n    AbbreviatePipe,\n    TruncatePipe\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    NgxGraphModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationInstance.html":{"url":"interfaces/ApplicationInstance.html","title":"interface - ApplicationInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/application-instance.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Application instance Data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app_descriptor_id\n                                \n                                \n                                        app_instance_id\n                                \n                                \n                                        configuration_options\n                                \n                                \n                                        description\n                                \n                                \n                                        environment_variables\n                                \n                                \n                                        groups\n                                \n                                \n                                        labels\n                                \n                                \n                                        name\n                                \n                                \n                                        organization_id\n                                \n                                \n                                        rules\n                                \n                                \n                                        services\n                                \n                                \n                                        status_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_descriptor_id\n                                    \n                                \n                                \n                                    \n                                        app_descriptor_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app_instance_id\n                                    \n                                \n                                \n                                    \n                                        app_instance_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configuration_options\n                                    \n                                \n                                \n                                    \n                                        configuration_options:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_variables\n                                    \n                                \n                                \n                                    \n                                        environment_variables:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization_id\n                                    \n                                \n                                \n                                    \n                                        organization_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                    \n                                \n                                \n                                    \n                                        services:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApplicationInstance {\n  organization_id: string;\n  app_descriptor_id: string;\n  app_instance_id: string;\n  name: string;\n  description: string;\n  configuration_options: any;\n  environment_variables: any;\n  labels: any;\n  rules: any[];\n  groups: any[];\n  services: any[];\n  status_name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCenter\n                            \n                            \n                                autoZoom\n                            \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                colorScheme\n                            \n                            \n                                curve\n                            \n                            \n                                draggingEnabled\n                            \n                            \n                                enableZoom\n                            \n                            \n                                graphData\n                            \n                            \n                                height\n                            \n                            \n                                instance\n                            \n                            \n                                instanceId\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockServicesGraph\n                            \n                            \n                                organizationId\n                            \n                            \n                                orientation\n                            \n                            \n                                showlegend\n                            \n                            \n                                title\n                            \n                            \n                                view\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                objectToString\n                            \n                            \n                                toGraphData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectToString(object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Transforms objects to arrays to be parsed to string and performed in the view\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key-value map that contains the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraphData\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraphData(instance: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Transforms the data needed to create the grapho\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                instance object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoCenter:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curve:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            draggingEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        draggingEnabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available apps instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instanceId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instanceId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockServicesGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockServicesGraph:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:49\n                            \n                        \n\n                \n                    \n                        NGX-Grpahs object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orientation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showlegend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showlegend:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:54\n                            \n                        \n\n                \n                    \n                        Graph options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:44\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport * as shape from 'd3-shape';\nimport { mockAppsInstancesList } from '../utils/mocks';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold organization ID\n   */\n  instanceId: string;\n\n  /**\n   * List of available apps instances\n   */\n  instance: any;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * NGX-Grpahs object-assign required object references (for rendering)\n   */\n  mockServicesGraph: any;\n\n  /**\n   * Graph options\n   */\n  showlegend: boolean;\n  graphData: any;\n  orientation: string;\n  curve: any;\n  autoZoom: boolean;\n  autoCenter: boolean;\n  enableZoom: boolean;\n  colorScheme: any;\n  view: any[];\n  width: number;\n  height: number;\n  draggingEnabled: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.title = 'App info';\n\n    // Graph initialization\n    this.showlegend = false;\n    this.orientation = 'TB';\n    this.curve = shape.curveBundle;\n    this.autoZoom = true;\n    this.autoCenter = true;\n    this.enableZoom = false;\n    this.draggingEnabled = false;\n    this.view = [350, 250];\n    this.colorScheme = {\n      domain: ['#6C86F7']\n    };\n\n    this.graphData = {\n      nodes: [],\n      links: []\n    };\n    this.instance = mockAppsInstancesList\n    ; // Initialization to avoid null in view\n\n  }\n\n  ngOnInit() {\n     if (this.organizationId !== null) {\n      this.backend.getAppInstance(this.organizationId,  this.instanceId)\n      .subscribe(instance => {\n          this.instance = instance;\n          this.toGraphData(instance);\n          if (!this.loadedData) {\n            this.loadedData = true;\n          }\n      });\n    }\n  }\n\n/**\n * Transforms the data needed to create the grapho\n * @param instance instance object\n */\n  toGraphData(instance) {\n    instance.services.forEach(service => {\n      const node = {\n        id: service.service_id,\n        label: service.name\n      };\n      this.graphData.nodes.push(node);\n    });\n    if (instance.rules) {\n      instance.rules.forEach(rule => {\n        if (rule.auth_services) {\n          rule.auth_services.forEach(linkedService => {\n            const link = {\n              source: rule.source_service_id,\n              target: linkedService\n            };\n            this.graphData.links.push(link);\n          });\n        }\n      });\n    }\n  }\n\n/**\n * Transforms objects to arrays to be parsed to string and performed in the view\n * @param object Key-value map that contains the object\n */\n  objectToString(object: any) {\n    if (!object) {\n      return ['--'];\n    }\n    return Object.entries(object);\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n        \n          {{title}}\n        \n        \n        \n          \n            \n            Services\n            \n              \n              \n                \n                  \n                    \n                    \n                      {{node.label}}\n                  \n                  \n                \n                \n                  \n                    \n                    \n                  \n        d        \n              \n            \n            \n            \n              \n                Name\n                {{instance.name}}\n              \n              \n              \n                Status\n                {{instance.status_name}}\n                \n              \n              \n              \n                Instance id\n                {{instance.app_instance_id}}\n              \n              \n              \n                Descriptor id\n                {{instance.app_descriptor_id}}\n              \n              \n              \n                Tags\n              \n              \n                {{label[0]}}\n                {{label[1]}}\n              \n              \n              \n                Configuration options\n              \n              \n                {{option[0]}}\n                {{option[1]}}\n              \n              \n              \n                Environment variables\n              \n              \n                \n                  {{variable[0]}}\n                \n                \n                  {{variable[1]}}\n                \n              \n              \n              \n                Services\n              \n              \n                \n                  Name\n                  {{service.name}}\n                \n                \n                  Id\n                  {{service.service_id}}\n                \n                \n                  Status\n                   \n                  {{service.status_name}}\n                \n                \n              \n              \n                Rules\n              \n              \n                \n                  Name\n                  {{rule.name}}\n                \n                \n                  Id\n                  {{rule.rule_id}}\n                \n                \n                  Relations\n                  \n                  {{relation}}\n                \n                \n              \n              \n                Groups\n              \n              \n                -\n                -\n              \n              \n                \n                  Name\n                  {{group.name}}\n                \n                \n                  Services\n                  \n                  {{service}}\n                  \n                \n                  \n                 \n           \n                     \n          \n            \n              \n                \n              \n            \n          \n          \n          \n            \n              Close\n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{title}}                                                          Services                                                                                                                                        {{node.label}}                                                                                                                                                        d                                                                                        Name                {{instance.name}}                                                          Status                {{instance.status_name}}                                                                          Instance id                {{instance.app_instance_id}}                                                          Descriptor id                {{instance.app_descriptor_id}}                                                          Tags                                            {{label[0]}}                {{label[1]}}                                                          Configuration options                                            {{option[0]}}                {{option[1]}}                                                          Environment variables                                                              {{variable[0]}}                                                  {{variable[1]}}                                                                          Services                                                              Name                  {{service.name}}                                                  Id                  {{service.service_id}}                                                  Status                                     {{service.status_name}}                                                                            Rules                                                              Name                  {{rule.name}}                                                  Id                  {{rule.rule_id}}                                                  Relations                                    {{relation}}                                                                            Groups                                            -                -                                                              Name                  {{group.name}}                                                  Services                                    {{service}}                                                                                                                                                                                                                                           Close                                            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { mockJwtToken } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    const jwtData = JSON.parse(localStorage.getItem(LocalStorageKeys.jwtData)) || null;\n    let role;\n    // Set role\n    if (jwtData) {\n      role = jwtData.role;\n    }\n    // Check jwtToken expiracy\n    if (jwtToken === null\n      || (jwtToken.token !== mockJwtToken\n          && this.jwtHelper.isTokenExpired(jwtToken.token)\n          )\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    // Check user role access\n    if (\n      role &&\n      role === 'Developer' && !(\n      next.routeConfig.path === 'applications' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n    // Check user role access\n    if (\n      role === 'Operator' && !(\n      next.routeConfig.path === 'resources' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/change-password/change-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                change-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                confirmNewPassword\n                            \n                            \n                                errorMessages\n                            \n                            \n                                newPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveNewPassword(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Request to save changes in the user password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form containing the user input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmNewPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user id, and passwords\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { FormGroup } from '@angular/forms';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user id, and passwords\n   */\n  userId: string;\n  password: string;\n  newPassword: string;\n  confirmNewPassword: string;\n  organizationId: string;\n\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.passwordMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n\n  /**\n   * Request to save changes in the user password\n   * @param form Form containing the user input\n   */\n  saveNewPassword(form: FormGroup) {\n    const passwordChange = {\n      email: this.userId,\n      password: form.value.password,\n      new_password: form.value.newPassword\n    };\n    this.backend.resetPassword(this.organizationId, passwordChange)\n      .subscribe(response => {\n        this.notificationsService.add({message: 'Password changed successfully'});\n        this.bsModalRef.hide();\n      }, error => {\n        if (error && error.error && error.error.message) {\n          this.errorMessages.push(error.error.message);\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.invalid) {\n      if (form.controls.newPassword.errors.required) {\n        this.errorMessages.push('A new password is required');\n      }\n      if (form.controls.newPassword.errors.minlength) {\n        this.errorMessages.push('The new password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.value !== form.controls.confirmNewPassword.value) {\n      this.errorMessages.push('New password and confirm password are not the same one');\n    }\n    if (this.errorMessages.length === 0) {\n      this.saveNewPassword(form);\n    }\n  }\n\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n    \n      Change password\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n        \n        \n           0\">\n            {{formatValidationOutput(errorMessages).msg}}\n          \n        \n        \n        \n            \n            Save\n          \n          \n            Discard\n          \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Change password              ×                                                                                                       0\">            {{formatValidationOutput(errorMessages).msg}}                                                          Save                                Discard                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cluster.html":{"url":"interfaces/Cluster.html","title":"interface - Cluster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cluster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type_name\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant_support\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status_name\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type_name\n                                    \n                                \n                                \n                                    \n                                        cluster_type_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant_support\n                                    \n                                \n                                \n                                    \n                                        multitenant_support:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cluster {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: number;\n  running_nodes?: number;\n  description?: string;\n  status_name?: string;\n  cluster_type_name?: string;\n  labels?: string;\n  multitenant_support?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                            \n                                urlChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAll(newValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Modifies all components mocks values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlChange($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n      Backend URL\n      \n    \n    Backend control\n    \n      \n          All real\n          \n          All mock\n          \n      \n      \n      \n        \n        \n          {{item.name}}\n        \n        \n          \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n    \n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                      Backend URL              Backend control                    All real                    All mock                                                      {{item.name}}                                                Real                                Mock                                    Notifications    Spam test notification                    Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        name: this.clusterName,\n        description: this.clusterDescription,\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          this.notificationsService.add({\n            message: error.error.message,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n\n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                        Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:43\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:38\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:24\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  userId: string;\n  email: string;\n\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.userRole) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.userRole = newRole;\n  }\n\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n      .subscribe(response => {\n        this.notificationsService.add({\n          message: 'The user ' + this.userName + ' has been edited',\n          timeout: 10000\n        });\n        this.bsModalRef.hide();\n      });\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n    \n    \n      Change password\n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                           Change password            Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessages = [];\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessages = [];\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        if (error.error && error.error.message) {\n          this.errorMessages.push(\n            error.error.message.charAt(0).toUpperCase() +\n            error.error.message.slice(1)); // Capitalize first letter of error msg\n        }\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.email) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n  }\n\n  /**\n  * Outputs the error messages in the required format, showing the first one\n  * @param errors String containing the errors\n  */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        NALEJ\n        \n\n            \n                    Log in\n                \n                \n\n                \n\n                \n                \n                     0\">\n                        {{formatValidationOutput(errorMessages).msg}}\n                    \n                \n\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NALEJ                                        Log in                                                                                                     0\">                        {{formatValidationOutput(errorMessages).msg}}                                                                                        Log in                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n            ?\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              ?                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                requestError\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:23\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:36\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:41\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:28\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:46\n                            \n                        \n\n                \n                    \n                        Hold request error message or undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n\n  /**\n   * Hold request error message or undefined\n   */\n  requestError: string;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n    this.requestError = '';\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    }, errorResponse => {\n        this.loadedData = true;\n        this.requestError = errorResponse.error.message;\n      });\n  }\n}\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n       0\"\n        class=\"table table-fixed\">\n        \n          \n            \n              Name\n            \n            \n              Role\n            \n            \n              Email\n            \n            \n            \n            \n           -->\n          \n        \n        \n          \n            {{user.name}}\n            {{user.role_name}}\n            {{user.email}}\n            \n              \n                i\n              \n            \n             -->\n              \n                \n                  edit\n                \n              \n            \n          \n        \n      \n      \n      \n        There are not registered users in this organizationClick on \"add user\" button to start adding new users \n      \n      \n      \n        {{requestError}}\n      \n      \n      \n        \n          \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS             0\"        class=\"table table-fixed\">                                            Name                                      Role                                      Email                                                           -->                                                {{user.name}}            {{user.role_name}}            {{user.email}}                                          i                                       -->                                                edit                                                                                      There are not registered users in this organizationClick on \"add user\" button to start adding new users                           {{requestError}}                                                                                      Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, router: Router, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private router: Router,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile',\n      organizationId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      if (this.router.url === '/organization') {\n        this.updateService.changesOnUserList.next();\n      }\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/truncate.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\nNUM_TOTAL_CHARS how long we would like the text to be\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\n   * NUM_TOTAL_CHARS how long we would like the text to be\n   * @param value is a list or a string to be sliced.\n   */\n    transform(value: string): string {\n    const NUM_TOTAL_CHARS = 13;\n    if (value && value.length > NUM_TOTAL_CHARS) {\n      return value.substring(0, NUM_TOTAL_CHARS) + '...';\n    } else {\n      return value;\n    }\n   }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                buttonChangePassword\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonChangePassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:31\n                            \n                        \n\n                \n                    \n                        Text for the change password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:26\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the change password action button\n   */\n  buttonChangePassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonChangePassword = 'Change Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    const deleteConfirm = confirm('Delete user?');\n    if (deleteConfirm) {\n      if (this.organizationId !== null && this.userId !== null) {\n        this.backend.deleteUser(this.organizationId, this.userId)\n          .subscribe(response => {\n            this.notificationsService.add({\n              message: 'User ' + this.userId + ' has been deleted',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          }, error => {\n            this.notificationsService.add({\n              message: error.error.message,\n              timeout: 10000\n            });\n          });\n      }\n    } else {\n      // Do nothing\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonChangePassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonChangePassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                47 %\n                (9/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                52 %\n                (23/44)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                src/app/change-password/change-password.component.ts\n            \n            \n                component\n            \n            \n                ChangePasswordComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/application-instance.ts\n            \n            \n                interface\n            \n            \n                ApplicationInstance\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster.ts\n            \n            \n                interface\n            \n            \n                Cluster\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/app/pipes/abbreviate.pipe.ts\n            \n            \n                pipe\n            \n            \n                AbbreviatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/truncate.pipe.ts\n            \n            \n                pipe\n            \n            \n                TruncatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                56 %\n                (23/41)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsInstancesList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockRegisteredAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-graph : ^5.1.1\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
