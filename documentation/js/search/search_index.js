var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/pipes/AbbreviatePipe.html",[0,1.267,1,1.931]],["body/pipes/AbbreviatePipe.html",[0,2.269,1,3.199,2,0.277,3,0.324,4,0.23,5,3.704,6,1.083,7,0.635,8,5.411,9,0.716,10,2.609,11,3.969,12,1.065,13,0.534,14,4.414,15,5.347,16,3.199,17,1.548,18,2.671,19,2.268,20,5.411,21,1.548,22,5.12,23,5.411,24,3.199,25,3.992,26,6.101,27,6.101,28,5.411,29,4.542,30,0.782,31,0.03,32,0.479,33,0.592,34,1.083,35,1.943,36,1.801,37,0.653,38,0.479,39,3.541,40,0.425,41,0.324,42,0.479,43,0.782,44,1.17,45,0.959,46,4.414,47,2.888,48,5.411,49,4.414,50,2.005,51,4.414,52,4.542,53,0.024,54,0.024]],["title/components/AddUserComponent.html",[55,0.17,56,0.742]],["body/components/AddUserComponent.html",[2,0.195,3,0.147,4,0.104,6,0.491,7,0.628,9,0.505,12,1.047,13,0.744,16,1.182,17,1.413,18,2.437,19,1.304,21,1.232,25,1.309,29,1.679,30,0.913,31,0.03,32,0.644,33,0.692,34,1.212,35,0.718,37,0.843,38,0.578,40,0.193,41,0.147,42,0.217,43,0.551,44,1.309,45,0.676,47,1.309,50,1.413,53,0.014,54,0.014,55,0.243,56,0.977,57,0.617,58,0.617,59,0.617,60,5.187,61,4.044,62,1.467,63,1.092,64,1.757,65,1.314,66,1.194,67,1.122,68,0.89,69,2.611,70,0.89,71,2.611,72,0.217,73,0.505,74,1.897,75,1.48,76,1.897,77,4.306,78,2.63,79,3.158,80,1.956,81,2.66,82,4.306,83,2.545,84,2.545,85,2.035,86,2.281,87,2.611,88,2.281,89,2.035,90,2.281,91,1.232,92,0.505,93,1.077,94,1.645,95,1.914,96,1.475,97,2,98,3.111,99,2,100,1.304,101,2.929,102,2.035,103,2.243,104,0.977,105,2.281,106,2,107,2.281,108,2.281,109,2.611,110,1.679,111,1.309,112,2.948,113,3.203,114,2.281,115,3.158,116,2,117,2.497,118,2.035,119,2,120,1.178,121,1.675,122,2.035,123,3.231,124,1.669,125,1.669,126,2.281,127,2,128,1.839,129,2.488,130,1.675,131,1.524,132,2.281,133,1.675,134,2.281,135,2.256,136,4.015,137,2,138,2,139,1.679,140,0.572,141,1.839,142,0.96,143,1.839,144,1.012,145,1.679,146,1.805,147,2.611,148,3.111,149,1.117,150,1.675,151,2.611,152,3.111,153,2.281,154,3.111,155,2,156,1.679,157,2,158,1.206,159,0.96,160,1.035,161,2,162,2,163,2,164,1.679,165,0.775,166,0.491,167,0.666,168,0.775,169,0.838,170,0.775,171,0.775,172,0.572,173,0.617,174,0.572,175,0.617,176,1.182,177,0.8,178,3.614,179,1.035,180,1.27,181,1.467,182,0.838,183,0.718,184,1.206,185,3.421,186,3.421,187,1.808,188,2,189,2,190,1.679,191,1.679,192,2,193,0.838,194,2.056,195,1.679,196,1.679,197,2.256,198,1.679,199,1.679,200,1.675,201,2,202,2,203,1.413,204,1.675,205,1.309,206,1.309,207,1.182,208,1.679,209,1.679,210,2.611,211,2,212,1.467,213,1.467,214,1.467,215,2.799,216,1.467,217,1.309,218,1.467,219,2,220,2,221,1.679,222,2,223,1.309,224,2,225,2.281,226,1.467,227,1.467,228,1.467,229,1.467,230,0.987,231,1.839,232,1.839,233,1.675,234,2.281,235,2.035,236,0.53,237,0.96,238,0.89,239,1.329,240,0.617,241,0.96,242,0.454,243,0.617,244,0.491,245,0.617,246,0.454,247,0.617,248,0.454,249,0.617,250,0.491,251,0.96,252,0.419,253,0.53,254,0.617,255,0.454,256,0.706,257,0.454,258,0.454,259,0.617,260,0.454,261,0.764,262,0.617,263,0.454,264,0.617,265,0.454,266,0.617,267,0.491,268,0.617,269,0.454,270,0.617,271,0.454,272,0.617]],["title/components/AppComponent.html",[55,0.17,242,0.742]],["body/components/AppComponent.html",[2,0.309,3,0.281,4,0.199,6,0.937,7,0.594,9,0.801,12,0.801,13,0.726,21,1.413,30,0.676,31,0.03,32,0.628,33,0.512,35,1.371,37,0.564,38,0.628,40,0.476,41,0.281,42,0.414,43,0.875,53,0.022,54,0.022,55,0.313,56,0.866,57,1.178,58,1.178,59,1.178,63,1.566,64,1.912,65,1.484,66,0.8,67,0.676,68,1.413,70,1.413,72,0.414,73,0.801,75,2.122,76,1.927,91,1.656,92,0.801,96,1.871,104,1.034,111,1.012,140,1.092,166,0.937,171,1.48,177,0.8,236,1.012,237,1.524,238,1.413,239,1.786,240,1.178,241,1.524,242,1.314,243,1.178,244,0.937,245,1.178,246,0.866,247,1.178,248,0.866,249,1.178,250,0.937,251,1.524,252,0.8,253,1.012,254,1.178,255,0.866,256,1.121,257,0.866,258,0.866,259,1.178,260,0.866,261,1.421,262,1.178,263,0.866,264,1.178,265,0.866,266,1.178,267,0.937,268,1.178,269,0.866,270,1.178,271,0.866,272,1.178,273,3.203,274,2.919,275,4.938,276,4.938,277,3.787,278,3.117,279,2.799,280,3.117,281,4.938,282,2.66,283,3.817,284,3.817,285,3.817,286,2.256]],["title/modules/AppModule.html",[287,1.931,288,2.138]],["body/modules/AppModule.html",[1,3.312,2,0.176,3,0.207,4,0.147,31,0.03,38,0.731,40,0.271,41,0.375,42,0.305,53,0.018,54,0.018,56,1.338,61,1.838,65,0.638,66,0.589,67,0.498,94,1.729,111,0.745,166,1.375,167,1.793,168,1.089,176,1.661,236,0.745,242,1.412,244,1.375,246,1.338,248,1.338,250,1.375,252,1.235,253,0.745,255,1.338,256,0.91,257,1.338,258,1.412,260,1.271,263,1.271,265,1.271,267,1.375,269,1.271,271,1.338,286,1.661,287,2.37,288,4.447,289,1.661,290,3.922,291,4.276,292,2.358,293,2.358,294,2.358,295,2.358,296,2.358,297,3.312,298,3.312,299,3.312,300,2.765,301,2.765,302,3.364,303,2.06,304,1.661,305,2.809,306,4.008,307,4.008,308,3.364,309,2.06,310,4.008,311,2.809,312,4.008,313,3.364,314,1.838,315,4.008,316,1.661,317,4.008,318,3.364,319,2.623,320,2.809,321,2.809,322,3.922,323,2.809,324,2.809,325,1.513,326,2.06,327,2.809,328,2.809,329,2.809,330,2.809,331,2.809,332,2.809,333,2.809,334,2.809,335,2.809,336,2.809,337,4.008,338,4.008,339,2.809,340,2.06,341,4.008,342,2.358,343,2.809,344,2.809,345,4.008,346,2.358,347,4.008,348,1.276,349,1.838,350,3.364,351,2.809,352,2.06,353,2.809,354,2.809,355,2.94,356,1.661,357,2.06,358,2.809,359,2.809,360,2.06,361,2.06,362,1.661,363,2.06,364,2.809,365,2.809,366,2.809,367,2.809,368,2.809,369,2.809,370,2.809,371,2.809,372,2.809,373,2.809,374,2.809,375,2.809]],["title/interfaces/ApplicationInstance.html",[376,1.087,377,2.396]],["body/interfaces/ApplicationInstance.html",[2,0.279,3,0.328,4,0.233,7,0.664,12,1.099,13,0.54,31,0.03,32,0.724,34,1.541,41,0.328,53,0.024,54,0.024,72,0.484,73,0.883,103,2.025,146,1.869,376,1.957,377,3.993,378,3.742,379,3.742,380,2.025,381,2.636,382,6.122,383,6.122,384,6.122,385,6.122,386,4.49,387,4.49,388,6.122,389,5.138,390,3.297,391,5.138]],["title/components/AppsInfoComponent.html",[55,0.17,246,0.742]],["body/components/AppsInfoComponent.html",[2,0.298,3,0.237,4,0.109,6,0.513,7,0.643,9,0.522,10,2.606,12,0.971,13,0.771,16,1.902,18,1.588,19,1.349,21,0.921,24,2.972,30,0.695,31,0.03,32,0.686,33,0.703,34,0.79,35,1.155,36,1.071,37,0.704,38,0.587,40,0.201,41,0.154,42,0.227,43,0.57,44,0.853,45,0.695,53,0.014,54,0.014,55,0.248,56,0.474,57,0.645,58,0.645,59,0.645,63,1.123,64,1.77,65,1.427,66,0.438,67,0.37,68,0.921,70,0.921,72,0.227,73,0.522,74,1.918,75,1.521,76,1.918,80,2.002,91,1.261,92,0.522,93,1.126,94,1.669,95,1.941,103,2.002,104,0.674,111,0.554,120,0.645,124,2.296,125,1.709,131,1.211,140,0.598,142,1.36,144,1.169,146,1.848,149,1.155,158,1.709,159,1.36,160,1.971,165,0.81,166,0.963,167,0.696,168,0.81,169,0.876,170,0.81,172,0.598,173,0.645,174,0.598,175,1.211,177,0.674,179,1.306,180,1.306,182,0.876,183,0.75,184,1.248,187,1.248,236,0.554,237,0.993,238,0.921,239,1.36,240,0.645,241,0.993,242,0.474,243,0.645,244,0.513,245,0.645,246,1,247,0.645,248,0.474,249,0.645,250,0.513,251,0.993,252,0.438,253,0.554,254,0.645,255,0.474,256,0.73,257,0.474,258,0.474,259,0.645,260,0.474,261,0.79,262,0.645,263,0.474,264,0.645,265,0.474,266,0.645,267,0.513,268,0.645,269,0.474,270,0.645,271,0.474,272,0.645,278,2.912,316,2.32,357,4.688,381,3.502,386,2.36,387,1.533,389,2.701,390,2.912,392,5.365,393,1.533,394,2.701,395,2.701,396,4.407,397,4.407,398,4.407,399,4.407,400,4.407,401,4.407,402,4.407,403,4.407,404,4.407,405,3.699,406,4.407,407,4.407,408,4.407,409,2.379,410,4.407,411,3.218,412,3.218,413,3.218,414,2.09,415,3.218,416,2.09,417,2.701,418,3.218,419,2.701,420,3.218,421,2.09,422,2.106,423,3.218,424,2.81,425,2.09,426,2.09,427,2.09,428,2.09,429,2.09,430,2.09,431,2.09,432,1.754,433,2.09,434,2.09,435,1.733,436,2.09,437,2.09,438,1.462,439,2.707,440,2.09,441,3.218,442,3.218,443,3.218,444,2.09,445,2.09,446,2.09,447,1.754,448,2.36,449,2.09,450,2.09,451,3.218,452,1.754,453,2.701,454,1.533,455,1.533,456,2.113,457,3.293,458,1.754,459,2.09,460,2.09,461,2.09,462,2.09,463,2.09,464,2.09,465,2.09,466,2.09,467,2.09,468,2.09,469,2.09,470,2.09,471,2.09,472,2.09,473,2.09,474,2.09,475,2.36,476,3.218,477,3.218,478,2.09,479,1.126,480,2.09,481,2.09,482,2.09,483,2.09,484,2.09,485,3.924,486,3.924,487,2.09,488,2.09,489,2.09,490,2.09,491,2.09,492,2.09,493,2.09,494,2.09,495,2.09,496,2.09,497,3.218,498,3.218,499,3.218,500,3.218,501,3.218,502,3.218,503,2.701,504,3.218,505,3.218,506,3.218,507,3.218,508,3.218,509,2.701,510,2.36,511,3.218,512,3.218,513,3.218,514,3.218,515,3.218,516,4.407,517,3.218,518,4.407]],["title/guards/AuthGuard.html",[519,2.396,520,2.742]],["body/guards/AuthGuard.html",[2,0.244,3,0.286,4,0.203,7,0.543,9,0.811,13,0.606,17,1.114,30,0.886,31,0.03,32,0.543,33,0.671,37,0.892,38,0.67,40,0.375,41,0.286,42,0.423,43,0.69,45,0.886,53,0.022,54,0.022,67,0.886,72,0.423,73,0.632,92,0.811,112,3.425,120,1.706,142,1.706,144,1.033,172,1.114,173,1.202,174,1.114,175,1.202,177,0.816,179,1.839,232,2.302,233,2.097,274,2.302,348,1.769,380,1.769,424,2.272,454,2.856,519,2.856,520,4.198,521,3.894,522,3.669,523,6.032,524,3.894,525,3.325,526,3.894,527,3.894,528,5.832,529,4.053,530,5.832,531,3.894,532,1.665,533,4.638,534,5.002,535,1.326,536,2.548,537,4.053,538,2.548,539,2.548,540,4.198,541,2.548,542,3.268,543,4.638,544,3.268,545,3.669,546,3.894,547,2.856,548,3.894,549,3.894,550,3.894,551,3.894,552,3.268,553,4.198,554,5.832,555,5.002,556,1.632]],["title/injectables/AuthService.html",[300,1.613,535,0.866]],["body/injectables/AuthService.html",[2,0.207,3,0.243,4,0.172,7,0.487,9,0.727,12,1.02,13,0.714,17,0.944,19,1.88,30,0.795,31,0.03,32,0.593,33,0.602,34,1.101,37,0.907,38,0.675,40,0.318,41,0.243,42,0.358,44,1.189,45,0.902,53,0.02,54,0.02,67,1.068,72,0.358,73,0.727,74,2.112,78,2.82,81,3.174,92,0.727,94,1.893,95,1.962,100,2.291,104,0.691,117,2.934,120,1.572,125,2.118,131,1.019,142,1.019,144,0.875,147,2.77,158,1.739,165,1.28,170,1.739,172,0.944,173,1.019,174,1.283,175,1.019,177,1.067,179,1.695,180,1.493,182,1.384,183,1.185,184,1.739,193,1.384,300,2.213,304,1.951,348,1.499,390,2.943,419,2.77,424,2.037,522,4.007,525,3.247,533,4.275,535,1.351,536,2.16,537,4.191,538,2.16,539,3.856,542,2.77,543,3.764,544,2.77,552,2.77,557,2.77,558,3.289,559,4.586,560,5.893,561,5.464,562,3.378,563,3.856,564,3.301,565,4.484,566,5.093,567,3.301,568,5.464,569,2.037,570,4.484,571,4.275,572,3.301,573,3.301,574,3.301,575,3.301,576,3.301,577,3.301,578,2.421,579,3.301,580,3.301,581,4.484,582,2.77,583,2.77,584,3.764,585,2.77,586,3.301,587,3.301,588,3.301,589,3.301,590,3.301,591,3.301,592,3.301,593,3.301,594,2.421,595,2.421,596,3.301,597,3.301,598,3.301,599,3.301]],["title/components/ChangePasswordComponent.html",[55,0.17,248,0.742]],["body/components/ChangePasswordComponent.html",[2,0.21,3,0.162,4,0.115,6,0.543,7,0.597,9,0.545,12,1.05,13,0.74,17,0.961,18,2.536,19,1.902,21,1.298,25,2.197,30,0.91,31,0.03,32,0.65,33,0.69,34,1.198,37,0.85,38,0.597,40,0.213,41,0.162,42,0.24,43,0.595,44,1.294,45,0.72,47,1.446,50,1.525,53,0.015,54,0.018,55,0.255,56,0.502,57,0.682,58,0.682,59,0.682,63,1.162,64,1.786,65,1.344,66,0.463,67,1.035,68,0.961,70,0.961,72,0.24,73,0.545,74,1.945,75,1.575,76,1.945,78,1.091,79,3.328,80,2.061,81,3.341,86,2.463,88,2.463,89,2.197,90,2.463,91,1.298,92,0.545,93,1.19,94,1.698,95,1.976,96,1.528,100,1.408,101,2.989,102,2.197,103,2.061,104,0.951,105,2.463,107,2.463,108,2.463,111,1.62,114,2.463,115,3.917,117,2.197,118,2.197,120,1.254,121,1.809,122,2.197,123,3.362,124,1.302,125,1.759,126,2.463,128,1.985,129,2.561,130,1.629,131,1.506,132,2.463,133,1.809,134,2.463,135,1.985,136,4.134,144,0.586,146,1.408,158,1.759,159,1.037,160,1.51,165,0.857,166,0.543,167,0.736,168,0.857,169,0.926,170,0.857,171,0.857,172,0.632,173,0.682,174,0.632,175,0.682,176,1.307,177,0.851,179,0.736,180,1.352,182,0.926,183,0.794,184,1.302,185,3.579,186,3.328,187,1.759,190,1.855,193,0.926,196,1.855,197,2.401,200,1.19,205,1.446,206,1.446,207,1.307,213,1.621,214,1.621,215,2.463,216,1.621,217,2.197,218,2.463,225,2.463,226,1.621,227,1.621,228,1.621,229,1.621,230,1.091,234,2.463,235,2.969,236,0.586,237,1.037,238,0.961,239,1.4,240,0.682,241,1.037,242,0.502,243,0.682,244,0.543,245,0.682,246,0.502,247,0.682,248,1.03,249,0.682,250,0.543,251,1.037,252,0.463,253,0.586,254,0.682,255,0.502,256,0.762,257,0.502,258,0.502,259,0.682,260,0.502,261,0.824,262,0.682,263,0.502,264,0.682,265,0.502,266,0.682,267,0.543,268,0.682,269,0.502,270,0.682,271,0.502,272,0.682,362,3.641,600,5.169,601,1.855,602,3.358,603,3.358,604,4.537,605,4.537,606,2.682,607,3.358,608,3.358,609,2.21,610,2.21,611,2.21,612,2.21,613,2.21,614,3.358,615,2.21,616,2.21,617,2.21,618,2.21,619,2.21,620,2.21,621,2.21,622,2.21,623,2.21,624,3.358,625,1.621,626,2.21,627,2.21,628,2.21,629,2.21,630,1.855,631,2.21,632,2.21,633,2.21,634,2.21,635,2.21,636,2.21,637,2.21,638,2.21,639,2.21,640,2.21]],["title/interfaces/Cluster.html",[376,1.087,641,1.484]],["body/interfaces/Cluster.html",[2,0.338,3,0.323,4,0.229,7,0.661,12,1.103,13,0.531,16,2.594,24,3.761,31,0.029,32,0.712,33,0.908,34,1.534,41,0.323,53,0.024,54,0.024,72,0.476,73,0.875,124,1.701,376,1.943,381,2.594,387,4.465,391,5.11,422,2.871,641,2.765,642,3.683,643,6.089,644,6.089,645,6.089,646,6.089,647,6.089]],["title/interfaces/ComponentMockOption.html",[376,1.087,648,2.138]],["body/interfaces/ComponentMockOption.html",[2,0.295,3,0.21,4,0.149,7,0.699,12,0.94,17,1.161,19,1.197,31,0.03,32,0.512,33,0.633,34,0.701,35,1.947,36,1.805,38,0.557,40,0.275,41,0.347,42,0.31,43,0.506,44,1.075,45,0.506,53,0.018,54,0.018,55,0.294,63,1.161,64,1.161,65,0.921,66,0.85,67,0.836,68,0.817,70,0.817,72,0.31,73,0.658,75,1.107,76,1.57,85,1.869,91,0.817,92,0.463,96,1.469,104,0.598,121,1.538,124,1.828,130,1.026,140,0.817,142,2.04,144,1.68,159,1.252,160,0.951,166,0.701,171,1.107,172,0.817,173,0.882,174,1.161,175,0.882,177,0.598,180,2.17,181,2.095,194,1.538,203,1.297,204,1.538,223,1.869,252,0.598,253,1.438,256,0.648,286,1.689,325,1.538,376,1.709,435,2.184,438,1.297,455,2.095,532,0.951,556,1.7,562,2.398,578,2.095,594,2.095,641,1.842,648,3.359,649,2.095,650,2.095,651,3.086,652,2.095,653,2.184,654,2.534,655,2.398,656,2.397,657,2.397,658,3.404,659,1.026,660,1.41,661,2.397,662,2.397,663,1.869,664,2.095,665,2.095,666,2.397,667,2.975,668,3.958,669,2.397,670,3.459,671,2.397,672,5.236,673,3.404,674,3.404,675,2.095,676,3.404,677,2.397,678,3.404,679,2.397,680,3.404,681,3.404,682,2.397,683,3.404,684,3.404,685,2.095,686,3.404,687,2.095,688,3.404,689,2.095,690,3.404,691,2.095,692,3.404,693,5.318,694,2.397,695,2.397,696,2.397,697,3.958,698,3.404,699,3.404,700,3.404,701,3.404,702,3.404,703,3.404,704,3.404,705,3.404,706,3.404,707,3.404,708,3.404,709,3.404,710,2.654,711,2.397,712,1.869,713,2.397,714,3.688,715,5.236,716,4.082,717,2.397,718,2.095,719,2.397,720,2.397,721,2.397,722,2.397,723,2.095,724,2.397,725,2.397,726,2.397]],["title/components/DebugPanelComponent.html",[55,0.17,252,0.684]],["body/components/DebugPanelComponent.html",[2,0.287,3,0.166,4,0.118,6,0.553,7,0.69,9,0.553,12,0.798,13,0.7,17,1.311,19,1.429,21,0.975,30,0.812,31,0.03,32,0.562,33,0.743,34,0.837,35,2.035,36,1.723,37,0.728,38,0.497,40,0.217,41,0.302,42,0.245,43,0.604,44,0.904,45,0.399,53,0.015,54,0.015,55,0.317,56,0.512,57,0.696,58,0.696,59,0.696,63,1.176,64,1.801,65,1.35,66,0.96,67,0.812,68,0.975,70,0.975,72,0.245,73,0.553,74,1.525,75,1.594,76,1.954,85,1.475,91,1.311,92,0.553,93,1.214,96,1.622,104,1.085,111,0.598,121,1.836,124,1.594,130,0.809,140,0.975,142,1.99,144,1.612,149,1.224,159,1.052,160,0.75,166,0.553,171,0.874,172,0.645,173,0.696,174,1.176,175,0.696,177,0.472,180,2.147,181,1.653,183,1.646,194,1.214,203,1.024,204,1.214,223,2.23,230,1.112,236,0.598,237,1.052,238,0.975,239,1.414,240,0.696,241,1.052,242,0.512,243,0.696,244,0.553,245,0.696,246,0.512,247,0.696,248,0.512,249,0.696,250,0.553,251,1.052,252,0.96,253,1.532,254,0.696,255,0.512,256,0.933,257,0.512,258,0.512,259,0.696,260,0.512,261,0.837,262,0.696,263,0.512,264,0.696,265,0.512,266,0.696,267,0.553,268,0.696,269,0.512,270,0.696,271,0.512,272,0.696,286,1.332,325,3.162,376,1.135,435,2.214,438,1.024,455,1.653,532,0.75,556,1.429,562,2.015,578,1.653,594,2.5,641,1.548,648,3.388,649,4.305,650,1.653,651,3.221,652,1.653,653,1.836,654,2.797,655,2.015,656,1.891,657,1.891,658,2.861,659,0.809,660,1.112,661,2.861,662,2.861,663,2.23,664,3.361,665,3.797,666,1.891,667,2.5,668,3.45,669,1.891,670,3.015,671,1.891,672,4.993,673,2.861,674,2.861,675,1.653,676,2.861,677,1.891,678,2.861,679,1.891,680,2.861,681,2.861,682,1.891,683,2.861,684,2.861,685,1.653,686,2.861,687,1.653,688,2.861,689,1.653,690,2.861,691,1.653,692,2.861,693,5.147,694,2.861,695,1.891,696,1.891,697,3.846,698,2.861,699,2.861,700,2.861,701,2.861,702,2.861,703,2.861,704,2.861,705,2.861,706,2.861,707,2.861,708,2.861,709,2.861,710,2.69,711,2.861,712,1.475,713,1.891,714,3.517,715,4.993,716,3.893,717,1.891,718,1.653,719,2.861,720,2.861,721,3.846,722,1.891,723,3.015,724,2.861,725,2.861,726,1.891,727,3.409,728,3.409,729,3.409,730,3.409,731,2.254,732,2.254,733,2.254,734,2.254,735,2.254,736,2.254,737,2.254,738,2.254,739,3.409,740,3.409,741,3.409]],["title/components/EditClusterComponent.html",[55,0.17,255,0.742]],["body/components/EditClusterComponent.html",[2,0.243,3,0.197,4,0.14,6,0.659,7,0.632,9,0.629,12,1.024,13,0.739,21,1.11,30,0.807,31,0.03,32,0.632,33,0.611,34,1.299,37,0.674,38,0.617,40,0.259,41,0.197,42,0.291,43,0.687,44,1.029,45,0.687,53,0.017,54,0.017,55,0.276,56,0.609,57,0.828,58,0.828,59,0.828,63,1.303,64,1.845,65,1.367,66,0.562,67,0.476,68,1.11,70,1.11,72,0.291,73,0.629,74,2.031,75,1.766,76,2.031,80,2.266,89,2.538,91,1.428,92,0.629,93,1.446,94,1.797,95,2.091,96,1.628,100,1.626,101,2.974,103,1.762,104,0.954,111,1.323,118,2.538,120,1.406,121,2.089,122,2.538,123,3.61,124,1.935,125,2.139,129,1.125,130,1.393,131,0.828,140,1.428,144,0.712,146,1.626,158,1.504,159,1.197,160,1.661,165,1.041,166,0.659,167,0.893,168,1.041,169,1.125,170,1.041,171,1.041,172,0.768,173,0.828,174,0.768,175,0.828,177,0.954,179,1.516,180,1.516,182,1.125,183,0.964,184,1.504,193,1.125,194,2.089,197,2.95,200,1.446,203,1.762,204,2.089,205,1.756,206,1.756,207,1.587,230,1.325,235,3.265,236,0.712,237,1.197,238,1.11,239,1.54,240,0.828,241,1.197,242,0.609,243,0.828,244,0.659,245,0.828,246,0.609,247,0.828,248,0.609,249,0.828,250,0.659,251,1.197,252,0.562,253,0.712,254,0.828,255,1.133,256,1.385,257,0.609,258,0.609,259,0.828,260,0.609,261,0.952,262,0.828,263,0.609,264,0.828,265,0.609,266,0.828,267,0.659,268,0.828,269,0.609,270,0.828,271,0.609,272,0.828,352,4.523,438,2.266,456,2.688,479,1.446,503,3.256,532,0.893,641,2.583,659,0.964,660,1.325,691,1.969,710,2.538,742,4.523,743,2.253,744,3.879,745,3.879,746,4.99,747,4.99,748,5.516,749,4.99,750,3.879,751,3.879,752,2.684,753,2.684,754,3.879,755,2.684,756,2.684,757,2.684,758,2.684,759,2.684,760,2.684,761,2.684,762,4.555,763,3.879,764,2.684,765,4.555,766,2.684]],["title/components/EditUserComponent.html",[55,0.17,257,0.742]],["body/components/EditUserComponent.html",[2,0.188,3,0.14,4,0.1,6,0.468,7,0.63,9,0.486,12,1.042,13,0.751,17,1.201,21,0.858,30,0.858,31,0.03,32,0.644,33,0.65,34,1.03,36,1.233,37,0.858,38,0.585,40,0.184,41,0.14,42,0.207,43,0.531,44,1.21,45,0.656,53,0.013,54,0.013,55,0.264,56,0.433,57,0.589,58,0.589,59,0.589,62,1.4,63,1.06,64,1.743,65,1.299,66,0.4,67,1.062,68,0.858,69,2.516,70,0.858,71,2.516,72,0.207,73,0.486,74,1.873,75,1.436,76,1.976,78,2.5,80,2.072,81,2.825,83,2.481,84,2.863,87,2.516,89,1.962,91,1.201,92,0.486,94,1.619,95,1.883,96,1.449,100,1.257,101,2.589,103,1.362,104,0.956,109,2.516,110,1.602,111,1.539,112,3.359,113,3.108,118,1.962,120,1.494,121,2.26,122,1.962,123,3.168,124,1.627,125,2.034,129,1.759,130,1.507,131,1.143,139,1.602,141,1.128,142,1.295,143,1.128,144,1.113,145,1.602,146,1.257,149,0.685,150,2.26,156,1.602,158,1.877,159,0.925,160,1.397,164,1.602,165,0.74,166,0.468,167,0.635,168,0.74,169,0.8,170,0.74,171,0.74,172,0.546,173,0.589,174,0.546,175,0.589,177,0.956,178,4.251,179,0.998,180,1.233,182,0.8,183,0.685,184,1.162,191,1.602,193,1.257,194,2.26,197,2.994,200,1.615,203,1.906,204,2.26,205,1.249,206,1.249,207,1.128,230,0.942,231,3.101,232,2.189,233,1.995,235,2.746,236,0.506,237,0.925,238,0.858,239,1.295,240,0.589,241,0.925,242,0.433,243,0.589,244,0.468,245,0.589,246,0.433,247,0.589,248,0.681,249,0.589,250,0.468,251,0.925,252,0.4,253,0.506,254,0.589,255,0.433,256,1.317,257,0.953,258,0.433,259,0.589,260,0.433,261,0.736,262,0.589,263,0.433,264,0.589,265,0.433,266,0.589,267,0.468,268,0.589,269,0.433,270,0.589,271,0.433,272,0.589,278,2.825,279,1.4,280,2.26,282,1.615,348,0.867,356,3.687,362,1.128,363,1.4,380,0.867,409,1.362,424,2.072,439,1.615,448,2.199,456,1.615,479,1.028,525,2.728,529,1.4,556,0.8,606,2.697,625,3.078,653,1.028,689,1.4,710,1.962,742,4.574,767,3.522,768,4.197,769,4.197,770,4.197,771,3.522,772,2.516,773,2.998,774,3.522,775,2.998,776,2.998,777,2.516,778,1.908,779,1.773,780,2.516,781,1.908,782,2.998,783,1.908,784,2.199,785,2.516,786,1.908,787,1.908,788,1.773,789,2.998,790,1.908,791,2.998,792,1.908,793,1.908,794,2.516,795,1.908,796,1.908,797,1.908,798,1.908,799,1.908,800,1.908,801,2.998,802,4.562,803,5.065,804,1.908,805,1.908,806,1.908,807,1.908,808,1.908,809,3.108,810,1.908,811,1.908,812,1.908,813,1.908,814,2.516,815,1.962,816,1.602,817,1.602,818,1.028,819,1.602,820,4.197,821,1.908,822,1.908,823,1.908,824,1.908]],["title/injectables/ErrorHandlerService.html",[319,2.138,535,0.866]],["body/injectables/ErrorHandlerService.html",[2,0.232,3,0.272,4,0.193,7,0.402,9,0.875,13,0.587,30,0.657,31,0.03,32,0.402,33,0.497,34,0.91,37,0.548,38,0.526,40,0.357,41,0.272,42,0.402,43,0.858,44,0.983,53,0.021,54,0.021,67,0.956,72,0.402,92,0.875,100,2.668,104,1.015,129,2.601,131,1.144,140,1.061,153,2.718,198,3.111,199,3.111,212,2.718,230,1.829,238,1.061,304,2.191,318,4.066,319,3.17,342,3.111,422,2.425,435,1.996,529,2.718,532,1.234,535,1.431,547,2.718,553,4.066,556,2.031,559,4.066,582,3.111,583,3.111,584,3.111,659,1.331,663,2.425,665,2.718,712,2.425,714,3.903,716,4.335,779,2.864,825,4.53,826,3.111,827,4.845,828,3.706,829,4.845,830,5.723,831,3.706,832,4.066,833,5.397,834,5.493,835,3.706,836,3.706,837,3.706,838,3.706,839,3.706,840,4.845,841,3.706,842,3.706,843,3.706,844,3.706,845,3.706,846,4.845,847,3.706,848,4.845,849,4.845,850,3.706,851,3.706,852,3.706,853,3.706,854,2.718,855,3.706,856,3.706,857,2.425,858,4.845,859,3.706,860,3.706,861,3.706,862,3.706,863,3.111,864,3.706,865,3.706,866,3.111,867,3.706,868,3.706,869,3.706,870,3.111,871,3.111,872,3.706,873,3.706,874,3.706,875,3.111,876,3.706,877,3.706,878,3.111,879,3.706,880,3.706,881,3.706,882,3.706,883,3.706,884,3.706,885,3.706,886,3.706,887,4.845,888,3.706,889,3.706,890,3.706,891,3.706,892,3.706,893,3.706,894,3.706,895,3.706,896,3.706]],["title/injectables/FilterPipe.html",[297,1.931,535,0.866]],["body/injectables/FilterPipe.html",[0,2.016,2,0.259,3,0.304,4,0.216,7,0.617,9,0.844,10,3.075,12,1.044,13,0.63,18,3.142,30,0.922,31,0.03,32,0.564,33,0.698,34,1.277,36,1.985,37,0.941,38,0.449,39,3.403,40,0.399,41,0.304,42,0.449,43,0.734,44,1.582,45,0.922,53,0.023,54,0.023,72,0.449,73,0.922,92,0.672,124,2.205,142,1.278,144,1.098,179,1.378,297,3.075,535,1.508,784,3.814,818,3.063,897,3.475,898,5.158,899,5.201,900,5.549,901,4.14,902,5.49,903,4.365,904,5.201,905,4.14,906,5.201,907,4.14,908,4.14,909,4.14,910,5.201,911,3.475,912,4.14,913,4.14,914,4.14]],["title/components/LoginComponent.html",[55,0.17,258,0.742]],["body/components/LoginComponent.html",[2,0.22,3,0.172,4,0.122,6,0.576,7,0.57,9,0.57,12,0.984,13,0.717,17,0.671,18,2.594,19,1.472,21,1.338,25,1.534,30,0.828,31,0.03,32,0.608,33,0.627,34,1.034,37,0.863,38,0.591,40,0.226,41,0.172,42,0.254,43,0.622,44,1.116,45,0.622,47,1.534,50,1.595,53,0.015,54,0.015,55,0.261,56,0.532,57,0.724,58,0.724,59,0.724,63,1.205,64,1.802,65,1.362,66,0.491,67,0.887,68,1.005,70,1.005,72,0.254,73,0.57,76,1.556,78,1.733,79,3.429,81,1.263,86,2.576,88,2.576,90,2.576,91,1.338,92,0.57,100,1.472,101,2.594,102,2.298,103,2.387,104,0.979,105,2.576,107,2.576,108,2.576,111,0.622,114,2.576,115,3.996,117,3.059,120,1.084,125,1.362,126,2.576,128,2.076,129,2.589,130,1.679,131,1.443,132,2.576,133,1.891,134,3.088,135,2.076,136,4.28,140,0.671,142,1.084,144,0.622,149,0.842,150,1.891,151,2.947,158,2.038,159,0.724,166,0.576,167,0.78,176,1.386,177,0.979,185,3.855,186,3.088,187,1.632,193,0.983,200,1.263,208,1.968,209,1.968,210,2.947,212,1.72,213,1.72,214,1.72,215,2.576,216,1.72,217,1.534,218,1.72,225,2.576,226,1.72,227,1.72,228,1.72,229,1.72,231,1.386,232,1.386,233,1.263,234,2.576,236,0.622,237,1.084,238,1.005,239,1.443,240,0.724,241,1.084,242,0.532,243,0.724,244,0.576,245,0.724,246,0.532,247,0.724,248,0.532,249,0.724,250,0.576,251,1.084,252,0.736,253,1.394,254,0.724,255,0.532,256,0.797,257,0.532,258,1.061,259,0.724,260,0.532,261,1.148,262,0.724,263,0.532,264,0.724,265,0.532,266,0.724,267,0.576,268,0.724,269,0.532,270,0.724,271,0.532,272,0.724,277,3.059,280,2.518,282,2.268,300,2.69,325,1.263,326,1.72,340,1.72,348,1.065,380,1.595,386,2.576,390,2.518,409,1.595,424,1.912,438,1.595,439,1.891,522,1.72,525,2.935,537,3.088,538,1.534,539,2.755,556,0.983,562,3.45,569,1.595,571,2.947,585,1.968,595,3.429,630,1.968,651,3.059,670,2.576,712,1.534,714,2.489,716,2.755,788,2.764,814,3.924,854,3.429,915,1.968,916,3.512,917,3.512,918,4.675,919,4.675,920,4.675,921,3.924,922,2.345,923,5.256,924,3.512,925,2.345,926,2.345,927,2.345,928,2.345,929,2.345,930,3.512,931,1.595,932,3.512,933,2.947,934,3.512,935,2.576,936,2.345,937,2.345,938,2.345,939,2.345,940,2.576,941,2.345,942,2.345,943,2.345,944,3.512,945,2.345,946,2.345,947,4.21,948,2.345,949,2.345,950,2.345,951,2.345,952,2.345,953,2.345,954,2.345,955,2.345,956,2.345,957,2.345,958,1.72,959,1.968,960,1.72,961,1.72,962,1.968,963,2.345]],["title/components/MainComponent.html",[55,0.17,260,0.742]],["body/components/MainComponent.html",[2,0.327,3,0.306,4,0.217,6,1.023,7,0.567,9,0.847,13,0.632,21,1.495,31,0.03,37,0.616,38,0.452,40,0.402,41,0.306,42,0.452,43,0.925,53,0.023,54,0.023,55,0.321,56,0.946,57,1.287,58,1.287,59,1.287,63,1.632,64,1.932,65,1.486,66,0.873,67,0.739,68,1.495,70,1.495,72,0.452,91,1.711,92,0.925,104,0.873,111,1.105,236,1.105,237,1.612,238,1.495,239,1.845,240,1.287,241,1.612,242,0.946,243,1.287,244,1.023,245,1.287,246,0.946,247,1.287,248,0.946,249,1.287,250,1.023,251,1.612,252,0.873,253,1.105,254,1.287,255,0.946,256,1.185,257,0.946,258,0.946,259,1.287,260,1.357,261,1.468,262,1.287,263,0.946,264,1.287,265,0.946,266,1.287,267,1.023,268,1.287,269,0.946,270,1.287,271,0.946,272,1.287,532,1.387,659,1.497,660,2.057,964,3.498,965,5.223,966,5.223,967,5.223,968,4.169,969,4.169]],["title/interfaces/Notification.html",[376,1.087,654,1.613]],["body/interfaces/Notification.html",[2,0.256,3,0.3,4,0.213,12,1.051,24,3.339,31,0.03,32,0.697,33,0.852,36,1.358,37,0.835,38,0.443,40,0.393,41,0.379,42,0.443,45,0.913,50,2.34,53,0.023,54,0.023,66,0.855,72,0.613,73,0.836,92,0.662,96,1.167,130,2.13,133,2.198,149,1.465,160,1.975,177,0.855,187,1.582,203,2.695,274,2.412,376,1.715,532,1.358,535,1.366,541,2.67,569,1.853,654,3.02,659,1.465,857,2.67,931,1.853,970,2.992,971,3.424,972,4.325,973,3.424,974,3.424,975,2.992,976,2.992,977,2.992,978,2.992,979,3.424,980,3.424,981,3.424,982,2.992,983,4.325,984,3.424,985,3.424,986,3.424,987,3.424,988,3.424,989,3.424,990,3.424,991,3.424,992,3.424,993,3.424,994,4.325,995,2.992,996,3.424,997,4.74,998,3.424,999,2.992,1000,3.424,1001,2.992,1002,3.424,1003,3.424,1004,3.424]],["title/components/NotificationsComponent.html",[55,0.17,263,0.742]],["body/components/NotificationsComponent.html",[2,0.342,3,0.242,4,0.172,6,0.809,7,0.592,9,0.726,13,0.713,19,1.877,21,1.281,30,0.793,31,0.03,32,0.592,33,0.79,35,1.183,37,0.662,38,0.639,40,0.318,41,0.242,42,0.357,43,0.793,45,0.584,53,0.02,54,0.02,55,0.298,56,0.748,57,1.017,58,1.017,59,1.017,63,1.456,64,1.883,65,1.451,66,0.69,67,0.584,68,1.281,70,1.281,72,0.357,73,0.726,74,2.128,75,1.973,91,1.562,92,0.726,94,1.892,95,2.164,96,1.724,102,3.572,104,1.066,111,0.873,128,1.947,133,2.412,140,0.942,144,1.349,149,1.608,165,1.277,168,1.277,169,1.381,170,1.277,171,1.277,172,0.942,173,1.017,174,0.942,175,1.017,177,1.066,180,1.49,183,1.608,184,1.736,187,1.736,236,0.873,237,1.382,238,1.281,239,1.685,240,1.017,241,1.382,242,0.748,243,1.017,244,0.809,245,1.017,246,0.748,247,1.017,248,0.748,249,1.017,250,0.809,251,1.382,252,0.69,253,0.873,254,1.017,255,0.748,256,1.016,257,0.748,258,0.748,259,1.017,260,0.748,261,1.099,262,1.017,263,1.239,264,1.017,265,0.748,266,1.017,267,0.809,268,1.017,269,0.748,270,1.017,271,0.748,272,1.017,532,1.096,558,3.284,654,3.026,659,1.183,663,2.93,664,3.284,667,2.416,832,3.758,857,3.572,931,2.034,975,3.284,976,4.187,977,4.497,978,3.284,995,2.416,1005,2.764,1006,4.478,1007,4.478,1008,3.294,1009,4.478,1010,3.294,1011,3.294,1012,3.294,1013,2.764,1014,3.294,1015,2.764,1016,3.294,1017,3.294,1018,3.294,1019,3.294,1020,4.478,1021,3.284,1022,4.478,1023,4.478]],["title/injectables/NotificationsService.html",[96,0.935,535,0.866]],["body/injectables/NotificationsService.html",[2,0.242,3,0.284,4,0.201,7,0.54,9,0.807,12,0.893,13,0.746,24,2.282,30,0.881,31,0.03,32,0.597,33,0.78,36,1.656,37,0.911,38,0.419,40,0.372,41,0.366,42,0.419,45,0.881,50,2.259,53,0.022,54,0.022,66,1.218,72,0.597,73,0.807,92,0.893,96,1.423,104,1.042,130,1.386,133,2.679,149,1.786,160,1.285,177,1.153,187,1.497,203,1.753,274,2.282,376,1.285,532,1.285,535,1.459,541,2.526,569,1.753,654,3.166,659,1.386,857,3.254,931,2.259,970,2.831,971,4.878,972,4.174,973,4.174,974,3.239,975,4.263,976,3.648,977,3.648,978,3.648,979,3.239,980,3.239,981,3.239,982,3.648,983,4.878,984,4.174,985,4.174,986,4.174,987,4.174,988,4.878,989,3.239,990,3.239,991,3.239,992,3.239,993,3.239,994,4.174,995,2.831,996,3.239,997,4.619,998,3.239,999,2.831,1000,3.239,1001,2.831,1002,3.239,1003,3.239,1004,3.239,1013,3.239,1024,4.974,1025,4.974,1026,3.86,1027,3.86,1028,3.86,1029,3.86,1030,3.86,1031,3.86]],["title/components/OrganizationComponent.html",[55,0.17,265,0.742]],["body/components/OrganizationComponent.html",[0,1.794,2,0.335,3,0.126,4,0.09,6,0.422,7,0.593,9,0.448,12,1.018,13,0.743,17,0.79,21,0.79,30,0.768,31,0.03,32,0.648,33,0.582,34,0.422,35,0.991,36,1.443,37,0.809,38,0.604,40,0.166,41,0.126,42,0.47,43,0.489,44,0.456,45,0.82,53,0.015,54,0.012,55,0.303,56,0.627,57,0.531,58,0.531,59,0.531,61,1.125,63,0.989,64,1.723,65,1.215,66,1.121,67,1.13,68,0.79,70,0.79,72,0.187,73,0.448,74,1.82,76,1.317,78,1.362,80,2.208,83,1.632,84,1.017,85,2.59,91,1.133,92,0.448,94,1.56,95,1.815,96,1.391,100,1.817,103,1.254,104,1.019,111,0.917,112,2.492,120,1.338,125,1.535,129,1.157,130,0.991,131,0.531,135,1.632,140,0.989,141,2.044,142,1.56,143,2.044,144,1.049,146,1.94,149,1.556,150,2.492,158,2.224,159,1.501,160,0.919,165,0.667,166,0.422,167,0.572,168,0.667,169,0.721,170,0.667,171,0.667,172,0.492,173,0.531,174,0.492,175,0.531,177,0.969,179,1.54,180,1.151,182,0.721,183,0.617,184,1.07,187,1.07,193,1.45,195,3.322,231,1.017,236,0.456,237,0.852,238,0.79,239,1.222,240,0.531,241,0.852,242,0.39,243,0.531,244,0.422,245,0.531,246,0.39,247,0.531,248,0.39,249,0.531,250,0.422,251,0.852,252,0.36,253,0.456,254,0.531,255,0.39,256,1.147,257,0.627,258,0.39,259,0.531,260,0.39,261,0.678,262,0.531,263,0.39,264,0.531,265,0.898,266,0.531,267,0.422,268,0.531,269,0.39,270,0.531,271,0.627,272,0.531,277,2.59,278,0.926,279,1.261,280,2.132,282,1.487,301,1.954,303,3.707,348,0.781,349,1.125,350,1.443,355,2.024,356,1.017,360,1.261,361,1.261,390,1.487,405,3.322,409,2.102,422,1.806,424,2.369,435,1.487,438,1.571,439,1.487,456,0.926,457,3.322,479,2.334,510,2.024,525,2.619,532,0.572,545,2.903,558,2.024,606,1.632,659,0.617,660,0.849,675,1.261,718,2.024,771,1.443,779,1.632,784,3.707,788,2.735,815,3.028,818,1.862,898,4.377,900,3.883,911,2.317,931,1.254,935,2.024,940,2.024,958,2.536,960,2.536,961,2.536,1032,1.443,1033,2.76,1034,2.76,1035,3.958,1036,3.958,1037,4.242,1038,5.055,1039,3.322,1040,5.055,1041,5.055,1042,4.627,1043,2.76,1044,2.317,1045,2.76,1046,3.958,1047,2.76,1048,3.958,1049,2.902,1050,2.76,1051,1.72,1052,2.76,1053,1.72,1054,1.806,1055,3.958,1056,3.958,1057,4.862,1058,2.76,1059,1.72,1060,2.76,1061,1.72,1062,2.76,1063,1.72,1064,1.72,1065,3.458,1066,2.76,1067,1.72,1068,4.081,1069,1.72,1070,3.179,1071,1.72,1072,2.024,1073,1.72,1074,1.72,1075,1.72,1076,1.72,1077,3.825,1078,1.72,1079,1.72,1080,1.72,1081,1.72,1082,2.76,1083,1.72,1084,3.883,1085,1.72,1086,1.72,1087,3.958,1088,1.72,1089,3.458,1090,3.958,1091,2.76,1092,4.862,1093,3.458,1094,2.76,1095,3.958,1096,2.317,1097,1.443,1098,1.72,1099,1.443,1100,3.958,1101,1.72,1102,2.76,1103,2.76,1104,3.958,1105,3.958,1106,1.72,1107,1.72,1108,1.72,1109,1.443,1110,1.443,1111,1.72,1112,1.72,1113,1.72,1114,1.72,1115,2.76,1116,2.024,1117,3.958,1118,3.958,1119,5.055,1120,5.055,1121,1.806,1122,2.76,1123,1.806,1124,2.76,1125,2.76,1126,2.76]],["title/components/SidebarComponent.html",[55,0.17,269,0.742]],["body/components/SidebarComponent.html",[2,0.297,3,0.177,4,0.126,6,0.592,7,0.655,9,0.582,12,1.02,13,0.739,21,1.027,30,0.636,31,0.03,32,0.613,33,0.481,37,0.75,38,0.647,40,0.233,41,0.177,42,0.262,43,0.636,45,0.84,53,0.016,54,0.016,55,0.287,56,0.548,57,0.745,58,0.745,59,0.745,63,1.225,64,1.819,65,1.37,66,0.505,67,1.023,68,1.027,70,1.027,72,0.262,73,0.582,74,1.985,76,1.578,78,2.789,80,2.567,83,1.426,84,1.426,91,1.357,92,0.582,94,1.698,95,2.029,100,1.504,104,1.062,111,0.64,112,3.044,120,0.745,125,1.838,128,1.426,131,0.745,135,2.121,140,1.225,141,1.426,142,0.745,143,1.426,144,0.64,146,1.988,149,1.288,150,2.861,158,2.191,159,1.322,160,1.194,165,0.935,166,0.592,167,0.803,168,0.935,169,1.011,170,0.935,172,0.69,173,0.745,174,0.69,175,0.745,177,0.993,179,1.687,180,1.425,182,1.011,183,0.866,184,1.391,193,1.011,236,0.64,237,1.107,238,1.027,239,1.463,240,0.745,241,1.107,242,0.548,243,0.745,244,0.592,245,0.745,246,0.548,247,0.745,248,0.548,249,0.745,250,0.592,251,1.107,252,0.752,253,1.408,254,0.745,255,0.548,256,1.206,257,0.814,258,0.548,259,0.745,260,0.548,261,1.304,262,0.745,263,0.548,264,0.745,265,0.548,266,0.745,267,0.592,268,0.745,269,1.076,270,0.745,271,0.548,272,0.745,277,3.103,278,1.3,280,2.554,282,2.307,300,2.341,301,2.341,325,1.3,326,1.77,340,1.77,348,1.096,355,1.77,356,1.426,360,1.77,361,1.77,380,1.629,390,1.932,409,2.413,438,1.945,456,2.307,479,2.307,525,2.963,532,0.803,545,2.631,556,1.504,562,2.121,563,3.476,606,3.569,651,3.103,653,2.73,655,2.803,659,0.866,660,1.191,685,1.77,779,2.121,788,3.14,815,2.347,818,1.3,854,2.631,866,3.011,921,3.98,933,3.594,940,2.631,958,2.631,959,2.025,960,2.631,961,2.631,962,2.025,1015,2.025,1044,3.98,1049,3.594,1070,3.478,1096,2.025,1097,2.025,1099,2.025,1109,2.025,1110,2.025,1127,2.025,1128,3.588,1129,3.588,1130,3.588,1131,2.413,1132,3.588,1133,2.413,1134,3.588,1135,3.588,1136,2.413,1137,2.413,1138,2.413,1139,3.588,1140,2.413,1141,2.413,1142,2.413,1143,2.413,1144,2.413,1145,2.413,1146,2.413,1147,4.283,1148,3.594,1149,4.283,1150,2.413,1151,3.588,1152,2.413,1153,2.413,1154,2.413,1155,2.413,1156,2.413,1157,2.413,1158,3.011,1159,3.588,1160,3.588]],["title/pipes/SortByPipe.html",[0,1.267,298,1.931]],["body/pipes/SortByPipe.html",[0,1.8,2,0.174,3,0.204,4,0.145,6,0.682,7,0.673,9,0.753,10,2.744,11,2.036,12,1.023,13,0.735,18,1.962,30,1.076,31,0.03,32,0.659,33,0.815,35,2.355,37,0.981,38,0.301,39,2.601,40,0.268,41,0.204,42,0.301,43,0.492,45,0.492,50,2.61,53,0.017,54,0.017,104,0.582,120,1.227,124,1.965,140,1.45,142,1.433,177,1.124,179,1.545,187,1.8,298,2.35,417,3.336,424,2.961,547,2.036,569,2.757,714,2.35,818,3.309,902,3.336,903,5.254,1039,5.254,1068,3.336,1084,3.896,1161,5.156,1162,2.33,1163,2.776,1164,3.975,1165,6.261,1166,2.776,1167,3.975,1168,2.776,1169,3.975,1170,2.776,1171,2.776,1172,3.975,1173,5.585,1174,2.776,1175,2.776,1176,3.975,1177,2.776,1178,3.975,1179,2.776,1180,6.207,1181,2.776,1182,3.975,1183,3.975,1184,6.207,1185,2.776,1186,3.975,1187,2.776,1188,3.975,1189,2.776,1190,2.776,1191,2.776,1192,2.776,1193,2.776,1194,2.776,1195,2.776,1196,3.975,1197,2.776,1198,2.776,1199,2.776,1200,2.776,1201,2.776,1202,2.776,1203,2.776,1204,2.776,1205,2.776,1206,2.776,1207,2.776,1208,2.776,1209,2.776,1210,3.975,1211,2.776,1212,2.776,1213,2.776,1214,2.776,1215,2.776,1216,2.776,1217,5.068,1218,2.776,1219,4.642,1220,2.776,1221,4.642,1222,3.975,1223,2.776,1224,2.776,1225,2.776,1226,2.776,1227,2.776,1228,2.776]],["title/pipes/TruncatePipe.html",[0,1.267,299,1.931]],["body/pipes/TruncatePipe.html",[0,2.286,2,0.281,3,0.33,4,0.234,6,1.102,7,0.64,9,0.728,10,2.655,11,4.011,12,1.05,13,0.544,15,4.59,22,5.28,30,0.796,31,0.03,32,0.487,33,0.603,34,1.102,35,2.204,36,1.82,37,0.872,38,0.487,39,3.578,40,0.433,41,0.33,42,0.487,43,0.796,44,1.191,45,0.796,52,3.769,53,0.024,54,0.024,66,1.146,153,4.011,299,3.628,871,4.59,1072,4.011,1229,3.769,1230,5.469,1231,4.491,1232,5.469,1233,5.469,1234,5.469,1235,5.469,1236,5.469,1237,5.469,1238,5.469,1239,4.491,1240,4.491]],["title/injectables/UpdateEventsService.html",[301,1.613,535,0.866]],["body/injectables/UpdateEventsService.html",[2,0.306,3,0.359,4,0.255,13,0.696,17,1.645,31,0.03,35,1.753,38,0.624,40,0.471,41,0.359,42,0.53,53,0.025,54,0.025,72,0.53,73,0.933,92,0.991,140,1.397,274,2.887,301,2.838,535,1.621,536,3.195,541,3.195,1241,5.13,1242,4.098,1243,6.31,1244,5.75,1245,6.112]],["title/components/UserInfoComponent.html",[55,0.17,271,0.742]],["body/components/UserInfoComponent.html",[2,0.315,3,0.174,4,0.123,6,0.58,7,0.609,9,0.573,12,1.048,13,0.754,21,1.01,30,0.625,31,0.03,32,0.652,33,0.474,37,0.779,38,0.623,40,0.228,41,0.174,42,0.256,43,0.625,44,0.626,45,0.749,53,0.016,54,0.016,55,0.285,56,0.536,57,0.729,58,0.729,59,0.729,63,1.21,64,1.813,65,1.327,66,0.495,67,1.137,68,1.01,70,1.01,72,0.256,73,0.573,74,1.975,75,1.639,76,2.041,80,2.281,81,2.942,83,2.773,91,1.342,92,0.573,93,1.272,94,1.733,95,2.016,96,1.563,104,0.886,111,1.522,112,3.148,120,1.305,125,1.819,129,0.99,130,1.268,131,0.729,140,1.01,141,1.396,142,1.089,143,1.396,144,0.936,146,1.48,149,0.848,150,2.527,158,1.819,159,1.089,160,1.175,165,0.915,166,0.58,168,0.915,169,0.99,170,0.915,171,0.915,172,0.676,173,0.729,174,0.676,175,0.729,177,0.983,179,1.407,180,1.407,182,0.99,183,0.848,184,1.369,193,0.99,194,1.901,197,2.087,200,1.272,203,1.603,204,1.901,207,1.396,221,2.963,223,2.31,230,1.165,231,2.087,232,2.087,233,1.901,236,0.626,237,1.089,238,1.01,239,1.448,240,0.729,241,1.089,242,0.536,243,0.729,244,0.58,245,0.729,246,0.536,247,0.729,248,0.801,249,0.729,250,0.58,251,1.089,252,0.495,253,0.626,254,0.729,255,0.536,256,1.196,257,0.536,258,0.536,259,0.729,260,0.536,261,0.867,262,0.729,263,0.536,264,0.729,265,0.536,266,0.729,267,0.58,268,0.729,269,0.536,270,0.729,271,1.065,272,0.729,278,3.024,280,2.527,282,2.277,286,1.396,349,4.102,362,1.396,363,1.732,393,1.732,394,2.963,395,2.963,409,1.603,424,1.072,432,1.981,438,1.603,447,1.981,448,2.589,454,1.732,456,1.901,458,1.981,479,1.901,532,0.786,606,3.115,625,3.683,659,0.848,660,1.165,687,1.732,767,3.937,772,2.963,774,3.937,777,2.963,779,2.087,780,2.963,788,2.087,794,2.963,809,1.981,815,2.31,816,1.981,817,1.981,818,1.272,819,1.981,931,2.131,1037,3.937,1072,3.441,1121,3.07,1148,1.981,1158,2.963,1246,5.261,1247,5.269,1248,5.269,1249,4.691,1250,3.53,1251,2.361,1252,2.361,1253,3.53,1254,5.461,1255,2.361,1256,2.361,1257,2.361,1258,2.361,1259,2.361,1260,2.361,1261,2.361,1262,2.361,1263,2.361,1264,2.361,1265,3.53,1266,1.981,1267,1.981,1268,2.361,1269,2.361,1270,3.53,1271,2.361,1272,2.361]],["title/changelog.html",[1054,1.787,1123,1.787,1273,2.731]],["body/changelog.html",[2,0.417,16,2.723,17,1.589,31,0.024,36,2.06,53,0.024,54,0.024,65,1.438,67,0.816,101,2.273,159,1.84,166,1.131,256,1.045,261,1.131,314,3.633,316,3.283,380,2.092,381,2.723,409,2.877,439,3.211,475,4.073,556,2.328,563,3.013,641,2.877,653,2.48,655,2.723,931,2.708,1021,4.54,1077,3.378,1116,3.378,1121,3.633,1274,4.605,1275,3.865,1276,3.865,1277,3.865,1278,3.865,1279,5.195,1280,3.865,1281,5.004,1282,3.865,1283,3.865,1284,4.66,1285,3.865,1286,3.865,1287,3.865,1288,4.66,1289,3.865]],["title/coverage.html",[1290,3.738]],["body/coverage.html",[0,2.108,1,1.929,4,0.17,5,2.738,17,0.933,31,0.03,32,0.354,53,0.02,54,0.02,55,0.34,56,0.74,60,2.738,61,2.135,62,3.263,74,1.086,84,1.929,94,1.007,95,1.171,96,0.933,172,0.933,174,0.933,187,2.549,242,0.74,244,0.801,246,0.74,248,0.74,250,0.801,252,0.683,255,0.74,257,0.74,258,0.74,260,0.74,263,0.74,265,0.74,267,0.801,269,0.74,271,0.74,273,2.738,297,2.63,298,1.929,299,1.929,300,1.61,301,1.61,319,2.135,322,2.738,325,2.727,349,2.135,352,2.393,356,1.929,357,2.393,362,1.929,376,1.894,377,2.393,378,2.738,379,2.738,392,2.738,393,3.263,453,2.738,509,3.734,510,4.863,535,1.594,540,2.738,557,2.738,569,2.021,600,2.738,601,2.738,641,1.482,642,2.738,648,2.135,649,3.713,650,3.713,652,2.393,654,1.61,742,3.263,743,2.738,825,2.738,826,2.738,897,3.734,915,2.738,964,2.738,970,3.263,1005,2.738,1032,2.738,1127,2.738,1161,2.738,1162,2.738,1229,2.738,1241,2.738,1242,2.738,1246,2.738,1266,2.738,1267,2.738,1290,2.738,1291,2.738,1292,3.262,1293,3.262,1294,3.262,1295,3.262,1296,3.262,1297,3.262,1298,6.384,1299,3.262,1300,3.262,1301,3.262,1302,3.262,1303,3.262,1304,5.063,1305,3.262,1306,3.262,1307,3.262,1308,3.262,1309,3.262,1310,3.262,1311,5.063,1312,4.449,1313,3.262,1314,3.262,1315,3.262,1316,3.262,1317,6.497,1318,6.497,1319,2.738,1320,3.262,1321,3.262,1322,3.262,1323,3.262,1324,3.262,1325,3.262,1326,3.262,1327,3.262,1328,3.262,1329,4.449,1330,3.262,1331,3.262,1332,3.262,1333,3.262,1334,3.262,1335,3.262,1336,3.262,1337,3.262,1338,3.262,1339,3.262,1340,4.449,1341,3.262,1342,3.262,1343,3.262,1344,3.262,1345,3.262,1346,3.262,1347,3.262,1348,3.262,1349,3.262,1350,3.262,1351,3.262,1352,3.262,1353,3.262,1354,6.464,1355,3.262,1356,3.262,1357,3.262,1358,3.262,1359,3.262,1360,3.262,1361,3.262,1362,3.262,1363,3.262,1364,3.262,1365,3.734,1366,3.734,1367,3.734,1368,3.262,1369,3.262]],["title/dependencies.html",[289,2.322,1370,2.292]],["body/dependencies.html",[31,0.03,40,0.449,53,0.025,54,0.025,166,1.144,167,1.862,176,2.756,289,2.756,308,4.694,309,4.102,313,4.694,314,3.05,316,2.756,346,3.912,348,2.117,452,3.912,536,3.05,538,3.05,539,3.66,1371,4.661,1372,6.624,1373,4.661,1374,4.661,1375,4.661,1376,4.661,1377,4.661,1378,4.661,1379,4.661,1380,4.661,1381,4.661,1382,5.593,1383,4.661,1384,4.661,1385,4.661,1386,4.661,1387,4.661,1388,4.661,1389,4.661,1390,4.661,1391,4.661,1392,4.661,1393,4.661,1394,4.661,1395,5.593,1396,4.661,1397,4.661,1398,4.661]],["title/miscellaneous/functions.html",[569,1.784,1399,2.292]],["body/miscellaneous/functions.html",[31,0.026,53,0.026,54,0.026,72,0.565,569,2.364,1365,4.369,1366,5.55,1367,4.369,1399,4.369,1400,5.205,1401,5.205]],["title/index.html",[72,0.296,1054,1.787,1123,1.787]],["body/index.html",[2,0.402,3,0.269,4,0.251,7,0.397,17,1.535,31,0.021,36,1.896,53,0.021,54,0.021,55,0.28,65,1.378,67,0.649,101,1.808,111,1.275,120,1.484,129,1.535,131,1.13,159,1.656,166,1.317,167,1.219,217,2.396,233,1.973,256,0.831,261,1.317,289,2.165,304,2.165,314,3.145,316,3.172,380,1.663,381,2.165,409,2.687,435,1.973,439,2.89,475,3.935,535,0.971,556,2.015,563,2.396,595,2.686,641,2.687,653,1.973,655,2.165,723,4.178,785,3.074,834,4.503,863,3.074,870,3.074,931,2.437,935,2.686,982,4.339,1001,4.736,1021,4.178,1070,3.525,1077,2.686,1116,2.686,1121,3.145,1275,3.074,1276,4.034,1277,3.074,1278,4.034,1279,4.781,1280,3.074,1281,4.503,1282,3.074,1283,3.074,1284,4.034,1285,3.074,1286,3.074,1287,3.074,1288,4.034,1289,3.074,1291,4.781,1370,3.074,1402,3.662,1403,3.662,1404,3.074,1405,3.662,1406,3.662,1407,3.662,1408,3.662,1409,3.662,1410,4.807,1411,3.662,1412,3.662,1413,3.662,1414,3.662,1415,4.807,1416,3.662,1417,4.807,1418,3.662,1419,4.807,1420,3.662,1421,4.807,1422,3.662,1423,3.662,1424,4.807,1425,3.662,1426,3.662,1427,5.366,1428,3.662,1429,5.697,1430,3.662,1431,5.366,1432,3.662,1433,4.807,1434,3.662,1435,3.662,1436,4.807,1437,4.807,1438,6.188,1439,6.072,1440,4.807,1441,3.662,1442,3.662,1443,3.662,1444,3.662,1445,3.662,1446,3.662,1447,4.781,1448,3.662,1449,5.697,1450,3.662,1451,3.662,1452,3.662,1453,3.662,1454,3.662,1455,3.662,1456,4.807,1457,4.807,1458,3.662,1459,3.662,1460,3.662,1461,4.807,1462,3.662,1463,3.662,1464,3.074,1465,3.662,1466,3.662,1467,3.662,1468,3.662,1469,5.366,1470,3.662,1471,3.662]],["title/license.html",[1054,1.787,1123,1.787,1472,2.292]],["body/license.html",[4,0.257,31,0.025,53,0.025,54,0.025,131,1.522,261,1.21,380,2.239,875,4.138,1173,4.138,1404,4.138,1447,4.138,1464,4.138,1472,5.576,1473,4.93,1474,4.93,1475,6.136,1476,4.93,1477,4.93,1478,4.93,1479,4.93,1480,4.93,1481,4.93,1482,4.93,1483,4.93,1484,4.93,1485,4.93,1486,4.93,1487,4.93,1488,5.783,1489,4.93,1490,4.93,1491,4.93,1492,4.93,1493,4.93,1494,4.93,1495,4.93,1496,4.93,1497,4.93,1498,4.93]],["title/modules.html",[287,2.633]],["body/modules.html",[31,0.026,53,0.026,54,0.026,287,3.114,288,3.447,309,3.863,878,4.421,1499,5.268,1500,5.268]],["title/overview.html",[1501,3.738]],["body/overview.html",[0,1.571,1,3.329,31,0.03,41,0.298,50,2.331,53,0.023,54,0.023,55,0.211,56,1.278,94,1.738,167,1.349,236,1.075,242,1.438,244,1.382,246,1.278,248,1.278,250,1.382,252,1.18,255,1.278,257,1.278,258,1.438,260,1.278,263,1.278,265,1.278,267,1.382,269,1.278,271,1.278,287,3.034,288,4.509,289,2.396,290,3.402,291,3.402,292,3.402,293,3.402,294,3.402,295,3.402,296,3.402,297,3.329,298,3.329,299,3.329,300,2.779,301,2.779,302,4.307,303,2.973,304,2.396,376,1.349,519,2.973,535,1.075,999,2.973,1319,3.402,1501,3.402,1502,4.053,1503,4.053]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":187,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"coverage.html":{}}}],["0.8.26",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":1002,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["0x8",{"_index":1003,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["1",{"_index":50,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"pipes/SortByPipe.html":{},"overview.html":{}}}],["1/1",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":204,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["1027",{"_index":1419,"title":{},"body":{"index.html":{}}}],["1080",{"_index":1422,"title":{},"body":{"index.html":{}}}],["11/22",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["1200",{"_index":1423,"title":{},"body":{"index.html":{}}}],["1280",{"_index":1410,"title":{},"body":{"index.html":{}}}],["13",{"_index":1239,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["1366",{"_index":1413,"title":{},"body":{"index.html":{}}}],["1440",{"_index":1415,"title":{},"body":{"index.html":{}}}],["15/23",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":999,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["1613",{"_index":1417,"title":{},"body":{"index.html":{}}}],["1680",{"_index":1420,"title":{},"body":{"index.html":{}}}],["18/22",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["1800",{"_index":1425,"title":{},"body":{"index.html":{}}}],["1920",{"_index":1421,"title":{},"body":{"index.html":{}}}],["2",{"_index":47,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["2.0",{"_index":1477,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":1483,"title":{},"body":{"license.html":{}}}],["2.2.0",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":835,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["201",{"_index":838,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["2018",{"_index":1474,"title":{},"body":{"license.html":{}}}],["22/25",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["24/35",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":470,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["2560",{"_index":1424,"title":{},"body":{"index.html":{}}}],["3.0.1",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["30/48",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["30/51",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["301",{"_index":841,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["33",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":469,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["36",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1502,"title":{},"body":{"overview.html":{}}}],["4.1.3",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":845,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["401",{"_index":851,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["403",{"_index":855,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":199,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["410",{"_index":864,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["42",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["4xxx",{"_index":991,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["5",{"_index":1503,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["501",{"_index":877,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["502",{"_index":880,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":885,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":888,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["511",{"_index":892,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["52",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":218,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["6.1.10",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["6c86f7",{"_index":473,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["7",{"_index":1319,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["720",{"_index":1411,"title":{},"body":{"index.html":{}}}],["75",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":1414,"title":{},"body":{"index.html":{}}}],["8",{"_index":46,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["8/14",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1412,"title":{},"body":{"index.html":{}}}],["81",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["9/19",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1416,"title":{},"body":{"index.html":{}}}],["917",{"_index":1418,"title":{},"body":{"index.html":{}}}],["_notif",{"_index":971,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["a.localecompare(b",{"_index":1203,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["abbrevi",{"_index":8,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["abbreviatepip",{"_index":1,"title":{"pipes/AbbreviatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["abbstr",{"_index":48,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["access",{"_index":553,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{}}}],["accessor",{"_index":1024,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["act",{"_index":882,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["action",{"_index":1121,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":272,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ad",{"_index":1124,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["add",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["add(notificationinst",{"_index":973,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["address",{"_index":212,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["addus",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["adduser(form",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addusercompon",{"_index":56,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["agre",{"_index":1485,"title":{},"body":{"license.html":{}}}],["alert",{"_index":976,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["alert('unauthor",{"_index":555,"title":{},"body":{"guards/AuthGuard.html":{}}}],["alert.messag",{"_index":1023,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["alertmodul",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["alreadi",{"_index":201,"title":{},"body":{"components/AddUserComponent.html":{}}}],["angular",{"_index":1429,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["angular/compil",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["apach",{"_index":1476,"title":{},"body":{"license.html":{}}}],["api_url",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.compon",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["app_descriptor_id",{"_index":382,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["app_instance_id",{"_index":383,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["appcompon",{"_index":242,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appic",{"_index":1287,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":1182,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["applic",{"_index":380,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["applicationinst",{"_index":377,"title":{"interfaces/ApplicationInstance.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["applications'},{'nam",{"_index":245,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["applications/applications.compon",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["applicationscompon",{"_index":244,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":288,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appsinfocompon",{"_index":246,"title":{"components/AppsInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":18,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"pipes/SortByPipe.html":{}}}],["array.foreach(el",{"_index":226,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["array.isarray(oldvalu",{"_index":1223,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["array.revers",{"_index":1216,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["arraytostr",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["arraytostring(array",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["artifact",{"_index":1450,"title":{},"body":{"index.html":{}}}],["ascend",{"_index":1117,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["assest",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["assign",{"_index":442,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["auth",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["auth0/angular",{"_index":538,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["authent",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["authguard",{"_index":520,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservic",{"_index":300,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autocent",{"_index":396,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["autom",{"_index":1463,"title":{},"body":{"index.html":{}}}],["automat",{"_index":1443,"title":{},"body":{"index.html":{}}}],["autozoom",{"_index":397,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["avail",{"_index":435,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["availablecompon",{"_index":652,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["availablecomponents.addus",{"_index":692,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.app",{"_index":680,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.clust",{"_index":678,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.editclust",{"_index":690,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.login",{"_index":673,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.notif",{"_index":683,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.organ",{"_index":674,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.profil",{"_index":681,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.resourc",{"_index":676,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.sidebar",{"_index":684,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.useredit",{"_index":688,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["availablecomponents.userinfo",{"_index":686,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["avoid",{"_index":478,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["b",{"_index":1165,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["b[express",{"_index":1213,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["backdrop",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["backend.servic",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["backend.service.t",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["backendservic",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["base",{"_index":1289,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["basi",{"_index":1489,"title":{},"body":{"license.html":{}}}],["befor",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["between",{"_index":785,"title":{},"body":{"components/EditUserComponent.html":{},"index.html":{}}}],["bitwis",{"_index":996,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["boolean",{"_index":424,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap",{"_index":167,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/alert",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/dropdown",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/mod",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["bootstrap/tooltip",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["box",{"_index":1082,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["brand",{"_index":1275,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["breadcrumb",{"_index":1286,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["break",{"_index":716,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["brows",{"_index":1500,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodul",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bsmodalservic",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["bspasswordmodalref",{"_index":767,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["build",{"_index":1449,"title":{},"body":{"index.html":{}}}],["button",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["buttonchangepassword",{"_index":1247,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttondeleteus",{"_index":1248,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["buttonrol",{"_index":780,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["buttonsmodul",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonsmodule.forroot",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["by.pip",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["by.pipe.t",{"_index":1162,"title":{},"body":{"pipes/SortByPipe.html":{},"coverage.html":{}}}],["by.pipe.ts:11",{"_index":1177,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:131",{"_index":1198,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:156",{"_index":1181,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:18",{"_index":1166,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:28",{"_index":1170,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:44",{"_index":1187,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:53",{"_index":1174,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:71",{"_index":1191,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:80",{"_index":1195,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["by.pipe.ts:99",{"_index":1194,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["c",{"_index":994,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["call",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactiv",{"_index":523,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capit",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["card",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{}}}],["carousel",{"_index":1282,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["carouselmodul",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["carouselmodule.forroot",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["case",{"_index":714,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"pipes/SortByPipe.html":{}}}],["caseinsensitivesort",{"_index":1163,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["caseinsensitivesort(a",{"_index":1164,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["categori",{"_index":1055,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["categorynam",{"_index":1057,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["certain",{"_index":1235,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["chang",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["changeal",{"_index":727,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["changeall(newvalu",{"_index":694,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["changelog",{"_index":1273,"title":{"changelog.html":{}},"body":{}}],["changelog.md",{"_index":1406,"title":{},"body":{"index.html":{}}}],["changepasswordcompon",{"_index":248,"title":{"components/ChangePasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changerol",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changerole(newrol",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["changesonuserlist",{"_index":1243,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["charact",{"_index":25,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["chart",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["check",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["checkformfield",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkformfields(form",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkuserrol",{"_index":772,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["checkuserrole(buttonrol",{"_index":777,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["class",{"_index":42,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["class=\"contain",{"_index":1020,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["clean",{"_index":1134,"title":{},"body":{"components/SidebarComponent.html":{}}}],["cli",{"_index":1431,"title":{},"body":{"index.html":{}}}],["click",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["clone",{"_index":1434,"title":{},"body":{"index.html":{}}}],["close",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster",{"_index":641,"title":{"interfaces/Cluster.html":{}},"body":{"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["cluster'},{'nam",{"_index":251,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["cluster.compon",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster.component.html",{"_index":745,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.scss",{"_index":744,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.t",{"_index":743,"title":{},"body":{"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster.component.ts:19",{"_index":756,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:24",{"_index":761,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:25",{"_index":759,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:26",{"_index":760,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:27",{"_index":758,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:28",{"_index":751,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:31",{"_index":757,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:49",{"_index":753,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:56",{"_index":755,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster.component.ts:82",{"_index":752,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["cluster/cluster.compon",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster/edit",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"components/EditClusterComponent.html":{},"coverage.html":{}}}],["cluster_appmodul",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_export",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_id",{"_index":643,"title":{},"body":{"interfaces/Cluster.html":{}}}],["cluster_type_nam",{"_index":644,"title":{},"body":{"interfaces/Cluster.html":{}}}],["clustercompon",{"_index":250,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clusterdescript",{"_index":746,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusterid",{"_index":747,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clusternam",{"_index":748,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["clustertag",{"_index":749,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["code",{"_index":1445,"title":{},"body":{"index.html":{}}}],["colorschem",{"_index":398,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["command",{"_index":1430,"title":{},"body":{"index.html":{}}}],["commun",{"_index":890,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["compar",{"_index":903,"title":{},"body":{"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{}}}],["comparefn(a",{"_index":1210,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["comparefn(a[express",{"_index":1212,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["comparefn(sortbypipe.getvalue(a",{"_index":1214,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["complet",{"_index":862,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complianc",{"_index":1479,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1461,"title":{},"body":{"index.html":{}}}],["compon",{"_index":55,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.mock",{"_index":696,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["component_templ",{"_index":240,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["componentmockopt",{"_index":648,"title":{"interfaces/ComponentMockOption.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["componentmockoption.mock",{"_index":715,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["componentmockoption.nam",{"_index":713,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["condit",{"_index":875,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["config",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{}}}],["configur",{"_index":506,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["configuration_opt",{"_index":384,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["confirm",{"_index":221,"title":{},"body":{"components/AddUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["confirm('delet",{"_index":1271,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["confirm('discard",{"_index":206,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["confirmnewpassword",{"_index":604,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["conflict",{"_index":863,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["console.log('bad",{"_index":846,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('conflict",{"_index":861,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('cr",{"_index":839,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('forbidden",{"_index":856,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gateway",{"_index":889,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('gon",{"_index":865,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('intern",{"_index":872,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('mov",{"_index":842,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('network",{"_index":893,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('not",{"_index":858,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('ok",{"_index":836,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('select",{"_index":717,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["console.log('servic",{"_index":886,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log('unauthor",{"_index":852,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(error",{"_index":896,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["const",{"_index":45,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["constructor(backendservic",{"_index":1131,"title":{},"body":{"components/SidebarComponent.html":{}}}],["constructor(bsmodalref",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/UserInfoComponent.html":{}}}],["constructor(formbuild",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(mockupbackend",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mockupbackendservic",{"_index":1008,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(modalservic",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(rout",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contain",{"_index":19,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["continu",{"_index":912,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["control",{"_index":739,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["copi",{"_index":1481,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1473,"title":{},"body":{"license.html":{}}}],["core",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["coverag",{"_index":1290,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":16,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"changelog.html":{}}}],["credenti",{"_index":854,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["current",{"_index":779,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["curv",{"_index":399,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["d3",{"_index":452,"title":{},"body":{"components/AppsInfoComponent.html":{},"dependencies.html":{}}}],["data",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{}}}],["debug",{"_index":253,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["debugpanelcompon",{"_index":252,"title":{"components/DebugPanelComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["declar",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decod",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["default",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["defaultcompar",{"_index":1168,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["defaultcompare(a",{"_index":1169,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["defin",{"_index":13,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["definit",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["definitions/const/loc",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["definitions/interfaces/backend",{"_index":165,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["delet",{"_index":1254,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteconfirm",{"_index":1270,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["deleteus",{"_index":1249,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["depend",{"_index":289,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1288,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["descend",{"_index":1118,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["descript",{"_index":34,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{}}}],["descriptor",{"_index":501,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["design",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":1441,"title":{},"body":{"index.html":{}}}],["develop",{"_index":233,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["dialog",{"_index":448,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["direct",{"_index":238,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1448,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1437,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1058,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["discard",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchang",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["discardchanges(form",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["dismiss",{"_index":977,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["dismissednotif",{"_index":1013,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["display",{"_index":719,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["dist",{"_index":1451,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":1488,"title":{},"body":{"license.html":{}}}],["dn",{"_index":1160,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document",{"_index":1291,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["domain",{"_index":472,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["draggingen",{"_index":400,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["due",{"_index":848,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["dynam",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":256,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["editclust",{"_index":658,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["editclustercompon",{"_index":255,"title":{"components/EditClusterComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editusercompon",{"_index":257,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":21,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["element.tolowercas",{"_index":227,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ellipsi",{"_index":1236,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["email",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["email/id",{"_index":1265,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["enabl",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{}}}],["enablezoom",{"_index":401,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["encount",{"_index":873,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["end",{"_index":1237,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["endpoint",{"_index":518,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["entrycompon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":509,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["environment_vari",{"_index":385,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["error",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["error.error",{"_index":630,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["error.error.messag",{"_index":200,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["error.error.message.charat(0).touppercas",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.error.message.slice(1",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.statu",{"_index":198,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandl",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservic",{"_index":319,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["errormessag",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errorrespons",{"_index":1113,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["errorresponse.error.messag",{"_index":1114,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event",{"_index":725,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["eventemitt",{"_index":1015,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["events.servic",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["events.service.t",{"_index":1242,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["events.service.ts:9",{"_index":1244,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["except",{"_index":1478,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1458,"title":{},"body":{"index.html":{}}}],["exist",{"_index":202,"title":{},"body":{"components/AddUserComponent.html":{}}}],["expand_less",{"_index":1120,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["expand_mor",{"_index":1119,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["expiraci",{"_index":549,"title":{},"body":{"guards/AuthGuard.html":{}}}],["export",{"_index":41,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["express",{"_index":1173,"title":{},"body":{"pipes/SortByPipe.html":{},"license.html":{}}}],["expression.length",{"_index":1209,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.replac",{"_index":1206,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.replace(/\\[(\\w+)\\]/g",{"_index":1205,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expression.split",{"_index":1207,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["expressions.reverse().reduce((result",{"_index":1227,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["f",{"_index":791,"title":{},"body":{"components/EditUserComponent.html":{}}}],["fake",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["fals",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["featur",{"_index":1403,"title":{},"body":{"index.html":{}}}],["field",{"_index":1065,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":898,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["filter(item",{"_index":899,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filterfield",{"_index":1035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["filterpip",{"_index":297,"title":{"injectables/FilterPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["filterpipe.filter(item",{"_index":914,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["find",{"_index":860,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["first",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["flag",{"_index":1453,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1465,"title":{},"body":{"index.html":{}}}],["form",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{}}}],["form.controls.confirmnewpassword.valu",{"_index":638,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.email.errors.email",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.controls.email.errors.pattern",{"_index":211,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.email.errors.requir",{"_index":209,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.email.invalid",{"_index":208,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.newpassword.errors.minlength",{"_index":635,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.errors.requir",{"_index":633,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.invalid",{"_index":632,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.newpassword.valu",{"_index":637,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.controls.password.errors.minlength",{"_index":216,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.errors.requir",{"_index":214,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.invalid",{"_index":213,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.controls.password.valu",{"_index":219,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.controls.passwordconfirm.valu",{"_index":220,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.dirti",{"_index":205,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["form.value.email",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.nam",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{}}}],["form.value.newpassword",{"_index":627,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["form.value.password",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["format",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(error",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formatvalidationoutput(errormessages).msg",{"_index":234,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formbuild",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formgroupdirect",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":868,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["found",{"_index":859,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["free",{"_index":1089,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["frontend",{"_index":1277,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfil",{"_index":840,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["function",{"_index":569,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"pipes/SortByPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":1468,"title":{},"body":{"index.html":{}}}],["gain",{"_index":894,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateaway",{"_index":881,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gateway",{"_index":883,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gener",{"_index":982,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["get",{"_index":1054,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["getbaseurl",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcategorycssclass",{"_index":1043,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getcategorycssclass(categorynam",{"_index":1052,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getnotif",{"_index":1030,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getroleid",{"_index":773,"title":{},"body":{"components/EditUserComponent.html":{}}}],["getroleid(rol",{"_index":782,"title":{},"body":{"components/EditUserComponent.html":{}}}],["getvalu",{"_index":1171,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["getvalue(object",{"_index":1172,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["given",{"_index":844,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["go",{"_index":1470,"title":{},"body":{"index.html":{}}}],["govern",{"_index":1496,"title":{},"body":{"license.html":{}}}],["graph",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphdata",{"_index":402,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["grapho",{"_index":423,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group",{"_index":386,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/LoginComponent.html":{}}}],["group.nam",{"_index":517,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["group_work",{"_index":1159,"title":{},"body":{"components/SidebarComponent.html":{}}}],["grpah",{"_index":441,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["guard",{"_index":519,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["guid",{"_index":986,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["hammerj",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":879,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror",{"_index":827,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":829,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler",{"_index":832,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["handler.servic",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.service.t",{"_index":826,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:15",{"_index":831,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:6",{"_index":828,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["header",{"_index":1056,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["height",{"_index":403,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["help",{"_index":1469,"title":{},"body":{"index.html":{}}}],["helper",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["hold",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["html",{"_index":237,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["http",{"_index":1466,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1442,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1482,"title":{},"body":{"license.html":{}}}],["httpclientmodul",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":830,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["httpmodul",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cli.angular.io",{"_index":1432,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/105034/cr",{"_index":985,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["https://www.npmjs.com",{"_index":1428,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":160,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["id=\"alert",{"_index":1022,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["identifi",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":1167,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["ignorebackdropclick",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["implement",{"_index":43,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["impli",{"_index":1493,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["index",{"_index":72,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["indic",{"_index":1279,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["info'},{'nam",{"_index":247,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{}}}],["info.component.html",{"_index":395,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.scss",{"_index":394,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.t",{"_index":393,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:106",{"_index":414,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:118",{"_index":1256,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:123",{"_index":421,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:150",{"_index":416,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:19",{"_index":427,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1257,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:24",{"_index":437,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1263,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:29",{"_index":444,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1258,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:34",{"_index":436,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:36",{"_index":1259,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:39",{"_index":434,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1264,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1260,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:43",{"_index":1261,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:44",{"_index":447,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:45",{"_index":1262,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:49",{"_index":440,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:50",{"_index":1250,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:54",{"_index":446,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:55",{"_index":432,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["info.component.ts:56",{"_index":445,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:57",{"_index":430,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:58",{"_index":426,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:59",{"_index":425,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:60",{"_index":431,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:61",{"_index":429,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:62",{"_index":449,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:63",{"_index":450,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:64",{"_index":433,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:65",{"_index":413,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:68",{"_index":428,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1255,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1251,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info.component.ts:92",{"_index":1252,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["info/app",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["info/us",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["initi",{"_index":456,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialst",{"_index":815,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["initialstate.userid",{"_index":1152,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inject",{"_index":535,"title":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["input",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{}}}],["input('notif",{"_index":1017,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["instal",{"_index":1433,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":381,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"changelog.html":{},"index.html":{}}}],["instance.app_descriptor_id",{"_index":502,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.app_instance_id",{"_index":500,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.nam",{"_index":498,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rul",{"_index":488,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.rules.foreach(rul",{"_index":489,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.services.foreach(servic",{"_index":484,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.status_nam",{"_index":499,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instance.t",{"_index":379,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["instanceid",{"_index":404,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["instanceof",{"_index":1200,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["integr",{"_index":1462,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":376,"title":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"interfaces/Notification.html":{}},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":849,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isauth",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["iscaseinsensit",{"_index":1180,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isdeeplink",{"_index":1211,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isowner(userrol",{"_index":824,"title":{},"body":{"components/EditUserComponent.html":{}}}],["isstr",{"_index":1175,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["isstring(valu",{"_index":1176,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["item",{"_index":902,"title":{},"body":{"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{}}}],["item.nam",{"_index":740,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["item[properti",{"_index":910,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":913,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["items.filter(funct",{"_index":909,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["javascript",{"_index":987,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["js",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["json.parse(jwtdata).organizationid",{"_index":1097,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["json.parse(jwtdata).rol",{"_index":1108,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["json.parse(jwtdata).userid",{"_index":1150,"title":{},"body":{"components/SidebarComponent.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwt",{"_index":544,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem(localstoragekeys.jwtdata",{"_index":546,"title":{},"body":{"guards/AuthGuard.html":{}}}],["json.stringify(jwttokendata",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(respons",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(response.refresh_token",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":539,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["jwtdata",{"_index":545,"title":{},"body":{"guards/AuthGuard.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["jwtdata.rol",{"_index":548,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwthelper",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwthelper.decodetoken(response.token",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["jwthelperservic",{"_index":537,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttoken",{"_index":543,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwttoken.token",{"_index":550,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwttokendata",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["jwttokendata.rol",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["karma",{"_index":1460,"title":{},"body":{"index.html":{}}}],["key",{"_index":175,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["keys.t",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["kind",{"_index":1492,"title":{},"body":{"license.html":{}}}],["label",{"_index":387,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{}}}],["label[0",{"_index":504,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["label[1",{"_index":505,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["languag",{"_index":1495,"title":{},"body":{"license.html":{}}}],["last",{"_index":28,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["last_chunk_length",{"_index":27,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["lastpred",{"_index":1219,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["law",{"_index":1484,"title":{},"body":{"license.html":{}}}],["lead",{"_index":1135,"title":{},"body":{"components/SidebarComponent.html":{}}}],["legend",{"_index":236,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"overview.html":{}}}],["length",{"_index":871,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"pipes/TruncatePipe.html":{}}}],["letter",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["librari",{"_index":1456,"title":{},"body":{"index.html":{}}}],["licens",{"_index":1472,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1498,"title":{},"body":{"license.html":{}}}],["line",{"_index":870,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["line:compon",{"_index":660,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/MainComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["line:max",{"_index":869,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["line:no",{"_index":995,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["link",{"_index":476,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linkedservic",{"_index":494,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["linst",{"_index":1285,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":36,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"index.html":{}}}],["load",{"_index":438,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["loadeddata",{"_index":405,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["local",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorag",{"_index":670,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(localstoragekeys.addusermock",{"_index":181,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.appsmock",{"_index":455,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustereditmock",{"_index":691,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{}}}],["localstorage.getitem(localstoragekeys.clustermock",{"_index":679,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.jwtdata",{"_index":1096,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.loginmock",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.notificationsmock",{"_index":667,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["localstorage.getitem(localstoragekeys.organizationmock",{"_index":675,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["localstorage.getitem(localstoragekeys.passwordmock",{"_index":623,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["localstorage.getitem(localstoragekeys.profilemock",{"_index":682,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.resourcesmock",{"_index":677,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.sidebarmock",{"_index":685,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(localstoragekeys.url",{"_index":669,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.getitem(localstoragekeys.usereditmock",{"_index":689,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{}}}],["localstorage.getitem(localstoragekeys.userinfomock",{"_index":687,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["localstorage.removeitem(localstoragekeys.jwt",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.jwtdata",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(localstoragekeys.refreshtoken",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.addusermock",{"_index":709,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.appsmock",{"_index":702,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustereditmock",{"_index":708,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.clustermock",{"_index":701,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.jwt",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.jwtdata",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.loginmock",{"_index":698,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.notificationsmock",{"_index":704,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.organizationmock",{"_index":699,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.profilemock",{"_index":703,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.refreshtoken",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(localstoragekeys.resourcesmock",{"_index":700,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.sidebarmock",{"_index":705,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.url",{"_index":726,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.usereditmock",{"_index":707,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstorage.setitem(localstoragekeys.userinfomock",{"_index":706,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["localstoragekey",{"_index":172,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["location.reload",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["log",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["login'},{'nam",{"_index":259,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["login(email",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":258,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequest",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["long",{"_index":1238,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["longer",{"_index":867,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["main",{"_index":965,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'nam",{"_index":262,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["main.component.html",{"_index":967,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":966,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.compon",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["maincompon",{"_index":260,"title":{"components/MainComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1232,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["manag",{"_index":1426,"title":{},"body":{"index.html":{}}}],["map",{"_index":419,"title":{},"body":{"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{}}}],["match",{"_index":54,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["math.random",{"_index":998,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["member",{"_index":1116,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["messag",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["metadata",{"_index":6,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["method",{"_index":9,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["miscellan",{"_index":1399,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mockappchart",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["mockapppiechart",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["mockappsinstanceslist",{"_index":453,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["mockclusterchart",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["mockclusterdetail",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["mockclusterlist",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["mockjwttoken",{"_index":540,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["mocknodelist",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["mocknodeschart",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["mockorganizationinfo",{"_index":1266,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockregisteredappslist",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["mockresetpasword",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["mockresourcessummari",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["mockservicesgraph",{"_index":406,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["mockup",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackend",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["mockupbackendservic",{"_index":95,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["mockuserlist",{"_index":1267,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["modal",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modalmodul",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["modalref",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["modalrefonhid",{"_index":1036,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["modalservic",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["mode",{"_index":1125,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["model",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["modif",{"_index":710,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modifi",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["modul",{"_index":287,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":217,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["msg",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.length",{"_index":229,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["msg.slice(0",{"_index":228,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["multiexpressiontransform",{"_index":1178,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multiexpressiontransform(valu",{"_index":1179,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multipl",{"_index":1183,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["multitenant_support",{"_index":645,"title":{},"body":{"interfaces/Cluster.html":{}}}],["n",{"_index":1208,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["nalej",{"_index":261,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["name",{"_index":7,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["navig",{"_index":1278,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["necessari",{"_index":853,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["need",{"_index":422,"title":{},"body":{"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"injectables/ErrorHandlerService.html":{},"components/OrganizationComponent.html":{}}}],["network",{"_index":895,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["new",{"_index":17,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/UpdateEventsService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["new_password",{"_index":626,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newpassword",{"_index":605,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["newrol",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["newvalu",{"_index":693,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["next",{"_index":532,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["next.routeconfig.path",{"_index":554,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":1439,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["ngx",{"_index":166,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngxchartsmodul",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxgraphmodul",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":475,"title":{},"body":{"components/AppsInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["node.label",{"_index":497,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["noth",{"_index":207,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["notif",{"_index":654,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notificationinst",{"_index":1027,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications'},{'nam",{"_index":264,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["notifications.component.html",{"_index":1007,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":1006,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications/notifications.compon",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscompon",{"_index":263,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsmock",{"_index":664,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{}}}],["notificationsservic",{"_index":96,"title":{"injectables/NotificationsService.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["npm",{"_index":1427,"title":{},"body":{"index.html":{}}}],["null",{"_index":179,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["num_total_char",{"_index":22,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["number",{"_index":24,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"interfaces/Cluster.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["object",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{}}}],["object.entries(object",{"_index":496,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostr",{"_index":411,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["objecttostring(object",{"_index":415,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["observ",{"_index":533,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1480,"title":{},"body":{"license.html":{}}}],["older",{"_index":1405,"title":{},"body":{"index.html":{}}}],["oldvalu",{"_index":1221,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["on",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["onclos",{"_index":975,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["onclosed(dismissednotif",{"_index":978,"title":{},"body":{"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["oninit",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["onsubmit",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["open",{"_index":788,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["openchangepassword",{"_index":774,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["opendebugpanel",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["openeditus",{"_index":1044,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["openedituser(us",{"_index":1060,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo",{"_index":1045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["openuserinfo(us",{"_index":1062,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["oper",{"_index":232,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["option[0",{"_index":507,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["option[1",{"_index":508,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["optionchang",{"_index":728,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["optionchange(componentmockopt",{"_index":711,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["organ",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["organization'},{'nam",{"_index":266,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organization.component.html",{"_index":1034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":1033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization/organization.compon",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["organization_id",{"_index":388,"title":{},"body":{"interfaces/ApplicationInstance.html":{}}}],["organizationclick",{"_index":1122,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcompon",{"_index":265,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationid",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["organizationnam",{"_index":1037,"title":{},"body":{"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["orient",{"_index":407,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["out",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SidebarComponent.html":{}}}],["outsid",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{}}}],["overal",{"_index":1402,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1501,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":231,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["packag",{"_index":1370,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":866,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/SidebarComponent.html":{}}}],["panel",{"_index":651,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel'},{'nam",{"_index":254,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["panel.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["panel.component.html",{"_index":661,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.scss",{"_index":662,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["panel.component.t",{"_index":650,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:106",{"_index":731,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":733,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:177",{"_index":734,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:185",{"_index":735,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":737,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":738,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:41",{"_index":730,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:44",{"_index":736,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":732,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["panel/debug",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["param",{"_index":44,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["pars",{"_index":417,"title":{},"body":{"components/AppsInfoComponent.html":{},"pipes/SortByPipe.html":{}}}],["parsedexpress",{"_index":1217,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parsedexpression.pop",{"_index":1220,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parsedexpression.push(lastpred",{"_index":1224,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parseexpress",{"_index":1185,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["parseexpression(express",{"_index":1186,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["password",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/UserInfoComponent.html":{}}}],["password'},{'nam",{"_index":249,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["password).pipe(map(respons",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["password.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["password.component.html",{"_index":603,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.scss",{"_index":602,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.t",{"_index":601,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:128",{"_index":612,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:151",{"_index":609,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:19",{"_index":616,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:24",{"_index":622,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:25",{"_index":621,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:26",{"_index":619,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":618,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:28",{"_index":620,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:33",{"_index":608,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:36",{"_index":617,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:50",{"_index":613,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:58",{"_index":615,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:79",{"_index":611,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password.component.ts:96",{"_index":610,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["password/chang",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["passwordchang",{"_index":624,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["passwordconfirm",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{}}}],["past",{"_index":1234,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["payment",{"_index":1126,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["perform",{"_index":418,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["perman",{"_index":843,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["permiss",{"_index":1497,"title":{},"body":{"license.html":{}}}],["persist",{"_index":697,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["person",{"_index":1158,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["pie",{"_index":1283,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pipe",{"_index":0,"title":{"pipes/AbbreviatePipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"pipes/AbbreviatePipe.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/abbreviate.pip",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter.pip",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/sort",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/truncate.pip",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":39,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["pixel",{"_index":1409,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1280,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["platform",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["popul",{"_index":671,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["possibl",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{}}}],["prevent",{"_index":876,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["privat",{"_index":177,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["problem",{"_index":891,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["prod",{"_index":1452,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1454,"title":{},"body":{"index.html":{}}}],["profil",{"_index":653,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["project",{"_index":1436,"title":{},"body":{"index.html":{}}}],["promis",{"_index":534,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properti",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{}}}],["provid",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":541,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["proxi",{"_index":884,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["public",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/UserInfoComponent.html":{}}}],["purpos",{"_index":1467,"title":{},"body":{"index.html":{}}}],["queri",{"_index":804,"title":{},"body":{"components/EditUserComponent.html":{}}}],["r",{"_index":997,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["reactiveformsmodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1471,"title":{},"body":{"index.html":{}}}],["real",{"_index":183,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["receiv",{"_index":833,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["redirect",{"_index":813,"title":{},"body":{"components/EditUserComponent.html":{}}}],["refer",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["regist",{"_index":718,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/OrganizationComponent.html":{}}}],["relat",{"_index":516,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["reload",{"_index":1444,"title":{},"body":{"index.html":{}}}],["remov",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{}}}],["renam",{"_index":1016,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["render",{"_index":443,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["repositori",{"_index":1435,"title":{},"body":{"index.html":{}}}],["request",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["requesterror",{"_index":1038,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["requir",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"overview.html":{}}}],["resetfilt",{"_index":1046,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["resolut",{"_index":1408,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":556,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["resources'},{'nam",{"_index":268,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["resources/resources.compon",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcescompon",{"_index":267,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerService.html":{}}}],["response.email",{"_index":1155,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.nam",{"_index":1099,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["response.rol",{"_index":807,"title":{},"body":{"components/EditUserComponent.html":{}}}],["response.role_nam",{"_index":1156,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response.statu",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.us",{"_index":1103,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["response.users.length",{"_index":1112,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":37,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["revers",{"_index":1039,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["right",{"_index":857,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["role",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["role_nam",{"_index":191,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["roledirti",{"_index":768,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleid",{"_index":820,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.nam",{"_index":822,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roleobject.role_id",{"_index":823,"title":{},"body":{"components/EditUserComponent.html":{}}}],["roles.t",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["roleslist",{"_index":769,"title":{},"body":{"components/EditUserComponent.html":{}}}],["root",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"injectables/UpdateEventsService.html":{}}}],["root'},{'nam",{"_index":243,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["rout",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["router",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":530,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rule",{"_index":389,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{}}}],["rule.auth_servic",{"_index":490,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.auth_services.foreach(linkedservic",{"_index":491,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.nam",{"_index":514,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.rule_id",{"_index":515,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["rule.source_service_id",{"_index":492,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["run",{"_index":1438,"title":{},"body":{"index.html":{}}}],["running_nod",{"_index":646,"title":{},"body":{"interfaces/Cluster.html":{}}}],["rxj",{"_index":536,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UpdateEventsService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["same",{"_index":29,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{}}}],["save",{"_index":235,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{}}}],["saveclusterchang",{"_index":750,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["saveclusterchanges(form",{"_index":754,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["savenewpassword",{"_index":607,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["savenewpassword(form",{"_index":614,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["saveuserchang",{"_index":775,"title":{},"body":{"components/EditUserComponent.html":{}}}],["saveuserchanges(f",{"_index":789,"title":{},"body":{"components/EditUserComponent.html":{}}}],["scaffold",{"_index":1446,"title":{},"body":{"index.html":{}}}],["screen",{"_index":720,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["search",{"_index":784,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["searchterm",{"_index":1040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["see",{"_index":1404,"title":{},"body":{"index.html":{},"license.html":{}}}],["select",{"_index":223,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/UserInfoComponent.html":{}}}],["selector",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["serv",{"_index":1440,"title":{},"body":{"index.html":{}}}],["server",{"_index":834,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["servic",{"_index":390,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["service.nam",{"_index":486,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.service_id",{"_index":485,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["service.status_nam",{"_index":513,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["services/auth.servic",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["services/backend.servic",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/error",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mockup",{"_index":169,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/notifications.servic",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/UserInfoComponent.html":{}}}],["services/upd",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["set",{"_index":547,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorHandlerService.html":{},"pipes/SortByPipe.html":{}}}],["setord",{"_index":1047,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["setorder(categorynam",{"_index":1066,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["setvalu",{"_index":1189,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["setvalue(object",{"_index":1190,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["shape",{"_index":451,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shape.curvebundl",{"_index":463,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["shorten",{"_index":1233,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["show",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["showlegend",{"_index":408,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["sidebar",{"_index":655,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":270,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["sidebar.component.html",{"_index":1129,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1128,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcompon",{"_index":269,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slice",{"_index":15,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["softwar",{"_index":1487,"title":{},"body":{"license.html":{}}}],["sort",{"_index":1084,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["sortarray",{"_index":1192,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortarray(valu",{"_index":1193,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbi",{"_index":1068,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{}}}],["sortbypip",{"_index":298,"title":{"pipes/SortByPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SortByPipe.html":{},"coverage.html":{},"overview.html":{}}}],["sortbypipe.defaultcompare(a",{"_index":1204,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.getvalue(b",{"_index":1215,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.getvalue(valu",{"_index":1222,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.isstring(a",{"_index":1201,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.isstring(b",{"_index":1202,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.parseexpression(express",{"_index":1218,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortbypipe.setvalue(valu",{"_index":1225,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["sortedbi",{"_index":1041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{},"components/UserInfoComponent.html":{},"index.html":{}}}],["spam",{"_index":741,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["spamnotif",{"_index":721,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["specif",{"_index":1494,"title":{},"body":{"license.html":{}}}],["split",{"_index":1188,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["src/.../environment.prod.t",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.t",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/add",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":392,"title":{},"body":{"components/AppsInfoComponent.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["src/app/applications/applications.component.t",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["src/app/chang",{"_index":600,"title":{},"body":{"components/ChangePasswordComponent.html":{},"coverage.html":{}}}],["src/app/cluster/cluster.component.t",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["src/app/debug",{"_index":649,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"coverage.html":{}}}],["src/app/definitions/const/loc",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/const/us",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/appl",{"_index":378,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"coverage.html":{}}}],["src/app/definitions/interfaces/backend.t",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["src/app/definitions/interfaces/cluster.t",{"_index":642,"title":{},"body":{"interfaces/Cluster.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":742,"title":{},"body":{"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.t",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:12",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:16",{"_index":531,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.t",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:107",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:131",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:154",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main/main.component.t",{"_index":964,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/main/main.component.ts:13",{"_index":969,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/main/main.component.ts:9",{"_index":968,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/notifications/notifications.component.t",{"_index":1005,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["src/app/notifications/notifications.component.ts:16",{"_index":1010,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:21",{"_index":1014,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:26",{"_index":1009,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:42",{"_index":1011,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/notifications/notifications.component.ts:49",{"_index":1012,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/organization/organization.component.t",{"_index":1032,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/organization/organization.component.ts:122",{"_index":1063,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:139",{"_index":1061,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:167",{"_index":1051,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:180",{"_index":1069,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:200",{"_index":1067,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:212",{"_index":1064,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:222",{"_index":1053,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:24",{"_index":1071,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:29",{"_index":1076,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:30",{"_index":1078,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:31",{"_index":1085,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:32",{"_index":1086,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:37",{"_index":1073,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:42",{"_index":1074,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:43",{"_index":1075,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:48",{"_index":1079,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:53",{"_index":1083,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:54",{"_index":1080,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:59",{"_index":1081,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:64",{"_index":1050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/organization/organization.component.ts:97",{"_index":1059,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pipes/abbreviate.pipe.t",{"_index":5,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/abbreviate.pipe.ts:13",{"_index":14,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["src/app/pipes/filter.pipe.t",{"_index":897,"title":{},"body":{"injectables/FilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts:13",{"_index":901,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/app/pipes/filter.pipe.ts:34",{"_index":905,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/app/pipes/sort",{"_index":1161,"title":{},"body":{"pipes/SortByPipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.t",{"_index":1229,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/truncate.pipe.ts:12",{"_index":1231,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/resources/resources.component.t",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:47",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:63",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:77",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/backend.service.t",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["src/app/services/error",{"_index":825,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/mockup",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["src/app/services/notifications.service.t",{"_index":970,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/services/notifications.service.ts:15",{"_index":1025,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:24",{"_index":1026,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:31",{"_index":1031,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:38",{"_index":1028,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notifications.service.ts:49",{"_index":1029,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/upd",{"_index":1241,"title":{},"body":{"injectables/UpdateEventsService.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.t",{"_index":1127,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:109",{"_index":1140,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:121",{"_index":1133,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:24",{"_index":1141,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:29",{"_index":1143,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:30",{"_index":1145,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:31",{"_index":1142,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:36",{"_index":1146,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:37",{"_index":1144,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:42",{"_index":1132,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:64",{"_index":1136,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:78",{"_index":1137,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":1138,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/us",{"_index":1246,"title":{},"body":{"components/UserInfoComponent.html":{},"coverage.html":{}}}],["src/app/utils/mocks.t",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.t",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1123,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/OrganizationComponent.html":{}}}],["state",{"_index":529,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["statement",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":818,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["statu",{"_index":439,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["status_nam",{"_index":391,"title":{},"body":{"interfaces/ApplicationInstance.html":{},"interfaces/Cluster.html":{}}}],["storag",{"_index":174,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["store",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"index.html":{}}}],["string",{"_index":12,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["styleurl",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subject",{"_index":1245,"title":{},"body":{"injectables/UpdateEventsService.html":{}}}],["subscribe(inst",{"_index":482,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["subscribe(respons",{"_index":193,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["subscribe(responserol",{"_index":812,"title":{},"body":{"components/EditUserComponent.html":{}}}],["subscript",{"_index":1077,"title":{},"body":{"components/OrganizationComponent.html":{},"changelog.html":{},"index.html":{}}}],["subscriptiontyp",{"_index":1042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["subset",{"_index":20,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["succeed",{"_index":837,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["successfulli",{"_index":196,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{}}}],["summari",{"_index":1281,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["suport",{"_index":1407,"title":{},"body":{"index.html":{}}}],["support",{"_index":878,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"modules.html":{}}}],["svg",{"_index":1499,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":712,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{}}}],["syntax",{"_index":850,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["tabl",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":503,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{}}}],["target",{"_index":493,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tb",{"_index":461,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["templat",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["temporalrol",{"_index":770,"title":{},"body":{"components/EditUserComponent.html":{}}}],["term",{"_index":900,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["term'",{"_index":906,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["term.tolowercas",{"_index":908,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["test",{"_index":723,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"index.html":{}}}],["text",{"_index":1072,"title":{},"body":{"components/OrganizationComponent.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{}}}],["this._notif",{"_index":972,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.map(x",{"_index":979,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.push(notificationinst",{"_index":974,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this._notifications.splice(index",{"_index":981,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["this.adduser(form",{"_index":224,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.alert",{"_index":1018,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.auth.logout",{"_index":1157,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.login(this.loginform.value.email",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.autocent",{"_index":465,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.autozoom",{"_index":464,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.backend.adduser(this.organizationid",{"_index":192,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.backend.changerole(this.organizationid",{"_index":810,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.deleteuser(this.organizationid",{"_index":1272,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.backend.getappinstance(this.organizationid",{"_index":480,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.backend.getorganizationinfo(this.organizationid",{"_index":1098,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getorganizationusers(this.organizationid",{"_index":1102,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.backend.getuserprofileinfo(organizationid",{"_index":1154,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.backend.listroles(this.organizationid",{"_index":805,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.backend.login(email",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.logout",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backend.resetpassword(this.organizationid",{"_index":628,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.backend.saveclusterchanges(this.organizationid",{"_index":766,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.backend.saveuserchanges(this.organizationid",{"_index":808,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.bsmodalref.hid",{"_index":197,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref",{"_index":816,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.bspasswordmodalref.content.closebtnnam",{"_index":819,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.buttonchangepassword",{"_index":1269,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.buttondeleteus",{"_index":1268,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["this.clusterdescript",{"_index":763,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusterid",{"_index":765,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clusternam",{"_index":762,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.clustertag",{"_index":764,"title":{},"body":{"components/EditClusterComponent.html":{}}}],["this.colorschem",{"_index":471,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.components.foreach(compon",{"_index":695,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.components.push",{"_index":672,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.curv",{"_index":462,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.draggingen",{"_index":467,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.email",{"_index":1149,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.enablezoom",{"_index":466,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.errormessag",{"_index":185,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.length",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessages.push('a",{"_index":634,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('email",{"_index":210,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('password",{"_index":215,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessages.push('set",{"_index":639,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('th",{"_index":636,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages.push('us",{"_index":222,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.errormessages.push(error.error.messag",{"_index":631,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.errormessages[0",{"_index":225,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.filterfield",{"_index":1095,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.formbuilder.group",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getroleid(this.temporalrol",{"_index":811,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.graphdata",{"_index":474,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.links.push(link",{"_index":495,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.graphdata.nodes.push(nod",{"_index":487,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.inst",{"_index":477,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.instanceid",{"_index":481,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.jwthelp",{"_index":542,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.jwthelper.decodetoken(response.token",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(jwttoken.token",{"_index":551,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loadeddata",{"_index":457,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.loginform",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginrequest",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modalref",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalref.content.closebtnnam",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalrefonhid",{"_index":1107,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.onhide.subscribe((reason",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(addusercompon",{"_index":1111,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.modalservice.show(changepasswordcompon",{"_index":817,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.modalservice.show(debugpanelcompon",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(editusercompon",{"_index":1109,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.modalservice.show(userinfocompon",{"_index":1106,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.nam",{"_index":1147,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.notificationsmock",{"_index":666,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.notificationsservice.add",{"_index":194,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.notificationsservice.add({messag",{"_index":629,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.notificationsservice.onclosed(dismissednotif",{"_index":1019,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationsservice.uuidv4",{"_index":722,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.organizationid",{"_index":479,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.organizationnam",{"_index":1087,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.orient",{"_index":460,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.requesterror",{"_index":1091,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.revers",{"_index":1093,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.rol",{"_index":1148,"title":{},"body":{"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.roledirti",{"_index":801,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist",{"_index":806,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.roleslist.foreach(roleobject",{"_index":821,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.router.navig",{"_index":814,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":552,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.url",{"_index":1110,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["this.savenewpassword(form",{"_index":640,"title":{},"body":{"components/ChangePasswordComponent.html":{}}}],["this.searchterm",{"_index":1094,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.showlegend",{"_index":459,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.sortedbi",{"_index":1092,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.subscriptiontyp",{"_index":1088,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.temporalrol",{"_index":803,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.titl",{"_index":458,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.tographdata(inst",{"_index":483,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["this.transform(oldvalu",{"_index":1226,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["this.transform(result",{"_index":1228,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["this.updateprofileuser(this.organizationid",{"_index":1151,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.next",{"_index":1153,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateservice.changesonuserlist.subscrib",{"_index":1101,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.updateuserlist",{"_index":1100,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.url",{"_index":668,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["this.us",{"_index":1090,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.userid",{"_index":625,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.usernam",{"_index":809,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["this.userrol",{"_index":178,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.userroletoedit",{"_index":802,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.view",{"_index":468,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["time",{"_index":230,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/UserInfoComponent.html":{}}}],["timelin",{"_index":1284,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["timeout",{"_index":203,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"components/UserInfoComponent.html":{}}}],["titl",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["tocompar",{"_index":907,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["tographdata",{"_index":412,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["tographdata(inst",{"_index":420,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["token",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tooltipmodul",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipmodule.forroot",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":1021,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"index.html":{}}}],["total",{"_index":23,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["total_nod",{"_index":647,"title":{},"body":{"interfaces/Cluster.html":{}}}],["transform",{"_index":10,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AppsInfoComponent.html":{},"injectables/FilterPipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transform(item",{"_index":904,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["transform(valu",{"_index":11,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformobject",{"_index":1196,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["transformobject(valu",{"_index":1197,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["tree",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["trigger",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{}}}],["true",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["truncat",{"_index":1230,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepip",{"_index":299,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslint:dis",{"_index":659,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MainComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["two",{"_index":1455,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"interfaces/ApplicationInstance.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/Cluster.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FilterPipe.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"components/UserInfoComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":1199,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["types/jwt",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1276,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unavail",{"_index":887,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["undefin",{"_index":911,"title":{},"body":{"injectables/FilterPipe.html":{},"components/OrganizationComponent.html":{}}}],["under",{"_index":1475,"title":{},"body":{"license.html":{}}}],["understand",{"_index":847,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unexpect",{"_index":874,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["unit",{"_index":1457,"title":{},"body":{"index.html":{}}}],["up",{"_index":663,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/NotificationsComponent.html":{}}}],["updat",{"_index":1070,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["updateeventsservic",{"_index":301,"title":{"injectables/UpdateEventsService.html":{}},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"injectables/UpdateEventsService.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileus",{"_index":1130,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateprofileuser(organizationid",{"_index":1139,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateservic",{"_index":1049,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["updateuserlist",{"_index":1048,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["upon",{"_index":1253,"title":{},"body":{"components/UserInfoComponent.html":{}}}],["url",{"_index":665,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["urlchang",{"_index":729,"title":{},"body":{"components/DebugPanelComponent.html":{}}}],["urlchange($ev",{"_index":724,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["us",{"_index":1447,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["user'},{'nam",{"_index":241,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["user.compon",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{}}}],["user.component.html",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.scss",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.t",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:100",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:106",{"_index":778,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:117",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:125",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:126",{"_index":790,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:159",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:180",{"_index":787,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:182",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:19",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:195",{"_index":783,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:20",{"_index":792,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:24",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:26",{"_index":163,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:28",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:29",{"_index":162,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":796,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:31",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:32",{"_index":800,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:33",{"_index":799,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:34",{"_index":798,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:35",{"_index":795,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:36",{"_index":797,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:37",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:40",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:42",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:47",{"_index":776,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:51",{"_index":793,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:59",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:66",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:67",{"_index":786,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:90",{"_index":781,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.email",{"_index":195,"title":{},"body":{"components/AddUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["user.nam",{"_index":1104,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user.role_nam",{"_index":1105,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["user/add",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["user/edit",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["useredit",{"_index":657,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userid",{"_index":606,"title":{},"body":{"components/ChangePasswordComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userinfo",{"_index":656,"title":{},"body":{"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{}}}],["userinfocompon",{"_index":271,"title":{"components/UserInfoComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["userrol",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["userroletoedit",{"_index":771,"title":{},"body":{"components/EditUserComponent.html":{},"components/OrganizationComponent.html":{}}}],["users.length",{"_index":1115,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["utils/mock",{"_index":454,"title":{},"body":{"components/AppsInfoComponent.html":{},"guards/AuthGuard.html":{},"components/UserInfoComponent.html":{}}}],["uuid",{"_index":983,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["uuidv4",{"_index":988,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v",{"_index":1000,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v.tostring(16",{"_index":1004,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["v0.1.0",{"_index":1274,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":984,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["valid",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.compose([validators.requir",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":35,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"pipes/SortByPipe.html":{},"pipes/TruncatePipe.html":{},"injectables/UpdateEventsService.html":{}}}],["value.length",{"_index":52,"title":{},"body":{"pipes/AbbreviatePipe.html":{},"pipes/TruncatePipe.html":{}}}],["value.slice(0",{"_index":49,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.slice(value.length",{"_index":51,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["value.substring(0",{"_index":1240,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["var",{"_index":239,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"components/ChangePasswordComponent.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{}}}],["variabl",{"_index":510,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["variable[0",{"_index":511,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["variable[1",{"_index":512,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["version",{"_index":1464,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1459,"title":{},"body":{"index.html":{}}}],["view",{"_index":409,"title":{},"body":{"components/AppsInfoComponent.html":{},"components/EditUserComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoComponent.html":{},"changelog.html":{},"index.html":{}}}],["void",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/AppsInfoComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordComponent.html":{},"interfaces/ComponentMockOption.html":{},"components/DebugPanelComponent.html":{},"components/EditClusterComponent.html":{},"components/EditUserComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OrganizationComponent.html":{},"components/SidebarComponent.html":{},"pipes/SortByPipe.html":{},"components/UserInfoComponent.html":{}}}],["warranti",{"_index":1491,"title":{},"body":{"license.html":{}}}],["width",{"_index":410,"title":{},"body":{"components/AppsInfoComponent.html":{}}}],["window",{"_index":794,"title":{},"body":{"components/EditUserComponent.html":{},"components/UserInfoComponent.html":{}}}],["without",{"_index":1490,"title":{},"body":{"license.html":{}}}],["word",{"_index":26,"title":{},"body":{"pipes/AbbreviatePipe.html":{}}}],["write",{"_index":1486,"title":{},"body":{"license.html":{}}}],["x",{"_index":1001,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["x.id).indexof(dismissednotification.id",{"_index":980,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxx",{"_index":990,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxx",{"_index":989,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":993,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["ye",{"_index":1184,"title":{},"body":{"pipes/SortByPipe.html":{}}}],["yxxx",{"_index":992,"title":{},"body":{"interfaces/Notification.html":{},"injectables/NotificationsService.html":{}}}],["zone.j",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/AbbreviatePipe.html":{"url":"pipes/AbbreviatePipe.html","title":"pipe - AbbreviatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AbbreviatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/abbreviate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        abbreviate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/abbreviate.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n                            Slice creates a new Array or String containing a subset (slice) of the elements.\nNUM_TOTAL_CHARS is the total number of characters of a word\nLAST_CHUNK_LENGTH is the last characters of the same word\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'abbreviate'\n})\nexport class AbbreviatePipe implements PipeTransform {\n/**\n  * Slice creates a new Array or String containing a subset (slice) of the elements.\n  * NUM_TOTAL_CHARS is the total number of characters of a word\n  * LAST_CHUNK_LENGTH is the last characters of the same word\n  * @param value is a list or a string to be sliced.\n*/\n  transform(value: string): string {\n    const NUM_TOTAL_CHARS = 8;\n    const LAST_CHUNK_LENGTH = NUM_TOTAL_CHARS - 2;\n    let abbstring;\n\n    abbstring = value.slice(0, 1) + '...' + value.slice(value.length - LAST_CHUNK_LENGTH, value.length);\n\n    if (value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                config\n                            \n                            \n                                email\n                            \n                            \n                                errorMessages\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirm\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                arrayToString\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-user/add-user.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Requests to add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with the user input data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:182\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:159\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    backdrop: false,\n    ignoreBackdropClick: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:37\n                            \n                        \n\n                \n                    \n                        Models that removes the possibility for the user to close the modal by clicking outside the content card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name and email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordConfirm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user role, name and email\n   */\n  organizationId: string;\n  userRole: string;\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n\n  errorMessages: string[];\n\n\n  /**\n   * Models that removes the possibility for the user to close the modal by clicking outside the content card\n   */\n  config = {\n    backdrop: false,\n    ignoreBackdropClick: true\n  };\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    this.userRole = null;\n    const mock = localStorage.getItem(LocalStorageKeys.addUserMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.errorMessages = [];\n\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Requests to add a new user\n   * @param form Form with the user input data\n   */\n  addUser(form) {\n    if (this.errorMessages.length === 0) {\n      const user = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        role_name: this.userRole\n      };\n      this.backend.addUser(this.organizationId, user)\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The user ' + user.email + ' has been created successfully'\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          if (error.status === 409) {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message + ' already exists',\n              timeout: 10000\n            });\n          } else {\n              this.notificationsService.add({\n                message: 'ERROR: ' + error.error.message,\n                timeout: 10000\n              });\n            }\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.userRole = newRole;\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.pattern) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.password.value !== form.controls.passwordConfirm.value) {\n      this.errorMessages.push('Password and confirm password are not the same one');\n    }\n    if (!this.userRole) {\n      this.errorMessages.push('User role selection is required');\n    }\n\n    if (this.errorMessages.length === 0) {\n      this.addUser(form);\n    }\n  }\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Add user\n      \n        &times;\n      \n    \n    \n    \n    \n        \n          \n          \n          \n          \n        \n      \n    \n    \n      Roles*\n      \n        \n          \n          \n            \n            \n            \n            \n          \n          Owner\n        \n        \n          \n          \n            \n            \n            \n            \n          \n          Operator\n        \n        \n          \n          \n            \n            \n            \n            \n            \n            \n          \n          Developer\n        \n      \n    \n\n    \n    \n         0\">\n        {{formatValidationOutput(errorMessages).msg}}\n      \n    \n    \n\n    \n    \n      \n        Save\n      \n      \n        Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Add user              ×                                                                                                  Roles*                                                                                                      Owner                                                                                                        Operator                                                                                                                                Developer                                   0\">        {{formatValidationOutput(errorMessages).msg}}                                    Save                    Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalRef\n                            \n                            \n                                    Public\n                                notificationsService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'nalej'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationsService } from './services/notifications.service';\n\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'nalej';\n  modalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public notificationsService: NotificationsService\n    ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nAppModule -->\n\nSortByPipe->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbbreviatePipe\n                            \n                            \n                                AddUserComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                ApplicationsComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                ClusterComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                FilterPipe\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                            \n                                OrganizationComponent\n                            \n                            \n                                ResourcesComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SortByPipe\n                            \n                            \n                                TruncatePipe\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddUserComponent\n                            \n                            \n                                AppsInfoComponent\n                            \n                            \n                                ChangePasswordComponent\n                            \n                            \n                                DebugPanelComponent\n                            \n                            \n                                EditClusterComponent\n                            \n                            \n                                EditUserComponent\n                            \n                            \n                                UserInfoComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     BackendService\n                            \n                            \n                                     UpdateEventsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { routes } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { DebugPanelComponent } from './debug-panel/debug-panel.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ButtonsModule, CarouselModule } from 'ngx-bootstrap';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './services/auth.service';\nimport { BackendService } from './services/backend.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { EditClusterComponent } from './edit-cluster/edit-cluster.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { AppsInfoComponent } from './apps-info/apps-info.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ClusterComponent } from './cluster/cluster.component';\nimport { UpdateEventsService } from './services/update-events.service';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AbbreviatePipe } from './pipes/abbreviate.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { SortByPipe } from './pipes/sort-by.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DebugPanelComponent,\n    NotificationsComponent,\n    SidebarComponent,\n    MainComponent,\n    LoginComponent,\n    UserInfoComponent,\n    OrganizationComponent,\n    ResourcesComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ApplicationsComponent,\n    ClusterComponent,\n    ChangePasswordComponent,\n    AbbreviatePipe,\n    TruncatePipe,\n    FilterPipe,\n    SortByPipe\n  ],\n  entryComponents: [\n    DebugPanelComponent,\n    UserInfoComponent,\n    AddUserComponent,\n    EditClusterComponent,\n    EditUserComponent,\n    AppsInfoComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    NgxGraphModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule,\n    RouterModule,\n    // NGX-BOOTSTRAP\n    ModalModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    TooltipModule.forRoot(),\n    // ROUTES\n    routes\n  ],\n  exports: [\n    LoginComponent\n   ],\n  providers: [\n    AuthService,\n    BackendService,\n    { provide: ErrorHandler,\n      useClass: ErrorHandlerService },\n    UpdateEventsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationInstance.html":{"url":"interfaces/ApplicationInstance.html","title":"interface - ApplicationInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/application-instance.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Application instance Data model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        app_descriptor_id\n                                \n                                \n                                        app_instance_id\n                                \n                                \n                                        configuration_options\n                                \n                                \n                                        description\n                                \n                                \n                                        environment_variables\n                                \n                                \n                                        groups\n                                \n                                \n                                        labels\n                                \n                                \n                                        name\n                                \n                                \n                                        organization_id\n                                \n                                \n                                        rules\n                                \n                                \n                                        services\n                                \n                                \n                                        status_name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_descriptor_id\n                                    \n                                \n                                \n                                    \n                                        app_descriptor_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app_instance_id\n                                    \n                                \n                                \n                                    \n                                        app_instance_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configuration_options\n                                    \n                                \n                                \n                                    \n                                        configuration_options:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment_variables\n                                    \n                                \n                                \n                                    \n                                        environment_variables:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization_id\n                                    \n                                \n                                \n                                    \n                                        organization_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        services\n                                    \n                                \n                                \n                                    \n                                        services:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApplicationInstance {\n  organization_id: string;\n  app_descriptor_id: string;\n  app_instance_id: string;\n  name: string;\n  description: string;\n  configuration_options: any;\n  environment_variables: any;\n  labels: any;\n  rules: any[];\n  groups: any[];\n  services: any[];\n  status_name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppsInfoComponent.html":{"url":"components/AppsInfoComponent.html","title":"component - AppsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/apps-info/apps-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apps-info\n            \n\n            \n                styleUrls\n                apps-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apps-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCenter\n                            \n                            \n                                autoZoom\n                            \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                colorScheme\n                            \n                            \n                                curve\n                            \n                            \n                                draggingEnabled\n                            \n                            \n                                enableZoom\n                            \n                            \n                                graphData\n                            \n                            \n                                height\n                            \n                            \n                                instance\n                            \n                            \n                                instanceId\n                            \n                            \n                                loadedData\n                            \n                            \n                                mockServicesGraph\n                            \n                            \n                                organizationId\n                            \n                            \n                                orientation\n                            \n                            \n                                showlegend\n                            \n                            \n                                title\n                            \n                            \n                                view\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                objectToString\n                            \n                            \n                                toGraphData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectToString(object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Transforms objects to arrays to be parsed to string and performed in the view\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Key-value map that contains the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraphData\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraphData(instance: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Transforms the data needed to create the grapho\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                instance object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoCenter:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorScheme:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curve:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            draggingEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        draggingEnabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        enableZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of available apps instances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instanceId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instanceId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockServicesGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mockServicesGraph:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:49\n                            \n                        \n\n                \n                    \n                        NGX-Grpahs object-assign required object references (for rendering)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:29\n                            \n                        \n\n                \n                    \n                        Model that hold organization ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orientation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showlegend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showlegend:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:54\n                            \n                        \n\n                \n                    \n                        Graph options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:44\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/apps-info/apps-info.component.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport * as shape from 'd3-shape';\nimport { mockAppsInstancesList } from '../utils/mocks';\n\n@Component({\n  selector: 'app-apps-info',\n  templateUrl: './apps-info.component.html',\n  styleUrls: ['./apps-info.component.scss']\n})\nexport class AppsInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Model that hold organization ID\n   */\n  organizationId: string;\n\n  /**\n   * Model that hold organization ID\n   */\n  instanceId: string;\n\n  /**\n   * List of available apps instances\n   */\n  instance: any;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * NGX-Grpahs object-assign required object references (for rendering)\n   */\n  mockServicesGraph: any;\n\n  /**\n   * Graph options\n   */\n  showlegend: boolean;\n  graphData: any;\n  orientation: string;\n  curve: any;\n  autoZoom: boolean;\n  autoCenter: boolean;\n  enableZoom: boolean;\n  colorScheme: any;\n  view: any[];\n  width: number;\n  height: number;\n  draggingEnabled: boolean;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.appsMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n\n    // Default initialization\n    this.loadedData = false;\n    this.title = 'App info';\n\n    // Graph initialization\n    this.showlegend = false;\n    this.orientation = 'TB';\n    this.curve = shape.curveBundle;\n    this.autoZoom = true;\n    this.autoCenter = true;\n    this.enableZoom = false;\n    this.draggingEnabled = false;\n    this.view = [350, 250];\n    this.colorScheme = {\n      domain: ['#6C86F7']\n    };\n\n    this.graphData = {\n      nodes: [],\n      links: []\n    };\n    this.instance = mockAppsInstancesList\n    ; // Initialization to avoid null in view\n\n  }\n\n  ngOnInit() {\n     if (this.organizationId !== null) {\n      this.backend.getAppInstance(this.organizationId,  this.instanceId)\n      .subscribe(instance => {\n          this.instance = instance;\n          this.toGraphData(instance);\n          if (!this.loadedData) {\n            this.loadedData = true;\n          }\n      });\n    }\n  }\n\n/**\n * Transforms the data needed to create the grapho\n * @param instance instance object\n */\n  toGraphData(instance) {\n    instance.services.forEach(service => {\n      const node = {\n        id: service.service_id,\n        label: service.name\n      };\n      this.graphData.nodes.push(node);\n    });\n    if (instance.rules) {\n      instance.rules.forEach(rule => {\n        if (rule.auth_services) {\n          rule.auth_services.forEach(linkedService => {\n            const link = {\n              source: rule.source_service_id,\n              target: linkedService\n            };\n            this.graphData.links.push(link);\n          });\n        }\n      });\n    }\n  }\n\n/**\n * Transforms objects to arrays to be parsed to string and performed in the view\n * @param object Key-value map that contains the object\n */\n  objectToString(object: any) {\n    if (!object) {\n      return ['--'];\n    }\n    return Object.entries(object);\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n        \n          {{title}}\n        \n        \n        \n          \n            \n            Services\n            \n              \n              \n                \n                  \n                    \n                    \n                      {{node.label}}\n                  \n                  \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n            \n            \n            \n              \n                Name\n                {{instance.name}}\n              \n              \n              \n                Status\n                \n                  {{instance.status_name}}\n                \n              \n              \n              \n                Instance id\n                {{instance.app_instance_id}}\n              \n              \n              \n                Descriptor id\n                {{instance.app_descriptor_id}}\n              \n              \n              \n                Tags\n              \n              \n                {{label[0]}}\n                {{label[1]}}\n              \n              \n              \n                Configuration options\n              \n              \n                {{option[0]}}\n                {{option[1]}}\n              \n              \n              \n                Environment variables\n              \n              \n                \n                  {{variable[0]}}\n                \n                \n                  {{variable[1]}}\n                \n              \n              \n              \n                Services\n              \n              \n                \n                  Name\n                  {{service.name}}\n                \n                \n                  Id\n                  {{service.service_id}}\n                \n                \n                  Status\n                   \n                    {{service.status_name}}\n                  \n                \n                \n              \n              \n                Rules\n              \n              \n                \n                  Name\n                  {{rule.name}}\n                \n                \n                  Id\n                  {{rule.rule_id}}\n                \n                \n                  Relations\n                  \n                  {{relation}}\n                \n                \n              \n              \n                Groups\n              \n              \n                -\n                -\n              \n              \n                \n                  Name\n                  {{group.name}}\n                \n                \n                  Services\n                  \n                  {{service}}\n                  \n                \n                \n              \n                Endpoints\n              \n              \n                 0\">\n                  \n                    \n                      {{endpoint}}\n                    \n                    \n                       \n                \n              \n              \n               \n           \n                     \n          \n            \n              \n                \n              \n            \n          \n          \n          \n            \n              Close\n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{title}}                                                          Services                                                                                                                                        {{node.label}}                                                                                                                                                                                                                                                Name                {{instance.name}}                                                          Status                                  {{instance.status_name}}                                                                          Instance id                {{instance.app_instance_id}}                                                          Descriptor id                {{instance.app_descriptor_id}}                                                          Tags                                            {{label[0]}}                {{label[1]}}                                                          Configuration options                                            {{option[0]}}                {{option[1]}}                                                          Environment variables                                                              {{variable[0]}}                                                  {{variable[1]}}                                                                          Services                                                              Name                  {{service.name}}                                                  Id                  {{service.service_id}}                                                  Status                                       {{service.status_name}}                                                                                              Rules                                                              Name                  {{rule.name}}                                                  Id                  {{rule.rule_id}}                                                  Relations                                    {{relation}}                                                                            Groups                                            -                -                                                              Name                  {{group.name}}                                                  Services                                    {{service}}                                                                                Endpoints                                             0\">                                                            {{endpoint}}                                                                                                                                                                                                                                                                                                Close                                            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { mockJwtToken } from '../utils/mocks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper: JwtHelperService;\n  constructor( private router: Router) {\n    this.jwtHelper = new JwtHelperService();\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    const jwtData = JSON.parse(localStorage.getItem(LocalStorageKeys.jwtData)) || null;\n    let role;\n    // Set role\n    if (jwtData) {\n      role = jwtData.role;\n    }\n    // Check jwtToken expiracy\n    if (jwtToken === null\n      || (jwtToken.token !== mockJwtToken\n          && this.jwtHelper.isTokenExpired(jwtToken.token)\n          )\n      ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    // Check user role access\n    if (\n      role &&\n      role === 'Developer' && !(\n      next.routeConfig.path === 'applications' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n    // Check user role access\n    if (\n      role === 'Operator' && !(\n      next.routeConfig.path === 'resources' ||\n      next.routeConfig.path === '')\n    ) {\n      alert('Unauthorized');\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that enables authentication in the platform\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackend: MockupBackendService, backendService: BackendService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackend\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Helper function that checks if the user is authenticated assesting if JWT Token is valid\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Request to login into the platform\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing user email\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String that holds the user password\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Request to logout the platform\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwtHelper:     JwtHelperService\n\n                    \n                \n                    \n                        \n                            Type :     JwtHelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Jwt Helper service reference\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from './backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from './mockup-backend.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n/**\n * Service that enables authentication in the platform\n */\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n  /**\n   * Jwt Helper service reference\n   */\n  jwtHelper: JwtHelperService;\n\n  constructor(\n    private mockupBackend: MockupBackendService,\n    private backendService: BackendService,\n    private router: Router\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.loginMock) || null;\n    // check which backend is required (fake or real)\n    if (mock === 'true') {\n      this.backend = mockupBackend;\n    } else {\n      this.backend = backendService;\n    }\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  /**\n   * Request to login into the platform\n   * @param email String containing user email\n   * @param password String that holds the user password\n   */\n  login (email: string, password: string): Observable {\n    return this.backend.login(email, password).pipe(map(response => {\n      if (response.status === 404 || response.status === 500) {\n        return response;\n      }\n      const jwtTokenData =  this.jwtHelper.decodeToken(response.token);\n      localStorage.setItem(LocalStorageKeys.jwt, JSON.stringify(response));\n      localStorage.setItem(LocalStorageKeys.jwtData, JSON.stringify(jwtTokenData));\n      localStorage.setItem(LocalStorageKeys.refreshToken, JSON.stringify(response.refresh_token));\n      return response;\n    }));\n  }\n\n  /**\n   * Request to logout the platform\n   */\n  logout() {\n    this.backend.logout()\n      .subscribe(response => {\n        // remove JWT token from local storage to log user out\n        localStorage.removeItem(LocalStorageKeys.jwt);\n        localStorage.removeItem(LocalStorageKeys.jwtData);\n        localStorage.removeItem(LocalStorageKeys.refreshToken);\n        this.router.navigate(['login']);\n      });\n  }\n\n  /**\n   * Helper function that checks if the user is authenticated assesting if JWT Token is valid\n   */\n  isAuth(): boolean {\n    const jwtToken = JSON.parse(localStorage.getItem(LocalStorageKeys.jwt)) || null;\n    if (jwtToken !== null) {\n      return !this.jwtHelper.isTokenExpired(jwtToken);\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordComponent.html":{"url":"components/ChangePasswordComponent.html","title":"component - ChangePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/change-password/change-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                change-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                confirmNewPassword\n                            \n                            \n                                errorMessages\n                            \n                            \n                                newPassword\n                            \n                            \n                                organizationId\n                            \n                            \n                                password\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                discardChanges\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveNewPassword(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Request to save changes in the user password\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form containing the user input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmNewPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmNewPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/change-password/change-password.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user id, and passwords\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { FormGroup } from '@angular/forms';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, user id, and passwords\n   */\n  userId: string;\n  password: string;\n  newPassword: string;\n  confirmNewPassword: string;\n  organizationId: string;\n\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.passwordMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = [];\n  }\n\n  /**\n   * Request to save changes in the user password\n   * @param form Form containing the user input\n   */\n  saveNewPassword(form: FormGroup) {\n    const passwordChange = {\n      email: this.userId,\n      password: form.value.password,\n      new_password: form.value.newPassword\n    };\n    this.backend.resetPassword(this.organizationId, passwordChange)\n      .subscribe(response => {\n        this.notificationsService.add({message: 'Password changed successfully'});\n        this.bsModalRef.hide();\n      }, error => {\n        if (error && error.error && error.error.message) {\n          this.errorMessages.push(error.error.message);\n        }\n      });\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.invalid) {\n      if (form.controls.newPassword.errors.required) {\n        this.errorMessages.push('A new password is required');\n      }\n      if (form.controls.newPassword.errors.minlength) {\n        this.errorMessages.push('The new password must have more than 6 characters');\n      }\n    }\n    if (form.controls.newPassword.value !== form.controls.confirmNewPassword.value) {\n      this.errorMessages.push('Set passwords do not match');\n    }\n    if (this.errorMessages.length === 0) {\n      this.saveNewPassword(form);\n    }\n  }\n\n\n  /**\n   * Outputs the error messages in the required format, showing the first one\n   * @param errors String containing the errors\n   */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n    \n      Change password\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n          \n        \n      \n        \n        \n           0\">\n            {{formatValidationOutput(errorMessages).msg}}\n          \n        \n        \n        \n            \n            Save\n          \n          \n            Discard\n          \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Change password              ×                                                                                                       0\">            {{formatValidationOutput(errorMessages).msg}}                                                          Save                                Discard                      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cluster.html":{"url":"interfaces/Cluster.html","title":"interface - Cluster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cluster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/definitions/interfaces/cluster.ts\n        \n\n            \n                Description\n            \n            \n                Interface that defines the Cluster info needed for creating the Cluster object instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cluster_id\n                                \n                                \n                                            Optional\n                                        cluster_type_name\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        multitenant_support\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        running_nodes\n                                \n                                \n                                            Optional\n                                        status_name\n                                \n                                \n                                            Optional\n                                        total_nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_id\n                                    \n                                \n                                \n                                    \n                                        cluster_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cluster_type_name\n                                    \n                                \n                                \n                                    \n                                        cluster_type_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multitenant_support\n                                    \n                                \n                                \n                                    \n                                        multitenant_support:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        running_nodes\n                                    \n                                \n                                \n                                    \n                                        running_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status_name\n                                    \n                                \n                                \n                                    \n                                        status_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_nodes\n                                    \n                                \n                                \n                                    \n                                        total_nodes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cluster {\n  name?: string;\n  cluster_id?: string;\n  total_nodes?: number;\n  running_nodes?: number;\n  description?: string;\n  status_name?: string;\n  cluster_type_name?: string;\n  labels?: string;\n  multitenant_support?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentMockOption.html":{"url":"interfaces/ComponentMockOption.html","title":"interface - ComponentMockOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentMockOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/debug-panel/debug-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the objects that will be listed in the debug panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mock\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mock\n                                    \n                                \n                                \n                                    \n                                        mock:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugPanelComponent.html":{"url":"components/DebugPanelComponent.html","title":"component - DebugPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DebugPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/debug-panel/debug-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                debug-panel\n            \n\n            \n                styleUrls\n                debug-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                components\n                            \n                            \n                                notificationsMock\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                optionChange\n                            \n                            \n                                spamNotification\n                            \n                            \n                                urlChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAll(newValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Modifies all components mocks values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                new mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionChange(componentMockOption: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Persist the modifications on the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentMockOption\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the selected option name and mock value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spamNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nspamNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Adds a new notification to notificationsService list so it can be displayed on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nurlChange($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     ComponentMockOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ComponentMockOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:39\n                            \n                        \n\n                \n                    \n                        List of components available to mock up\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsMock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationsMock:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/debug-panel/debug-panel.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\n\n/**\n * Interface for the objects that will be listed in the debug panel\n */\nexport interface ComponentMockOption {\n  name: string;\n  mock: string;\n}\n\nexport const AvailableComponents = {\n  login: 'Login',\n  organization: 'Organization',\n  resources: 'Resources',\n  cluster: 'Cluster',\n  apps: 'Apps',\n  profile: 'Profile',\n  notifications: 'Notifications',\n  sidebar: 'Sidebar',\n  userinfo: 'User Info',\n  userEdit: 'User Edit',\n  editcluster: 'EditCluster',\n  addUser: 'Add User'\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'debug-panel',\n  templateUrl: './debug-panel.component.html',\n  styleUrls: ['./debug-panel.component.scss']\n})\nexport class DebugPanelComponent implements OnInit {\n  /**\n   * List of components available to mock up\n   */\n  components: ComponentMockOption[] = [];\n  notificationsMock: any;\n  url: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private notificationsService: NotificationsService\n    ) {\n    this.notificationsMock = (localStorage.getItem(LocalStorageKeys.notificationsMock) === 'true' ? true : false);\n    this.url = localStorage.getItem(LocalStorageKeys.url) || '';\n   }\n\n  ngOnInit() {\n    // Load values from localStorage and populate options list\n    this.components.push({\n      name: AvailableComponents.login,\n      mock: localStorage.getItem(LocalStorageKeys.loginMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.organization,\n      mock: localStorage.getItem(LocalStorageKeys.organizationMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.resources,\n      mock: localStorage.getItem(LocalStorageKeys.resourcesMock) === 'false' ? 'false' : 'true'\n    });\n     this.components.push({\n      name: AvailableComponents.cluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterMock) === 'false' ? 'false' : 'true'\n    });   this.components.push({\n      name: AvailableComponents.apps,\n      mock: localStorage.getItem(LocalStorageKeys.appsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.profile,\n      mock: localStorage.getItem(LocalStorageKeys.profileMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.notifications,\n      mock: localStorage.getItem(LocalStorageKeys.notificationsMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.sidebar,\n      mock: localStorage.getItem(LocalStorageKeys.sidebarMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userinfo,\n      mock: localStorage.getItem(LocalStorageKeys.userInfoMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.userEdit,\n      mock: localStorage.getItem(LocalStorageKeys.userEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.editcluster,\n      mock: localStorage.getItem(LocalStorageKeys.clusterEditMock) === 'false' ? 'false' : 'true'\n    });\n    this.components.push({\n      name: AvailableComponents.addUser,\n      mock: localStorage.getItem(LocalStorageKeys.addUserMock) === 'false' ? 'false' : 'true'\n    });\n  }\n\n  /**\n   * Modifies all components mocks values\n   * @param newValue new mock value\n   */\n  changeAll(newValue) {\n    this.components.forEach(component => {\n      component.mock = newValue;\n    });\n    // Persist values on localStorage\n    localStorage.setItem(LocalStorageKeys.loginMock, newValue);\n    localStorage.setItem(LocalStorageKeys.organizationMock, newValue);\n    localStorage.setItem(LocalStorageKeys.resourcesMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterMock, newValue);\n    localStorage.setItem(LocalStorageKeys.appsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.profileMock, newValue);\n    localStorage.setItem(LocalStorageKeys.notificationsMock, newValue);\n    localStorage.setItem(LocalStorageKeys.sidebarMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userInfoMock, newValue);\n    localStorage.setItem(LocalStorageKeys.userEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.clusterEditMock, newValue);\n    localStorage.setItem(LocalStorageKeys.addUserMock, newValue);\n  }\n\n  /**\n   * Persist the modifications on the local storage\n   * @param componentMockOption Object containing the selected option name and mock value\n   */\n  optionChange(componentMockOption) {\n    // Persist modifications in localStorage\n    switch (componentMockOption.name) {\n      case AvailableComponents.login:\n        localStorage.setItem(LocalStorageKeys.loginMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.organization:\n        localStorage.setItem(LocalStorageKeys.organizationMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.resources:\n        localStorage.setItem(LocalStorageKeys.resourcesMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.cluster:\n        localStorage.setItem(LocalStorageKeys.clusterMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.apps:\n        localStorage.setItem(LocalStorageKeys.appsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.profile:\n        localStorage.setItem(LocalStorageKeys.profileMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.notifications:\n        localStorage.setItem(LocalStorageKeys.notificationsMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.sidebar:\n        localStorage.setItem(LocalStorageKeys.sidebarMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userinfo:\n        localStorage.setItem(LocalStorageKeys.userInfoMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.userEdit:\n        localStorage.setItem(LocalStorageKeys.userEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.editcluster:\n        localStorage.setItem(LocalStorageKeys.clusterEditMock, componentMockOption.mock);\n      break;\n      case AvailableComponents.addUser:\n      localStorage.setItem(LocalStorageKeys.addUserMock, componentMockOption.mock);\n    break;\n      default:\n        console.log('Selected option not registered as available component');\n    }\n\n  }\n\n  /**\n   * Adds a new notification to notificationsService list so it can be displayed on screen\n   */\n  spamNotification(): void {\n    this.notificationsService.add({\n      id: this.notificationsService.uuidv4(),\n      message: 'Test notification',\n      type: 'info',\n      timeout: 10000\n    });\n  }\n  urlChange($event) {\n    this.url = $event;\n    localStorage.setItem(LocalStorageKeys.url, this.url);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      Debug panel\n    \n    \n      \n        &times;\n      \n    \n  \n  \n  \n      Backend URL\n      \n    \n    Backend control\n    \n      \n          All real\n          \n          All mock\n          \n      \n      \n      \n        \n        \n          {{item.name}}\n        \n        \n          \n          \n            Real\n          \n          \n            Mock\n          \n        \n      \n    \n    \n    Notifications\n    Spam test notification\n    \n  \n  \n  \n    \n      Close\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Debug panel                      ×                      Backend URL              Backend control                    All real                    All mock                                                      {{item.name}}                                                Real                                Mock                                    Notifications    Spam test notification                    Close      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditClusterComponent.html":{"url":"components/EditClusterComponent.html","title":"component - EditClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-cluster/edit-cluster.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                edit-cluster\n            \n\n            \n                styleUrls\n                edit-cluster.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-cluster.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                clusterDescription\n                            \n                            \n                                clusterId\n                            \n                            \n                                clusterName\n                            \n                            \n                                clusterTags\n                            \n                            \n                                organizationId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discardChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveClusterChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveClusterChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveClusterChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Request to save the cluster data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:19\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterDescription:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clusterTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clusterTags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-cluster/edit-cluster.component.ts:24\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, cluster id, name, description and tags\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'edit-cluster',\n  templateUrl: './edit-cluster.component.html',\n  styleUrls: ['./edit-cluster.component.scss']\n})\nexport class EditClusterComponent implements OnInit {\n   /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, cluster id, name, description and tags\n   */\n  organizationId: string;\n  clusterId: string;\n  clusterName: string;\n  clusterDescription: string;\n  clusterTags: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.clusterEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n      this.clusterName = 'Loading...'; // Default initialization\n      this.clusterDescription = 'Loading...'; // Default initialization\n      this.clusterTags = 'Loading...'; // Default initialization\n      this.clusterId = 'Loading ...'; // Default initialization\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Request to save the cluster data modifications\n   * @param form Form object reference\n   */\n  saveClusterChanges(form) {\n    if (this.organizationId !== null && this.clusterId !== null) {\n      this.backend.saveClusterChanges(this.organizationId, this.clusterId, {\n        name: this.clusterName,\n        description: this.clusterDescription,\n      })\n        .subscribe(response => {\n          this.notificationsService.add({\n            message: 'The cluster ' + this.clusterName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }, error => {\n          this.notificationsService.add({\n            message: error.error.message,\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        });\n    }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n      Edit {{clusterName}}\n      \n        &times;\n      \n    \n    \n    \n      \n        \n          \n          \n\n        \n      \n    \n    \n      \n        Save\n      \n      \n          Discard\n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Edit {{clusterName}}              ×                                                                                        Save                      Discard                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user/edit-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n            \n                styleUrls\n                edit-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                email\n                            \n                            \n                                organizationId\n                            \n                            \n                                roleDirty\n                            \n                            \n                                rolesList\n                            \n                            \n                                temporalRole\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                userRole\n                            \n                            \n                                userRoleToEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRole\n                            \n                            \n                                checkUserRole\n                            \n                            \n                                discardChanges\n                            \n                            \n                                getRoleId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, bsModalRef: BsModalRef, backendService: BackendService, router: Router, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeRole(newRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Changes the new user role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New user role\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discardChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscardChanges(form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Checks if the form has been modified before discarding changes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoleId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRoleId(role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Search between roles list to get the required id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Role name\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUserChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUserChanges(f: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Request to save the user data modifications\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        f\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form object reference\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:20\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:47\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:30\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, user role, name, email and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roleDirty:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:42\n                            \n                        \n\n                \n                    \n                        Holds the status of the role (if it has been modified)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rolesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rolesList:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporalRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temporalRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:25\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRoleToEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRoleToEdit:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-user/edit-user.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { NotificationsService } from '../services/notifications.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Models that hold organization id, user role, name, email and password\n   */\n  organizationId: string;\n  userRole: string;\n  userRoleToEdit: string;\n  userName: string;\n  userId: string;\n  email: string;\n  rolesList: any[];\n  temporalRole: string;\n\n  /**\n   * Holds the status of the role (if it has been modified)\n   */\n  roleDirty: boolean;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n  constructor(\n    private modalService: BsModalService,\n    public bsModalRef: BsModalRef,\n    private backendService: BackendService,\n    private router: Router,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userEditMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.roleDirty = false;\n  }\n\n  ngOnInit() {\n// edit\n    if (this.userRoleToEdit) {\n        // this.userRole should be initialized by initial state\n      this.temporalRole = this.userRoleToEdit;\n    } else {\n          // profile\n      this.temporalRole = this.userRole;\n    }\n\n    if (this.userRole && this.userRole === 'Owner') {\n      // Query role list\n      this.backend.listRoles(this.organizationId)\n        .subscribe(response => {\n          this.rolesList = response.roles;\n        });\n      }\n  }\n\n  /**\n   * Checks if the form has been modified before discarding changes\n   * @param form Form object reference\n   */\n  discardChanges(form) {\n    if (form.dirty) {\n      const discard = confirm('Discard changes?');\n      if (discard) {\n        this.bsModalRef.hide();\n      } else {\n        // Do nothing\n      }\n    } else {\n      this.bsModalRef.hide();\n    }\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.temporalRole) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Changes the new user role\n   * @param newRole New user role\n   */\n  changeRole(newRole) {\n    this.roleDirty = true;\n    this.temporalRole = newRole;\n  }\n\n  /**\n   * Request to save the user data modifications\n   * @param f Form object reference\n   */\n  saveUserChanges(f) {\n    if (this.userId !== null) {\n      this.backend.saveUserChanges(this.organizationId, {\n        name: this.userName,\n        email: this.userId,\n        role_name: this.userRole\n      })\n      .subscribe(response => {\n        if (this.userRole && this.userRole === 'Owner') {\n          this.backend.changeRole(this.organizationId, this.userId, this.getRoleId(this.temporalRole)).\n          subscribe(responseRole => {\n            this.notificationsService.add({\n              message: 'The user ' + this.userName + ' has been edited',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n            if (!this.userRoleToEdit && this.temporalRole === 'Owner') {\n              // no redirection for the owner\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Developer') {\n              this.router.navigate([\n                '/applications'\n              ]);\n            } else if (!this.userRoleToEdit && this.temporalRole === 'Operator') {\n              this.router.navigate([\n                '/resources'\n              ]);\n            }\n          }, error => {\n            this.notificationsService.add({\n              message: 'ERROR: ' + error.error.message,\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          });\n        } else {\n          this.notificationsService.add({\n            message: 'The user ' + this.userName + ' has been edited',\n            timeout: 10000\n          });\n          this.bsModalRef.hide();\n        }\n      }, error => {\n        this.notificationsService.add({\n          message: 'ERROR: ' + error.error.message,\n          timeout: 10000\n        });\n        this.bsModalRef.hide();\n      });\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n\n  /**\n   * Search between roles list to get the required id\n   * @param role Role name\n   */\n  getRoleId(role: string): string {\n    let roleId = '';\n    this.rolesList.forEach(roleObject => {\n      if (roleObject.name === role) {\n        roleId = roleObject.role_id;\n        return roleId;\n      }\n    });\n    return roleId;\n  }\n\n /**\n  * Checks it the role is Owner\n  * @param userRole user Role\n  */\n//  isOwner(userRole: string): boolean {\n//    if (userRole === 'Owner') {\n//     return true;\n//    }\n//    return false;\n//  }\n}\n\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n   \n      \n        \n        \n      \n    \n    \n    \n      Change password\n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      Save\n    \n    \n      Discard\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                                                           Change password            Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          Save              Discard        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/error-handler.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Handler for error\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                : The error received from server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\n\nexport class ErrorHandlerService implements ErrorHandler {\n\n  constructor(\n  ) { }\n\n  /**\n  * Handler for error\n  * @param error: The error received from server\n  */\n  handleError(error: HttpErrorResponse): void {\n    switch (error.status) {\n        case 200 : console.log('OK, the request has succeeded');\n            break;\n        case 201 : console.log('Created, the request has been fulfilled');\n            break;\n        case 301 : console.log('Moved Permanently, the requests should be directed to the given URL');\n            break;\n        case 400 : console.log('Bad Request, that server could not understand the request due to invalid syntax');\n            break;\n        case 401 : console.log('Unauthorized, the user does not have the necessary credentials');\n            break;\n        case 403 : console.log('Forbidden, the user does not have access rights to the content');\n            break;\n        case 404 : console.log('Not Found, the server can not find requested resource');\n            break;\n        case 409 : console.log('Conflict, the request could not be completed due to a conflict with the current state of the resource');\n            break;\n        case 410 : console.log('Gone, the page is no longer available from the server and no forwarding address has been set up');\n            break;\n        // tslint:disable-next-line:max-line-length\n        case 500 : console.log('Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request');\n            break;\n        case 501 : console.log('Not Implemented, the request method is not supported by the server and cannot be handled');\n            break;\n        case 502 : console.log('Bad Gateaway, the server received an invalid response while acting as a gateway or proxy server');\n            break;\n        case 503 :\n            console.log('Service Unavailable, the server is currently unavailable');\n            break;\n        case 504 :\n            console.log('Gateway Time-Out, there is a server-server communication problem');\n            break;\n        case 511 :\n            console.log('Network Authentication Required, the user needs to authenticate to gain network access');\n            break;\n        default :\n            console.log(error);\n            break;\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterPipe.html":{"url":"injectables/FilterPipe.html","title":"injectable - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pipes/filter.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/filter.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/filter.pipe.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter(function (item: any) {\n      for (const property in item) {\n        if (item[property] === null || item[property] === undefined) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) { return items; }\n\n    return FilterPipe.filter(items, term);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginRequest\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                            \n                                checkFormFields\n                            \n                            \n                                formatValidationOutput\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDebugPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, modalService: BsModalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayToString\n                            \n                            \n                        \n                    \n                \n                \n                    \narrayToString(array: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Another string definition of an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkFormFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckFormFields(form: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Validates user data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Form with user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValidationOutput\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValidationOutput(errors: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Outputs the error messages in the required format, showing the first one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                String containing the errors\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { msg: any; errors: {}; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\nIf credentials are correct, JWT Token would be stored in localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessages:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the login form group of inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginRequest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Loaded Data for login request status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Holds the login form group of inputs\n   */\n  loginForm: FormGroup;\n  /**\n   * Reference for the service that allows to open debug panel\n   */\n  modalRef: BsModalRef;\n  /**\n   * Holds the error messages\n   */\n  errorMessages: string[];\n\n  /**\n   * Loaded Data for login request status\n   */\n  loginRequest: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n    this.errorMessages = [];\n    this.loginRequest = false;\n  }\n\n  /**\n   * Triggered when clicking the login button and calls the login function on the auth service to check the credentials.\n   * If credentials are correct, JWT Token would be stored in localStorage\n   */\n  onSubmit() {\n    this.loginRequest = true;\n    this.authService.login(this.loginForm.value.email, this.loginForm.value.password)\n      .subscribe(response => {\n        this.errorMessages = [];\n        if (response.token) {\n          const jwtHelper: JwtHelperService = new JwtHelperService();\n          const jwtTokenData = jwtHelper.decodeToken(response.token);\n          switch (jwtTokenData.role) {\n            case 'Owner':\n              this.router.navigate([\n                '/organization'\n              ]);\n            break;\n            case 'Developer':\n              this.router.navigate([\n                '/applications'\n              ]);\n            break;\n            case 'Operator':\n              this.router.navigate([\n                '/resources'\n              ]);\n            break;\n            default:\n              this.router.navigate([\n                '/applications'\n              ]);\n          }\n        }\n      }, error => {\n        this.loginRequest = false;\n        if (error.error && error.error.message) {\n          this.errorMessages.push(\n            error.error.message.charAt(0).toUpperCase() +\n            error.error.message.slice(1)); // Capitalize first letter of error msg\n        }\n      });\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n  /**\n   * Validates user data\n   * @param form Form with user data\n   */\n  checkFormFields(form: FormGroup) {\n    this.errorMessages = [];\n    if (form.controls.email.invalid) {\n      if (form.controls.email.errors.required) {\n        this.errorMessages.push('Email is required');\n      }\n      if (form.controls.email.errors.email) {\n        this.errorMessages.push('Email must be a valid email address');\n      }\n    }\n    if (form.controls.password.invalid) {\n      if (form.controls.password.errors.required) {\n        this.errorMessages.push('Password is required');\n      }\n      if (form.controls.password.errors.minlength) {\n        this.errorMessages.push('Password must have more than 6 characters');\n      }\n    }\n  }\n\n  /**\n  * Outputs the error messages in the required format, showing the first one\n  * @param errors String containing the errors\n  */\n  formatValidationOutput(errors: string[]) {\n    if (this.errorMessages.length === 1) {\n      return {\n        msg: this.errorMessages[0],\n        errors: this.errorMessages\n      };\n    } else if (this.errorMessages.length > 0) {\n      return {\n        msg: this.errorMessages[0] + ' +' + (this.errorMessages.length - 1) + ' errors',\n        errors: this.errorMessages\n      };\n    } else {\n      return {\n        msg: '',\n        errors: this.errorMessages\n      };\n    }\n  }\n\n  /**\n   * Another string definition of an array\n   * @param array Array of elements\n   */\n  arrayToString(array: any[]): string {\n    let msg = '';\n    array.forEach(element => {\n      msg = msg + element.toLowerCase() + ', ';\n    });\n    msg = msg.slice(0, msg.length - 2);\n    return msg;\n  }\n}\n\n    \n\n    \n        \n    \n    \n        NALEJ\n        \n\n            \n                    Log in\n                \n                \n\n                \n\n                \n                \n                     0\">\n                        {{formatValidationOutput(errorMessages).msg}}\n                    \n                \n\n                \n                \n                    Log in\n                \n                \n                \n                    \n                        \n                            \n                        \n                    \n                \n              \n         \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NALEJ                                        Log in                                                                                                     0\">                        {{formatValidationOutput(errorMessages).msg}}                                                                                        Log in                                                                                                                                                                                                               '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/main.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-main\n            \n\n            \n                styleUrls\n                main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/main.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/main/main.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n        \n          \n            ?\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              ?                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notifications/notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backend\n                            \n                            \n                                dismissible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mockupBackendService: MockupBackendService, backendService: BackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotifications: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotifications\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend handler (mocked up or real backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismissible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismissible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notifications/notifications.component.ts:26\n                            \n                        \n\n                \n                    \n                        Notifications have dismiss option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { BackendService } from '../services/backend.service';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('notifications') alerts: any[];\n\n  /**\n   * Backend handler (mocked up or real backend)\n   */\n  public backend: Backend;\n\n  /**\n   * Notifications have dismiss option.\n   */\n  dismissible = true;\n\n  constructor(\n    private mockupBackendService: MockupBackendService,\n    private backendService: BackendService,\n    private notificationsService: NotificationsService\n    ) {\n    this.alerts = [];\n    const notificationsMock = localStorage.getItem(LocalStorageKeys.notificationsMock);\n    if (notificationsMock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  /**\n   * Notifications have dismiss option. Enabling it will show close button to the right of the alert.\n   */\n  onClosed(dismissedNotifications: any): void {\n    this.notificationsService.onClosed(dismissedNotifications);\n  }\n\n}\n\n    \n\n    \n         0\" class=\"container alert-top-right\" id=\"alert-container\">\n  \n    \n      \n        \n          info\n        \n        {{alert.message}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\" class=\"container alert-top-right\" id=\"alert-container\">                              info                {{alert.message}}            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                onClosed\n                            \n                            \n                                uuidv4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notifications\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(notificationInstance: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            add()\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationInstance\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClosed(dismissedNotification: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            onClosed() will show close button to the right of the alert for dismiss option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dismissedNotification\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv4\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuidv4()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Generates UUID v4\nhttps://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _notifications:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notifications.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notifications\n                    \n                \n\n                \n                    \n                        getnotifications()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notifications.service.ts:31\n                                \n                            \n                    \n                        \n                                Get notifications list\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Notification {\n  id?: string;\n  message: string;\n  type?: string;\n  timeout?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  private _notifications: any[];\n\n  constructor() {\n    this._notifications = [];\n  }\n\n  /**\n  * add()\n  */\n  add(notificationInstance: Notification) {\n    this._notifications.push(notificationInstance);\n  }\n\n  /**\n   * Get notifications list\n   */\n  get notifications() {\n    return this._notifications;\n  }\n\n  /**\n   * onClosed() will show close button to the right of the alert for dismiss option\n   */\n  onClosed(dismissedNotification) {\n    const index = this._notifications.map(x => x.id).indexOf(dismissedNotification.id);\n    if (index !== -1) {\n      this._notifications.splice(index, 1);\n    }\n  }\n\n  /**\n   * Generates UUID v4\n   * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n   */\n  uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                organization\n            \n\n            \n                styleUrls\n                organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                filterField\n                            \n                            \n                                loadedData\n                            \n                            \n                                modalRef\n                            \n                            \n                                modalRefOnHide\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                requestError\n                            \n                            \n                                reverse\n                            \n                            \n                                searchTerm\n                            \n                            \n                                sortedBy\n                            \n                            \n                                subscriptionType\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                getCategoryCSSClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditUser\n                            \n                            \n                                openUserInfo\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setOrder\n                            \n                            \n                                updateUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService, router: Router, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/organization/organization.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds add user component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCategoryCSSClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCategoryCSSClass(categoryName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Gets the category headers to add a class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                class for the header category\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"default\" | \"enabled\" | \"disabled\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenUserInfo(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetFilters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:212\n                            \n                        \n\n\n                \n                    \n                            Reset all the filters fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetOrder(categoryName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:200\n                            \n                        \n\n\n                \n                    \n                            Sortby pipe in the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:180\n                            \n                        \n\n\n                \n                    \n                            Requests an updated list of available users to update the current one\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterField:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:64\n                            \n                        \n\n                \n                    \n                        Variable to store the value of the filter search text and sortBy pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadedData:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:37\n                            \n                        \n\n                \n                    \n                        Loaded Data status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows the user info component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRefOnHide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRefOnHide:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold organization id, name, subscription type and the users list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:48\n                            \n                        \n\n                \n                    \n                        Hold request error message or undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reverse:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTerm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:59\n                            \n                        \n\n                \n                    \n                        Model that hold the search term in search box\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:53\n                            \n                        \n\n                \n                    \n                        Models that hold the sort info needed to sortBy pipe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptionType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/organization/organization.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { UserInfoComponent } from '../user-info/user-info.component';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { NotificationsService } from '../services/notifications.service';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold organization id, name, subscription type and the users list\n   */\n  organizationId: string;\n  organizationName: string;\n  subscriptionType: string;\n  users: any[];\n\n  /**\n   * Loaded Data status\n   */\n  loadedData: boolean;\n\n  /**\n   * Reference for the service that allows the user info component\n   */\n  modalRef: BsModalRef;\n  modalRefOnHide: any;\n\n  /**\n   * Hold request error message or undefined\n   */\n  requestError: string;\n\n  /**\n   * Models that hold the sort info needed to sortBy pipe\n   */\n  sortedBy: string;\n  reverse: boolean;\n\n  /**\n   * Model that hold the search term in search box\n   */\n  searchTerm: string;\n\n  /**\n   * Variable to store the value of the filter search text and sortBy pipe\n   */\n  filterField: boolean;\n\n  constructor(\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService,\n    private router: Router,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.organizationMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    // Default initialization\n    this.loadedData = false;\n    this.organizationName = 'Loading...';\n    this.subscriptionType = 'Free subscription';\n    this.users = [];\n    this.requestError = '';\n\n    // SortBy\n    this.sortedBy = '';\n    this.reverse = false;\n    this.searchTerm = '';\n\n    // Filter field\n    this.filterField = false;\n  }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (this.organizationId !== null) {\n        this.backend.getOrganizationInfo(this.organizationId)\n          .subscribe(response => {\n              this.organizationName = response.name;\n          });\n          this.updateUserList();\n      }\n    }\n    this.updateService.changesOnUserList.subscribe(\n      result => {\n      this.backend.getOrganizationUsers(this.organizationId)\n        .subscribe(response => {\n          this.users = response.users;\n        });\n      }\n    );\n  }\n\n  /**\n   * Opens the modal view that holds the user info component\n   */\n  openUserInfo(user) {\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      role: user.role_name,\n    };\n\n    this.modalRef = this.modalService.show(UserInfoComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalRefOnHide = this.modalService.onHide.subscribe((reason: string) => {this.updateUserList(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser(user) {\n    let role = 'Owner';\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      role = JSON.parse(jwtData).role;\n    }\n    const initialState = {\n      organizationName: this.organizationName,\n      organizationId: this.organizationId,\n      userName: user.name,\n      userId: user.email,\n      userRole: role,\n      userRoleToEdit: user.role_name,\n      title: 'Edit user'\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n        if (this.router.url === '/organization') {\n        this.updateUserList();\n      }\n    });\n  }\n\n  /**\n   * Opens the modal view that holds add user component\n   */\n  addUser() {\n    const initialState = {\n      organizationId: this.organizationId,\n    };\n\n    this.modalRef = this.modalService.show(AddUserComponent, {initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { this.updateUserList(); });\n  }\n\n  /**\n   * Requests an updated list of available users to update the current one\n   */\n  updateUserList() {\n    // Requests an updated users list\n    this.backend.getOrganizationUsers(this.organizationId)\n    .subscribe(response => {\n        if (response.users.length) {\n          this.users = response.users;\n        } else {\n          this.users = [];\n        }\n        if (!this.loadedData) {\n          this.loadedData = true;\n        }\n    }, errorResponse => {\n        this.loadedData = true;\n        this.requestError = errorResponse.error.message;\n      });\n  }\n  /**\n   * Sortby pipe in the component\n   */\n  setOrder(categoryName: string) {\n    if (this.sortedBy === categoryName) {\n      this.reverse = !this.reverse;\n      this.filterField = false;\n    }\n    this.sortedBy = categoryName;\n    this.filterField = true;\n  }\n\n  /**\n   * Reset all the filters fields\n   */\n  resetFilters() {\n    this.filterField = false;\n    this.searchTerm = '';\n    this.sortedBy = '';\n  }\n\n  /**\n   * Gets the category headers to add a class\n   * @param categoryName class for the header category\n   */\n    getCategoryCSSClass(categoryName: string) {\n      if (this.sortedBy === '') {\n        return 'default';\n      } else {\n        if (this.sortedBy === categoryName) {\n          return 'enabled';\n        } else if (this.sortedBy !== categoryName) {\n          return 'disabled';\n        }\n      }\n    }\n  }\n\n\n\n    \n\n    \n        \n\n  \n    Organization\n  \n\n\n\n  \n    \n      \n      \n        \n      \n      \n        {{organizationName}}\n        {{subscriptionType}}\n        {{users.length}} users\n      \n    \n  \n\n\n\n  \n    \n      \n        MEMBERS\n      \n      \n        \n            \n            \n              Filtered by term \"{{ searchTerm }}\".\n              Reset\n            \n            \n              Sorted by {{ sortedBy }},\n              ascendent. \n              descendant. \n              Reset\n            \n            \n              Sorted by {{ sortedBy }}\n              ascendent \n              descendant \n              and filtered by term \"{{ searchTerm }}\".\n              Reset\n             \n          \n          \n          \n            \n              \n                 \n                  \n                    search\n                       \n                  \n                    close\n                  \n              \n            \n                \n      \n       0 && !requestError\">\n        \n          \n            \n              \n                Name \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Role \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Email\n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n              \n                Actions \n                \n                  expand_more\n                \n                \n                  expand_less\n                \n              \n            \n          \n          \n            \n              {{user.name}}\n              {{user.role_name}}\n              {{user.email}}\n              \n                \n                  i\n                \n              \n               -->\n                \n                  \n                    edit\n                  \n                \n              \n            \n          \n        \n      \n      \n      \n        There are not registered users in this organizationClick on \"add user\" button to start adding new users \n      \n      \n      \n        {{requestError}}\n      \n      \n      \n        \n          \n            \n          \n        \n      \n      \n        Add user\n      \n    \n  \n  \n  \n    \n      \n        SUBSCRIPTION\n      \n      \n        check\n      Free\n      Check all our subscription modes and payments\n      Change subscription\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Organization                                                {{organizationName}}        {{subscriptionType}}        {{users.length}} users                                MEMBERS                                                          Filtered by term \"{{ searchTerm }}\".              Reset                                      Sorted by {{ sortedBy }},              ascendent.               descendant.               Reset                                      Sorted by {{ sortedBy }}              ascendent               descendant               and filtered by term \"{{ searchTerm }}\".              Reset                                                                                                                            search                                                             close                                                                         0 && !requestError\">                                                            Name                                   expand_more                                                  expand_less                                                            Role                                   expand_more                                                  expand_less                                                            Email                                  expand_more                                                  expand_less                                                            Actions                                   expand_more                                                  expand_less                                                                                        {{user.name}}              {{user.role_name}}              {{user.email}}                                                i                                             -->                                                      edit                                                                                                        There are not registered users in this organizationClick on \"add user\" button to start adding new users                           {{requestError}}                                                                                      Add user                                  SUBSCRIPTION                    check      Free      Check all our subscription modes and payments      Change subscription      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                nalej-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                email\n                            \n                            \n                                modalRef\n                            \n                            \n                                name\n                            \n                            \n                                organizationId\n                            \n                            \n                                role\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDebugPanel\n                            \n                            \n                                openEditUser\n                            \n                            \n                                updateProfileUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, mockupBackendService: MockupBackendService, router: Router, modalService: BsModalService, auth: AuthService, updateService: UpdateEventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateService\n                                                  \n                                                        \n                                                                    UpdateEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Cleans the credentials and leads to login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDebugPanel\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDebugPanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the debug panel\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds the user info and editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfileUser(organizationId: , userId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Requests an updated profile user to update the current one\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        userId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for the service that allows to open debug panel and profile modal view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Models that hold user name, role and email on sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                        Models that hold user id and organizationId\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { DebugPanelComponent } from '../debug-panel/debug-panel.component';\nimport { AuthService } from '../services/auth.service';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { UpdateEventsService } from '../services/update-events.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'nalej-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Models that hold user name, role and email on sidebar\n   */\n  name: string;\n  role: string;\n  email: string;\n\n  /**\n   * Models that hold user id and organizationId\n   */\n  userId: string;\n  organizationId: string;\n\n  /**\n   * Reference for the service that allows to open debug panel and profile modal view\n   */\n  modalRef: BsModalRef;\n\n  constructor(\n    backendService: BackendService,\n    mockupBackendService: MockupBackendService,\n    private router: Router,\n    private modalService: BsModalService,\n    private auth: AuthService,\n    private updateService: UpdateEventsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.sidebarMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.name = 'Loading ...'; // Default initialization\n    this.role = 'Loading ...'; // Default initialization\n    this.email = 'Loading ...'; // Default initialization\n   }\n\n  ngOnInit() {\n    const jwtData = localStorage.getItem(LocalStorageKeys.jwtData) || null;\n    if (jwtData !== null) {\n      const userId = JSON.parse(jwtData).userID;\n      this.organizationId = JSON.parse(jwtData).organizationID;\n      if (userId !== null && this.organizationId !== null) {\n        this.updateProfileUser(this.organizationId, userId);\n      }\n    }\n  }\n\n  /**\n   * Opens the modal view that holds the debug panel\n   */\n  openDebugPanel() {\n    this.modalRef = this.modalService.show(DebugPanelComponent);\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => { location.reload(); });\n  }\n\n  /**\n   * Opens the modal view that holds the user info and editable component\n   */\n  openEditUser() {\n    const initialState = {\n      userName: this.name,\n      userId: this.email,\n      userRole: this.role,\n      title: 'Edit profile',\n      organizationId: this.organizationId\n    };\n\n    this.modalRef = this.modalService.show(EditUserComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.modalRef.content.closeBtnName = 'Close';\n    this.modalService.onHide.subscribe((reason: string) => {\n      this.updateProfileUser(this.organizationId, initialState.userId);\n      if (this.router.url === '/organization') {\n        this.updateService.changesOnUserList.next();\n      }\n    });\n  }\n\n   /**\n   * Requests an updated profile user to update the current one\n   */\n  updateProfileUser(organizationId, userId) {\n    this.backend.getUserProfileInfo(organizationId, userId)\n    .subscribe(response => {\n        this.name = response.name;\n        this.email = response.email;\n        this.role = response.role_name;\n    });\n  }\n\n  /**\n   * Cleans the credentials and leads to login page\n   */\n  logout() {\n    this.auth.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    NALEJ\n    \n      \n        \n          \n              person\n          \n          {{name}}\n          {{role}}\n          {{email}}\n        \n      \n    \n    \n      \n        group_work\n        Organization\n        >\n      \n    \n    \n      \n        dns\n        Resources\n        >\n      \n    \n    \n      \n        apps\n        Applications\n        >\n      \n    \n    \n      \n        Logout\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NALEJ                                          person                    {{name}}          {{role}}          {{email}}                                    group_work        Organization        >                            dns        Resources        >                            apps        Applications        >                            Logout            '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortByPipe.html":{"url":"pipes/SortByPipe.html","title":"pipe - SortByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/sort-by.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sortBy\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            caseInsensitiveSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        caseInsensitiveSort(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n                            Sorts values ignoring the case\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            defaultCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defaultCompare(a: any, b: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:28\n                            \n                        \n\n\n                \n                    \n                            Default compare method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     0 | 1 | -1\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValue(object: any, expression: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get value by expression\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isString(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n                            Check if a value is a string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            multiExpressionTransform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        multiExpressionTransform(value: any, expressions: any[], reverse: boolean, isCaseInsensitive: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:156\n                            \n                        \n\n\n                \n                    \n                            Apply multiple expressions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        expressions\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            parseExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:44\n                            \n                        \n\n\n                \n                    \n                            Parse expression, split into items\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(object: any, value: any, expression: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:71\n                            \n                        \n\n\n                \n                    \n                            Set value by expression\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortArray(value: any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:99\n                            \n                        \n\n\n                \n                    \n                            Sort array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any | any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transformObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transformObject(value: any | any[], expression?: any, reverse?: boolean, isCaseInsensitive?: boolean, comparator?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/sort-by.pipe.ts:131\n                            \n                        \n\n\n                \n                    \n                            Transform Object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any | any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expression\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isCaseInsensitive\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparator\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  /**\n   * Check if a value is a string\n   */\n  static isString(value: any) {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  /**\n   * Sorts values ignoring the case\n   */\n  static caseInsensitiveSort(a: any, b: any) {\n    if (SortByPipe.isString(a) && SortByPipe.isString(b)) {\n      return a.localeCompare(b);\n    }\n    return SortByPipe.defaultCompare(a, b);\n  }\n\n  /**\n   * Default compare method\n   */\n  static defaultCompare(a: any, b: any) {\n    if (a === b) {\n      return 0;\n    }\n    if (a == null) {\n      return 1;\n    }\n    if (b == null) {\n      return -1;\n    }\n    return a > b ? 1 : -1;\n  }\n\n  /**\n   * Parse expression, split into items\n   */\n  static parseExpression(expression: string): string[] {\n    expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n    expression = expression.replace(/^\\./, '');\n    return expression.split('.');\n  }\n\n  /**\n   * Get value by expression\n   */\n  static getValue(object: any, expression: string[]) {\n    for (let i = 0, n = expression.length; i  {\n      if (!expression) {\n        return compareFn(a, b);\n      }\n      if (!isDeepLink) {\n        if (a && b) {\n          return compareFn(a[expression], b[expression]);\n        }\n        return compareFn(a, b);\n      }\n      return compareFn(SortByPipe.getValue(a, expression), SortByPipe.getValue(b, expression));\n    });\n    if (reverse) {\n      return array.reverse();\n    }\n    return array;\n  }\n\n  /**\n   * Transform Object\n   */\n  private transformObject(\n    value: any | any[],\n    expression?: any,\n    reverse?: boolean,\n    isCaseInsensitive?: boolean,\n    comparator?: Function\n  ): any {\n    const parsedExpression = SortByPipe.parseExpression(expression);\n    let lastPredicate = parsedExpression.pop();\n    let oldValue = SortByPipe.getValue(value, parsedExpression);\n    if (!Array.isArray(oldValue)) {\n      parsedExpression.push(lastPredicate);\n      lastPredicate = null;\n      oldValue = SortByPipe.getValue(value, parsedExpression);\n    }\n    if (!oldValue) {\n      return value;\n    }\n    SortByPipe.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);\n    return value;\n  }\n\n  /**\n   * Apply multiple expressions\n   */\n  private multiExpressionTransform\n  (value: any,\n    expressions: any[],\n    reverse: boolean,\n    isCaseInsensitive: boolean = false,\n    comparator?: Function): any {\n    return expressions.reverse().reduce((result: any, expression: any) => {\n      return this.transform(result, expression, reverse, isCaseInsensitive, comparator);\n    }, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/truncate.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/truncate.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\nNUM_TOTAL_CHARS how long we would like the text to be\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                is a list or a string to be sliced.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * TruncatePipe makes the content to be shortened if it is past a certain length and add an ellipsis at the end\n   * NUM_TOTAL_CHARS how long we would like the text to be\n   * @param value is a list or a string to be sliced.\n   */\n    transform(value: string): string {\n    const NUM_TOTAL_CHARS = 13;\n    if (value && value.length > NUM_TOTAL_CHARS) {\n      return value.substring(0, NUM_TOTAL_CHARS) + '...';\n    } else {\n      return value;\n    }\n   }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateEventsService.html":{"url":"injectables/UpdateEventsService.html","title":"injectable - UpdateEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/update-events.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changesOnUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changesOnUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesOnUserList:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/update-events.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateEventsService {\n\n  changesOnUserList = new Subject();\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoComponent.html":{"url":"components/UserInfoComponent.html","title":"component - UserInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-info/user-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-info\n            \n\n            \n                styleUrls\n                user-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backend\n                            \n                            \n                                    Public\n                                bsModalRef\n                            \n                            \n                                bsPasswordModalRef\n                            \n                            \n                                buttonChangePassword\n                            \n                            \n                                buttonDeleteUser\n                            \n                            \n                                organizationId\n                            \n                            \n                                organizationName\n                            \n                            \n                                role\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserRole\n                            \n                            \n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bsModalRef: BsModalRef, modalService: BsModalService, backendService: BackendService, mockupBackendService: MockupBackendService, notificationsService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bsModalRef\n                                                  \n                                                        \n                                                                    BsModalRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                    BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mockupBackendService\n                                                  \n                                                        \n                                                                    MockupBackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUserRole(buttonRole: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Checks the role of current user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        buttonRole\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Upon confirmation, deletes user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Opens the modal view that holds change password editable component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backend:     Backend\n\n                    \n                \n                    \n                        \n                            Type :     Backend\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        Backend reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bsModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsPasswordModalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bsPasswordModalRef:     BsModalRef\n\n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:50\n                            \n                        \n\n                \n                    \n                        Change password modal window reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonChangePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonChangePassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:31\n                            \n                        \n\n                \n                    \n                        Text for the change password action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonDeleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonDeleteUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:36\n                            \n                        \n\n                \n                    \n                        Text for the delete user action button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        organizationName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:26\n                            \n                        \n\n                \n                    \n                        Dialog title\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-info/user-info.component.ts:41\n                            \n                        \n\n                \n                    \n                        Models that hold user name, organization id, name, user email/ID and role selection\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Backend } from '../definitions/interfaces/backend';\nimport { BackendService } from '../services/backend.service';\nimport { MockupBackendService } from '../services/mockup-backend.service';\nimport { LocalStorageKeys } from '../definitions/const/local-storage-keys';\nimport { mockOrganizationInfo, mockUserList } from '../utils/mocks';\nimport { NotificationsService } from '../services/notifications.service';\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  /**\n   * Backend reference\n   */\n  backend: Backend;\n\n  /**\n   * Dialog title\n   */\n  title: string;\n\n  /**\n   * Text for the change password action button\n   */\n  buttonChangePassword: string;\n\n  /**\n   * Text for the delete user action button\n   */\n  buttonDeleteUser: string;\n\n  /**\n   * Models that hold user name, organization id, name, user email/ID and role selection\n   */\n  userName: string;\n  organizationId: string;\n  organizationName: string;\n  userId: string;\n  role: string;\n\n  /**\n   * Change password modal window reference\n   */\n  bsPasswordModalRef: BsModalRef;\n\n\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private backendService: BackendService,\n    private mockupBackendService: MockupBackendService,\n    private notificationsService: NotificationsService\n  ) {\n    const mock = localStorage.getItem(LocalStorageKeys.userInfoMock) || null;\n    // check which backend is required (fake or real)\n    if (mock && mock === 'true') {\n      this.backend = mockupBackendService;\n    } else {\n      this.backend = backendService;\n    }\n    this.title = 'User info';\n    this.userName = 'Loading ...'; // Default initialization\n    this.userId = 'Loading ...'; // Default initialization\n    this.buttonDeleteUser = 'Delete User';\n    this.buttonChangePassword = 'Change Password';\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   *  Checks the role of current user\n   */\n  checkUserRole(buttonRole) {\n    if (buttonRole === this.role) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   *  Upon confirmation, deletes user\n   * @param userId A user to be deleted\n   */\n  deleteUser() {\n    const deleteConfirm = confirm('Delete user?');\n    if (deleteConfirm) {\n      if (this.organizationId !== null && this.userId !== null) {\n        this.backend.deleteUser(this.organizationId, this.userId)\n          .subscribe(response => {\n            this.notificationsService.add({\n              message: 'User ' + this.userId + ' has been deleted',\n              timeout: 10000\n            });\n            this.bsModalRef.hide();\n          }, error => {\n            this.notificationsService.add({\n              message: error.error.message,\n              timeout: 10000\n            });\n          });\n      }\n    } else {\n      // Do nothing\n    }\n  }\n\n  /**\n   * Opens the modal view that holds change password editable component\n   */\n  openChangePassword() {\n    const initialState = {\n      organizationId: this.organizationId,\n      userId: this.userId\n    };\n    this.bsPasswordModalRef =\n      this.modalService.show(ChangePasswordComponent, { initialState, backdrop: 'static', ignoreBackdropClick: false });\n    this.bsPasswordModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.hide();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{title}}\n    \n      &times;\n    \n  \n  \n  \n    \n      \n        edit\n      \n      person\n    \n    \n      \n        \n        \n        \n      \n    \n  \n  \n    Roles*\n    \n      \n        \n        \n          \n          \n          \n          \n        \n        Owner\n      \n      \n        \n        \n          \n          \n          \n          \n        \n        Operator\n      \n      \n        \n        \n          \n          \n          \n          \n          \n          \n        \n        Developer\n      \n    \n  \n  \n  \n    \n      {{buttonChangePassword}}\n    \n    \n      {{buttonDeleteUser}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}          ×                            edit            person                                                        Roles*                                                                                  Owner                                                                                    Operator                                                                                                        Developer                          {{buttonChangePassword}}              {{buttonDeleteUser}}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ApplicationsComponent', 'selector': 'applications'},{'name': 'AppsInfoComponent', 'selector': 'app-apps-info'},{'name': 'ChangePasswordComponent', 'selector': 'app-change-password'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DebugPanelComponent', 'selector': 'debug-panel'},{'name': 'EditClusterComponent', 'selector': 'edit-cluster'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'nalej-main'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'organization'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'SidebarComponent', 'selector': 'nalej-sidebar'},{'name': 'UserInfoComponent', 'selector': 'user-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nv0.1.0\nCreated the brand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-user/add-user.component.ts\n            \n            \n                component\n            \n            \n                AddUserComponent\n            \n            \n                47 %\n                (9/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/applications/applications.component.ts\n            \n            \n                component\n            \n            \n                ApplicationsComponent\n            \n            \n                58 %\n                (30/51)\n            \n        \n        \n            \n                \n                src/app/apps-info/apps-info.component.ts\n            \n            \n                component\n            \n            \n                AppsInfoComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                src/app/change-password/change-password.component.ts\n            \n            \n                component\n            \n            \n                ChangePasswordComponent\n            \n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/cluster/cluster.component.ts\n            \n            \n                component\n            \n            \n                ClusterComponent\n            \n            \n                68 %\n                (24/35)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                component\n            \n            \n                DebugPanelComponent\n            \n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                interface\n            \n            \n                ComponentMockOption\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/debug-panel/debug-panel.component.ts\n            \n            \n                variable\n            \n            \n                AvailableComponents\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/local-storage-keys.ts\n            \n            \n                variable\n            \n            \n                LocalStorageKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/definitions/const/user-roles.ts\n            \n            \n                variable\n            \n            \n                UserRoles\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/application-instance.ts\n            \n            \n                interface\n            \n            \n                ApplicationInstance\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/backend.ts\n            \n            \n                interface\n            \n            \n                Backend\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/definitions/interfaces/cluster.ts\n            \n            \n                interface\n            \n            \n                Cluster\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/edit-cluster/edit-cluster.component.ts\n            \n            \n                component\n            \n            \n                EditClusterComponent\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/edit-user/edit-user.component.ts\n            \n            \n                component\n            \n            \n                EditUserComponent\n            \n            \n                50 %\n                (11/22)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/organization/organization.component.ts\n            \n            \n                component\n            \n            \n                OrganizationComponent\n            \n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/pipes/abbreviate.pipe.ts\n            \n            \n                pipe\n            \n            \n                AbbreviatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            \n                injectable\n            \n            \n                FilterPipe\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/sort-by.pipe.ts\n            \n            \n                pipe\n            \n            \n                SortByPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/truncate.pipe.ts\n            \n            \n                pipe\n            \n            \n                TruncatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resources/resources.component.ts\n            \n            \n                component\n            \n            \n                ResourcesComponent\n            \n            \n                62 %\n                (30/48)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                injectable\n            \n            \n                BackendService\n            \n            \n                88 %\n                (22/25)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            \n                variable\n            \n            \n                API_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            \n                injectable\n            \n            \n                ErrorHandlerService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/mockup-backend.service.ts\n            \n            \n                injectable\n            \n            \n                MockupBackendService\n            \n            \n                81 %\n                (18/22)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/notifications.service.ts\n            \n            \n                interface\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/update-events.service.ts\n            \n            \n                injectable\n            \n            \n                UpdateEventsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/user-info/user-info.component.ts\n            \n            \n                component\n            \n            \n                UserInfoComponent\n            \n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppPieChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockAppsInstancesList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterDetail\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockClusterList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockJwtToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodeList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockNodesChart\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockOrganizationInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockRegisteredAppsList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResetPasword\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockResourcesSummary\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/mocks.ts\n            \n            \n                variable\n            \n            \n                mockUserList\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                function\n            \n            \n                getBaseUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            @auth0/angular-jwt : ^2.0.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-graph : ^5.1.1\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jwt-decode : ^2.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            ngx-bootstrap : ^3.0.1\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../environment.prod.ts)\n                        \n                        \n                            getBaseUrl   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBaseUrl()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNalej\nNalej UI\nOverall features\nBrand new UI Frontend for Nalej. \n\nSidebar with navigation\n\nEdit profile\nOrganization\nResources\nApplications\nLogout\n\n\nOrganizations view\n\nTop indicators with organization info\nMembers user list with action buttons\nSubscription plan\n\n\nResources view\n\nTop indicators \nSummary info\nClusters info carousel with cluster pie charts \nNodes status timeline chart\n\n\nClusters linst info with action buttons\n\n\nClusters view\n\nTop indicators \nCluster status info  \nSummary info\n\n\nBreadcrumbs\nNodes list  \n\n\nAppications view\n\nTop indicators\nSummary info\nApp status timeline\n\n\nDeploy new app form view\nDeployed app instances list with info button\nApp info graph based on Ngx-graph\nApp info list\n\n\n\n\n\nTo see older logs check CHANGELOG.md file\nTested and suported resolutions in pixels:\n\n1280 x 720\n1280 x 800\n1366 x 768\n1440 x 900 \n1613 x 917\n1613 x 1027\n1680 x 1027\n1920 x 1080\n1920 x 1200\n2560 x 1440\n2560 x 1800\n\nRequirements\n\nNode Package Manager (NPM) https://www.npmjs.com/\nAngular Command Line (Angular-CLI) https://cli.angular.io/\n\nInstallation\n\nClone the repository\nChange to project directory\nnpm install\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Using --prod flag will produce a dependency injection error (generated conflict between two libraries: ngx-bootstrap and ngx-graph).\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nDocumentation\nCompodoc is the integrated library that automates the documentation generation. To update the documentation just run npm run compodoc and the updated version will be available to serve it in documentation folder (http-server could be used for this purpose).\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2018 Nalej\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbbreviatePipe\n\nAbbreviatePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbbreviatePipe->AppModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nAppModule -->\n\nAddUserComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApplicationsComponent\n\nApplicationsComponent\n\nAppModule -->\n\nApplicationsComponent->AppModule\n\n\n\n\n\nAppsInfoComponent\n\nAppsInfoComponent\n\nAppModule -->\n\nAppsInfoComponent->AppModule\n\n\n\n\n\nChangePasswordComponent\n\nChangePasswordComponent\n\nAppModule -->\n\nChangePasswordComponent->AppModule\n\n\n\n\n\nClusterComponent\n\nClusterComponent\n\nAppModule -->\n\nClusterComponent->AppModule\n\n\n\n\n\nDebugPanelComponent\n\nDebugPanelComponent\n\nAppModule -->\n\nDebugPanelComponent->AppModule\n\n\n\n\n\nEditClusterComponent\n\nEditClusterComponent\n\nAppModule -->\n\nEditClusterComponent->AppModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nAppModule -->\n\nEditUserComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nAppModule -->\n\nOrganizationComponent->AppModule\n\n\n\n\n\nResourcesComponent\n\nResourcesComponent\n\nAppModule -->\n\nResourcesComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSortByPipe\n\nSortByPipe\n\nAppModule -->\n\nSortByPipe->AppModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nAppModule -->\n\nTruncatePipe->AppModule\n\n\n\n\n\nUserInfoComponent\n\nUserInfoComponent\n\nAppModule -->\n\nUserInfoComponent->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAppModule->LoginComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBackendService\n\nBackendService\n\nAppModule -->\n\nBackendService->AppModule\n\n\n\n\n\nUpdateEventsService\n\nUpdateEventsService\n\nAppModule -->\n\nUpdateEventsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
